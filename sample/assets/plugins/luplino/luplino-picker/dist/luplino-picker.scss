---
---

@import "luplino";
@import "luplino-mixin";
@import "luplino-utils";

$gray-base:              #000 !default;
$gray-darker:            lighten($gray-base, 13.5%) !default; // #222
$gray-dark:              lighten($gray-base, 20%) !default;   // #333
$gray:                   lighten($gray-base, 33.5%) !default; // #555
$gray-light:             lighten($gray-base, 46.7%) !default; // #777
$gray-lighter:           lighten($gray-base, 93.5%) !default; // #eee

$brand-primary:         #616161 !default; // #337ab7
$brand-success:         #00C6AE !default;
$brand-info:            #44ADF9 !default;
$brand-fn1:            #6977CF !default;
$brand-fn2:            #485398 !default;
$brand-warning:         #FFB802 !default;
$brand-danger:          #E97426 !default;

$border-radius-base:        3px !default;
$border-radius-large:       5px !default;
$border-radius-small:       2px !default;


//== Form states and alerts
//
//## Define colors for form feedback states and, by default, alerts.

$state-success-text:             #3c763d !default;
$state-success-bg:               #dff0d8 !default;
$state-success-border:           darken(adjust-hue($state-success-bg, -10), 5%) !default;

$state-info-text:                #31708f !default;
$state-info-bg:                  #d9edf7 !default;
$state-info-border:              darken(adjust-hue($state-info-bg, -10), 7%) !default;

$state-warning-text:             #8a6d3b !default;
$state-warning-bg:               #fcf8e3 !default;
$state-warning-border:           darken(adjust-hue($state-warning-bg, -10), 5%) !default;

$state-danger-text:              #a94442 !default;
$state-danger-bg:                #f2dede !default;
$state-danger-border:            darken(adjust-hue($state-danger-bg, -10), 5%) !default;

//== Panels
//
//##

$panel-bg:                    #fff !default;
$panel-body-padding:          15px !default;
$panel-heading-padding:       10px 15px !default;
$panel-footer-padding:        $panel-heading-padding !default;
$panel-border-radius:         $border-radius-base !default;

//** Border color for elements within panels
$panel-inner-border:          #ddd !default;
$panel-footer-bg:             #f5f5f5 !default;

$panel-default-text:          $gray-dark !default;
$panel-default-border:        #ddd !default;
$panel-default-heading-bg:    #f5f5f5 !default;

$panel-primary-text:          #fff !default;
$panel-primary-border:        $brand-primary !default;
$panel-primary-heading-bg:    $brand-primary !default;

$panel-success-text:          $state-success-text !default;
$panel-success-border:        $state-success-border !default;
$panel-success-heading-bg:    $state-success-bg !default;

$panel-info-text:             $state-info-text !default;
$panel-info-border:           $state-info-border !default;
$panel-info-heading-bg:       $state-info-bg !default;

$panel-warning-text:          $state-warning-text !default;
$panel-warning-border:        $state-warning-border !default;
$panel-warning-heading-bg:    $state-warning-bg !default;

$panel-danger-text:           $state-danger-text !default;
$panel-danger-border:         $state-danger-border !default;
$panel-danger-heading-bg:     $state-danger-bg !default;


//============== lopicker
$lopicker-z-index: 2000 !default;
$lopicker-box-model: border-box !default;
$lopicker-bg: $panel-bg !default;
$lopicker-inner-border: 1px solid !default;
$lopicker-inner-border-color: $panel-inner-border !default;

$lopicker-box-shadow: 0px 0px 3px 0px rgba(0, 0, 0, 0.175) !default;
$lopicker-border-radius: 5px !default;

$lopicker-body-padding: 5px !default;
$lopicker-heading-padding: $panel-heading-padding !default;
$lopicker-buttons-padding: 10px 0px 5px 0px !default;

$lopicker-content-border: 0px solid !default;
$lopicker-content-border-color: none !default;
$lopicker-content-border-radius: 0px !default;
$lopicker-content-padding: 0px !default;

$lopicker-easing-time-open: 0.1s !default;
$lopicker-easing-time-close: 0.1s !default;
$lopicker-arrow-size: 10px !default;
$lopicker-arrow-border-width: 1px !default;

//** Border color for elements within dialog
$lopicker-default-text: $panel-default-text !default;
$lopicker-default-border-color: $panel-default-border !default;
$lopicker-default-heading-bg: $panel-default-heading-bg !default;

$lopicker-primary-text: $panel-primary-text !default;
$lopicker-primary-border-color: $panel-primary-border !default;
$lopicker-primary-heading-bg: $panel-primary-heading-bg !default;

$lopicker-success-text: $panel-success-text !default;
$lopicker-success-border-color: $panel-success-border !default;
$lopicker-success-heading-bg: $panel-success-heading-bg !default;

$lopicker-info-text: $panel-info-text !default;
$lopicker-info-border-color: $panel-info-border !default;
$lopicker-info-heading-bg: $panel-info-heading-bg !default;

$lopicker-warning-text: $panel-warning-text !default;
$lopicker-warning-border-color: $panel-warning-border !default;
$lopicker-warning-heading-bg: $panel-warning-heading-bg !default;

$lopicker-danger-text: $panel-danger-text !default;
$lopicker-danger-border-color: $panel-danger-border !default;
$lopicker-danger-heading-bg: $panel-danger-heading-bg !default;

@mixin lo-picker() {
  box-sizing: border-box;
  *,
  *:before,
  *:after {
    box-sizing: border-box;
  }

  z-index: $lopicker-z-index;
  position: absolute;
  left: 0px;
  top: 0px;
  //overflow: hidden;
}

@mixin picker-variant($text-color, $border-color, $heading-bg-color) {

  @include lo-background($lopicker-bg);
  border: $lopicker-inner-border;
  border-color: $border-color;
  border-radius: $lopicker-border-radius;
  box-shadow: $lopicker-box-shadow;

  .lo-picker-heading {
    font-weight: 600;
    padding: $lopicker-heading-padding;
    border-bottom: 1px solid transparent;
    @include border-top-radius($lopicker-border-radius - 1);

    color: $text-color;
    @include lo-background($heading-bg-color);
    .badge {
      font-size: 0.8em;
      color: $heading-bg-color;
      @include lo-background($text-color);
    }
  }
  .lo-picker-body {
    padding: $lopicker-body-padding;
    text-align: center;
    .lo-picker-content {
      min-width: 50px;

      .lo-picker-content-box {
        border: $lopicker-content-border;
        border-color: $lopicker-content-border-color;
        border-radius: $lopicker-content-border-radius;
        padding: $lopicker-content-padding;
        overflow: hidden;
      }
    }
    .lo-picker-buttons {
      padding: $lopicker-buttons-padding;
      button {
        &:not(:last-child) {
          margin-right: 3px;
        }
      }
    }
  }

  &.direction-top {
    .lo-picker-arrow {
      @include picker-arrow($lopicker-arrow-size, $lopicker-arrow-border-width, $border-color, top);
    }
  }
  &.direction-right {
    .lo-picker-arrow {
      @include picker-arrow($lopicker-arrow-size, $lopicker-arrow-border-width, $border-color, right);
    }
  }
  &.direction-bottom {
    .lo-picker-arrow {
      @include picker-arrow($lopicker-arrow-size, $lopicker-arrow-border-width, $border-color, bottom);
    }
  }
  &.direction-left {
    .lo-picker-arrow {
      @include picker-arrow($lopicker-arrow-size, $lopicker-arrow-border-width, $border-color, left);
    }
  }

}

@mixin picker-arrow($arrow-size, $arrow-border-width, $border-color, $arrow-direction) {

  //
  //@debug( nth($lopicker-inner-border, 3) );
  $arrow-bg: nth($lopicker-bg, 1);
  $arrow-border-color: $border-color;

  position: absolute;
  width: 0;
  height: 0;

  @if ($arrow-direction == top) {
    left: 50%;
    top: 0px;
  } @else if ($arrow-direction == right) {
    right: 0px;
    top: 50%;
  } @else if ($arrow-direction == bottom) {
    left: 50%;
    bottom: 0px;
  } @else if ($arrow-direction == left) {
    left: 0px;
    top: 50%;
  }

  &:before {
    content: ' ';
    position: absolute;
    width: 0;
    height: 0;

    @if ($arrow-direction == top) {
      left: - ($arrow-size);
      top: - ($arrow-size * 2);
      border-left: $arrow-size solid transparent;
      border-right: $arrow-size solid transparent;
      border-bottom: ($arrow-size * 2) solid $arrow-border-color;
    } @else if ($arrow-direction == right) {
      right: - ($arrow-size * 2);
      top: - ($arrow-size);
      border-top: $arrow-size solid transparent;
      border-bottom: $arrow-size solid transparent;
      border-left: ($arrow-size * 2) solid $arrow-border-color;
    } @else if ($arrow-direction == bottom) {
      left: - ($arrow-size);
      bottom: - ($arrow-size * 2);
      border-left: $arrow-size solid transparent;
      border-right: $arrow-size solid transparent;
      border-top: ($arrow-size * 2) solid $arrow-border-color;
    } @else if ($arrow-direction == left) {
      left: - ($arrow-size * 2);
      top: - ($arrow-size);
      border-top: $arrow-size solid transparent;
      border-bottom: $arrow-size solid transparent;
      border-right: ($arrow-size * 2) solid $arrow-border-color;
    }
  }

  &:after {
    content: ' ';
    position: absolute;
    width: 0;
    height: 0;

    @if ($arrow-direction == top) {
      left: - ($arrow-size);
      top: - ($arrow-size * 2) + ($arrow-border-width * 2);
      border-left: ($arrow-size) solid transparent;
      border-right: ($arrow-size) solid transparent;
      border-bottom: ($arrow-size * 2) solid $arrow-bg;
    } @else if ($arrow-direction == right) {
      right: - ($arrow-size * 2) + ($arrow-border-width * 2);
      top: - ($arrow-size);
      border-top: ($arrow-size) solid transparent;
      border-bottom: ($arrow-size) solid transparent;
      border-left: ($arrow-size * 2) solid $arrow-bg;
    } @else if ($arrow-direction == bottom) {
      left: - ($arrow-size);
      bottom: - ($arrow-size * 2) + ($arrow-border-width * 2);
      border-left: ($arrow-size) solid transparent;
      border-right: ($arrow-size) solid transparent;
      border-top: ($arrow-size * 2) solid $arrow-bg;
    } @else if ($arrow-direction == left) {
      left: - ($arrow-size * 2) + ($arrow-border-width * 2);
      top: - ($arrow-size);
      border-top: ($arrow-size) solid transparent;
      border-bottom: ($arrow-size) solid transparent;
      border-right: ($arrow-size * 2) solid $arrow-bg;
    }
  }
}

@include keyframes(lo-picker) {

  0% {
    opacity: 0.0;
    //@include transform(scale(0));
    @include transform(translate(0, -10%));
  }

  100% {
    opacity: 1.0;
    //@include transform(scale(1));
    @include transform(translate(0, 0));
  }
}

@include keyframes(lo-picker-destroy) {
  from {
    //@include transform(scale(1));
    opacity: 1.0;
    @include transform(translate(0, 0));
  }
  to {
    //@include transform(scale(0.95));
    opacity: 0.0;
    @include transform(translate(0, -10%));
  }
}

// mixins --------------------------------------------- end

.lo-ui-picker {

  @include lo-picker();

  @include perspective(1000px);
  @include transform-style(preserve-3d);

  @include animation(lo-picker $lopicker-easing-time-open);
  @include transform(translateZ(0));
  @include transform-origin(center top);
  /* flip type
  @include backface-visibility(visible);
  @include transform(translateY(0%) rotateX(0deg));
  */

  @include picker-variant($lopicker-default-text, $lopicker-default-border-color, $lopicker-default-heading-bg);

  &.primary {
    @include picker-variant($lopicker-primary-text, $lopicker-primary-border-color, $lopicker-primary-heading-bg);
  }
  &.success {
    @include picker-variant($lopicker-success-text, $lopicker-success-border-color, $lopicker-success-heading-bg);
  }
  &.info {
    @include picker-variant($lopicker-info-text, $lopicker-info-border-color, $lopicker-info-heading-bg);
  }
  &.warning {
    @include picker-variant($lopicker-warning-text, $lopicker-warning-border-color, $lopicker-warning-heading-bg);
  }
  &.danger {
    @include picker-variant($lopicker-danger-text, $lopicker-danger-border-color, $lopicker-danger-heading-bg);
  }

  &.destroy {
    @include animation(lo-picker-destroy $lopicker-easing-time-close $ease-in-back forwards);
  }

  &.direction-top {
    @include transform-origin(center top);
  }
  &.direction-right {
    @include transform-origin(right center);
  }
  &.direction-bottom {
    @include transform-origin(center bottom);

  }
  &.direction-left {
    @include transform-origin(left center);
  }
}

// picker handle

@mixin lopicker-handle(){
  &[data-lopicker] {
    .input-group-addon {
      cursor: pointer;

      &:not(:last-child) {
        border-left: 0 none;
        border-right: 0 none;
      }

      &.color-preview{
        padding: 0;
      }
      [data-lopicker-color="preview"]{
        display: block;
      }
    }
  }
}

.input-group {
  @include lopicker-handle();
}
.form-group {
  @include lopicker-handle();
}