{"version":3,"sources":["ax5ui.all.min.js","ax5-core.js","ax5-def.js","ax5-error-msg.js","ax5-polyfill.js","ax5-ui.js","mustache.js","ax5dialog.js","ax5dialog-tmpl.js","ax5mask.js","ax5mask-tmpl.js","ax5toast.js","ax5toast-tmpl.js","ax5modal.js","ax5modal-tmpl.js","ax5calendar.js","ax5calendar-tmpl.js","ax5picker.js","ax5ui-picker-tmpl.js","jQuery-extender.js","ax5formatter.js","ax5formatter-formatter.js","ax5menu.js","ax5menu-tmpl.js","ax5select.js","ax5select-tmpl.js","ax5grid.js","ax5grid-body.js","ax5grid-collector.js","ax5grid-data.js","ax5grid-excel.js","ax5grid-formatter.js","ax5grid-header.js","ax5grid-inline-editor.js","ax5grid-page.js","ax5grid-scroller.js","ax5grid-tmpl.js","ax5grid-util.js","ax5media-viewer.js","ax5media-viewer-tmpl.js","ax5uploader.js","ax5uploader-tmpl.js","ax5combobox.js","ax5combobox-tmpl.js","ax5combobox-util.js","ax5layout.js","ax5binder.js","ax5autocomplete.js","ax5autocomplete-tmpl.js","ax5docker.js","ax5docker-tmpl.js","ax5palette.js","ax5palette-tmpl.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","root","this","win","doc","document","reIsJson","documentElement","reMs","reSnakeCase","reCamelCase","reDot","reInt","reNotNum","reMoneySplit","RegExp","reAmp","reEq","reClassNameSplit","ax5","info","U","guid","getGuid","urlUtil","url","urls","href","location","param","search","referrer","pathname","hostname","port","split","replace","hashdata","last","baseUrl","left","getError","className","errorCode","methodName","errorMsg","msg","_arguments","arguments","version","onerror","console","error","toArray","join","eventKeys","BACKSPACE","TAB","RETURN","ESC","LEFT","UP","RIGHT","DOWN","DELETE","HOME","END","PAGEUP","PAGEDOWN","INSERT","SPACE","weekNames","label","browser","ua","mobile","browserName","match","browserVersion","navigator","userAgent","toLowerCase","name","exec","indexOf","isBrowser","window","wheelEnm","test","supportTouch","maxTouchPoints","msMaxTouchPoints","supportFileApi","FileReader","File","FileList","Blob","each","O","_fn","isNothing","key","i","l","length","isObj","undefined","call","map","results","fnResult","isObject","push","isFunction","sum","defaultValue","tokenValue","isArray","avg","reduce","tokenItem","reduceRight","filter","k","toJson","jsonString","util","jsonObjectBody","value","isString","isNumber","isUndefined","parseJson","str","force","Function","e","getType","typeName","nodeType","_toString","isWindow","isElement","isNodelist","isDate","Date","isNaN","valueOf","isDateFormat","result","date","mm","substr","dd","getMonth","getDate","first","keys","Object","item","setCookie","cn","cv","exdays","opts","expire","setDate","cookie","escape","toUTCString","path","domain","secure","getCookie","cname","ca","c","charAt","substring","unescape","alert","pos","right","lastIndexOf","camelCase","all","letter","toUpperCase","snakeCase","number","cond","isMinus","returnValue","pair","Number","Math","round","abs","floor","ceil","val","txtNumber","arrNumber","nUnit","myByte","Array","slice","merge","second","j","p","v","encode","s","encodeURIComponent","decode","decodeURIComponent","apply","localDate","yy","hh","mi","ss","utcD","localD","UTC","getUTCHours","getTimezoneOffset","setUTCHours","d","aDateTime","aTimes","aTime","aDate","va","ISO_8601","ISO_8601_FULL","parseFloat","_d","mxdd","DyMilli","setTime","getTime","getFullYear","parseInt","daysOfMonth","processor","firstDayOfMonth","lastDayOfMonth","fStr","nY","nM","nD","nH","nMM","nS","nDW","yre","regY","mre","regM","dre","regD","hre","regH","mire","regMI","sre","regS","dwre","regDW","getUTCFullYear","setDigit","getHours","getMinutes","getSeconds","getDay","$1","dday","getDayTime","diffnum","thisYearMemoryDay","memoryDay","today","weeksOfMonth","myDate","year","month","count","y","m","num","padder","radix","toString","times","findParentNode","_target","parentNode","tagName","toLocaleLowerCase","klasss","hasClass","a","getAttribute","cssNumber","re","found","unit","css","returns","valSplited","forEach","trim","vSplited","stopEvent","event","cancelBubble","stopPropagation","preventDefault","debounce","func","wait","options","invokeFunc","time","args","lastArgs","thisArg","lastThis","lastInvokeTime","leadingEdge","timerId","setTimeout","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","min","maxWait","shouldInvoke","now","trailingEdge","trailing","cancel","clearTimeout","flush","debounced","isInvoking","_len","_key2","TypeError","max","throttle","deepCopy","r","jQuery","extend","escapeHtml","unescapeHtml","string","_string","format","concat","_pos","color","_hexColor","isOnePointZero","n","isPercentage","convertToPercentage","convertTo255","convertToHex","bound01","processPercent","rgbToHsl","g","b","h","hslToRgb","hue2rgb","q","t","matchers","CSS_INTEGER","CSS_NUMBER","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","rgb","rgba","hsl","hsla","hsv","hsva","hex3","hex6","hex4","hex8","convertObject","_color","_originalValue","_format","_hex","getHexValue","lighten","amount","darken","getBrightness","isDark","isLight","getHsl","selectRange","textRange","selectAll","el","range","offset","arr","moveStart","collapse","moveEnd","start","end","text","selectNodeContents","setStart","node","setEnd","firstChild","rangeType","selection","get","body","createTextRange","moveToElementText","getSelection","createRange","select","focus","removeAllRanges","addRange","module","exports","def","501","401","402","460","461","re_trim","hwp","hasOwnProperty","hdeb","propertyIsEnumerable","de","del","prop","fun","len","thisp","bind","o","nop","self","bound","querySelectorAll","querySelector","createStyleSheet","style","selector","maxCount","resultSet","addRule","currentStyle","foo","removeRule","Infinity","String","JSON","parse","sJSON","stringify","f","vContent","splice","documentMode","_splice","_slice","begin","size","cloned","upTo","con","method","empty","dummy","properties","methods","pop","webkitMatchMedia","mozMatchMedia","oMatchMedia","msMatchMedia","matchMedia","getElementsByTagName","styleMedia","media","createElement","script","type","id","insertBefore","getComputedStyle","matchMedium","styleSheet","cssText","textContent","width","matches","addListener","localMatchMedia","hasMediaQueries","isListening","timeoutID","queries","handleChange","evt","il","mql","listeners","jl","index","listener","addEventListener","removeListener","ui","axUi","config","setConfig","cfg","callInit","init","log","bindWindowResize","callBack","resize","bindWindowResize__","main","addClass","cls","classStore","factory","arg","initInstance","instance","instanceId","initPrototype","superClass","wrapper","global","mustache","object","typeStr","escapeRegExp","hasProperty","propName","testRegExp","regExpTest","isWhitespace","nonSpaceRe","entityMap","parseTemplate","template","tags","stripSpace","hasTag","nonSpace","spaces","tokens","compileTags","tagsToCompile","spaceRe","Error","openingTagRe","closingTagRe","closingCurlyRe","sections","chr","token","openSection","scanner","Scanner","eos","scanUntil","valueLength","scan","tagRe","whiteRe","equalsRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","numTokens","section","nestedTokens","collector","tail","Context","view","parentContext","cache",".","@each","@key","@value","parent","Writer","objectToString","&","<",">","\"","'","/","lookup","names","context","lookupHit","clearCache","render","partials","renderTokens","originalTemplate","symbol","buffer","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","subRender","defaultWriter","to_html","send","UI","DIALOG","ax5dialog","clickEventName","theme","title","lang","ok","animateTime","autoCloseTime","activeDialog","autoCloseTimer","queue","onStateChanged","that","getContent","dialogId","data","input","btns","_crlf","additionalContent","tmpl","open","callback","box","append","dialogConfig","height","position","top","zIndex","dialogType","find","on","btnOnClick","onKeyup","align","state","close","innerHeight","innerWidth","target","emptyKey","srcElement","btnTarget","oi","required","onClick","doNotCallback","keyCode","tryCount","confirm","prompt","_option","unbind","remove","shift","dialog_instance","dialog","dialogDisplay","columnKeys","tmplName","MASK","maskContent","status","getBodyTmpl","templateName","setBody","content","maskConfig","_cfg","$target","maskId","$mask","outerWidth","outerHeight","_$target","_delay","_close","removeClass","off","fadeOut","pullRequest","mask_instance","mask","defaultMask","TOAST","ax5toast","toastSeq","toastSeqClear","icon","closeIcon","displayTime","containerPosition","toastContainer","toastId","toastBox","containerId","prepend","toastType","btn_target","styles","toast_instance","toast","toastDisplay","MODAL","ENM","mousedown","mousemove","mouseup","getMousePosition","mouseObj","changedTouches","clientX","clientY","margin","minimizePosition","closeToEsc","disableDrag","disableResize","iframe","activeModal","watingModal","$","eventProcessor","onResize","move","modalId","header","fullScreen","iframeLoadingMsg","absolute","attr","action","hide","show","submit","onkeyup","isButton","isFullScreen","mousePosition","moveModal","originalEvent","resizeModal","alignProcessor","top-left","top-right","bottom-left","bottom-right","center-middle","modalZIndex","modalOffset","modalBox","windowBox","scrollLeft","scrollTop","getResizerPosition","__dx","__dy","resizerBg","resizer","setModalPosition","modalConfig","removeAttr","resizerType","resizerProcessor","minHeight","shiftKey","altKey","bottom","minWidth","cursorType","cursor","headerHeight","$iframe","iframeObject","idoc","contentDocument","contentWindow","children","innerHTML","CollectGarbage","minimized","minimize","originalHeight","restore","setModalConfig","_config","_fullScreen","modal_instance","modal","CALENDAR","selectableCount","selectionMap","selectableMap","markerMap","printedDay","startOfWeek","mode","dateFormat","displayDate","dimensions","controlHeight","controlButtonWidth","colHeadHeight","itemPadding","yearHeading","monthHeading","yearTmpl","months","dayTmpl","multipleSelect","selectMode","defaultMarkerTheme","defaultPeriodTheme","getFrame","controlCSS","controlButtonCSS","setDisplay","yy1","yy2","control","monthTmpl","html","yearFirst","changeMode","printDay","nowDate","loopDate","_k","dotDate","monthStratDate","_today","tableStartDate","day","add","thisMonth","itemStyles","frameWidth","frameHeight","list","thisDate","return","_date","row","col","isStartOfWeek","thisDataLabel","classNames","selectable","onclick","printMonth","tableStartMonth","nMonth","colHeadLabel","_month","isStartOfRow","thisMonthLabel","printYear","tableStartYear","nYear","_year","thisYear","thisYearLabel","removed","dt","dateElement","applyMarkerMap","applySelectionMap","applyPeriodMap","periodMap","clearPeriodMap","control-display","setSelection","setSelectable","marker","setMarker","changeDate","isPrint","from","to","isApply","setPeriod","fromLabel","toLabel","period","calendar_instance","calendar","frameTmpl","PICKER","picker","date_leftArrow","date_yearTmpl","date_monthTmpl","date_rightArrow","palette","activePicker","activePickerQueueIndex","openTimer","closeTimer","bindPickerTarget","pickerEvent","queIdx","click","pickerType","@fn","_input","inputLength","contentWidth","contentMargin","secure-num","keyboard","numpad","$colorPreview","background-color","formatter","ax5formatter","alignPicker","_alignPicker","pickerDirection","$window","$body","positionMargin","dim","pickerDim","winWidth","winHeight","direction","positionCSS","activePickerArrow","onBodyClick","onBtnClick","onBodyKeyup","getQueIdx","boundID","pickerConfig","setContentValue","multipleInputProcessor","_item","_inputIndex","_val","diffDay","prevInputValue","nextInputValue","values","pickerCalendar","ax5uiInstance","inputIndex","disableChangeTrigger","trigger","doNotClose","getContentValue","pickerContent","calendarConfig","idx","dValue","dateConvert","itemId","po","numArray","x","random","specialArray","fn","btnWrapStyle","btnTheme","btnStyle","specialBtnTheme","act","keyArray","shiftValue","getKeyBoard","isShiftKey","keyValue","keyLabel","specialBtnWrapStyle","specialBtnStyle","$this","toggleShift","paletteConfig","pickerPalette","dColor","selectedColor","onUpdateColor","pickerTmpl","picker_instance","ax5picker","defaultConfig","FORMATTER","setSelectionRange","selectionStart","selectionEnd","formatterEvent","optIdx","$input","keydown","isStop","enterableKeyCodes","which","metaKey","ctrlKey","keyup","elemFocusPosition","beforeValue","newValue","selectionLength","elem","pattern","getPatternValue","blur","_force","removeData","bindFormatterTarget","matched","patternArgument","getEnterableKeyCodes","formatterConfig","formatting","TODAY","ctrlKeys","18","8","17","46","40","35","187","27","36","45","37","189","34","33","13","39","16","9","38","91","numKeys","48","49","50","51","52","53","54","55","56","57","96","97","98","99","100","101","102","103","104","105","pattern_money","_opts","188","eType","regExpPattern","maxRound","pattern_number","190","110","pattern_date","191","matchedPattern","inspectValue","inspect","Y","M","D","dLen","nval","pattern_time","186","pattern_bizno","pattern_phone","107","regExpPattern3","pattern_credit","pattern_custom","money","bizno","phone","credit","custom","formatter_instance","MENU","iconWidth","acceleratorWidth","menuBodyPadding","items","itemClickAndClose","menuBar","appEventAttach","active","opt","clickItem","onLoad","popup","depth","activeMenu","icons","divide","childOpt","_items","_activeMenu","@parent","element","check","setValue","checkbox","checked","radio","$document","wh","ww","w","getOption","pageY","updateTheme","filteringItem","popupEventAttachTimer","attach","popUpChildMenu","openedIndex","opened","clickParentMenu","getCheckValue","checkItems","collectItem","menu_instance","menu","tmplMenubar","SELECT","ax5select","noSelected","noOptions","loading","multipleLabel","optionValue","optionText","optionSelected","activeSelectOptionGroup","activeSelectQueueIndex","waitOptionsCallback","keyUpTimer","xvar","onChange","alignSelectDisplay","$display","$select","min-width","reset","line-height","alignSelectOptionGroup","newTop","clickEl","gindex","multiple","optionFocusIndex","$option","getLabel","labels","selected","optgroup","syncLabel","$displayLabel","focusWord","searchWord","indexedOptions","@findex","optionsSort","sort","focusMove","findex","_focusIndex","_prevFocusIndex","focusOptionEl","optionGroupScrollContainer","optionSelectedIndex","optionItemLength","focusOptionElHeight","optionGroupScrollContainerHeight","optionGroupScrollContainerScrollTop","focusOptionElTop","bindSelectTarget","focusWordCall","$displayInput","selectEvent","clear","keyUp","keyDown","selectChange","syncSelectOptions","tabIndex","formSize","setSelected","elementOptions","newOptions","focusIndex","OIndex","OO","OOIndex","option","selectConfig","onExpand","optionsMap","_O","_OIndex","focusTop","selectedOptionEl","waitOptions","stop","animate","update","setOptions","getSelected","clearSelected","nn","optionIndex","internal","onClose","enable","disable","select_instance","optionGroupTmpl","selectTmpl","optionsTmpl","GRID","debounceTime","appendDebouncer","appendDebounceTimes","appendProgressIcon","appendProgress","frozenColumnIndex","frozenRowIndex","showLineNumber","showRowSelector","virtualScrollY","virtualScrollX","headerSelect","virtualScrollYCountMargin","virtualScrollAccelerated","virtualScrollAcceleratedDelayTime","columnMinWidth","lineNumberColumnWidth","rowSelectorColumnWidth","sortable","remoteSort","display","columnHeight","columnPadding","columnBorderWidth","grouping","mergeCells","rightSum","footSum","page","statusDisplay","navigationItemCount","scroller","barMinSize","trackPadding","modified","deleted","disableSelection","tree","use","hashDigit","indentWidth","arrowWidth","openedArrow","collapsedArrow","groupIcon","collapsedGroupIcon","itemIcon","parentKey","selfKey","hidden","parentHash","selfHash","bodyTrHeight","scrollContentWidth","scrollContentHeight","scrollTimer","columns","colGroup","footSumColumns","bodyGrouping","proxyList","selectedDataIndexs","deletedList","sortInfo","focusedColumn","selectedColumn","isInlineEditing","inlineEditing","listIndexMap","contextMenu","headerTable","leftHeaderData","headerData","rightHeaderData","bodyRowTable","leftBodyRowData","bodyRowData","rightBodyRowData","bodyRowMap","bodyGroupingTable","leftBodyGroupingData","bodyGroupingData","rightBodyGroupingData","bodyGroupingMap","footSumTable","leftFootSumData","footSumData","needToPaintSum","initGrid","container","panel","aside-header","left-header","header-scroll","right-header","top-aside-body","top-left-body","top-body","top-body-scroll","top-right-body","aside-body","aside-body-scroll","left-body","left-body-scroll","body-scroll","right-body","right-body-scroll","bottom-aside-body","bottom-left-body","bottom-body","bottom-body-scroll","bottom-right-body","livePanelKeys","vertical","vertical-bar","horizontal","horizontal-bar","corner","navigation","form","clipboard","_height","initColumns","_columns","makeHeaderTable","makeBodyRowTable","makeBodyRowMap","rows","colGroupMap","rl","cl","cols","colIndex","onResetColumns","resetColGroupWidth","initFootSum","initBodyGroup","alignGrid","repaint","CT_WIDTH","totalWidth","computedWidth","autoWidthColgroupIndexs","_width","_footSum","makeFootSumTable","_grouping","by","makeBodyGroupingTable","kl","orderBy","seq","fixed","sortFixed","_isFirst","CT_HEIGHT","CT_INNER_WIDTH","CT_INNER_HEIGHT","asidePanelWidth","frozenPanelWidth","endIndex","verticalScrollerWidth","horizontalScrollerHeight","bodyHeight","rightPanelWidth","frozenRowHeight","footSumHeight","pageHeight","totalColGroupWidth","bodyWidth","panelDisplayProcess","vPosition","hPosition","containerType","isHide","scrollerDisplayProcess","scrollerWidth","scrollerHeight","sortColumns","_sortInfo","initData","clearGroupingData","resetLineNumber","onDataChanged","grid","isPickerClick","focused","copySelect","KEY_UP","moveFocus","KEY_DOWN","KEY_LEFT","KEY_RIGHT","KEY_HOME","KEY_END","INLINE_EDIT","_e","inlineEdit","activeEditLength","columnKey","_act","_data","copysuccess","$clipBoard","copyTextArray","copyText","_rowIndex","_colIndex","_dindex","_di","_column","dindex","rowIndex","originalColumn","__isGrouping","execCommand","setData","isFirstPaint","paintStartRowIndex","set","scrollTo","navigationUpdate","getList","_type","setHeight","offsetParent","addRow","_row","_options","_this2","appendToList","_list","removeRow","updateRow","repaintRow","updateChildRows","_updateData","updateChild","paintStartColumnIndex","deleteRow","_key","_value","doindex","repaintCell","_panelName","_rows","__dindex","__doindex","__key","__value","addColumn","_cindex","_i","_l","removeColumn","updateColumn","setColumnWidth","columnResizerIndex","getColumnSortInfo","setColumnSort","applySortStatus","_selectObject","selectedClear","clearSelect","updateRowState","clickBody","DBLClickBody","dblClick","updateRowStateAll","exportExcel","_fileName","table","getExcelString","excel","selectedIndex","destroy","grid_instance","columnSelect","focusClear","panelName","column","editKey","colspan","selectedRange","deActive","trl","_panels","columnSelector","cell","_states","_doindex","di","pi","doi","__original_index__","cellChecked","_state","targetClick","default","editor","getValue","trueValue","falseValue","editorConfig","rowSelector","internalCall","lineNumber","tree-control","_el","toggleCollapse","targetDBLClick","onDBLClick","gridSelf","popupFilter","touchmoved","resetFrozenColumn","paintRowCountMargin","paintRowCountTopMargin","__throttledScroll","noRepaint","dividedBodyRowObj","divideTableByFrozenColumnIndex","asideBodyRowData","dataTable","rowspan","_col","columnAttr","leftData","rightData","dividedBodyGroupingObj","asideBodyGroupingData","dividedFootSumObj","getFieldValue","_index","_returnPlainText","tagsToReplace","_editor","inlineEditor","editMode","__origin_index__","disabled","getHtml","valueProcessor","tag","treeControl","indentNodeHtml","getGroupingValue","_label","__groupingList","groupBy","__groupingBy","getSumFieldValue","_reset","virtualPaintStartRowIndex","paintEndColumnIndex","nopaintLeftColumnsWidth","nopaintRightColumnsWidth","bodyScrollLeft","ci","_sx","_ex","padding-left","padding-right","headerColGroup","bodyAlign","paintRowCount","virtualPaintRowCount","dataRowCount","getTableByStartEndColumnIndex","repaintBody","_elTargetKey","_colGroup","_bodyRow","_groupRow","_scrollConfig","_elTarget","SS","cgi","cgl","dl","tri","cellHeight","colAlign","isScrolled","stripeString","isGroupingRow","rowTable","odi","trStyleClass","_focusedColumn","_selectedColumn","attrs","tdCSS_class","styleClass","_cellHeight","multiLine","repaintSum","isFootSum","mergeCellsBody","tblRowMaps","hasMergeTd","tableTrs","ri","tableTrTds","trMaps","childNodes","tdObj","_loop","prevTokenColIndexs","_loop2","hasFalse","ti","scrollConfig","frozenScrollConfig","asideColGroup","leftHeaderColGroup","statusUpdate","_newValue","updateCell","updateWith","updateColumnKey","findPanelByColumnIndex","updateWithCell","replaceGroupTr","replaceTr","tr_element","timeoutUnUse","_position","UD","_dy","moveResult","while_i","nPanelInfo","LR","_dx","isScrollPanel","containerPanelName","isScrollTo","$column","newLeft","INDEX","scrollTopValue","_initValue","useReturnToSave","originalValue","initValue","__editor","$inlineEditorCell","$inlineEditor","_msg","editorValue","CANCEL","__clear","bindedAx5ui","getBody","getSum","_collapse","getProxyList","listLength","returnList","appendIndex","dataRealRowCount","groupingKeys","compareString","gi","gl","appendRow","ari","appendRowItem","ki","arrangeData4tree","li","_parent","_parentHash","__list","treeKeys","ii","originIndex","listIndex","getRealPathForDataItem","_selected","sortInfoArray","getKeyValue","order","_a_val","_b_val","_a","_b","_callback","appendIdle","_doindx","getExcelTmpl","tableToExcel","fileName","output","tables","worksheet","isChrome","isSafari","isIE","blob1","blankWindow","anchor","msSaveOrOpenBlob","write","appendChild","download","URL","createObjectURL","removeChild","export","columnResizerEvent","_columnResizer","$columnResizer","columnResizerPositionLeft","gridTargetOffsetLeft","resizeRange","__da","columnResizerLived","toggleSort","dividedHeaderObj","asideHeaderData","headerAlign","repaintHeader","tableWidth","trCSS_class","headerStyleClass","_SS","enableFilter","resizerHeight","resizerLeft","AS","sortOrder","multiSort","getHeader","edit_text","_root","_columnKey","attributes","attributesText","_$parent","$el","bindUI","_$el","edit_money","edit_number","edit_date","edit_select","eConfig","edit_checkbox","lineHeight","marginTop","edit_textarea","_getHtml","_bindUI","editorHeight","buttonHeight","$newDiv","$newTextarea","textarea","onclickPageMove","_pageNo","currentPage","selectPage","prev","pageNo","next","totalPages","hasPage","pageSize","totalElements","firstIcon","prevIcon","nextIcon","lastIcon","startI","endI","toRowIndex","rangeCount","fromRowIndex","progress","fromRowIndex_page","toRowIndex_page","convertScrollPosition","_var","_content_height","_panel_height","_scroller_height","_vertical_scroller_height","verticalScrollBarHeight","_content_width","_panel_width","_scroller_width","_horizontal_scroller_width","horizontalScrollBarWidth","convertScrollBarPosition","_top","scrollPositon","_left","scrollBarMover","track","bar","moveout_timer","trackOffset","barBox","trackBox","getScrollerPosition","barOffset","scrollContentMover","wheel","delta","_body_scroll_position","body_panel_height","body_panel_width","_top_is_end","_left_is_end","getContentPosition","__x_da","__y_da","E","detail","deltaY","wheelDelta","deltaX","page_navigation","page_status","_table","_frozenColumnIndex","tempTable_l","tempTable_r","colStartIndex","colEndIndex","leftCol","rightCol","_startColumnIndex","_endColumnIndex","tempTable","pageX","maekRows","parentField","subcolspan","field","selfMakeRow","__columns","_footSumColumns","footSumRow","addC","_bodyGroupingColumns","_containerPanelName","_isScrollPanel","_dataPath","_path","MEDIAVIEWER","ax5mediaViewer","src","poster","viewer","prevHandle","nextHandle","ratio","hideMediaList","elementType","thumbnail","getSelectedIndex","selecteIndex","alignMediaList","thumbnailWidth","containerWidth","parentLeft","parentWidth","swipeMedia","getSwipePosition","__time","viewerWidth","nextIndex","viewer-holder","viewer-prev","viewer-loading","list-holder","list-prev-handle","list-table","list-next-handle","$img","_img","mediaThumbnailWidth","mediaThumbnailHeight","mediaView","image","img","Image","onload","video","setMediaList","play","_opt","interval","playTimer","mediaViewer_instance","mediaViewer","frame","UPLOADER","ax5uploader","upload","abort","uploadedBox","uploadedName","uploadedPath","downloadPath","previewPath","accept","manualUpload","progressBox","defaultBtns","uploadedFiles","$inputContainer","$inputFile","$inputFileForm","$fileSelector","$dropZone","$uploadedBox","__uploading","selectedFiles","selectedFilesTotal","__loaded","bound_onStateChanged","bound_onSelectFile","_evt","files","dataTransfer","bound_openProgressBox","bound_alignLayout","bound_bindEvent","cellType","uploadedItemIndex","parents","fileIndex","contains","dropZone","ondragover","ondragout","ondrop","_TF","bound_alignProgressBox","_alignProgressBox","$progressBox","progressBoxDirection","$progressBoxArrow","viewport","$progressUpload","$progressAbort","bound_closeProgressBox","bound_startUpload","html5","uploadFile","bound_uploadComplete","formData","FormData","xhr","XMLHttpRequest","res","response","debug","onuploaderror","bound_uploaded","onprogress","bound_updateProgressBar","loaded","total","load","innerText","filesTotal","$progressBar","lengthComputable","bound_repaintUploadedBox","onuploaded","onuploadComplete","bound_attachFileTag","bound_cancelUpload","validateSelectedFiles","setUploadedFiles","_files","removeFile","removeFileAll","selectFile","uploader_instance","uploader","uploadProgress","inputFile","inputFileForm","upoadedBox","apiServerUrl","byte","COMBOBOX","removeIcon","activecomboboxOptionGroup","activecomboboxQueueIndex","alignComboboxDisplay","displayTableHeightAdjust","displayTableHeight","$displayTable","alignComboboxOptionGroup","setOptionSelect","hasSelected","printLabel","$displayLabelInput","before","focusLabel","clearLabel","blurLabel","onSearch","syncComboboxOptions","regExp","@gindex","@index","setValueType","addOptions","addedOption","noStateChange","bindComboboxTarget","debouncedFocusWord","comboboxEvent","disableCtrlKeys","comboboxConfig","_boundID","_values","setText","_text","getSelectedOption","combobox","optionGroup","comboboxDisplay","formSelect","formSelectOptions","nodeTypeProcessor","1","editable","textNode","3","combobox_instance","ax5combobox","ax5layout","splitter","autoResize","alignLayoutAll","parentQueIdx","alignLayout","getDockPanelOuterSize","__width","__height","getPixel","parentSize","beforeSetCSS","panelIndex","splitPanel","asteriskLength","setCSS","$splitter","targetDimension","dockPanel","center","withoutAsteriskSize","windowResize","prevPosition","offsetEnd","offsetStart","layoutProcessor","dock-panel","split-panel","orientation","childResize","childQueIdxs","layout","resizeSplitter","splitterOffset","splitterBox","maxWidth","maxHeight","prevPanel","nextPanel","prePanelMinHeight","nextPanelMinHeight","prePanelMinWidth","nextPanelMinWidth","setPanelSize","tab-panel","tabControl","activePanelIndex","tabPanel","onOpenTab","activePanel","getTabLabesTmpl","bindLayoutTarget","applyLayout","panelInfo","dock","ELIndex","hasActivePanel","hooksResizeLayout","childQueIdx","UIConfig","resizeLayoutPanel","resizeOption","resetLayoutPanel","tabOpen","getActiveTab","layout_instance","model","view_target","change_trigger","click_trigger","update_trigger","get_type","get_mix_path","dataPath","item_path","get_real_path","setModel","_binding","obj_type","this_type","_this","set_els_value","__ADDED__","fragdom","bind_event_tmpl","change","repeat_path","remove_item","__DELETED__","print_tmpl","childAdd","child_path","child_item","childRemove","child_index","childUpdate","childSet","onUpdate","isupdate","dom","repeat_idx","hasItem","new_value","origin_value","value_type","setAllow","jquery","tagname","tk","ix","callChange","vi","option_matched","AXSelect","bindSelectSetValue","sync_model","isInit","isPlainObject","@i","item_index","mix_path","validate","errors","is_validate","is_error","AUTOCOMPLETE","activeautocompleteOptionGroup","activeautocompleteQueueIndex","alignAutocompleteDisplay","alignAutocompleteOptionGroup","nindex","collect_options","removeSelectedIndex","newSelectedArray","pushOk","appendOk","bindAutocompleteTarget","autocompleteEvent","removeIndex","inputValue","autocompleteConfig","autocomplete","autocompleteDisplay","autocomplete_instance","ax5autocomplete","DOCKER","_this3","more","labelDirection","disableClosePanel","disableDragPanel","resizeDebounceTime","panelDebounceTime","panels","panelId","modules","debouncer","resizeDebounceFn","panelDebounceFn","fireEvent","resizedDom","eventName","getPanelId","defaultModule","deactive","getPanelPath","pIndex","paths","panelPath","getPanel","_panelPath","getPanelParent","_panel","setPanel","controlPanel","_control","moduleState","moduleContainer","$element","$item","builded","moduleName","$label","$pane","clientWidth","scrollWidth","arrangePanel","controlType","runProcessor","after","repaintPanels","appendProcessor","stack","$parent","myself","$dom","activeIndex","hasLabelColor","borderColor","P","_pIndex","flexGrow","resizeHandle","$root","removePanel","$clickedLabel","pane","changeActiveStackPanel","openStackPanelMore","panelTabDragEvent","datas","resizerPath","resizerIndex","resizer$dom","resizerParent$dom","resizerPrevGrow","resizerNextGrow","resizerCanvasWidth","resizerCanvasHeight","panelResizerEvent","alignStackPane","dragPanel","dragger","dragOverVertical","dragOverHorizontal","dragover","dragoverDom","$dragoverDom","mouse","halfWidth","draggerProcessor","threeQuarterHeight","threeQuarterWidth","left-top","right-top","center-top","left-middle","right-middle","left-bottom","right-bottom","center-bottom","isDrop","appendType","appendPanel","_resizer","da_grow","resizerLived","flex-grow","$prevPanel","$nextPanel","prevPane","nextPane","pl","stackPane","$stackPane","panePath","menuItems","panelsDeactive","newObj","_p","arrow","setPanels","addModule","addPanel","_addPath","_addType","_panelIndex","addPath","panelProcessor","_pane","copyPanel","addProcessor","stack-left","stack-right","row-left","parentPath","parentPane","row-right","column-top","column-bottom","_appendPath","_appendType","copiedPanel","addType","removePanelPath","appendPanelIndex","searchPanel","_condition","findPanel","findResult","activePanelPath","docker_instance","docker","stack_panel","panel_label","stack-panel","panel-label","PALETTE","_this4","colors","preview","cellWidth","slider","trackHeight","handleWidth","handleHeight","controls","bindHandle","originalTrackWidth","$track","trackWidth","handleLeft","amountToHandleLeft","_amount","handleLeftToAmount","updatePreviewColor","amountToColor","$handle","_originalHandleClientX","_originalHandleLeft","handleMoveEvent","_selectedColor","newHandleLeft","$preview","black","white","normal","_uniqColor","colorToAmount","_diffColor","color1","da","_color0value","_color1value","_color2value","handleTop","setSelectedColor","sColor","minDiffColor","minDiffColorIndex","cidx","c1hsl","c2hsl","diffColor","palette_instance","tmpl_frame","tmpl_colors"],"mappings":"AAAA,YAEA,IAAIA,SAA4B,kBAAXC,SAAoD,gBAApBA,QAAOC,SAAwB,SAAUC,GAAO,aAAcA,IAAS,SAAUA,GAAO,MAAOA,IAAyB,kBAAXF,SAAyBE,EAAIC,cAAgBH,QAAUE,IAAQF,OAAOI,UAAY,eAAkBF,KCFtQ,WAIA,GAAAG,GAAAC,KAAAC,EAAAD,KACAE,EAAAD,EAAAA,EAAAE,SAAA,KACAC,GADAH,EAAAA,EAAAE,SAAAE,gBAAA,KACA,sEACAC,EAAA,QACAC,EAAA,mBACAC,EAAA,WACAC,EAAA,KACAC,EAAA,eACAC,EAAA,OACAC,EAAA,GAAAC,QAAA,gCACAC,EAAA,KACAC,EAAA,IACAC,EAAA,QAGAC,KAAAC,EAAAA,OAAAC,EAAAA,MAMAF,GAAAG,KAAA,EAMAH,EAAAI,QAAA,WACA,MAAAJ,GAAAG,QAOAH,EAAAC,KAAAA,EAAA,WAsJA,QAAAI,GAAAC,EAAAC,GAgBA,MAfAD,IACAE,KAAAxB,EAAAyB,SAAAD,KACAE,MAAA1B,EAAAyB,SAAAE,OACAC,SAAA3B,EAAA2B,SACAC,SAAA7B,EAAAyB,SAAAI,SACAC,SAAA9B,EAAAyB,SAAAK,SACAC,KAAA/B,EAAAyB,SAAAM,MACAR,EAAAD,EAAAE,KAAAQ,MAAA,SACAV,EAAAI,MAAAJ,EAAAI,MAAAO,QAAA,IAAA,IACAX,EAAAA,IAAAC,EAAA,GACAD,EAAAE,KAAAG,OAAA,UACAL,EAAAY,SAAAhB,EAAAiB,KAAAZ,IAEAA,EAAA,KACAD,EAAAc,QAAAlB,EAAAmB,KAAAf,EAAAE,KAAA,KAAAS,QAAAX,EAAAO,SAAA,IACAP,EAuBA,QAAAgB,GAAAC,EAAAC,EAAAC,GACA,MAAAxB,GAAAyB,UAAAzB,EAAAyB,SAAAH,IAEAA,UAAAA,EACAC,UAAAA,EACAC,WAAAA,EACAE,IAAA1B,EAAAyB,SAAAH,GAAAC,KAIAD,UAAAA,EAAAC,UAAAA,EAAAC,WAAAA,GAvMA,GAAAG,GAAAC,UAKAC,EAAA,UAMAV,EAAA,GAYAW,EAAA,WACAC,QAAAC,MAAA/B,EAAAgC,QAAAN,GAAAO,KAAA,OAeAC,GACAC,UAAA,EAAAC,IAAA,EACAC,OAAA,GAAAC,IAAA,GAAAC,KAAA,GAAAC,GAAA,GAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,GACAC,KAAA,GAAAC,IAAA,GAAAC,OAAA,GAAAC,SAAA,GAAAC,OAAA,GAAAC,MAAA,IAiBAC,IACAC,MAAA,QACAA,MAAA,QACAA,MAAA,QACAA,MAAA,QACAA,MAAA,QACAA,MAAA,QACAA,MAAA,QAYAC,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAJ,EAAAK,GACA,MAAA3E,IAAAA,EAAA4E,WAEAL,EAAAK,UAAAC,UAAAC,cAAAN,EAAAD,EAAA5C,OAAA,eAAAgD,EAEAJ,EAAA5C,OAAA,gBACAoD,KAAA,SAAAjC,QAAA,EAAA0B,QAAA,GAEAD,EAAA5C,OAAA,cACAoD,KAAA,OAAAjC,QAAA,EAAA0B,QAAA,GAEAD,EAAA5C,OAAA,iBACA+C,EAAA,yBAAAM,KAAAT,OACAI,EAAAD,EAAA,IAAA,KACAK,KAAA,UAAAjC,QAAA6B,EAAAH,OAAAA,KAGAC,EAAA,GACAC,EAAA,qBAAAM,KAAAT,IAAA,wBAAAS,KAAAT,IAAA,wBAAAS,KAAAT,IAAA,kBAAAS,KAAAT,IAAAA,EAAAU,QAAA,cAAA,GAAA,gCAAAD,KAAAT,OACAD,EAAAI,EAAA,IAAA,GACAC,EAAAD,EAAA,IAAA,IAEA,QAAAJ,IAAAA,EAAA,OAEAS,KAAAT,EACAxB,QAAA6B,EACAH,OAAAA,WAUAU,IAAA,mBAAAC,SAAA,mBAAAP,aAAA5E,EAAAE,UAMAkF,EAAApF,GAAA,WAAAqF,KAAAT,UAAAC,WAAA,iBAAA,aAQAnC,KAmFA4C,IAAAtF,IAAA,gBAAAA,IAAA4E,UAAAW,eAAA,GAAAX,UAAAY,iBAAA,GAEAC,IAAAzF,IAAAA,EAAA0F,YAAA1F,EAAA2F,MAAA3F,EAAA4F,UAAA5F,EAAA6F,KAEA,QACAnD,SAAAA,EACAI,QAAAA,EACAV,QAAAA,EACAW,QAAAA,EACAK,UAAAA,EACAgB,UAAAA,EACAE,QAAAA,EACAY,UAAAA,EACAI,aAAAA,EACAG,eAAAA,EACAL,SAAAA,EACA/D,QAAAA,EACAiB,SAAAA,MAQAtB,EAAA,KAAAE,EAAA,WAmBA,QAAA4E,GAAAC,EAAAC,GACA,GAAAC,EAAAF,GAAA,QACA,IAAAG,GAAAA,OAAAC,EAAA,EAAAC,EAAAL,EAAAM,OACAC,EAAAC,SAAAH,GAAA,kBAAAL,EACA,IAAAO,GACA,IAAAJ,IAAAH,GACA,GAAA,mBAAAA,GAAAG,IACAF,EAAAQ,KAAAT,EAAAG,GAAAA,EAAAH,EAAAG,OAAA,EAAA,UAIA,MAAAC,EAAAC,IACA,mBAAAL,GAAAI,IACAH,EAAAQ,KAAAT,EAAAI,GAAAA,EAAAJ,EAAAI,SAAA,KAGA,MAAAJ,GAgCA,QAAAU,GAAAV,EAAAC,GACA,GAAAC,EAAAF,GAAA,QACA,IAAAG,GAAAA,OAAAC,EAAA,EAAAC,EAAAL,EAAAM,OAAAK,KAAAC,EAAAA,MACA,IAAAC,EAAAb,IACA,IAAAG,IAAAH,GACA,GAAA,mBAAAA,GAAAG,GAAA,CAEA,GADAS,EAAAJ,QACAI,EAAAX,EAAAQ,KAAAT,EAAAG,GAAAA,EAAAH,EAAAG,QAAA,EAAA,KACAQ,GAAAG,KAAAF,QAKA,MAAAR,EAAAC,GACA,GAAA,mBAAAL,GAAAI,GAAA,CAEA,GADAQ,EAAAJ,QACAI,EAAAX,EAAAQ,KAAAT,EAAAI,GAAAA,EAAAJ,EAAAI,UAAA,EAAA,KACAO,GAAAG,KAAAF,GAIA,MAAAD,GAoCA,QAAA/E,GAAAoE,EAAAC,GACA,GAAAC,EAAAF,GAAA,QACA,IAAAa,EAAAb,GACA,IAAA,GAAAG,KAAAH,GAAA,CACA,GAAA,mBAAAA,GAAAG,IAAAY,EAAAd,IAAAA,EAAAQ,KAAAT,EAAAG,GAAAA,EAAAH,EAAAG,IACA,MAAAA,EAGA,IAAAH,EAAAG,IAAAF,EACA,MAAAE,OAMA,KAAA,GAAAC,GAAA,EAAAC,EAAAL,EAAAM,OAAAF,EAAAC,EAAAD,IAAA,CACA,GAAA,mBAAAJ,GAAAI,IAAAW,EAAAd,IAAAA,EAAAQ,KAAAT,EAAAI,GAAAA,EAAAJ,EAAAI,IACA,MAAAA,EAGA,IAAAJ,EAAAI,IAAAH,EACA,MAAAG,GAKA,SA8BA,QAAAY,GAAAhB,EAAAiB,EAAAhB,GACA,GAAAG,GAAAA,OAAAC,EAAAA,OAAAa,EAAAA,MAOA,IANAH,EAAAE,IAAA,mBAAAhB,KACAA,EAAAgB,EACAA,EAAA,GAEA,mBAAAA,KAAAA,EAAA,GAEAE,EAAAnB,GAAA,CAGA,IAFAI,EAAA,EACAC,EAAAL,EAAAM,OACAF,EAAAC,EAAAD,IACA,GAAA,mBAAAJ,GAAAI,GAAA,CACA,IAAAc,EAAAjB,EAAAQ,KAAAT,EAAAI,GAAAJ,EAAAI,QAAA,EAAA,KACA,oBAAAc,KAAAD,GAAAC,GAGA,MAAAD,GAEA,GAAAJ,EAAAb,GAAA,CACA,IAAAI,IAAAJ,GACA,GAAA,mBAAAA,GAAAI,GAAA,CACA,IAAAc,EAAAjB,EAAAQ,KAAAT,EAAAI,GAAAJ,EAAAI,QAAA,EAAA,KACA,oBAAAc,KAAAD,GAAAC,GAGA,MAAAD,GAIA,MADAhE,SAAAC,MAAA,uDACA+D,EAyBA,QAAAG,GAAApB,EAAAiB,EAAAhB,GACA,GAAAG,GAAAA,OAAAC,EAAAA,OAAAa,EAAAA,MAOA,IANAH,EAAAE,IAAA,mBAAAhB,KACAA,EAAAgB,EACAA,EAAA,GAEA,mBAAAA,KAAAA,EAAA,GAEAE,EAAAnB,GAAA,CAGA,IAFAI,EAAA,EACAC,EAAAL,EAAAM,OACAF,EAAAC,EAAAD,IACA,GAAA,mBAAAJ,GAAAI,GAAA,CACA,IAAAc,EAAAjB,EAAAQ,KAAAT,EAAAI,GAAAJ,EAAAI,QAAA,EAAA,KACA,oBAAAc,KAAAD,GAAAC,GAGA,MAAAD,GAAAZ,EAEA,GAAAQ,EAAAb,GAAA,CACAK,EAAA,CACA,KAAAD,IAAAJ,GACA,GAAA,mBAAAA,GAAAI,GAAA,CACA,IAAAc,EAAAjB,EAAAQ,KAAAT,EAAAI,GAAAJ,EAAAI,QAAA,EAAA,KACA,oBAAAc,KAAAD,GAAAC,KAAAb,EAGA,MAAAY,GAAAZ,EAIA,MADApD,SAAAC,MAAA,uDACA+D,EAyBA,QAAAI,GAAArB,EAAAC,GACA,GAAAG,GAAAC,EAAAiB,CACA,IAAAH,EAAAnB,GAAA,CAEA,IADAI,EAAA,EAAAC,EAAAL,EAAAM,OAAAgB,EAAAtB,EAAAI,GACAA,EAAAC,EAAA,IACA,mBAAAL,GAAAI,KACAkB,EAAArB,EAAAQ,KAAA1G,EAAAuH,EAAAtB,IAAAI,QAAA,KAGA,MAAAkB,GAEA,GAAAT,EAAAb,GAAA,CACA,IAAAI,IAAAJ,GACA,GAAA,mBAAAA,GAAAI,KACAkB,EAAArB,EAAAQ,KAAA1G,EAAAuH,EAAAtB,EAAAI,QAAA,EAAA,KAGA,OAAAkB,GAIA,MADArE,SAAAC,MAAA,0DACA,KAqBA,QAAAqE,GAAAvB,EAAAC,GAEA,IADA,GAAAG,GAAAJ,EAAAM,OAAA,EAAAgB,EAAAtB,EAAAI,GACAA,EAAA,IACA,mBAAAJ,GAAAI,KACAkB,EAAArB,EAAAQ,KAAA1G,EAAAuH,EAAAtB,IAAAI,QAAA,KAGA,MAAAkB,GA0BA,QAAAE,GAAAxB,EAAAC,GACA,GAAAC,EAAAF,GAAA,QACA,IAAAyB,GAAAb,EAAAR,EAAA,EAAAC,EAAAL,EAAAM,OAAAK,IACA,IAAAE,EAAAb,GACA,IAAAyB,IAAAzB,GACA,mBAAAA,GAAAyB,KACAb,EAAAX,EAAAQ,KAAAT,EAAAyB,GAAAA,EAAAzB,EAAAyB,MAAAd,EAAAG,KAAAd,EAAAyB,QAKA,MAAArB,EAAAC,GACA,mBAAAL,GAAAI,MACAQ,EAAAX,EAAAQ,KAAAT,EAAAI,GAAAA,EAAAJ,EAAAI,MAAAO,EAAAG,KAAAd,EAAAI,IACAA,IAIA,OAAAO,GAoBA,QAAAe,GAAA1B,GACA,GAAA2B,GAAA,EACA,IAAA1G,EAAA2G,KAAAT,QAAAnB,GAAA,CACA,GAAAI,GAAA,EAAAC,EAAAL,EAAAM,MAEA,KADAqB,GAAA,IACAvB,EAAAC,EAAAD,IACAA,EAAA,IAAAuB,GAAA,KACAA,GAAAD,EAAA1B,EAAAI,GAEAuB,IAAA,QAEA,IAAA1G,EAAA2G,KAAAf,SAAAb,GAAA,CACA2B,GAAA,GACA,IAAAE,KACA9B,GAAAC,EAAA,SAAAG,EAAA2B,GACAD,EAAAf,KAAA,IAAAX,EAAA,MAAAuB,EAAAI,MAEAH,GAAAE,EAAAzE,KAAA,MACAuE,GAAA,QAGAA,GADA1G,EAAA2G,KAAAG,SAAA/B,GACA,IAAAA,EAAA,IAEA/E,EAAA2G,KAAAI,SAAAhC,GACAA,EAEA/E,EAAA2G,KAAAK,YAAAjC,GACA,YAEA/E,EAAA2G,KAAAb,WAAAf,GACA,eAGAA,CAEA,OAAA2B,GA2BA,QAAAO,GAAAC,EAAAC,GACA,IAAAA,IAAAhI,EAAAkF,KAAA6C,GAQA,OAAAjF,MAAA,IAAAN,IAAA,eAPA,KACA,MAAA,IAAAyF,UAAA,GAAA,UAAAF,KACA,MAAAG,GACA,OAAApF,MAAA,IAAAN,IAAA,iBAsBA,QAAA2F,GAAAvC,GACA,GAAAwC,EAkCA,OAjCA,OAAAxC,GAAAA,GAAAA,EAAAZ,OACAoD,EAAA,SAEAxC,GAAA,GAAAA,EAAAyC,SACAD,EAAA,UAEAxC,GAAA,IAAAA,EAAAyC,SACAD,EAAA,WAEA,OAAAxC,EACAwC,EAAA,OAEA,mBAAAxC,GACAwC,EAAA,YAEA,mBAAAE,GAAAjC,KAAAT,GACAwC,EAAA,SAEA,kBAAAE,GAAAjC,KAAAT,GACAwC,EAAA,QAEA,mBAAAE,GAAAjC,KAAAT,GACAwC,EAAA,SAEA,mBAAAE,GAAAjC,KAAAT,GACAwC,EAAA,SAEA,qBAAAE,GAAAjC,KAAAT,GACAwC,EAAA,WAEA,kBAAAxC,KACAwC,EAAA,YAEAA,EASA,QAAAG,GAAA3C,GACA,MAAA,OAAAA,GAAAA,GAAAA,EAAAZ,OASA,QAAAwD,GAAA5C,GACA,SAAAA,GAAA,GAAAA,EAAAyC,UAAA,IAAAzC,EAAAyC,UASA,QAAA5B,GAAAb,GACA,MAAA,mBAAA0C,GAAAjC,KAAAT,GASA,QAAAmB,GAAAnB,GACA,MAAA,kBAAA0C,GAAAjC,KAAAT,GASA,QAAAe,GAAAf,GACA,MAAA,kBAAAA,GASA,QAAA+B,GAAA/B,GACA,MAAA,mBAAA0C,GAAAjC,KAAAT,GASA,QAAAgC,GAAAhC,GACA,MAAA,mBAAA0C,GAAAjC,KAAAT,GASA,QAAA6C,GAAA7C,GACA,SAAA,qBAAA0C,GAAAjC,KAAAT,IAAA,mBAAAA,IAAAA,GAAAA,EAAA,IAAA,GAAAA,EAAA,GAAAyC,UASA,QAAAR,GAAAjC,GACA,MAAA,mBAAAA,GASA,QAAAE,GAAAF,GACA,MAAA,mBAAAA,IAAA,OAAAA,GAAA,KAAAA,EAgBA,QAAA8C,GAAA9C,GACA,MAAAA,aAAA+C,QAAAC,MAAAhD,EAAAiD,WAIA,QAAAC,GAAAlD,GACA,GACAmD,IAAA,CAEA,IAAAnD,EAEA,GAAAA,YAAA+C,QAAAC,MAAAhD,EAAAiD,WACAE,GAAA,MAEA,CACA,GAAAnD,EAAAM,OAAA,GACA8C,GAAApD,YAAA+C,MACA,OAAA,CAIA,IADA/C,EAAAA,EAAA9D,QAAA,MAAA,IACA8D,EAAAM,OAAA,EAAA,CACA,GACA+C,GAAArD,EAAAsD,OAAA,EAAA,GACAC,EAAAvD,EAAAsD,OAAA,EAAA,EAEAtD,GAAAoD,GAAApD,GACAA,EAAAwD,YAAAH,EAAA,GAAArD,EAAAyD,WAAAF,IACAJ,GAAA,SAIA,MAAAA,GAgBA,QAAAO,GAAA1D,GACA,GAAAa,EAAAb,GAAA,CACA,GAAA2D,GAAAC,OAAAD,KAAA3D,GACA6D,IAEA,OADAA,GAAAF,EAAA,IAAA3D,EAAA2D,EAAA,IACAE,EAEA,MAAA1C,GAAAnB,GACAA,EAAA,OAGA/C,SAAAC,MAAA,wBAAA,uBAkBA,QAAAd,GAAA4D,GACA,GAAAa,EAAAb,GAAA,CACA,GAAA2D,GAAAC,OAAAD,KAAA3D,GACA6D,IAEA,OADAA,GAAAF,EAAAA,EAAArD,OAAA,IAAAN,EAAA2D,EAAAA,EAAArD,OAAA,IACAuD,EAEA,MAAA1C,GAAAnB,GACAA,EAAAA,EAAAM,OAAA,OAGArD,SAAAC,MAAA,uBAAA,uBAmBA,QAAA4G,GAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,EAMA,OALA,gBAAAF,KACAE,EAAA,GAAApB,MACAoB,EAAAC,QAAAD,EAAAV,UAAAQ,IAEAC,EAAAA,MACAhK,EAAAmK,QACAC,OAAAP,GAAA,IAAAO,OAAAN,GACAG,EAAA,aAAAA,EAAAI,cAAA,GACAL,EAAAM,KAAA,UAAAN,EAAAM,KAAA,GACAN,EAAAO,OAAA,YAAAP,EAAAO,OAAA,GACAP,EAAAQ,OAAA,WAAA,IACAtH,KAAA,IAaA,QAAAuH,GAAAC,GAGA,IAFA,GAAA5F,GAAA4F,EAAA,IACAC,EAAA3K,EAAAmK,OAAApI,MAAA,KAAAmE,EAAA,EAAAC,EAAAwE,EAAAvE,OACAF,EAAAC,EAAAD,IAAA,CAEA,IADA,GAAA0E,GAAAD,EAAAzE,GACA,KAAA0E,EAAAC,OAAA,IAAAD,EAAAA,EAAAE,UAAA,EACA,IAAAF,EAAA5F,QAAAF,OAAA,MAAAiG,UAAAH,EAAAE,UAAAhG,EAAAsB,OAAAwE,EAAAxE,SAEA,MAAA,GAaA,QAAA4E,GAAAlF,GAEA,MADA/F,GAAAiL,MAAAxD,EAAA1B,IACAA,EAiBA,QAAA1D,GAAA6F,EAAAgD,GACA,MAAA,mBAAAhD,IAAA,mBAAAgD,GAAA,GACApD,EAAAoD,GACAhD,EAAAjD,QAAAiG,MAAAhD,EAAAmB,OAAA,EAAAnB,EAAAjD,QAAAiG,IAAA,GAEAnD,EAAAmD,GACAhD,EAAAmB,OAAA,EAAA6B,GAGA,GAkBA,QAAAC,GAAAjD,EAAAgD,GACA,MAAA,mBAAAhD,IAAA,mBAAAgD,GAAA,IACAhD,EAAA,GAAAA,EACAJ,EAAAoD,GACAhD,EAAAkD,YAAAF,MAAAhD,EAAAmB,OAAAnB,EAAAkD,YAAAF,GAAA,GAAA,GAEAnD,EAAAmD,GACAhD,EAAAmB,OAAAnB,EAAA7B,OAAA6E,GAGA,IAgBA,QAAAG,GAAAnD,GACA,MAAAA,GAAAjG,QAAA5B,EAAA,OAAA4B,QAAA3B,EAAA,SAAAgL,EAAAC,GACA,MAAAA,GAAAC,gBAiBA,QAAAC,GAAAvD,GACA,MAAAmD,GAAAnD,GAAAjG,QAAA1B,EAAA,SAAA+K,EAAAC,GACA,MAAA,IAAAA,EAAAzG,gBAgCA,QAAA4G,GAAAxD,EAAAyD,GACA,GAAAzC,GAAA0C,EAAAC,EAAAC,GAAA,GAAA5D,GAAAlG,MAAAxB,EA6EA,OA3EAoL,GAAAG,OAAAD,EAAA,GAAA7J,QAAA,KAAA,KAAA,GAAA,MAAA6J,EAAA,GACAD,EAAA,EACAC,EAAA,GAAAA,EAAA,GAAA7J,QAAAxB,EAAA,IAEAqL,EAAA,IACAA,EAAA,GAAAA,EAAA,GAAA7J,QAAAvB,EAAA,IACAmL,EAAAE,OAAAD,EAAA,GAAA,IAAAA,EAAA,KAAA,GAGAD,EAAAE,OAAAD,EAAA,KAAA,EAEA5C,EAAA0C,GAAAC,EAAAA,EAEA/F,EAAA6F,EAAA,SAAAnE,EAAAqD,GACA,SAAArD,IAGA0B,EAFAnB,EAAA8C,GACAA,EAAA,IACAmB,KAAAC,MAAA/C,EAAA,KAAA8C,KAAAE,IAAArB,IAAA,KAAAmB,KAAAE,IAAArB,MAGAmB,KAAAC,MAAA/C,EAAA,KAAA2B,GAAA,KAAAA,GAIAmB,KAAAC,MAAA/C,IAGA,SAAA1B,IACA0B,EAAA8C,KAAAG,MAAAjD,IAEA,QAAA1B,EACA0B,EAAA8C,KAAAI,KAAAlD,GAEA,SAAA1B,EACA0B,EAAA,SAAAmD,GACA,GAAAC,GAAA,GAAAD,CACA,IAAAtD,MAAAuD,IAAA,IAAAA,EACA,MAAA,EAGA,IAAAC,GAAAD,EAAAtK,MAAA,IACAuK,GAAA,IAAA,GACA,GACAA,GAAA,GAAAA,EAAA,GAAAtK,QAAAtB,EAAA,eACAA,EAAA0E,KAAAkH,EAAA,IACA,OAAAA,GAAAlG,OAAA,EACAkG,EAAApJ,KAAA,IAGAoJ,EAAA,GAAAvK,MAAA,KAAA,IAGAkH,GAEA,OAAA1B,EACA0B,EAAA8C,KAAAE,IAAAH,OAAA7C,IAEA,QAAA1B,IACA0B,EAAA,SAAAmD,GACAA,EAAAN,OAAA7C,EACA,IAAAsD,GAAA,KACAC,EAAAJ,EAAA,IASA,OARAI,GAAA,KAAA,IACAD,EAAA,KACAC,GAAA,MAEAA,EAAA,KAAA,IACAD,EAAA,KACAC,GAAA,MAEAf,EAAAe,GAAAR,MAAA,IAAAO,GACAtD,MAIAA,EAcA,QAAAhG,GAAA6C,GACA,MAAA,mBAAAA,GAAAM,OAAAqG,MAAA7M,UAAA8M,MAAAnG,KAAAT,MAeA,QAAA6G,GAAAnD,EAAAoD,GACA,GAAAzG,GAAAyG,EAAAxG,OACAF,EAAAsD,EAAApD,OACAyG,EAAA,CAEA,IAAA,gBAAA1G,GACA,KAAA0G,EAAA1G,EAAA0G,IACArD,EAAAtD,KAAA0G,EAAAC,OAIA,MAAAvG,SAAAsG,EAAAC,IACArD,EAAAtD,KAAA0G,EAAAC,IAMA,OAFArD,GAAApD,OAAAF,EAEAsD,EAkBA,QAAA/H,GAAAqE,EAAA4F,GACA,GAAAoB,EACA,OAAAjF,GAAA/B,IAAA,mBAAA4F,IAAA,SAAAA,EACA5F,EAEA+B,EAAA/B,IAAA,mBAAA4F,IAAA,UAAAA,GAAA7D,EAAA/B,IAAA,mBAAA4F,IACAoB,KACAjH,EAAAC,EAAA/D,MAAAnB,GAAA,WACA,GAAA+I,GAAA7J,KAAAiC,MAAAlB,EACAiM,GAAAnD,EAAA,KAEA9B,EAAAiF,EAAAnD,EAAA,OAAAmD,EAAAnD,EAAA,KAAAmD,EAAAnD,EAAA,MACAmD,EAAAnD,EAAA,IAAA/C,KAAA+C,EAAA,KAHAmD,EAAAnD,EAAA,IAAAA,EAAA,KAMAmD,IAGAA,KACAjH,EAAAC,EAAA,SAAAyB,EAAAwF,GACAD,EAAAlG,KAAAW,EAAA,IAAA6C,OAAA2C,MAEAD,EAAA5J,KAAA,MAIA,QAAA8J,GAAAC,GACA,MAAAC,oBAAAD,GAGA,QAAAE,IAAAF,GACA,MAAAG,oBAAAH,GAGA,QAAAjK,MACAjC,EAAAC,KAAA8B,QAAAuK,MAAAvN,KAAA8C,WAGA,QAAA0K,IAAAC,EAAApE,EAAAE,EAAAmE,EAAAC,EAAAC,GACA,GAAAC,GAAAC,CAaA,OAZAA,GAAA,GAAA/E,MACAM,EAAA,IAAAA,EAAA,GACA,mBAAAqE,KAAAA,EAAA,IACA,mBAAAC,KAAAA,EAAA,GACAE,EAAA,GAAA9E,MAAAA,KAAAgF,IAAAN,EAAApE,EAAAE,GAAA,EAAAmE,EAAAC,EAAAC,GAAA,IAEA,GAAAvE,GAAA,GAAAE,GAAAsE,EAAAG,cAAAH,EAAAI,oBAAA,GAAA,EACAJ,EAAAK,YAAA,GAGAL,EAAAK,YAAAL,EAAAG,cAAAH,EAAAI,oBAAA,IAEAJ,EAgBA,QAAAzE,IAAA+E,EAAAvC,GACA,GAAA6B,GAAAA,OAAApE,EAAAA,OAAAE,EAAAA,OAAAmE,EAAAA,OAAAC,EAAAA,OACAS,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OACAC,EAAAA,OACAC,EAAA,4EACAC,EAAA,+DAEA,IAAA3G,EAAAoG,GACA,GAAA,GAAAA,EAAA7H,OACA6H,EAAA,GAAApF,UAEA,IAAAoF,EAAA7H,OAAA,GACAoI,EAAApJ,KAAA6I,IAAAM,EAAAnJ,KAAA6I,GACAA,EAAA,GAAApF,MAAAoF,IAEAC,EAAAD,EAAAlM,MAAA,MACAsM,EAAAH,EAAA,GAAAnM,MAAA,OACAwL,EAAAc,EAAA,GACAlF,EAAAsF,WAAAJ,EAAA,IACAhF,EAAAoF,WAAAJ,EAAA,IACAD,EAAAF,EAAA,IAAA,QACAC,EAAAC,EAAAtD,UAAA,EAAA,GAAA/I,MAAA,KACAyL,EAAAiB,WAAAN,EAAA,IACAV,EAAAgB,WAAAN,EAAA,IACA,OAAAjD,EAAAkD,EAAA,IAAA,OAAAlD,EAAAkD,EAAA,KAAAZ,GAAA,IACAS,EAAAX,GAAAC,EAAApE,EAAA,EAAAE,EAAAmE,EAAAC,QAGA,IAAA,IAAAQ,EAAA7H,OACAkI,EAAAL,EAAAjM,QAAA,MAAA,IACAiM,EAAAX,GAAAgB,EAAAlF,OAAA,EAAA,GAAAkF,EAAAlF,OAAA,EAAA,GAAA,EAAAqC,EAAA6C,EAAAlF,OAAA,EAAA,IAAAqC,EAAA6C,EAAAlF,OAAA,EAAA,IAAAqC,EAAA6C,EAAAlF,OAAA,GAAA,IAAAqC,EAAA6C,EAAAlF,OAAA,GAAA,SAEA,IAAA6E,EAAA7H,OAAA,EACAkI,EAAAL,EAAAjM,QAAA,MAAA,IACAiM,EAAAX,GAAAgB,EAAAlF,OAAA,EAAA,GAAAkF,EAAAlF,OAAA,EAAA,GAAA,EAAAqC,EAAA6C,EAAAlF,OAAA,EAAA,SAEA,IAAA6E,EAAA7H,OAAA,EACAkI,EAAAL,EAAAjM,QAAA,MAAA,IACAiM,EAAAX,GAAAgB,EAAAlF,OAAA,EAAA,GAAAkF,EAAAlF,OAAA,EAAA,GAAA,EAAA,OAEA,CAAA,GAAA6E,EAAA7H,OAAA,EAEA,MADAkI,GAAAL,EAAAjM,QAAA,MAAA,IACAsL,GAAAgB,EAAAlF,OAAA,EAAA,GAAAkF,EAAAlF,OAAA,EAAA,GAAA,EAAA,EAGA6E,GAAA,GAAApF,MAGA,MAAA,mBAAA6C,IAAA,mBAAAuC,GACAA,GAGA,OAAAvC,KACAuC,EAAA,SAAAS,EAAA1E,GACA,GAAAuD,GAAAA,OAAApE,EAAAA,OAAAE,EAAAA,OAAAsF,EAAAA,OACAC,EAAA,KAsBA,OApBA,mBAAA5E,GAAA,EACA0E,EAAAG,QAAAH,EAAAI,UAAA9E,EAAA,EAAA4E,GAEA,mBAAA5E,GAAA,GACAuD,EAAAmB,EAAAK,cACA5F,EAAAuF,EAAApF,WACAD,EAAAqF,EAAAnF,UACAgE,GAAAyB,SAAAhF,EAAA,EAAA,IACAb,GAAAa,EAAA,EAAA,GACA2E,EAAAM,GAAA1B,EAAApE,GACAwF,EAAAtF,IAAAA,EAAAsF,GACAD,EAAA,GAAA7F,MAAA0E,EAAApE,EAAAE,EAAA,KAEA,mBAAAW,GAAA,EACA0E,EAAAG,QAAAH,EAAAI,UAAA,IAAA9E,EAAA,EAAA4E,GAEA,mBAAA5E,GAAA,GACA0E,EAAAG,QAAAH,EAAAI,UAAA,IAAA9E,EAAA,EAAA,GAAA,IAGA0E,GACA,GAAA7F,MAAAoF,GAAAvC,EAAA,MAEA,OAAAA,KACAuC,EAAA,SAAAS,EAAA1E,GACA,GAAAuD,GAAAA,OAAApE,EAAAA,OAAAE,EAAAA,OACA6F,GACAC,gBAAA,SAAAjG,GAIA,MAHAqE,GAAArE,EAAA6F,cACA5F,EAAAD,EAAAI,WACAD,EAAA,EACA,GAAAR,MAAA0E,EAAApE,EAAAE,EAAA,KAEA+F,eAAA,SAAAlG,GAIA,MAHAqE,GAAArE,EAAA6F,cACA5F,EAAAD,EAAAI,WACAD,EAAA4F,GAAA1B,EAAApE,GACA,GAAAN,MAAA0E,EAAApE,EAAAE,EAAA,KAGA,OAAAW,KAAAkF,GACAA,EAAAlF,GAAA0E,GAEAA,GAEA,GAAA7F,MAAAoF,GAAAvC,EAAA,MAEA,UAAAA,GACA,WAEA,GAAA2D,GAAA3D,EAAA,UAAA4D,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OACAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,OAAAC,EAAAA,MAuDA,OArDApB,GAAArB,EAAA0C,iBACApB,EAAAqB,GAAA3C,EAAA3E,WAAA,EAAA,GACAkG,EAAAoB,GAAA3C,EAAA1E,UAAA,GACAkG,EAAAmB,GAAA3C,EAAA4C,WAAA,GACAnB,EAAAkB,GAAA3C,EAAA6C,aAAA,GACAnB,EAAAiB,GAAA3C,EAAA8C,aAAA,GACAnB,EAAA3B,EAAA+C,SAEAnB,EAAA,qBACAA,EAAA9K,KAAAsK,GACAS,EAAAnP,OAAAsQ,GACAlB,EAAA,kBACAA,EAAAhL,KAAAsK,GACAW,EAAArP,OAAAsQ,GACAhB,EAAA,mBACAA,EAAAlL,KAAAsK,GACAa,EAAAvP,OAAAsQ,GACAd,EAAA,mBACAA,EAAApL,KAAAsK,GACAe,EAAAzP,OAAAsQ,GACAZ,EAAA,kBACAA,EAAAtL,KAAAsK,GACAiB,EAAA3P,OAAAsQ,GACAV,EAAA,mBACAA,EAAAxL,KAAAsK,GACAmB,EAAA7P,OAAAsQ,GACAR,EAAA,mBACAA,EAAA1L,KAAAsK,GACAqB,EAAA/P,OAAAsQ,GAEA,SAAAnB,IACAT,EAAAA,EAAArN,QAAA8N,EAAA5E,EAAAoE,EAAAQ,EAAA1J,UAEA,OAAA4J,IACA,GAAAA,EAAA5J,SAAAmJ,EAAAtB,EAAA3E,WAAA,GACA+F,EAAAA,EAAArN,QAAAgO,EAAAT,IAEA,OAAAW,IACA,GAAAA,EAAA9J,SAAAoJ,EAAAvB,EAAA1E,WACA8F,EAAAA,EAAArN,QAAAkO,EAAAV,IAEA,OAAAY,IACAf,EAAAA,EAAArN,QAAAoO,EAAAX,IAEA,OAAAa,IACAjB,EAAAA,EAAArN,QAAAsO,EAAAZ,IAEA,OAAAc,IACAnB,EAAAA,EAAArN,QAAAwO,EAAAb,IAEA,MAAAe,IACArB,EAAAA,EAAArN,QAAA0O,EAAA1P,EAAAmD,UAAAyL,GAAAxL,QAEAiL,KAIApB,GAqBA,QAAAiD,IAAAjD,EAAAvC,GAGA,QAAAyF,GAAAzC,GACA,MAAA3C,MAAAG,MAAAwC,EAAAI,UAAAF,GAAAA,EAHA,GAAAwC,GAAAC,EAAAC,EAAApI,GAAA+E,GAAAW,EAAA,MAAA2C,EAAA,GAAA1I,KAMA,OAAA,mBAAA6C,GACA0F,EAAA3F,GAAA0F,EAAAG,GAAAH,EAAAI,IAAA3C,GAAA1C,OAAA,KAKAkF,EAAA3F,GAAA0F,EAAAG,GAAAH,EAAAI,IAAA3C,GAAA1C,OAAA,IACAR,EAAA,QACA6F,EAAArI,GAAAwC,EAAA6F,OACAH,EAAA3F,GAAA0F,EAAAG,GAAAH,EAAAI,IAAA3C,GAAA1C,OAAA,KAEAR,EAAA,WACA2F,EAAA,GAAAxI,MAAA0I,EAAAxC,cAAAuC,EAAAhI,WAAAgI,EAAA/H,WACA6H,EAAA3F,GAAA0F,EAAAE,GAAAF,EAAAI,IAAA3C,GAAA1C,OAAA,IACAkF,EAAA,IACAC,EAAA,GAAAxI,MAAA0I,EAAAxC,cAAA,EAAAuC,EAAAhI,WAAAgI,EAAA/H,WACA6H,EAAA3F,GAAA0F,EAAAE,GAAAF,EAAAI,IAAA3C,GAAA1C,OAAA,MAGAR,EAAA,MACA2F,EAAA,GAAAxI,MAAA0I,EAAAxC,cAAAuC,EAAAhI,WAAAgI,EAAA/H,WACA6H,EAAAC,EAAAtC,cAAAuC,EAAAvC,eAGAqC,GAeA,QAAAI,IAAAvD,GACA,GAAAwD,GAAAvI,GAAA+E,EACA,QACAyD,KAAAD,EAAA1C,cACA4C,MAAAF,EAAAnI,WAAA,EACAsI,MAAA5C,SAAAyC,EAAAlI,UAAA,EAAA,IAiBA,QAAA0F,IAAA4C,EAAAC,GACA,MAAA,IAAAA,GAAA,GAAAA,GAAA,GAAAA,GAAA,IAAAA,EACA,GAEA,GAAAA,EACAD,EAAA,GAAA,GAAAA,EAAA,KAAA,GAAAA,EAAA,KAAA,EAAA,GAAA,GAGA,GAqBA,QAAAjB,IAAAmB,EAAA3L,EAAA4L,EAAAC,GACA,GAAAhF,GAAA8E,EAAAG,SAAAD,GAAA,GACA,OAAAE,IAAAH,GAAA,IAAA5L,EAAA6G,EAAA7G,QAAA6G,EAcA,QAAAkF,IAAAlF,EAAA2E,GACA,MAAAA,GAAA,EAAA,GAAA,GAAAnF,OAAAmF,EAAA,GAAA1O,KAAA+J,GAuCA,QAAAmF,IAAAC,EAAA3G,GACA,GAAA2G,EACA,KAAA,WACA,GAAApJ,IAAA,CACA,IAAA,mBAAAyC,GACA2G,IAAAA,EAAAC,YAAAD,EAAAC,eAEA,IAAAzL,EAAA6E,GACAzC,EAAAyC,EAAA2G,OAEA,IAAA1L,EAAA+E,GACA,IAAA,GAAAnE,KAAAmE,GACA,GAAA,YAAAnE,GACA,GAAA8K,EAAAE,QAAAC,qBAAA9G,EAAAnE,GAAA,CACA0B,GAAA,CACA,YAGA,IAAA,UAAA1B,GAAA,eAAAA,EAAA,CACA,KAAA,aAAA8K,IAWA,CACApJ,GAAA,CACA,OAVA,IAAA,GAFAwJ,GAAAJ,EAAA/P,UAAAP,MAAAjB,GACA4R,GAAA,EACAC,EAAA,EAAAA,EAAAF,EAAArM,OAAAuM,IACA,GAAAF,EAAAE,IAAAjH,EAAAnE,GAAA,CACAmL,GAAA,CACA,OAGAzJ,EAAAyJ,MAOA,CACA,IAAAL,EAAAO,aAMA,CACA3J,GAAA,CACA,OAPA,GAAAoJ,EAAAO,aAAArL,IAAAmE,EAAAnE,GAAA,CACA0B,GAAA,CACA,QAUA,OAAAA,MACA,CACA,IAAAoJ,EAAAC,aAAAD,EAAAC,WAAAA,WAGA,CACAD,GAAA,CACA,OAJAA,EAAAA,EAAAC,WAQA,MAAAD,GAgBA,QAAAQ,IAAAzG,GACA,GAAA0G,GAAA,wBACAC,GAAA,GAAA3G,GAAA3H,MAAAqO,GACAE,EAAAD,EAAA,IAAA,IAGA,OAAAA,GAAA,GAAAC,EAgBA,QAAAC,IAAA7G,GACA,GAAA8G,EACA,IAAAvM,EAAAyF,GAAA,CACA8G,EAAA,EACA,KAAA,GAAA3L,KAAA6E,GACA8G,GAAA3L,EAAA,IAAA6E,EAAA7E,GAAA,GAEA,OAAA2L,GAEA,GAAArL,EAAAuE,GAAA,CACA8G,IACA,IAAAC,GAAA/G,EAAArK,MAAA,aAOA,OANAoR,GAAAC,QAAA,SAAArG,GACA,GAAA,MAAAA,EAAAA,EAAAsG,QAAA,CACA,GAAAC,GAAAvG,EAAAhL,MAAA,aACAmR,GAAAI,EAAA,IAAAA,EAAA,MAGAJ,GAYA,QAAAK,IAAAnL,GAEA,IAAAA,EAAA,GAAAA,GAAAlD,OAAAsO,KAWA,OAPApL,GAAAqL,cAAA,EACArL,EAAAwD,aAAA,EAGAxD,EAAAsL,iBAAAtL,EAAAsL,kBACAtL,EAAAuL,gBAAAvL,EAAAuL,kBAEA,EA+HA,QAAAC,IAAAC,EAAAC,EAAAC,GAwBA,QAAAC,GAAAC,GACA,GAAAC,GAAAC,EACAC,EAAAC,CAKA,OAHAF,GAAAE,EAAA/N,OACAgO,EAAAL,EACAhL,EAAA4K,EAAAxG,MAAA+G,EAAAF,GAIA,QAAAK,GAAAN,GAMA,MAJAK,GAAAL,EAEAO,EAAAC,WAAAC,EAAAZ,GAEAa,EAAAX,EAAAC,GAAAhL,EAGA,QAAA2L,GAAAX,GACA,GAAAY,GAAAZ,EAAAa,EACAC,EAAAd,EAAAK,EACArL,EAAA6K,EAAAe,CAEA,OAAAG,GAAAjJ,KAAAkJ,IAAAhM,EAAAiM,EAAAH,GAAA9L,EAGA,QAAAkM,GAAAlB,GACA,GAAAY,GAAAZ,EAAAa,EACAC,EAAAd,EAAAK,CAKA,OAAAhO,UAAAwO,GAAAD,GAAAf,GACAe,EAAA,GAAAG,GAAAD,GAAAG,EAGA,QAAAR,KACA,GAAAT,GAAApL,KAAAuM,KACA,OAAAD,GAAAlB,GACAoB,EAAApB,QAGAO,EAAAC,WAAAC,EAAAE,EAAAX,KAGA,QAAAoB,GAAApB,GAKA,MAJAO,GAAAlO,OAIAgP,GAAAnB,EACAH,EAAAC,IAEAE,EAAAE,EAAA/N,OACA2C,GAGA,QAAAsM,KACAjP,SAAAkO,GACAgB,aAAAhB,GAEAF,EAAA,EACAH,EAAAW,EAAAT,EAAAG,EAAAlO,OAGA,QAAAmP,KACA,MAAAnP,UAAAkO,EAAAvL,EAAAoM,EAAAxM,KAAAuM,OAGA,QAAAM,KAAA,IAAA,GACAzB,GAAApL,KAAAuM,MACAO,EAAAR,EAAAlB,GAFA2B,EAAAhT,UAAAwD,OAAA8N,EAAAzH,MAAAmJ,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAA3B,EAAA2B,GAAAjT,UAAAiT,EAQA,IAJA1B,EAAAD,EACAG,EAAAvU,KACAgV,EAAAb,EAEA0B,EAAA,CACA,GAAArP,SAAAkO,EACA,MAAAD,GAAAO,EAEA,IAAAE,EAGA,MADAR,GAAAC,WAAAC,EAAAZ,GACAE,EAAAc,GAMA,MAHAxO,UAAAkO,IACAA,EAAAC,WAAAC,EAAAZ,IAEA7K,EAnHA,GAAAkL,GAAAA,OACAE,EAAAA,OACAa,EAAAA,OACAjM,EAAAA,OACAuL,EAAAA,OACAM,EAAAA,OAEAR,EAAA,EACAK,GAAA,EACAK,GAAA,EACAM,GAAA,CAEA,IAAA,kBAAAzB,GACA,KAAA,IAAAiC,WAAA,sBA0GA,OAxGAhC,IAAAA,GAAA,EACAnN,EAAAoN,KACAY,IAAAZ,EAAAY,QACAK,EAAA,WAAAjB,GACAmB,EAAAF,EAAAjJ,KAAAgK,KAAAhC,EAAAmB,SAAA,EAAApB,GAAAoB,EACAI,EAAA,YAAAvB,KAAAA,EAAAuB,SAAAA,GAiGAI,EAAAH,OAAAA,EACAG,EAAAD,MAAAA,EACAC,EAWA,QAAAM,IAAAnC,EAAAC,EAAAC,GACA,GAAAY,IAAA,EACAW,GAAA,CAEA,IAAA,kBAAAzB,GACA,KAAA,IAAAiC,WAAA,sBAMA,OAJAnP,GAAAoN,KACAY,EAAA,WAAAZ,KAAAA,EAAAY,QAAAA,EACAW,EAAA,YAAAvB,KAAAA,EAAAuB,SAAAA,GAEA1B,GAAAC,EAAAC,GACAa,QAAAA,EACAO,QAAApB,EACAwB,SAAAA,IAiBA,QAAAW,IAAAvW,GACA,GAAAwW,GAAA/P,CACA,IAAA,WAAA,mBAAAzG,GAAA,YAAAH,QAAAG,IAAA,CACA,GAAAuB,EAAAgG,QAAAvH,GAAA,CACAyG,EAAAzG,EAAA0G,OACA8P,EAAA,GAAAzJ,OAAAtG,EACA,KAAA,GAAAD,GAAA,EAAAA,EAAAC,EAAAD,IACAgQ,EAAAhQ,GAAA+P,GAAAvW,EAAAwG,GAEA,OAAAgQ,GAEA,MAAAC,QAAAC,UAAA1W,GAGA,MAAAA,GAmBA,QAAA2W,IAAApJ,GACA,MAAA,mBAAAzE,GAAAjC,KAAA0G,GAAAA,EACAA,EACAA,EAAAjL,QAAA,eAAA,SAAAyC,GACA,OAAAA,GACA,IAAA,IACA,MAAA,MACA,KAAA,IACA,MAAA,MACA,KAAA,IACA,MAAA,OACA,KAAA,IACA,MAAA,QACA,SACA,MAAAA,MAZA,GA6BA,QAAA6R,IAAArJ,GACA,MAAA,mBAAAzE,GAAAjC,KAAA0G,GAAAA,EACAA,EACAA,EAAAjL,QAAA,mCAAA,SAAAyC,GACA,OAAAA,GACA,IAAA,OACA,MAAA,GACA,KAAA,OACA,MAAA,GACA,KAAA,QACA,MAAA,GACA,KAAA,SACA,MAAA,GACA,SACA,MAAAA,MAZA,GA6BA,QAAA8R,IAAAC,GACA,MAAA,IAAA,UAAAA,GACA1W,KAAA8H,MAAA4O,EACA1W,KAAAoS,SAAA,WACA,MAAApS,MAAA8H,OAMA9H,KAAA2W,OAAA,WAEA,IAAA,GADAvC,MACAhO,EAAA,EAAAC,EAAAvD,UAAAwD,OAAAF,EAAAC,EAAAD,IACAgO,EAAAA,EAAAwC,OAAA9T,UAAAsD,GAEA,OAAApG,MAAA8H,MAAA5F,QAAA,WAAA,SAAAyC,EAAAgH,GACA,MAAA,mBAAAyI,GAAAzI,GAAAyI,EAAAzI,GAAAhH,KAOA3E,KAAAsK,OAAA,WACA,MAAAiM,IAAAvW,KAAA8H,QAMA9H,KAAAiL,SAAA,WACA,MAAAuL,IAAAxW,KAAA8H,QAMA9H,KAAAkN,OAAA,WACA,MAAAA,GAAAlN,KAAA8H,QAMA9H,KAAAqN,OAAA,WACA,MAAAA,IAAArN,KAAA8H,QAOA9H,KAAAsC,KAAA,SAAAuU,GACA,MAAAvU,GAAAtC,KAAA8H,MAAA+O,IAOA7W,KAAAoL,MAAA,SAAAyL,GACA,MAAAzL,GAAApL,KAAA8H,MAAA+O,IAMA7W,KAAAsL,UAAA,WACA,MAAAA,GAAAtL,KAAA8H,QAMA9H,KAAA0L,UAAA,WACA,MAAAA,GAAA1L,KAAA8H,SAEA4O,GAaA,QAAAI,IAAAC,GA4FA,QAAAC,GAAAC,GACA,MAAA,gBAAAA,IAAAA,EAAA/R,QAAA,UAAA,IAAAyJ,WAAAsI,GAGA,QAAAC,GAAAD,GACA,MAAA,gBAAAA,IAAAA,EAAA/R,QAAA,SAGA,QAAAiS,GAAAF,GAKA,MAJAA,IAAA,IACAA,EAAA,IAAAA,EAAA,KAGAA,EAGA,QAAAG,GAAAH,GACA,MAAAhW,GAAA2G,KAAA+D,OAAAM,KAAAkJ,IAAA,IAAAlJ,KAAAgK,IAAAgB,EAAA,KAAA/K,MAAA,IAGA,QAAAmL,GAAAJ,GACA,MAAAnG,IAAA7E,KAAAC,MAAA+K,GAAA7E,SAAA,IAAA,GAGA,QAAAkF,GAAAL,EAAAhB,GACAe,EAAAC,KACAA,EAAA,OAGA,IAAAM,GAAAL,EAAAD,EASA,OARAA,GAAAhL,KAAAkJ,IAAAc,EAAAhK,KAAAgK,IAAA,EAAAtH,WAAAsI,KAGAM,IACAN,EAAA/H,SAAA+H,EAAAhB,EAAA,IAAA,KAIAhK,KAAAE,IAAA8K,EAAAhB,GAAA,KACA,EAIAgB,EAAAhB,EAAAtH,WAAAsH,GAGA,QAAAuB,GAAApB,EAAAqB,EAAAC,GACAtB,EAAAkB,EAAAlB,EAAA,KACAqB,EAAAH,EAAAG,EAAA,KACAC,EAAAJ,EAAAI,EAAA,IAEA,IACAC,GAAAxK,EADA8I,EAAAhK,KAAAgK,IAAAG,EAAAqB,EAAAC,GAAAvC,EAAAlJ,KAAAkJ,IAAAiB,EAAAqB,EAAAC,GACArR,GAAA4P,EAAAd,GAAA,CAEA,IAAAc,GAAAd,EACAwC,EAAAxK,EAAA,MAEA,CACA,GAAAgB,GAAA8H,EAAAd,CAEA,QADAhI,EAAA9G,EAAA,GAAA8H,GAAA,EAAA8H,EAAAd,GAAAhH,GAAA8H,EAAAd,GACAc,GACA,IAAAG,GACAuB,GAAAF,EAAAC,GAAAvJ,GAAAsJ,EAAAC,EAAA,EAAA,EACA,MACA,KAAAD,GACAE,GAAAD,EAAAtB,GAAAjI,EAAA,CACA,MACA,KAAAuJ,GACAC,GAAAvB,EAAAqB,GAAAtJ,EAAA,EAIAwJ,GAAA,EAGA,OAAAA,EAAAA,EAAAxK,EAAAA,EAAA9G,EAAAA,GAGA,QAAAuR,GAAAD,EAAAxK,EAAA9G,GAOA,QAAAwR,GAAA7K,EAAA8K,EAAAC,GAGA,MAFAA,GAAA,IAAAA,GAAA,GACAA,EAAA,IAAAA,GAAA,GACAA,EAAA,EAAA,EAAA/K,EAAA,GAAA8K,EAAA9K,GAAA+K,EACAA,EAAA,GAAAD,EACAC,EAAA,EAAA,EAAA/K,GAAA8K,EAAA9K,IAAA,EAAA,EAAA+K,GAAA,EACA/K,EAZA,GAAAoJ,GAAAA,OAAAqB,EAAAA,OAAAC,EAAAA,MAeA,IAbAC,EAAAL,EAAAK,EAAA,KACAxK,EAAAmK,EAAAnK,EAAA,KACA9G,EAAAiR,EAAAjR,EAAA,KAWA,IAAA8G,EACAiJ,EAAAqB,EAAAC,EAAArR,MAEA,CACA,GAAAyR,GAAAzR,EAAA,GAAAA,GAAA,EAAA8G,GAAA9G,EAAA8G,EAAA9G,EAAA8G,EACAH,EAAA,EAAA3G,EAAAyR,CACA1B,GAAAyB,EAAA7K,EAAA8K,EAAAH,EAAA,EAAA,GACAF,EAAAI,EAAA7K,EAAA8K,EAAAH,GACAD,EAAAG,EAAA7K,EAAA8K,EAAAH,EAAA,EAAA,GAGA,OAAAvB,EAAA,IAAAA,EAAAqB,EAAA,IAAAA,EAAAC,EAAA,IAAAA,GAnMA,GAAAM,GAAA,WAGA,GAAAC,GAAA,gBAGAC,EAAA,uBAGAC,EAAA,MAAAD,EAAA,QAAAD,EAAA,IAKAG,EAAA,cAAAD,EAAA,aAAAA,EAAA,aAAAA,EAAA,YACAE,EAAA,cAAAF,EAAA,aAAAA,EAAA,aAAAA,EAAA,aAAAA,EAAA,WAEA,QACAA,SAAA,GAAAtX,QAAAsX,GACAG,IAAA,GAAAzX,QAAA,MAAAuX,GACAG,KAAA,GAAA1X,QAAA,OAAAwX,GACAG,IAAA,GAAA3X,QAAA,MAAAuX,GACAK,KAAA,GAAA5X,QAAA,OAAAwX,GACAK,IAAA,GAAA7X,QAAA,MAAAuX,GACAO,KAAA,GAAA9X,QAAA,OAAAwX,GACAO,KAAA,uDACAC,KAAA,uDACAC,KAAA,uEACAC,KAAA,2EAIAC,EAAA,SAAAC,GACA,GAAAtU,GAAAA,MACA,QAAAA,EAAAqT,EAAAM,IAAArT,KAAAgU,KACA7C,EAAAzR,EAAA,GAAA8S,EAAA9S,EAAA,GAAA+S,EAAA/S,EAAA,KAEAA,EAAAqT,EAAAO,KAAAtT,KAAAgU,KACA7C,EAAAzR,EAAA,GAAA8S,EAAA9S,EAAA,GAAA+S,EAAA/S,EAAA,GAAAkO,EAAAlO,EAAA,KAEAA,EAAAqT,EAAAQ,IAAAvT,KAAAgU,KACAtB,EAAAhT,EAAA,GAAAwI,EAAAxI,EAAA,GAAA0B,EAAA1B,EAAA,KAEAA,EAAAqT,EAAAS,KAAAxT,KAAAgU,KACAtB,EAAAhT,EAAA,GAAAwI,EAAAxI,EAAA,GAAA0B,EAAA1B,EAAA,GAAAkO,EAAAlO,EAAA,KAEAA,EAAAqT,EAAAU,IAAAzT,KAAAgU,KACAtB,EAAAhT,EAAA,GAAAwI,EAAAxI,EAAA,GAAAsI,EAAAtI,EAAA,KAEAA,EAAAqT,EAAAW,KAAA1T,KAAAgU,KACAtB,EAAAhT,EAAA,GAAAwI,EAAAxI,EAAA,GAAAsI,EAAAtI,EAAA,GAAAkO,EAAAlO,EAAA,KAEAA,EAAAqT,EAAAe,KAAA9T,KAAAgU,KAEA7C,EAAAlH,SAAAvK,EAAA,GAAA,IACA8S,EAAAvI,SAAAvK,EAAA,GAAA,IACA+S,EAAAxI,SAAAvK,EAAA,GAAA,IACAkO,EAAA3D,SAAAvK,EAAA,GAAA,IAAA,IACAgS,OAAA,SAGAhS,EAAAqT,EAAAa,KAAA5T,KAAAgU,KAEA7C,EAAAlH,SAAAvK,EAAA,GAAA,IACA8S,EAAAvI,SAAAvK,EAAA,GAAA,IACA+S,EAAAxI,SAAAvK,EAAA,GAAA,IACAgS,OAAA,QAGAhS,EAAAqT,EAAAc,KAAA7T,KAAAgU,KAEA7C,EAAAlH,SAAAvK,EAAA,GAAA,GAAAA,EAAA,GAAA,IACA8S,EAAAvI,SAAAvK,EAAA,GAAA,GAAAA,EAAA,GAAA,IACA+S,EAAAxI,SAAAvK,EAAA,GAAA,GAAAA,EAAA,GAAA,IACAkO,EAAA3D,SAAAvK,EAAA,GAAA,GAAAA,EAAA,GAAA,IACAgS,OAAA,WAGAhS,EAAAqT,EAAAY,KAAA3T,KAAAgU,MAEA7C,EAAAlH,SAAAvK,EAAA,GAAA,GAAAA,EAAA,GAAA,IACA8S,EAAAvI,SAAAvK,EAAA,GAAA,GAAAA,EAAA,GAAA,IACA+S,EAAAxI,SAAAvK,EAAA,GAAA,GAAAA,EAAA,GAAA,IACAgS,OAAA,OAmHA,OAAA,IAAA,UAAAsC,GACAjZ,KAAAkZ,eAAAD,EACAA,EAAAD,EAAAC,GACAjZ,KAAAoW,EAAA6C,EAAA7C,EACApW,KAAAyX,EAAAwB,EAAAxB,EACAzX,KAAA0X,EAAAuB,EAAAvB,EACA1X,KAAA6S,EAAAoG,EAAApG,GAAA,EACA7S,KAAAmZ,QAAAF,EAAAtC,OACA3W,KAAAoZ,KAAA/B,EAAArX,KAAAoW,GAAAiB,EAAArX,KAAAyX,GAAAJ,EAAArX,KAAA0X,GAEA1X,KAAAqZ,YAAA,WACA,MAAArZ,MAAAoZ,MAGApZ,KAAAsZ,QAAA,SAAAC,GACAA,EAAA,IAAAA,EAAA,EAAAA,GAAA,EACA,IAAAf,GAAAhB,EAAAxX,KAAAoW,EAAApW,KAAAyX,EAAAzX,KAAA0X,GAAAY,IAQA,OANAE,GAAAnS,GAAAkT,EAAA,IACAf,EAAAnS,EAAA4F,KAAAkJ,IAAA,EAAAlJ,KAAAgK,IAAA,EAAAuC,EAAAnS,IACAmS,EAAAb,EAAA,IAAAa,EAAAb,EAEAW,EAAAV,EAAAY,EAAAb,EAAAR,EAAAqB,EAAArL,GAAAgK,EAAAqB,EAAAnS,IAEAyQ,GAAA,QAAAM,EAAAkB,EAAAlC,GAAA,KAAAgB,EAAAkB,EAAAb,GAAA,KAAAL,EAAAkB,EAAAZ,GAAA,KAAA1X,KAAA6S,EAAA,MAGA7S,KAAAwZ,OAAA,SAAAD,GACAA,EAAA,IAAAA,EAAA,EAAAA,GAAA,EACA,IAAAf,GAAAhB,EAAAxX,KAAAoW,EAAApW,KAAAyX,EAAAzX,KAAA0X,GAAAY,IAQA,OANAE,GAAAnS,GAAAkT,EAAA,IACAf,EAAAnS,EAAA4F,KAAAkJ,IAAA,EAAAlJ,KAAAgK,IAAA,EAAAuC,EAAAnS,IACAmS,EAAAb,EAAA,IAAAa,EAAAb,EAEAW,EAAAV,EAAAY,EAAAb,EAAAR,EAAAqB,EAAArL,GAAAgK,EAAAqB,EAAAnS,IAEAyQ,GAAA,QAAAM,EAAAkB,EAAAlC,GAAA,KAAAgB,EAAAkB,EAAAb,GAAA,KAAAL,EAAAkB,EAAAZ,GAAA,KAAA1X,KAAA6S,EAAA,MAGA7S,KAAAyZ,cAAA,WACA,OAAA,IAAAzZ,KAAAoW,EAAA,IAAApW,KAAAyX,EAAA,IAAAzX,KAAA0X,GAAA,KAGA1X,KAAA0Z,OAAA,WACA,MAAA1Z,MAAAyZ,gBAAA,KAGAzZ,KAAA2Z,QAAA,WACA,OAAA3Z,KAAA0Z,UAGA1Z,KAAA4Z,OAAA,WACA,GAAApB,GAAAhB,EAAAxX,KAAAoW,EAAApW,KAAAyX,EAAAzX,KAAA0X,EAGA,OAFAc,GAAAnS,EAAA4F,KAAAkJ,IAAA,EAAAlJ,KAAAgK,IAAA,EAAAuC,EAAAnS,IACAmS,EAAAb,EAAA,IAAAa,EAAAb,GAEAA,EAAAa,EAAAb,EACAxK,EAAAqL,EAAArL,EACA9G,EAAAmS,EAAAnS,KAIA0Q,GAjzEA,GAAArO,IAAAkB,OAAA9J,UAAAsS,SAimDAyH,GAAA,WACA,GAAAzK,IACA0K,WACAC,UAAA,SAAAC,EAAAC,EAAAC,KAGAC,IAAA,SAAAH,EAAAC,EAAAC,GACAD,EAAAG,UAAA,YAAAF,EAAA,IACAD,EAAAI,WACAJ,EAAAK,QAAA,YAAAJ,EAAA,KAEAK,MAAA,SAAAP,EAAAC,EAAAC,GACAD,EAAAG,UAAA,YAAA,GACAH,EAAAI,YAEAG,IAAA,SAAAR,EAAAC,EAAAC,GACAD,EAAAG,UAAA,YAAAH,EAAAQ,KAAAnU,QACA2T,EAAAI,aAGAJ,OACAF,UAAA,SAAAC,EAAAC,EAAAC,GACAD,EAAAS,mBAAAV,IAEAG,IAAA,SAAAH,EAAAC,EAAAC,GACArT,EAAAqT,EAAA,KACAD,EAAAU,SAAAT,EAAA,GAAAU,KAAAV,EAAA,GAAAA,QACAD,EAAAY,OAAAX,EAAA,GAAAU,KAAAV,EAAA,GAAAA,UAGAD,EAAAU,SAAAX,EAAAc,WAAAZ,EAAA,IACAD,EAAAY,OAAAb,EAAAc,WAAAZ,EAAA,MAGAK,MAAA,SAAAP,EAAAC,EAAAC,GACAD,EAAAS,mBAAAV,GACAC,EAAAI,UAAA,IAEAG,IAAA,SAAAR,EAAAC,EAAAC,GACAD,EAAAS,mBAAAV,GACAC,EAAAI,UAAA,KAIA,OAAA,UAAAL,EAAAE,GACA,GAAAD,GAAAc,EAAAC,CAKA,IAHAhB,YAAA3D,UACA2D,EAAAA,EAAAiB,IAAA,IAEAjB,EAAA,CAeA,GAZA9Z,EAAAgb,KAAAC,iBACAlB,EAAA9Z,SAAA+a,KAAAC,kBACAlB,EAAAmB,kBAAApB,GACAe,EAAA,aAEA3V,OAAAiW,eACAL,EAAA5V,OAAAiW,eACApB,EAAA9Z,SAAAmb,cACAP,EAAA,SAIA,mBAAAb,GACA9K,EAAA2L,GAAAhB,UAAAtT,KAAAzG,KAAAga,EAAAC,EAAAC,OAEA,IAAA/S,EAAA+S,GACA9K,EAAA2L,GAAAZ,IAAA1T,KAAAzG,KAAAga,EAAAC,EAAAC,OAGA,KAAA,GAAA/T,KAAAiJ,GAAA2L,GACA,GAAAb,GAAA/T,EAAA,CACAiJ,EAAA2L,GAAA5U,GAAAM,KAAAzG,KAAAga,EAAAC,EAAAC,EACA,OAMAha,EAAAgb,KAAAC,iBACAlB,EAAAsB,SACAvB,EAAAwB,SAEApW,OAAAiW,eACArB,EAAAwB,QACAR,EAAAS,kBACAT,EAAAU,SAAAzB,QA2nBA,QACA/O,MAAAA,EACAnF,KAAAA,EACAW,IAAAA,EACA9E,OAAAA,EACAyF,OAAAA,EACAE,YAAAA,EACAC,OAAAA,EACAR,IAAAA,EACAI,IAAAA,EACAM,OAAAA,EACAQ,UAAAA,EACAwB,MAAAA,EACAtH,KAAAA,EACA+T,SAAAA,GAEA7T,KAAAA,EACA8I,MAAAA,EACA7C,QAAAA,EACAI,SAAAA,EACAC,UAAAA,EACA/B,SAAAA,EACAM,QAAAA,EACAJ,WAAAA,EACAgB,SAAAA,EACAC,SAAAA,EACAa,WAAAA,EACAZ,YAAAA,EACA/B,UAAAA,EACA4D,UAAAA,EACAa,UAAAA,EACAW,UAAAA,EACAI,UAAAA,EACAC,OAAAA,EACAxI,QAAAA,EACA0J,MAAAA,EACAlL,MAAAA,EACAuB,MAAAA,GACAkG,KAAAA,GACAgI,KAAAA,GACAjC,YAAAA,GACAuC,aAAAA,GACAZ,SAAAA,GACAuB,MAAAA,GACAC,eAAAA,GACAS,UAAAA,GACAI,IAAAA,GACArK,OAAAA,EACAI,aAAAA,EACAuK,UAAAA,GACAoG,YAAAA,GACA/F,SAAAA,GACAoC,SAAAA,GACAK,WAAAA,GACAC,aAAAA,GAEAC,OAAAA,GACAK,MAAAA,OAIA,YAAA,mBAAA6E,QAAA,YAAAlc,QAAAkc,UAAA,WAAAlc,QAAAkc,OAAAC,SACAD,OAAAC,QAAA3a,EAEAlB,EAAAkB,IAAA,WACA,MAAAA,QAIAwF,KAAA,mBAAArB,QAAAA,OAAAoB,QC7oFAvF,IAAA4a,OCAA5a,IAAAC,KAAAyB,SAAA,WACAmZ,IAAA,wBAGA7a,IAAAC,KAAAyB,SAAA,WACAoZ,IAAA,8BACAC,IAAA,uBACAF,IAAA,4BAGA7a,IAAAC,KAAAyB,SAAA,oBACAsZ,IAAA,qCACAC,IAAA,+BAGAjb,IAAAC,KAAAyB,SAAA,aACAoZ,IAAA,+BAGA9a,IAAAC,KAAAyB,SAAA,cACAoZ,IAAA,8BACAC,IAAA,uBACAF,IAAA,wBAGA7a,IAAAC,KAAAyB,SAAA,SACAmZ,IAAA,0BAGA7a,IAAAC,KAAAyB,SAAA,WACAoZ,IAAA,8BACAC,IAAA,uBACAF,IAAA,uBAGA7a,IAAAC,KAAAyB,SAAA,aACAoZ,IAAA,8BACAC,IAAA,uBACAF,IAAA,uBCrCA,WAGA,GAAA/b,GAAAC,KACAmc,EAAA,YA0PA,IAvPAvS,OAAAD,OACAC,OAAAD,KAAA,WACA,GAAAyS,GAAAxS,OAAA9J,UAAAuc,eACAC,IAAAlK,SAAA,MAAAmK,qBAAA,YACAC,GACA,WACA,iBACA,UACA,iBACA,gBACA,uBACA,eAEAC,EAAAD,EAAAlW,MAEA,OAAA,UAAA1G,GACA,GAAA,YAAA,mBAAAA,GAAA,YAAAH,QAAAG,MAAA,kBAAAA,IAAA,OAAAA,GAAA,KAAA,IAAAoW,WAAA,WACA,IAAA0G,GAAAtW,EAAAgQ,IACA,KAAAsG,IAAA9c,GAAAwc,EAAA3V,KAAA7G,EAAA8c,IAAAtG,EAAAtP,KAAA4V,EACA,IAAAJ,EACA,IAAAlW,EAAA,EAAAA,EAAAqW,EAAArW,IAAAgW,EAAA3V,KAAA7G,EAAA4c,EAAApW,KAAAgQ,EAAAtP,KAAA0V,EAAApW,GAEA,OAAAgQ,QAOAzJ,MAAA7M,UAAAwT,UACA3G,MAAA7M,UAAAwT,QAAA,SAAAqJ,GACA,GAAA,SAAA3c,MAAA,OAAAA,KACA,KAAAgW,YAEA,IAAA+B,GAAAnO,OAAA5J,MACA4c,EAAA7E,EAAAzR,SAAA,CACA,IAAA,kBAAAqW,GACA,KAAA3G,YAEA,IAAA5P,GAAAyW,EAAA/Z,UAAA,EACA,KAAAsD,EAAA,EAAAA,EAAAwW,EAAAxW,IACAA,IAAA2R,IACA4E,EAAAlW,KAAAoW,EAAA9E,EAAA3R,GAAAA,EAAA2R,KAQA1P,SAAAvI,UAAAgd,OACAzU,SAAAvI,UAAAgd,KAAA,SAAAC,GAYA,QAAAC,MAXA,GAAA,kBAAAhd,MACA,KAAAgW,WAAA,WAEA,IAAApJ,MAAAA,MACAwH,EAAAxH,EAAAnG,KAAA3D,UAAA,GACAma,EAAAjd,KACAkd,EAAA,WACA,MAAAD,GAAA1P,MAAAvN,eAAAgd,GAAAhd,KAAA+c,EACA3I,EAAAwC,OAAAhK,EAAAnG,KAAA3D,aAOA,OAFAka,GAAAld,UAAAmd,EAAAnd,UACAod,EAAApd,UAAA,GAAAkd,GACAE,IAYA,WACA,IAAA/c,SAAAgd,mBAAAhd,SAAAid,eAGAjd,SAAAkd,iBAAA,CACA,GAAAC,GAAAnd,SAAAkd,mBACA9B,EAAA,SAAAgC,EAAAC,GACA,GAGApX,GAFAmF,EAAApL,SAAAoL,IACAlF,EAAAkF,EAAAjF,OAEAmX,IAGA,KADAH,EAAAI,QAAAH,EAAA,WACAnX,EAAA,EAAAA,EAAAC,KACA,QAAAkF,EAAAnF,GAAAuX,aAAAC,MACAH,EAAA3W,KAAAyE,EAAAnF,IACAqX,EAAAnX,OAAAkX,IAHApX,GAAA,GASA,MADAkX,GAAAO,WAAA,GACAJ,EAGAtd,UAAAgd,iBAAA,SAAAI,GACA,MAAAhC,GAAAgC,EAAAO,EAAAA,IAEA3d,SAAAid,cAAA,SAAAG,GACA,MAAAhC,GAAAgC,EAAA,GAAA,IAAA,UAIAQ,OAAAje,UAAAyT,OACA,WACAwK,OAAAje,UAAAyT,KAAA,WACA,MAAAvT,MAAAkC,QAAAia,EAAA,QAKA/W,OAAA4Y,OACA5Y,OAAA4Y,MACAC,MAAA,SAAAC,GAAA,MAAA,IAAA7V,UAAA,GAAA,UAAA6V,MACAC,UAAA,WACA,GAAAC,GAAAhI,EAAA,MACA,OAAAgI,GAAA,SAAAC,GACA,GAAAlV,GAAA/C,EAAA2G,CACA,QAAA5D,EAAA,mBAAAkV,GAAA,YAAA5e,QAAA4e,IACA,IAAA,SACA,MAAA,IAAAA,EAAAnc,QAAAkU,EAAA,OAAA,GACA,KAAA,SACA,IAAA,UACA,MAAAiI,GAAAjM,UACA,KAAA,YACA,MAAA,WACA,KAAA,WACA,MAAA,IACA,KAAA,SACA,IAAAiM,EAAA,MAAA,MAEA,IADAlV,EAAA,GACAkV,EAAAC,OAAA,CACA,IAAAlY,EAAA,EAAA2G,EAAAsR,EAAA/X,OAAAF,EAAA2G,EAAA3G,IAAA+C,GAAA,IAAAiV,EAAAC,EAAAjY,GACA,OAAA,IAAA+C,EAAAG,OAAA,GAAA,IAGA,IAAAlD,IAAAiY,GAAAA,EAAAhC,eAAAjW,IAAAI,SAAA6X,EAAAjY,IAAA,kBAAAiY,GAAAjY,KAAA+C,GAAA,KAAA/C,EAAA,KAAAgY,EAAAC,EAAAjY,IACA,OAAA,IAAA+C,EAAAG,OAAA,GAAA,WASA,WACA,IAAAnJ,SAAAoe,cAAApe,SAAAoe,cAAA,EAAA,OAAA,CACA,IAAAC,GAAA7R,MAAA7M,UAAAwe,MACA3R,OAAA7M,UAAAwe,OAAA,WACA,GAAAlK,GAAAzH,MAAA7M,UAAA8M,MAAAnG,KAAA3D,UAEA,OADA,mBAAAsR,GAAA,KAAAA,EAAA,GAAApU,KAAAsG,OAAA8N,EAAA,IACAoK,EAAAjR,MAAAvN,KAAAoU,OAaA,WAEA,GAAAqK,GAAA9R,MAAA7M,UAAA8M,KAEA,KAEA6R,EAAAhY,KAAAtG,SAAAE,iBACA,MAAAiI,GAKAqE,MAAA7M,UAAA8M,MAAA,SAAA8R,EAAAlE,GAKA,GAHAA,EAAA,mBAAAA,GAAAA,EAAAxa,KAAAsG,OAGA,mBAAAsD,OAAA9J,UAAAsS,SAAA3L,KAAAzG,MACA,MAAAye,GAAAhY,KAAAzG,KAAA0e,EAAAlE,EAIA,IAAApU,GACAuY,EADAC,KACAhC,EAAA5c,KAAAsG,OAGAiU,EAAAmE,GAAA,CACAnE,GAAAA,GAAA,EAAAA,EAAAtO,KAAAgK,IAAA,EAAA2G,EAAArC,EAGA,IAAAsE,GAAA,gBAAArE,GAAAvO,KAAAkJ,IAAAqF,EAAAoC,GAAAA,CAQA,IAPApC,EAAA,IACAqE,EAAAjC,EAAApC,GAIAmE,EAAAE,EAAAtE,EAEAoE,EAAA,EAEA,GADAC,EAAA,GAAAjS,OAAAgS,GACA3e,KAAA+K,OACA,IAAA3E,EAAA,EAAAA,EAAAuY,EAAAvY,IACAwY,EAAAxY,GAAApG,KAAA+K,OAAAwP,EAAAnU,OAGA,KAAAA,EAAA,EAAAA,EAAAuY,EAAAvY,IACAwY,EAAAxY,GAAApG,KAAAua,EAAAnU,EAKA,OAAAwY,QAOA,SAAAE,GAQA,IAPA,GAAApC,GAAAqC,EACAC,KACAC,EAAA,aACAC,EAAA,SAAAjd,MAAA,KACAkd,EAAA,wMAEAld,MAAA,KACAya,EAAAwC,EAAAE,OAAAN,EAAApC,GAAAoC,EAAApC,IAAAsC,CACA,MAAAD,EAAAI,EAAAC,OAAAN,EAAAC,GAAAD,EAAAC,IAAAE,GACA7Z,OAAAnC,eAIAmC,OAAAia,kBAAAja,OAAAka,eAAAla,OAAAma,aAAAna,OAAAoa,cAAApa,OAAAqa,YAAA,CACA,GAAA1f,GAAAI,SAAAuf,qBAAA,QAAA,EACA3f,GAAAyC,WAAA,iBAIA4C,OAAAqa,aAAAra,OAAAqa,WAAA,WAIA,GAAAE,GAAAva,OAAAua,YAAAva,OAAAwa,KAGA,KAAAD,EAAA,CACA,GAAArC,GAAAnd,SAAA0f,cAAA,SACAC,EAAA3f,SAAAuf,qBAAA,UAAA,GACAxe,EAAA,IAEAoc,GAAAyC,KAAA,WACAzC,EAAA0C,GAAA,oBAEAF,EAAAtN,WAAAyN,aAAA3C,EAAAwC,GAGA5e,EAAA,oBAAAkE,SAAAA,OAAA8a,iBAAA5C,EAAA,OAAAA,EAAAK,aAEAgC,GACAQ,YAAA,SAAAP,GACA,GAAAnF,GAAA,UAAAmF,EAAA,wCAUA,OAPAtC,GAAA8C,WACA9C,EAAA8C,WAAAC,QAAA5F,EAEA6C,EAAAgD,YAAA7F,EAIA,QAAAvZ,EAAAqf,QAKA,MAAA,UAAAX,GACA,OACAY,QAAAb,EAAAQ,YAAAP,GAAA,OACAA,MAAAA,GAAA,YAMA,WAEA,GAAAxa,OAAAqa,YAAAra,OAAAqa,WAAA,OAAAgB,YACA,OAAA,CAGA,IAAAC,GAAAtb,OAAAqa,WACAkB,EAAAD,EAAA,YAAAF,QACAI,GAAA,EACAC,EAAA,EACAC,KACAC,EAAA,SAAAC,GAEAtL,aAAAmL,GAEAA,EAAAlM,WAAA,WACA,IAAA,GAAAvO,GAAA,EAAA6a,EAAAH,EAAAxa,OAAAF,EAAA6a,EAAA7a,IAAA,CACA,GAAA8a,GAAAJ,EAAA1a,GAAA8a,IACAC,EAAAL,EAAA1a,GAAA+a,cACAX,EAAAE,EAAAQ,EAAAtB,OAAAY,OAIA,IAAAA,IAAAU,EAAAV,QAAA,CACAU,EAAAV,QAAAA,CAEA,KAAA,GAAAzT,GAAA,EAAAqU,EAAAD,EAAA7a,OAAAyG,EAAAqU,EAAArU,IACAoU,EAAApU,GAAAtG,KAAArB,OAAA8b,MAIA,IAGA9b,QAAAqa,WAAA,SAAAG,GACA,GAAAsB,GAAAR,EAAAd,GACAuB,KACAE,EAAA,CAkCA,OAhCAH,GAAAT,YAAA,SAAAa,GAEAX,IAMAC,IACAA,GAAA,EACAxb,OAAAmc,iBAAA,SAAAR,GAAA,IAIA,IAAAM,IACAA,EAAAP,EAAAha,MACAoa,IAAAA,EACAC,UAAAA,KAIAA,EAAAra,KAAAwa,KAGAJ,EAAAM,eAAA,SAAAF,GACA,IAAA,GAAAlb,GAAA,EAAA6a,EAAAE,EAAA7a,OAAAF,EAAA6a,EAAA7a,IACA+a,EAAA/a,KAAAkb,GACAH,EAAA7C,OAAAlY,EAAA,IAKA8a,KAKA/gB,UAAAuf,qBAAA,QAAA,GACAvf,SAAAuf,qBAAA,QAAA,IAQAjZ,KAAArB,QC1XAnE,IAAAwgB,GAAA,WAEA,QAAAC,KACA1hB,KAAA2hB,UACA3hB,KAAAgF,KAAA,OAgBAhF,KAAA4hB,UAAA,SAAAC,EAAAC,GAKA,MAJAzL,QAAAC,QAAA,EAAAtW,KAAA2hB,OAAAE,GACA,mBAAAC,IAAAA,KAAA,GACA9hB,KAAA+hB,OAEA/hB,MAEAA,KAAA+hB,KAAA,WACA9e,QAAA+e,IAAAhiB,KAAA2hB,SAGA3hB,KAAAiiB,iBAAA,SAAAC,GACAvN,WAAA,WACA0B,OAAAjR,QAAA+c,OAAA,WACAniB,KAAAoiB,oBAAA1M,aAAA1V,KAAAoiB,oBACApiB,KAAAoiB,mBAAAzN,WAAA,WACAuN,EAAAzb,KAAAzG,OACA8c,KAAA9c,MAAA,KACA8c,KAAA9c,QACA8c,KAAA9c,MAAA,MAGAA,KAAAyT,UAAA,SAAAnL,GAIA,MAHAA,GAAAuL,gBAAAvL,EAAAuL,iBACAvL,EAAAsL,iBAAAtL,EAAAsL,kBACAtL,EAAAqL,cAAA,GACA,GAGA3T,KAAAoS,SAAA,WACA,MAAApS,MAAAgF,KAAA,IAAAhF,KAAA+C,SAIA/C,KAAAqiB,KAAA,aAEA9U,MAAAvN,KAAA8C,WAYA,QAAAwf,GAAAX,EAAAY,GACA,IAAAZ,IAAAA,EAAAnf,UAAA,KAAA,cACA,IAAAggB,GAAAb,EAAAa,WAAAb,EAAAa,WAAAvhB,IAAAwgB,EACA,KAAAe,EAAA,KAAA,oBAGAvhB,KAAA4a,IAAA8F,EAAAnf,YACAO,QAAA9B,IAAAC,KAAA6B,QAGA,IAAA0f,GAAA,SAAAF,EAAAG,GACA,OAAAA,EAAApc,QACA,IAAA,GACA,MAAA,IAAAic,EAEA,KAAA,GACA,MAAA,IAAAA,GAAAG,EAAA,GAEA,KAAA,GACA,MAAA,IAAAH,GAAAG,EAAA,GAAAA,EAAA,GAEA,KAAA,GACA,MAAA,IAAAH,GAAAG,EAAA,GAAAA,EAAA,GAAAA,EAAA,MAIAC,EAAA,SAAA3d,EAAAjC,EAAA6f,GAIA,MAHAA,GAAA5d,KAAAA,EACA4d,EAAA7f,QAAAA,EACA6f,EAAAC,WAAA5hB,IAAAI,UACAuhB,GAEAE,EAAA,SAAAP,GACA,GAAAQ,GAAApB,EAAAoB,WAAApB,EAAAoB,WAAA9hB,IAAAwgB,GAAA1hB,IACA,KAAAkB,IAAA2G,KAAAb,WAAAgc,GAAA,KAAA,oBACAA,GAAAtc,KAAAzG,MACAuiB,EAAAziB,UAAA,GAAAijB,IAEAC,EAAA,QAAAA,KACA,KAAAhjB,MAAAA,eAAAgjB,IAAA,KAAA,cACA,IAAAJ,GAAAH,EAAAF,EAAAzf,UACA,OAAA6f,GAAAhB,EAAAnf,UAAAmf,EAAA5e,SAAA,GAAA6f,GAEAE,GAAArc,KAAAzG,KAAAuiB,GACAC,EAAAb,EAAAnf,WAAAwgB,EAGA,OACAjjB,KAAA2hB,EACAY,SAAAA,MC7HA,SAAAW,EAAAR,GAEAA,EAAAQ,EAAAC,cAEA9d,OAAAnE,IAAA,SAAAiiB,GAOA,QAAAnc,GAAAoc,GACA,MAAA,kBAAAA,GAOA,QAAAC,GAAAxjB,GACA,MAAAuH,GAAAvH,GAAA,QAAA,mBAAAA,GAAA,YAAAH,QAAAG,GAGA,QAAAyjB,GAAA5M,GACA,MAAAA,GAAAvU,QAAA,8BAAA,QAOA,QAAAohB,GAAA1jB,EAAA2jB,GACA,MAAA,OAAA3jB,GAAA,YAAA,mBAAAA,GAAA,YAAAH,QAAAG,KAAA2jB,IAAA3jB,GAOA,QAAA4jB,GAAAxQ,EAAAyD,GACA,MAAAgN,GAAAhd,KAAAuM,EAAAyD,GAKA,QAAAiN,GAAAjN,GACA,OAAA+M,EAAAG,EAAAlN,GAOA,QAAAF,GAAAE,GACA,MAAAsH,QAAAtH,GAAAvU,QAAA,aAAA,SAAAiL,GACA,MAAAyW,GAAAzW,KAgCA,QAAA0W,GAAAC,EAAAC,GAYA,QAAAC,KACA,GAAAC,IAAAC,EACA,KAAAC,EAAA7d,cACA8d,GAAAD,EAAA/E,WAGA+E,KAGAF,IAAA,EACAC,GAAA,EAKA,QAAAG,GAAAC,GAIA,GAHA,gBAAAA,KACAA,EAAAA,EAAAriB,MAAAsiB,EAAA,KAEApd,EAAAmd,IAAA,IAAAA,EAAAhe,OACA,KAAA,IAAAke,OAAA,iBAAAF,EAEAG,GAAA,GAAA5jB,QAAAwiB,EAAAiB,EAAA,IAAA,QACAI,EAAA,GAAA7jB,QAAA,OAAAwiB,EAAAiB,EAAA,KACAK,EAAA,GAAA9jB,QAAA,OAAAwiB,EAAA,IAAAiB,EAAA,KAnCA,IAAAR,EACA,QAEA,IAqBAW,GAAAC,EAAAC,EArBAC,KACAR,KACAD,KACAF,GAAA,EACAC,GAAA,CA+BAG,GAAAN,GAAAb,EAAAa,KAKA,KAHA,GAEAxJ,GAAAwF,EAAAjY,EAAA+c,EAAAC,EAAAC,EAFAC,EAAA,GAAAC,GAAAnB,IAGAkB,EAAAE,OAAA,CAMA,GALA3K,EAAAyK,EAAA7Z,IAGArD,EAAAkd,EAAAG,UAAAV,GAGA,IAAA,GAAAre,GAAA,EAAAgf,EAAAtd,EAAAxB,OAAAF,EAAAgf,IAAAhf,EACAye,EAAA/c,EAAAiD,OAAA3E,GAEAsd,EAAAmB,GACAV,EAAArd,KAAAsd,EAAA9d,QAGA4d,GAAA,EAGAE,EAAAtd,MAAA,OAAA+d,EAAAtK,EAAAA,EAAA,IACAA,GAAA,EAGA,OAAAsK,GACAb,GAKA,KAAAgB,EAAAK,KAAAZ,GACA,KAyBA,IAvBAR,GAAA,EAGAlE,EAAAiF,EAAAK,KAAAC,IAAA,OACAN,EAAAK,KAAAE,GAGA,MAAAxF,GACAjY,EAAAkd,EAAAG,UAAAK,GACAR,EAAAK,KAAAG,GACAR,EAAAG,UAAAT,IAEA,MAAA3E,GACAjY,EAAAkd,EAAAG,UAAAR,GACAK,EAAAK,KAAAI,GACAT,EAAAG,UAAAT,GACA3E,EAAA,KAGAjY,EAAAkd,EAAAG,UAAAT,IAIAM,EAAAK,KAAAX,GACA,KAAA,IAAAF,OAAA,mBAAAQ,EAAA7Z,IAKA,IAHA2Z,GAAA/E,EAAAjY,EAAAyS,EAAAyK,EAAA7Z,KACAiZ,EAAAtd,KAAAge,GAEA,MAAA/E,GAAA,MAAAA,EACA6E,EAAA9d,KAAAge,OAEA,IAAA,MAAA/E,EAAA,CAIA,GAFAgF,EAAAH,EAAAxF,OAEA2F,EACA,KAAA,IAAAP,OAAA,qBAAA1c,EAAA,QAAAyS,EAEA,IAAAwK,EAAA,KAAAjd,EACA,KAAA,IAAA0c,OAAA,qBAAAO,EAAA,GAAA,QAAAxK,OAEA,SAAAwF,GAAA,MAAAA,GAAA,MAAAA,EACAmE,GAAA,EAEA,MAAAnE,GAEAsE,EAAAvc,GAOA,GAFAid,EAAAH,EAAAxF,MAGA,KAAA,IAAAoF,OAAA,qBAAAO,EAAA,GAAA,QAAAC,EAAA7Z,IAEA,OAAAua,GAAAC,EAAAvB,IAOA,QAAAuB,GAAAvB,GAIA,IAAA,GADAU,GAAAc,EAFAC,KAGAzf,EAAA,EAAA0f,EAAA1B,EAAA9d,OAAAF,EAAA0f,IAAA1f,EACA0e,EAAAV,EAAAhe,GAEA0e,IACA,SAAAA,EAAA,IAAAc,GAAA,SAAAA,EAAA,IACAA,EAAA,IAAAd,EAAA,GACAc,EAAA,GAAAd,EAAA,KAGAe,EAAA/e,KAAAge,GACAc,EAAAd,GAKA,OAAAe,GASA,QAAAH,GAAAtB,GAMA,IAAA,GADAU,GAAAiB,EAJAC,KACAC,EAAAD,EACApB,KAGAxe,EAAA,EAAA0f,EAAA1B,EAAA9d,OAAAF,EAAA0f,IAAA1f,EAGA,OAFA0e,EAAAV,EAAAhe,GAEA0e,EAAA,IACA,IAAA,IACA,IAAA,IACAmB,EAAAnf,KAAAge,GACAF,EAAA9d,KAAAge,GACAmB,EAAAnB,EAAA,KACA,MACA,KAAA,IACAiB,EAAAnB,EAAAxF,MACA2G,EAAA,GAAAjB,EAAA,GACAmB,EAAArB,EAAAte,OAAA,EAAAse,EAAAA,EAAAte,OAAA,GAAA,GAAA0f,CACA,MACA,SACAC,EAAAnf,KAAAge,GAIA,MAAAkB,GAOA,QAAAf,GAAAxO,GACAzW,KAAAyW,OAAAA,EACAzW,KAAAkmB,KAAAzP,EACAzW,KAAAmL,IAAA,EAyDA,QAAAgb,GAAAC,EAAAC,GACArmB,KAAAomB,KAAAA,EACApmB,KAAAsmB,OACAC,IAAAvmB,KAAAomB,KACAI,QAAA,WACA,GAAApT,KACA,KAAA,GAAA3L,KAAAzH,MACAoT,EAAAtM,MAAA2f,OAAAhf,EAAAif,SAAA1mB,KAAAyH,IAEA,OAAA2L,KAGApT,KAAA2mB,OAAAN,EA0EA,QAAAO,KACA5mB,KAAAsmB,SA3aA,GAAAO,GAAAjd,OAAA9J,UAAAsS,SACAjL,EAAAwF,MAAAxF,SAAA,SAAAgc,GACA,MAAA,mBAAA0D,EAAApgB,KAAA0c,IA6BAM,EAAA5iB,OAAAf,UAAAwF,KAMAqe,EAAA,KAMAC,GACAkD,IAAA,QAAAC,IAAA,OAAAC,IAAA,OAAAC,IAAA,SAAAC,IAAA,QAAAC,IAAA,UASA5B,EAAA,MACAhB,EAAA,MACAiB,EAAA,OACAC,EAAA,QACAH,EAAA;AAwOAL,EAAAnlB,UAAAolB,IAAA,WACA,MAAA,KAAAllB,KAAAkmB,MAOAjB,EAAAnlB,UAAAulB,KAAA,SAAArS,GACA,GAAArO,GAAA3E,KAAAkmB,KAAAvhB,MAAAqO,EAEA,KAAArO,GAAA,IAAAA,EAAA0c,MACA,MAAA,EAEA,IAAA5K,GAAA9R,EAAA,EAKA,OAHA3E,MAAAkmB,KAAAlmB,KAAAkmB,KAAAlb,UAAAyL,EAAAnQ,QACAtG,KAAAmL,KAAAsL,EAAAnQ,OAEAmQ,GAOAwO,EAAAnlB,UAAAqlB,UAAA,SAAAnS,GACA,GAAArO,GAAA0c,EAAArhB,KAAAkmB,KAAAtkB,OAAAoR,EAEA,QAAAqO,GACA,OACA1c,EAAA3E,KAAAkmB,KACAlmB,KAAAkmB,KAAA,EACA,MACA,KAAA,GACAvhB,EAAA,EACA,MACA,SACAA,EAAA3E,KAAAkmB,KAAAlb,UAAA,EAAAqW,GACArhB,KAAAkmB,KAAAlmB,KAAAkmB,KAAAlb,UAAAqW,GAKA,MAFArhB,MAAAmL,KAAAxG,EAAA2B,OAEA3B,GA0BAwhB,EAAArmB,UAAAgH,KAAA,SAAAsf,GACA,MAAA,IAAAD,GAAAC,EAAApmB,OAOAmmB,EAAArmB,UAAAsnB,OAAA,SAAApiB,GACA,GAEA8C,GAFAwe,EAAAtmB,KAAAsmB,KAGA,IAAAA,EAAAjK,eAAArX,GACA8C,EAAAwe,EAAAthB,OAEA,CAGA,IAFA,GAAAqiB,GAAAhG,EAAAiG,EAAAtnB,KAAAunB,GAAA,EAEAD,GAAA,CACA,GAAAtiB,EAAAE,QAAA,KAAA,EAgBA,IAfA4C,EAAAwf,EAAAlB,KACAiB,EAAAriB,EAAA/C,MAAA,KACAof,EAAA,EAaA,MAAAvZ,GAAAuZ,EAAAgG,EAAA/gB,QACA+a,IAAAgG,EAAA/gB,OAAA,IACAihB,EAAAjE,EAAAxb,EAAAuf,EAAAhG,KAEAvZ,EAAAA,EAAAuf,EAAAhG,UAIAvZ,GAAAwf,EAAAlB,KAAAphB,GACAuiB,EAAAjE,EAAAgE,EAAAlB,KAAAphB,EAGA,IAAAuiB,EACA,KAEAD,GAAAA,EAAAX,OAGAL,EAAAthB,GAAA8C,EAMA,MAHAf,GAAAe,KACAA,EAAAA,EAAArB,KAAAzG,KAAAomB,OAEAte,GAeA8e,EAAA9mB,UAAA0nB,WAAA,WACAxnB,KAAAsmB,UAOAM,EAAA9mB,UAAAme,MAAA,SAAA6F,EAAAC,GACA,GAAAuC,GAAAtmB,KAAAsmB,MACAlC,EAAAkC,EAAAxC,EAKA,OAHA,OAAAM,IACAA,EAAAkC,EAAAxC,GAAAD,EAAAC,EAAAC,IAEAK,GAYAwC,EAAA9mB,UAAA2nB,OAAA,SAAA3D,EAAAsC,EAAAsB,GACA,GAAAtD,GAAApkB,KAAAie,MAAA6F,GACAwD,EAAAlB,YAAAD,GAAAC,EAAA,GAAAD,GAAAC,EACA,OAAApmB,MAAA2nB,aAAAvD,EAAAkD,EAAAI,EAAA5D,IAYA8C,EAAA9mB,UAAA6nB,aAAA,SAAAvD,EAAAkD,EAAAI,EAAAE,GAGA,IAAA,GADA9C,GAAA+C,EAAA/f,EADAggB,EAAA,GAEA1hB,EAAA,EAAA0f,EAAA1B,EAAA9d,OAAAF,EAAA0f,IAAA1f,EACA0B,EAAAtB,OACAse,EAAAV,EAAAhe,GACAyhB,EAAA/C,EAAA,GAEA,MAAA+C,EAAA/f,EAAA9H,KAAA+nB,cAAAjD,EAAAwC,EAAAI,EAAAE,GACA,MAAAC,EAAA/f,EAAA9H,KAAAgoB,eAAAlD,EAAAwC,EAAAI,EAAAE,GACA,MAAAC,EAAA/f,EAAA9H,KAAAioB,cAAAnD,EAAAwC,EAAAI,EAAAE,GACA,MAAAC,EAAA/f,EAAA9H,KAAAkoB,eAAApD,EAAAwC,GACA,SAAAO,EAAA/f,EAAA9H,KAAAmoB,aAAArD,EAAAwC,GACA,SAAAO,IAAA/f,EAAA9H,KAAAooB,SAAAtD,IAEAte,SAAAsB,IACAggB,GAAAhgB,EAGA,OAAAggB,IAGAlB,EAAA9mB,UAAAioB,cAAA,SAAAjD,EAAAwC,EAAAI,EAAAE,GAQA,QAAAS,GAAAvE,GACA,MAAA7G,GAAAwK,OAAA3D,EAAAwD,EAAAI,GARA,GAAAzK,GAAAjd,KACA8nB,EAAA,GAEAhgB,EAAAwf,EAAAF,OAAAtC,EAAA,GAQA,IAAAhd,EAAA,CAEA,GAAAX,EAAAW,GACA,IAAA,GAAAiF,GAAA,EAAAqY,EAAAtd,EAAAxB,OAAAyG,EAAAqY,IAAArY,EACAjF,EAAAiF,KACA,WAAAtN,QAAAqI,EAAAiF,MACAjF,EAAAiF,GAAA,MAAAA,EACAjF,EAAAiF,GAAA,UAAA,IAAAA,GAGA+a,GAAA9nB,KAAA2nB,aAAA7C,EAAA,GAAAwC,EAAAxgB,KAAAgB,EAAAiF,IAAA2a,EAAAE,QAIA,IAAA,YAAA,mBAAA9f,GAAA,YAAArI,QAAAqI,KAAA,gBAAAA,IAAA,gBAAAA,GACAggB,GAAA9nB,KAAA2nB,aAAA7C,EAAA,GAAAwC,EAAAxgB,KAAAgB,GAAA4f,EAAAE,OAEA,IAAA7gB,EAAAe,GAAA,CACA,GAAA,gBAAA8f,GACA,KAAA,IAAApD,OAAA,iEAGA1c,GAAAA,EAAArB,KAAA6gB,EAAAlB,KAAAwB,EAAAhb,MAAAkY,EAAA,GAAAA,EAAA,IAAAuD,GAEA,MAAAvgB,IACAggB,GAAAhgB,OAGAggB,IAAA9nB,KAAA2nB,aAAA7C,EAAA,GAAAwC,EAAAI,EAAAE,EAEA,OAAAE,KAGAlB,EAAA9mB,UAAAkoB,eAAA,SAAAlD,EAAAwC,EAAAI,EAAAE,GACA,GAAA9f,GAAAwf,EAAAF,OAAAtC,EAAA,GAIA,KAAAhd,GAAAX,EAAAW,IAAA,IAAAA,EAAAxB,OACA,MAAAtG,MAAA2nB,aAAA7C,EAAA,GAAAwC,EAAAI,EAAAE,IAGAhB,EAAA9mB,UAAAmoB,cAAA,SAAAnD,EAAAwC,EAAAI,GACA,GAAAA,EAAA,CAEA,GAAA5f,GAAAf,EAAA2gB,GAAAA,EAAA5C,EAAA,IAAA4C,EAAA5C,EAAA,GACA,OAAA,OAAAhd,EACA9H,KAAA2nB,aAAA3nB,KAAAie,MAAAnW,GAAAwf,EAAAI,EAAA5f,GADA,SAIA8e,EAAA9mB,UAAAooB,eAAA,SAAApD,EAAAwC,GACA,GAAAxf,GAAAwf,EAAAF,OAAAtC,EAAA,GACA,IAAA,MAAAhd,EACA,MAAAA,IAGA8e,EAAA9mB,UAAAqoB,aAAA,SAAArD,EAAAwC,GACA,GAAAxf,GAAAwf,EAAAF,OAAAtC,EAAA,GACA,IAAA,MAAAhd,EACA,MAAAob,GAAA5Y,OAAAxC,IAGA8e,EAAA9mB,UAAAsoB,SAAA,SAAAtD,GACA,MAAAA,GAAA,IAGA5B,EAAAle,KAAA,cACAke,EAAAngB,QAAA,QACAmgB,EAAAa,MAAA,KAAA,KAGA,IAAAuE,GAAA,GAAA1B,EAKA1D,GAAAsE,WAAA,WACA,MAAAc,GAAAd,cAQAtE,EAAAjF,MAAA,SAAA6F,EAAAC,GACA,MAAAuE,GAAArK,MAAA6F,EAAAC,IAOAb,EAAAuE,OAAA,SAAA3D,EAAAsC,EAAAsB,GACA,GAAA,gBAAA5D,GACA,KAAA,IAAA9N,WAAA,wDAAAoN,EAAAU,GAAA,kFAGA,OAAAwE,GAAAb,OAAA3D,EAAAsC,EAAAsB,IAKAxE,EAAAqF,QAAA,SAAAzE,EAAAsC,EAAAsB,EAAAc,GAGA,GAAArf,GAAA+Z,EAAAuE,OAAA3D,EAAAsC,EAAAsB,EAEA,OAAA3gB,GAAAyhB,OACAA,GAAArf,GAGAA,GAMA+Z,EAAA5Y,OAAAiM,EAGA2M,EAAA+B,QAAAA,EACA/B,EAAAiD,QAAAA,EACAjD,EAAA0D,OAAAA,ICnoBA,WAEA,GAAA6B,GAAAxnB,IAAAwgB,GACAtgB,EAAAF,IAAA2G,KACA8gB,EAAAA,MAEAD,GAAAnG,UACA9f,UAAA,UACA,WA8BA,GAAAmmB,GAAA,WACA,GAAA1L,GAAAjd,KAAA6hB,EAAAA,MAEA7hB,MAAA6iB,WAAA5hB,IAAAI,UACArB,KAAA2hB,QACA3B,GAAA,cAAAhgB,KAAA6iB,WACA+F,eAAA,QACAC,MAAA,UACAtI,MAAA,IACAuI,MAAA,GACAlmB,IAAA,GACAmmB,MACAC,GAAA,KAAAvT,OAAA,UAEAwT,YAAA,IACAC,cAAA,GAEAlpB,KAAAmpB,aAAA,KACAnpB,KAAAopB,eAAA,KACAppB,KAAAqpB,SAEAxH,EAAA7hB,KAAA2hB,MAEA,IAAA2H,GAAA,SAAApf,EAAAqf,GASA,MARArf,IAAAA,EAAAof,eACApf,EAAAof,eAAA7iB,KAAA8iB,EAAAA,GAEAvpB,KAAAspB,gBACAtpB,KAAAspB,eAAA7iB,KAAA8iB,EAAAA,GAGAA,EAAA,MACA,GAQAC,EAAA,SAAAC,EAAAvf,GAEA,GAAAwf,IACAD,SAAAA,EACAX,MAAA5e,EAAA4e,OAAAjH,EAAAiH,OAAA,GACAlmB,KAAAsH,EAAAtH,KAAAif,EAAAjf,KAAA,IAAAV,QAAA,MAAA,SACAynB,MAAAzf,EAAAyf,MACAC,KAAA1f,EAAA0f,KACAC,MAAA,WACA,MAAA7pB,MAAAkC,QAAA,MAAA,UAEA4nB,kBAAA,SAAAA,GACA,MAAA3oB,GAAA4F,WAAA+iB,GACAA,EAAArjB,KAAAyD,GAGA4f,GAEA5f,EAAA4f,mBAGA,KACA,MAAApB,GAAAqB,KAAA9O,IAAAxU,KAAAzG,KAAA,gBAAA0pB,GADA,QAIAA,EAAA,OAQAM,EAAA,SAAA9f,EAAA+f,GACA,GAAA9e,MAAA+e,EAAAA,MAEAhgB,GAAA8V,GAAA9V,EAAA8V,IAAA6B,EAAA7B,GAEAkK,GACA3J,MAAArW,EAAAqW,OAEAlK,OAAAlW,SAAA+a,MAAAiP,OAAAX,EAAA/iB,KAAAzG,KAAAkK,EAAA8V,GAAA9V,IAEAlK,KAAAoqB,aAAAlgB,EACAlK,KAAAmpB,aAAA9S,OAAA,IAAAnM,EAAA8V,IACAhgB,KAAAmpB,aAAAhW,KAAAoN,MAAA2J,EAAA3J,QAEA,mBAAA0J,KACAA,EAAA/f,EAAA+f,UAIA/f,EAAAmgB,OAAAH,EAAAG,OAAArqB,KAAAmpB,aAAAkB,SAGA,mBAAAngB,GAAAogB,UAAA,WAAApgB,EAAAogB,UACAnf,EAAAof,IAAAlU,OAAAjR,QAAAilB,SAAA,EAAAH,EAAAG,OAAA,EACAlf,EAAA7I,KAAA+T,OAAAjR,QAAAmb,QAAA,EAAA2J,EAAA3J,MAAA,IAGApV,EAAA7I,KAAA4H,EAAAogB,SAAAhoB,MAAA,EACA6I,EAAAof,IAAArgB,EAAAogB,SAAAC,KAAA,GAEA1I,EAAA2I,SACArf,EAAA,WAAA0W,EAAA2I,QAEAxqB,KAAAmpB,aAAAhW,IAAAhI,GAGA,WAAAjB,EAAAugB,WACAzqB,KAAAmpB,aAAAuB,KAAA,wBAAAzP,IAAA,GAAAO,QAGAxb,KAAAmpB,aAAAuB,KAAA,qBAAAzP,IAAA,GAAAO,QAGAxb,KAAAmpB,aAAAuB,KAAA,qBAAAC,GAAA9I,EAAA+G,eAAA,SAAAtgB,GACAsiB,EAAAnkB,KAAAzG,KAAAsI,GAAAlD,OAAAsO,MAAAxJ,EAAA+f,IACAnN,KAAA9c,OAGAqW,OAAAjR,QAAA0X,KAAA,oBAAA,SAAAxU,GACAuiB,EAAApkB,KAAAzG,KAAAsI,GAAAlD,OAAAsO,MAAAxJ,EAAA+f,IACAnN,KAAA9c,OAEAqW,OAAAjR,QAAA0X,KAAA,mBAAA,SAAAxU,GACAwiB,EAAArkB,KAAAzG,KAAAsI,GAAAlD,OAAAsO,QACAoJ,KAAA9c,OAEAspB,EAAA7iB,KAAAzG,KAAAkK,GACA+S,KAAAjd,KACA+qB,MAAA,SAGA7gB,EAAAgf,gBACAlpB,KAAAopB,eAAAzU,WAAA,WACAsI,EAAA+N,SACA9gB,EAAAgf,gBAGA/d,EAAA,KACA+e,EAAA,MAEAY,EAAA,SAAAxiB,GACA,IAAAtI,KAAAmpB,aAAA,MAAAnpB,KACA,IAAAkK,GAAA+S,EAAAmN,aACAF,GACA3J,MAAArW,EAAAqW,MACA8J,OAAAngB,EAAAmgB,OAoBA,OAhBA,mBAAAngB,GAAAogB,UAAA,WAAApgB,EAAAogB,UACAJ,EAAAK,IAAAnlB,OAAA6lB,YAAA,EAAAf,EAAAG,OAAA,EACAH,EAAA5nB,KAAA8C,OAAA8lB,WAAA,EAAAhB,EAAA3J,MAAA,IAGA2J,EAAA5nB,KAAA4H,EAAAogB,SAAAhoB,MAAA,EACA4nB,EAAAK,IAAArgB,EAAAogB,SAAAC,KAAA,GAEAL,EAAA5nB,KAAA,IAAA4nB,EAAA5nB,KAAA,GACA4nB,EAAAK,IAAA,IAAAL,EAAAK,IAAA,GAEAvqB,KAAAmpB,aAAAhW,IAAA+W,GAEAhgB,EAAA,KACAggB,EAAA,KAEAlqB,MAEA4qB,EAAA,SAAAtiB,EAAA4B,EAAA+f,EAAAkB,EAAA1jB,GACA,GAAA8hB,GAAAA,OACA6B,EAAA,IAUA,IARA9iB,EAAA+iB,aAAA/iB,EAAA6iB,OAAA7iB,EAAA+iB,YAEAF,EAAAhqB,EAAAmR,eAAAhK,EAAA6iB,OAAA,SAAAA,GACA,GAAAA,EAAArY,aAAA,mBACA,OAAA,IAIA,CASA,GARArL,EAAA0jB,EAAArY,aAAA,mBAEAyW,GACAtM,KAAAjd,KACAmG,IAAAsB,EAAAK,MAAAoC,EAAA0f,KAAAniB,GACAgiB,SAAAvf,EAAA8V,GACAsL,UAAAH,GAEA,WAAAjhB,EAAAugB,WAAA,CACAlB,EAAAI,QACA,KAAA,GAAA4B,KAAArhB,GAAAyf,MAEA,GADAJ,EAAAI,MAAA4B,GAAAvrB,KAAAmpB,aAAAuB,KAAA,uBAAAa,EAAA,KAAAjf,MACApC,EAAAyf,MAAA4B,GAAAC,WAAA,IAAAjC,EAAAI,MAAA4B,IAAA,MAAAhC,EAAAI,MAAA4B,IAAA,CACAH,EAAAG,CACA,QAIA,GAAArhB,EAAA0f,KAAAniB,GAAAgkB,QACAvhB,EAAA0f,KAAAniB,GAAAgkB,QAAAhlB,KAAA8iB,EAAA9hB,OAEA,IAAA,UAAAyC,EAAAugB,WACAR,GAAAA,EAAAxjB,KAAA8iB,EAAA9hB,GACAzH,KAAAgrB,OAAAU,eAAA,QAEA,IAAA,YAAAxhB,EAAAugB,WACAR,GAAAA,EAAAxjB,KAAA8iB,EAAA9hB,GACAzH,KAAAgrB,OAAAU,eAAA,QAEA,IAAA,WAAAxhB,EAAAugB,WAAA,CACA,GAAA,OAAAhjB,GACA2jB,EAEA,MADAprB,MAAAmpB,aAAAuB,KAAA,wBAAAU,EAAA,MAAAnQ,IAAA,GAAAO,SACA,CAGAyO,IAAAA,EAAAxjB,KAAA8iB,EAAA9hB,GACAzH,KAAAgrB,OAAAU,eAAA,KAIAnC,EAAA,KACArf,EAAA,KACA+f,EAAA,KACAkB,EAAA,KACA1jB,EAAA,MAEAojB,EAAA,SAAAviB,EAAA4B,EAAA+f,EAAAkB,EAAA1jB,GACA,GAAA8hB,GAAAA,OACA6B,EAAA,IAKA,IAHA9iB,EAAAqjB,SAAA1qB,IAAAC,KAAAmC,UAAAI,KACAzD,KAAAgrB,QAEA,WAAA9gB,EAAAugB,YACAniB,EAAAqjB,SAAA1qB,IAAAC,KAAAmC,UAAAG,OAAA,CACA+lB,GACAtM,KAAAjd,KACAmG,IAAAsB,EAAAK,MAAAoC,EAAA0f,KAAAniB,GACAgiB,SAAAvf,EAAA8V,GACAsL,UAAAH,GAEA5B,EAAAI,QAEA,KAAA,GAAA4B,KAAArhB,GAAAyf,MAEA,GADAJ,EAAAI,MAAA4B,GAAAvrB,KAAAmpB,aAAAuB,KAAA,uBAAAa,EAAA,KAAAjf,MACApC,EAAAyf,MAAA4B,GAAAC,WAAA,IAAAjC,EAAAI,MAAA4B,IAAA,MAAAhC,EAAAI,MAAA4B,IAAA,CACAH,EAAAG,CACA,OAGA,GAAAH,EAGA,MAFA7B,GAAA,KACA6B,EAAA,MACA,CAEAnB,IAAAA,EAAAxjB,KAAA8iB,EAAA9hB,GACAzH,KAAAgrB,OAAAU,eAAA,IAIAnC,EAAA,KACA6B,EAAA,KACAlhB,EAAA,KACA+f,EAAA,KACAkB,EAAA,KACA1jB,EAAA,KAqCAzH,MAAA+hB,KAAA,WACA/hB,KAAAspB,eAAAzH,EAAAyH,gBA8BAtpB,KAAAkL,MAAA,SAAAhB,EAAA+f,EAAA2B,GAwBA,MAvBAzqB,GAAA4G,SAAAmC,KACAA,GACA4e,MAAAjH,EAAAiH,MACAlmB,IAAAsH,IAIAA,EAAAmM,OAAAC,QAAA,KAAAuL,EAAA3X,GACAA,EAAAugB,WAAA,QACAvgB,EAAA2e,MAAA3e,EAAA2e,OAAAhH,EAAAgH,OAAA,GACA3e,EAAA+f,SAAAA,EAEA,mBAAA/f,GAAA0f,OACA1f,EAAA0f,MACAZ,IAAA1kB,MAAAud,EAAAkH,KAAA,GAAAF,MAAA3e,EAAA2e,SAIA7oB,KAAAmpB,aACAnpB,KAAAqpB,MAAAviB,KAAAoD,GAEA8f,EAAAvjB,KAAAzG,KAAAkK,EAAA+f,GAEAjqB,MA+BAA,KAAA6rB,QAAA,SAAA3hB,EAAA+f,EAAA2B,GA0BA,MAzBAzqB,GAAA4G,SAAAmC,KACAA,GACA4e,MAAAjH,EAAAiH,MACAlmB,IAAAsH,IAIAA,EAAAmM,OAAAC,QAAA,KAAAuL,EAAA3X,GACAA,EAAAugB,WAAA,UACAvgB,EAAA2e,MAAA3e,EAAA2e,OAAAhH,EAAAgH,OAAA,GACA3e,EAAA+f,SAAAA,EAEA,mBAAA/f,GAAA0f,OACA1f,EAAA0f,MACAZ,IAAA1kB,MAAAud,EAAAkH,KAAA,GAAAF,MAAA3e,EAAA2e,OACApT,QAAAnR,MAAAud,EAAAkH,KAAA,UAIA/oB,KAAAmpB,aACAnpB,KAAAqpB,MAAAviB,KAAAoD,GAEA8f,EAAAvjB,KAAAzG,KAAAkK,EAAA+f,GAGAjqB,MA4BAA,KAAA8rB,OAAA,SAAA5hB,EAAA+f,EAAA2B,GA+BA,MA9BAzqB,GAAA4G,SAAAmC,KACAA,GACA4e,MAAAjH,EAAAiH,MACAlmB,IAAAsH,IAIAA,EAAAmM,OAAAC,QAAA,KAAAuL,EAAA3X,GACAA,EAAAugB,WAAA,SACAvgB,EAAA2e,MAAA3e,EAAA2e,OAAAhH,EAAAgH,OAAA,GACA3e,EAAA+f,SAAAA,EAEA,mBAAA/f,GAAAyf,QACAzf,EAAAyf,OACA7hB,OAAAxD,MAAA,MAGA,mBAAA4F,GAAA0f,OACA1f,EAAA0f,MACAZ,IAAA1kB,MAAAud,EAAAkH,KAAA,GAAAF,MAAA3e,EAAA2e,OACApT,QAAAnR,MAAAud,EAAAkH,KAAA,UAIA/oB,KAAAmpB,aACAnpB,KAAAqpB,MAAAviB,KAAAoD,GAEA8f,EAAAvjB,KAAAzG,KAAAkK,EAAA+f,GAGAjqB,MAYAA,KAAAgrB,MAAA,SAAAe,GACA,GAAA7hB,GAAAA,OAAAqf,EAAAA,MA0CA,OAxCAvpB,MAAAmpB,eACAnpB,KAAAopB,gBAAA1T,aAAA1V,KAAAopB,gBAEAlf,EAAA+S,EAAAmN,aAEApqB,KAAAmpB,aAAA7G,SAAA,WACAjM,OAAAjR,QAAA4mB,OAAA,qBACA3V,OAAAjR,QAAA4mB,OAAA,oBAEArX,WAAA,WACA3U,KAAAmpB,eACAnpB,KAAAmpB,aAAA8C,SACAjsB,KAAAmpB,aAAA,MAGAI,GACAtM,KAAAjd,KACA+qB,MAAA,QACAtB,SAAAvf,EAAA8V,KAGA9V,EAAA+f,UAAA8B,GAAAA,EAAAL,eACAxhB,EAAA+f,SAAAxjB,KAAA8iB,GAGArf,GAAAA,EAAAof,eACApf,EAAAof,eAAA7iB,KAAA8iB,EAAAA,GAEAvpB,KAAAspB,gBACAtpB,KAAAspB,eAAA7iB,KAAA8iB,EAAAA,GAGAvpB,KAAAqpB,OAAArpB,KAAAqpB,MAAA/iB,QACA0jB,EAAAvjB,KAAAzG,KAAAA,KAAAqpB,MAAA6C,SAGAhiB,EAAA,KACAqf,EAAA,MACAzM,KAAA9c,MAAA6hB,EAAAoH,cAEAjpB,MAIAA,KAAAqiB,KAAA,WAEAoG,EAAA0D,gBAAA1D,EAAA0D,oBACA1D,EAAA0D,gBAAArlB,KAAA9G,MAEA8C,WAAA3B,EAAA0F,SAAA/D,UAAA,KACA9C,KAAA4hB,UAAA9e,UAAA,KAEAyK,MAAAvN,KAAA8C,WAEA,OAAA6lB,OAGAD,EAAAznB,IAAAwgB,GAAA2K,UC3kBA,WAEA,GAAA1D,GAAAznB,IAAAwgB,GAAA2K,OAEAC,EAAA,SAAAC,GACA,MAAA,mwDA0CA5D,GAAAqB,MACAsC,cAAAA,EACApR,IAAA,SAAAsR,EAAA7C,EAAA4C,GACA,MAAArrB,KAAAiiB,SAAAuE,OAAAiB,EAAAqB,KAAAwC,GAAA9lB,KAAAzG,KAAAssB,GAAA5C,QClDA,WAEA,GAAAjB,GAAAxnB,IAAAwgB,GACAtgB,EAAAF,IAAA2G,KACA4kB,EAAAA,MAEA/D,GAAAnG,UACA9f,UAAA,QACA,WA+BA,MAAA,YACA,GAAAya,GAAAjd,KACA6hB,EAAAA,MAEA7hB,MAAA6iB,WAAA5hB,IAAAI,UACArB,KAAA2hB,QACAkH,MAAA,GACAsC,OAAA9U,OAAAlW,SAAA+a,MAAAD,IAAA,GACAgO,YAAA,KAEAjpB,KAAAysB,YAAA,GACAzsB,KAAA0sB,OAAA,MAEA7K,EAAA7hB,KAAA2hB,MAEA,IAAA2H,GAAA,SAAApf,EAAAqf,GAUA,MATArf,IAAAA,EAAAof,eACApf,EAAAof,eAAA7iB,KAAA8iB,EAAAA,GAEAvpB,KAAAspB,gBACAtpB,KAAAspB,eAAA7iB,KAAA8iB,EAAAA,GAGArf,EAAA,KACAqf,EAAA,MACA,GAEAoD,EAAA,SAAAjD,GAEA,MADA,mBAAAA,GAAAkD,eAAAlD,EAAAkD,aAAA,eACAJ,EAAAzC,KAAA9O,IAAAxU,KAAAzG,KAAA0pB,EAAAkD,aAAAlD,IAEAmD,EAAA,SAAAC,GACA9sB,KAAAysB,YAAAK,EAiBA9sB,MAAA+hB,KAAA,WAEA/hB,KAAAspB,eAAAzH,EAAAyH,eACAtpB,KAAAyrB,QAAA5J,EAAA4J,QACAzrB,KAAA2hB,OAAAmL,SAAAD,EAAApmB,KAAAzG,KAAAA,KAAA2hB,OAAAmL,UAoDA9sB,KAAAgqB,KAAA,SAAA/V,GAEA,OAAAjU,KAAA0sB,QAAA1sB,KAAAgrB,QACA/W,GAAAA,EAAA6Y,SAAAD,EAAApmB,KAAAzG,KAAAiU,EAAA6Y,SACA7Y,GAAA,mBAAAA,GAAA2Y,eAAA3Y,EAAA2Y,aAAA,eACA3P,EAAA8P,WAAA1W,OAAAC,QAAA,KAAAtW,KAAA2hB,OAAA1N,EAEA,IAAA+Y,GAAA/P,EAAA8P,WACA5B,EAAA6B,EAAA7B,OACA8B,EAAA5W,OAAA8U,GACA+B,EAAA,WAAAjsB,IAAAI,UACA8rB,EAAAA,OACAha,KACAoW,KACAqD,EAAAI,EAAAJ,aACA1R,EAAAyR,GACA9D,MAAAmE,EAAAnE,MACAqE,OAAAA,EACAhS,KAAAlb,KAAAysB,YACAG,aAAAA,GA4DA,OAzDAvW,QAAAlW,SAAA+a,MAAAiP,OAAAjP,GAGAiQ,GAAAA,IAAA9U,OAAAlW,SAAA+a,MAAAD,IAAA,KACA9H,GACAmX,SAAA0C,EAAA1C,UAAA,WACAhoB,KAAA2qB,EAAA/S,SAAA5X,KACAioB,IAAA0C,EAAA/S,SAAAqQ,IACAhK,MAAA0M,EAAAG,aACA/C,OAAA4C,EAAAI,eAIAJ,EAAA3K,SAAA,cAGAjM,OAAAjR,QAAAulB,GAAA,kBAAA3qB,KAAA6iB,WAAA,SAAAyK,GACAttB,KAAA8qB,SACAhO,KAAA9c,QAGA,mBAAAid,GAAA8P,WAAAvC,SACArX,EAAA,WAAA8J,EAAA8P,WAAAvC,QAGAxqB,KAAAmtB,MAAAA,EAAA9W,OAAA,IAAA6W,GACAltB,KAAAitB,QAAAA,EACAjtB,KAAA0sB,OAAA,KACAS,EAAAha,IAAAA,GAEA6Z,EAAAvB,SACA0B,EAAAxC,GAAA,QAAA,SAAAriB,GACAihB,GACAtM,KAAAA,EACA8N,MAAA,OACAhL,KAAA,SAEA9C,EAAA8P,WAAAtB,QAAAhlB,KAAA8iB,EAAAA,KAIAD,EAAA7iB,KAAAzG,KAAA,MACAid,KAAAjd,KACA+qB,MAAA,SAGA9W,EAAA,KACA+Y,EAAA,KACA7B,EAAA,KACA8B,EAAA,KACAC,EAAA,KACAC,EAAA,KACAha,EAAA,KACAoW,EAAA,KACAqD,EAAA,KACA1R,EAAA,KAEAlb,MAaAA,KAAAgrB,MAAA,SAAAuC,GACA,GAAAvtB,KAAAmtB,MAAA,CACA,GAAAK,GAAA,WACAxtB,KAAA0sB,OAAA,MACA1sB,KAAAmtB,MAAAlB,SACAjsB,KAAAitB,QAAAQ,YAAA,cAEAnE,EAAA7iB,KAAAzG,KAAA,MACAid,KAAAjd,KACA+qB,MAAA,UAGA1U,OAAAjR,QAAAsoB,IAAA,kBAAA1tB,KAAA6iB,YAGA0K,GACA5Y,WAAA,WACA6Y,EAAA/mB,KAAAzG,OACA8c,KAAA9c,MAAAutB,GAEAC,EAAA/mB,KAAAzG,MAGA,MAAAA,OAOAA,KAAA2tB,QAAA,WACA,GAAA3tB,KAAAmtB,MAAA,CACA,GAAAK,GAAA,WACAxtB,KAAA0sB,OAAA,MACA1sB,KAAAmtB,MAAAlB,SACAjsB,KAAAitB,QAAAQ,YAAA,cAEAnE,EAAA7iB,KAAAzG,KAAA,MACAid,KAAAjd,KACA+qB,MAAA,UAGA1U,OAAAjR,QAAAsoB,IAAA,kBAAA1tB,KAAA6iB,YAIA7iB,MAAAmtB,MAAA7K,SAAA,YACA3N,WAAA,WACA6Y,EAAA/mB,KAAAzG,OACA8c,KAAA9c,MAAA6hB,EAAAoH,aAEA,MAAAjpB,OAOAA,KAAA8qB,MAAA,WACA,GAAA9qB,KAAA+sB,YAAA/sB,KAAA+sB,WAAA5B,QAAAnrB,KAAA+sB,WAAA5B,SAAA9U,OAAAlW,SAAA+a,MAAAD,IAAA,GACA,IACA,GAAA9H,IACAmX,SAAAtqB,KAAA+sB,WAAAzC,UAAA,WACAhoB,KAAAtC,KAAAitB,QAAA/S,SAAA5X,KACAioB,IAAAvqB,KAAAitB,QAAA/S,SAAAqQ,IACAhK,MAAAvgB,KAAAitB,QAAAG,aACA/C,OAAArqB,KAAAitB,QAAAI,cAEArtB,MAAAmtB,MAAAha,IAAAA,GACA,MAAA7K,IAIA,MAAAtI,OAIAA,KAAA4tB,YAAA,WACA3qB,QAAA+e,IAAA,sBACA/e,QAAA+e,IAAA,uBAIAhiB,KAAAqiB,KAAA,WAEAoG,EAAAoF,cAAApF,EAAAoF,kBACApF,EAAAoF,cAAA/mB,KAAA9G,MAEA8C,WAAA3B,EAAA0F,SAAA/D,UAAA,KACA9C,KAAA4hB,UAAA9e,UAAA,KAEAyK,MAAAvN,KAAA8C,gBAGA0pB,EAAAvrB,IAAAwgB,GAAAqM,QC1UA,WAEA,GAAAtB,GAAAvrB,IAAAwgB,GAAAqM,KAEAC,EAAA,SAAAzB,GACA,MAAA,iUAYAE,GAAAzC,MACAgE,YAAAA,EAEA9S,IAAA,SAAAsR,EAAA7C,EAAA4C,GACA,MAAArrB,KAAAiiB,SAAAuE,OAAA+E,EAAAzC,KAAAwC,GAAA9lB,KAAAzG,KAAAssB,GAAA5C,QCrBA,WAEA,GAEAsE,GAFAvF,EAAAxnB,IAAAwgB,GACAtgB,EAAAF,IAAA2G,IAGA6gB,GAAAnG,UACA9f,UAAA,SACA,WA8BA,GAAAyrB,GAAA,WACA,GAEApM,GADA5E,EAAAjd,KAEAkuB,EAAA,EAAAC,EAAA,IAEAnuB,MAAA6iB,WAAA5hB,IAAAI,UACArB,KAAA2hB,QACAiH,eAAA,QACAC,MAAA,UACAtI,MAAA,IACA6N,KAAA,GACAC,UAAA,GACAzrB,IAAA,GACAmmB,MACAC,GAAA,KAAAvT,OAAA,UAEA6Y,YAAA,IACArF,YAAA,IACAsF,kBAAA,eAEAvuB,KAAAwuB,eAAA,KACAxuB,KAAAqpB,SAEAxH,EAAA7hB,KAAA2hB,MAEA,IACA2H,GAAA,SAAApf,EAAAqf,GAUA,MATArf,IAAAA,EAAAof,eACApf,EAAAof,eAAA7iB,KAAA8iB,EAAAA,GAEAvpB,KAAAspB,gBACAtpB,KAAAspB,eAAA7iB,KAAA8iB,EAAAA,GAGArf,EAAA,KACAqf,EAAA,MACA,GAYAC,EAAA,SAAAiF,EAAAvkB,GAEA,GACAwf,IACA+E,QAAAA,EACA5F,MAAA3e,EAAA2e,MACAuF,KAAAlkB,EAAAkkB,KACAxrB,KAAAsH,EAAAtH,KAAA,IAAAV,QAAA,MAAA,SACA0nB,KAAA1f,EAAA0f,KACAyE,UAAAnkB,EAAAmkB,UAGA,KACA,MAAAL,GAAAjE,KAAA9O,IAAAxU,KAAAzG,KAAA,eAAA0pB,GADA,QAIA+E,EAAA,KACA/E,EAAA,OASAM,EAAA,SAAA9f,EAAAgY,GACAiM,GAAAzY,aAAAyY,EAEA,IACAO,GACAxE,GACA3J,MAAArW,EAAAqW,MAIA,OADArW,GAAA8V,GAAA,aAAA/C,EAAA0R,YAAA,OAAAT,EACA7X,OAAA,IAAAnM,EAAA8V,IAAA/E,IAAA,GAAAjb,MAEA,UAAAmB,EAAAmB,KAAAuf,EAAA0M,kBAAA,KACAvuB,KAAAwuB,eAAArE,OAAAX,EAAAtf,EAAA8V,GAAA9V,IAGAlK,KAAAwuB,eAAAI,QAAApF,EAAAtf,EAAA8V,GAAA9V,IAGAwkB,EAAArY,OAAA,IAAAnM,EAAA8V,IACA0O,EAAAvb,KAAAoN,MAAA2J,EAAA3J,QACArW,EAAAwkB,SAAAA,EACA1uB,KAAAqpB,MAAAviB,KAAAoD,GAEAof,EAAA7iB,KAAAzG,KAAAkK,GACA+S,KAAAjd,KACA+qB,MAAA,OACA0D,QAAAvkB,EAAA8V,KAGA,SAAA9V,EAAA2kB,WAEAla,WAAA,WACA3U,KAAAgrB,MAAA9gB,EAAAgY,IACApF,KAAA9c,MAAA6hB,EAAAyM,aAEAI,EAAAhE,KAAA,uBAAAC,GAAA9I,EAAA+G,eAAA,SAAAtgB,GACAsiB,EAAAnkB,KAAAzG,KAAAsI,GAAAlD,OAAAsO,MAAAxJ,EAAAwkB,EAAAxM,IACApF,KAAA9c,QAEA,YAAAkK,EAAA2kB,WACAH,EAAAhE,KAAA,uBAAAC,GAAA9I,EAAA+G,eAAA,SAAAtgB,GACAsiB,EAAAnkB,KAAAzG,KAAAsI,GAAAlD,OAAAsO,MAAAxJ,EAAAwkB,EAAAxM,IACApF,KAAA9c,YAGAkqB,EAAA,QAEAU,EAAA,SAAAtiB,EAAA4B,EAAAwkB,EAAAxM,EAAAiJ,EAAA1jB,GAOA,GANA0jB,EAAAhqB,EAAAmR,eAAAhK,EAAA6iB,OAAA,SAAAA,GACA,GAAAA,EAAArY,aAAA,qBACA,OAAA,IAIA,CACArL,EAAA0jB,EAAArY,aAAA,oBAEA,IAAAyW,IACApjB,IAAAsB,EAAAK,MAAAoC,EAAA0f,KAAA1f,EAAA0f,KAAAniB,GAAAA,EACAgnB,QAAAvkB,EAAA8V,GACA8O,WAAA3D,EAGAjhB,GAAA0f,MAAA1f,EAAA0f,KAAAniB,GAAAgkB,QACAvhB,EAAA0f,KAAAniB,GAAAgkB,QAAAhlB,KAAA8iB,EAAA9hB,GAEA,SAAAyC,EAAA2kB,WACA3M,GAAAA,EAAAzb,KAAA8iB,EAAA9hB,GACAzH,KAAAgrB,MAAA9gB,EAAAgY,IAEA,YAAAhY,EAAA2kB,YACA3M,GAAAA,EAAAzb,KAAA8iB,EAAA9hB,GACAzH,KAAAgrB,MAAA9gB,EAAAgY,IAIA5Z,EAAA,KACA4B,EAAA,KACAwkB,EAAA,KACAxM,EAAA,KACAiJ,EAAA,KACA1jB,EAAA,KAaAzH,MAAA+hB,KAAA,WACA/hB,KAAAspB,eAAAzH,EAAAyH,eAEArM,EAAA0R,YAAA1tB,IAAAI,SACA,IAAA0tB,KACAlN,GAAA2I,QACAuE,EAAAjoB,KAAA,WAAA+a,EAAA2I,QAEAnU,OAAAlW,SAAA+a,MAAAiP,OAAA,sCAAAtI,EAAA0M,kBAAA,2BACAtR,EAAA0R,YAAA,YAAAI,EAAA3rB,KAAA,KAAA,YACApD,KAAAwuB,eAAAnY,OAAA,0BAAA4G,EAAA0R,YAAA,OASA3uB,KAAA8G,KAAA,SAAAoD,EAAAgY,GAoBA,MAnBAjF,GAAA0R,aACA3uB,KAAA+hB,OAEA5gB,EAAA4G,SAAAmC,KACAA,GACA4e,MAAAjH,EAAAiH,MACAlmB,IAAAsH,IAGAA,EAAA2kB,UAAA,OAEA5R,EAAAmN,gBACA/T,OAAAC,QAAA,EAAA2G,EAAAmN,aAAAvI,EAAA3X,GACAA,EAAA+S,EAAAmN,aAEAJ,EAAAvjB,KAAAzG,KAAAkK,EAAAgY,GAEAhY,EAAA,KACAgY,EAAA,KACAliB,MASAA,KAAA6rB,QAAA,SAAA3hB,EAAAgY,GAyBA,MAxBAjF,GAAA0R,aACA3uB,KAAA+hB,OAEA5gB,EAAA4G,SAAAmC,KACAA,GACA4e,MAAAjH,EAAAiH,MACAlmB,IAAAsH,IAGAA,EAAA2kB,UAAA,UAEA5R,EAAAmN,gBACA/T,OAAAC,QAAA,EAAA2G,EAAAmN,aAAAvI,EAAA3X,GACAA,EAAA+S,EAAAmN,aAEA,mBAAAlgB,GAAA0f,OACA1f,EAAA0f,MACAZ,IAAA1kB,MAAAud,EAAAkH,KAAA,GAAAF,MAAA3e,EAAA2e,SAGAmB,EAAAvjB,KAAAzG,KAAAkK,EAAAgY,GAEAhY,EAAA,KACAgY,EAAA,KACAliB,MAYAA,KAAAgrB,MAAA,SAAA9gB,EAAAgY,GACA,mBAAAhY,KACAA,EAAA/I,EAAAiB,KAAApC,KAAAqpB,OAGA,IAAAqF,GAAAxkB,EAAAwkB,QAmCA,OAlCAA,GAAApM,SAAA,QAAApY,EAAA2kB,UAAA,UAAA,WACA7uB,KAAAqpB,MAAAloB,EAAAqG,OAAAxH,KAAAqpB,MAAA,WACA,MAAAnf,GAAA8V,IAAAhgB,KAAAggB,KAEArL,WAAA,WACA,GAAA4U,IACAkF,QAAAvkB,EAAA8V,GAGA0O,GAAAzC,SACA/J,GAAAA,EAAAzb,KAAA8iB,GAEAA,GACAtM,KAAAjd,KACA+qB,MAAA,QACA0D,QAAAvkB,EAAA8V,IAEAsJ,EAAA7iB,KAAAzG,KAAAkK,EAAAqf,GAGA,IAAAvpB,KAAAqpB,MAAA/iB,SACA6nB,GAAAzY,aAAAyY,GACAA,EAAAxZ,WAAA,WAEA,IAAA3U,KAAAqpB,MAAA/iB,SAAA4nB,EAAA,IACApR,KAAA9c,MAAA,MAGAupB,EAAA,KACArf,EAAA,KACAgY,EAAA,KACAwM,EAAA,MACA5R,KAAA9c,MAAA6hB,EAAAoH,aAEAjpB,MAIAA,KAAAqiB,KAAA,WAEAoG,EAAAuG,eAAAvG,EAAAuG,mBACAvG,EAAAuG,eAAAloB,KAAA9G,MAEA8C,WAAA3B,EAAA0F,SAAA/D,UAAA,KACA9C,KAAA4hB,UAAA9e,UAAA,KAEAyK,MAAAvN,KAAA8C,WAEA,OAAAmrB,OAEAD,EAAA/sB,IAAAwgB,GAAAwN,SC7VA,WAEA,GAAAjB,GAAA/sB,IAAAwgB,GAAAwN,MAEAC,EAAA,SAAA5C,GACA,MAAA,4yBAsBA0B,GAAAjE,MACAmF,aAAAA,EAEAjU,IAAA,SAAAsR,EAAA7C,EAAA4C,GACA,MAAArrB,KAAAiiB,SAAAuE,OAAAuG,EAAAjE,KAAAwC,GAAA9lB,KAAAzG,KAAAssB,GAAA5C,QCzBA,WACA,GAAAjB,GAAAxnB,IAAAwgB,GACAtgB,EAAAF,IAAA2G,KACAunB,EAAAA,MAEA1G,GAAAnG,UAEA9f,UAAA,SAEA,WAMA,MAAA,YACA,GAAAya,GAAAjd,KACA6hB,EAAAA,OACAuN,GACAC,UAAA,YACAC,UAAA,YACAC,QAAA,WAEAC,EAAA,SAAAlnB,GACA,GAAAmnB,GAAAnnB,CAIA,OAHA,kBAAAA,IAAAA,EAAAonB,iBACAD,EAAAnnB,EAAAonB,eAAA,KAGAC,QAAAF,EAAAE,QACAC,QAAAH,EAAAG,SAIA5vB,MAAA6iB,WAAA5hB,IAAAI,UACArB,KAAA2hB,QACA3B,GAAA,aAAAhgB,KAAA6iB,WACAyH,UACAhoB,KAAA,SACAioB,IAAA,SACAsF,OAAA,IAEAC,iBAAA,eACAlH,eACA,gBAAAzoB,UAAAE,gBAAA,aAAA,QACAwoB,MAAA,UACAtI,MAAA,IACA8J,OAAA,IACA0F,YAAA,EACAC,aAAA,EACAC,eAAA,EACAhH,YAAA,IACAiH,QAAA,GAEAlwB,KAAAmwB,YAAA,KACAnwB,KAAAowB,aAAA,EACApwB,KAAAqwB,KAEAxO,EAAA7hB,KAAA2hB,MAEA,IAAA2H,GAAA,SAAApf,EAAAqf,GACA,GAAA+G,IACAnO,OAAA,SAAAoH,GACArf,GAAAA,EAAAqmB,SACArmB,EAAAqmB,SAAA9pB,KAAA8iB,EAAAA,GACAvpB,KAAAuwB,UACAvwB,KAAAuwB,SAAA9pB,KAAA8iB,EAAAA,IAGAiH,KAAA,aAWA,OATAjH,GAAAwB,QAAAuF,IACAA,EAAA/G,EAAAwB,OAAAtkB,KAAAzG,KAAAupB,GAGArf,GAAAA,EAAAof,eACApf,EAAAof,eAAA7iB,KAAA8iB,EAAAA,GACAvpB,KAAAspB,gBACAtpB,KAAAspB,eAAA7iB,KAAA8iB,EAAAA,IAEA,GAEAC,EAAA,SAAAiH,EAAAvmB,GACA,GAAAwf,IACA+G,QAAAA,EACA5H,MAAA3e,EAAA2e,MACA6H,OAAAxmB,EAAAwmB,OACAC,WAAAzmB,EAAAymB,WAAA,aAAA,GACA5B,OAAA,GACAmB,OAAAhmB,EAAAgmB,OACAU,iBAAA1mB,EAAA0mB,iBACAX,cAAA/lB,EAAA+lB,cAcA,OAXA/lB,GAAAsgB,SACAd,EAAAqF,QAAA,WAAA7kB,EAAAsgB,OAAA,KAEAtgB,EAAA2mB,WACAnH,EAAAqF,QAAA,sBAGArF,EAAAwG,QAAA,gBAAAxG,GAAAwG,OAAAvuB,QACA+nB,EAAAwG,OAAAvuB,MAAAV,IAAA2G,KAAAjG,MAAA+nB,EAAAwG,OAAAvuB,QAGAwtB,EAAApF,KAAA9O,IAAAxU,KAAAzG,KAAA,UAAA0pB,OAEAM,EAAA,SAAA9f,EAAA+f,GACA,GAAAV,GAAAA,MACAlT,QAAAlW,SAAA+a,MAAAiP,OAAAX,EAAA/iB,KAAAzG,KAAAkK,EAAA8V,GAAA9V,IAEAlK,KAAAmwB,YAAA9Z,OAAA,IAAAnM,EAAA8V,IAEAhgB,KAAAqwB,GACAtwB,KAAAC,KAAAmwB,YACAO,OAAA1wB,KAAAmwB,YAAAzF,KAAA,6BACAxP,KAAAlb,KAAAmwB,YAAAzF,KAAA,4BAGAxgB,EAAAgmB,QACAlwB,KAAAqwB,EAAA,eAAArwB,KAAAmwB,YAAAzF,KACA,kCAEA1qB,KAAAqwB,EAAA,OAAArwB,KAAAmwB,YAAAzF,KACA,6BAEA1qB,KAAAqwB,EAAA,eAAArwB,KAAAmwB,YAAAzF,KACA,kCAEA1qB,KAAAqwB,EAAA,kBAAArwB,KAAAmwB,YAAAzF,KACA,sCAGA1qB,KAAAqwB,EAAA,cAAArwB,KAAAmwB,YAAAzF,KACA,iCAKA1qB,KAAA8qB,QAEAvB,GACAtM,KAAAjd,KACAggB,GAAA9V,EAAA8V,GACA6I,MAAA3e,EAAA2e,MACAtI,MAAArW,EAAAqW,MACA8J,OAAAngB,EAAAmgB,OACAU,MAAA,OACAsF,EAAArwB,KAAAqwB,GAGAnmB,EAAAgmB,SACAlwB,KAAAqwB,EAAA,eAAAld,KAAAkX,OAAAngB,EAAAmgB,SACArqB,KAAAqwB,EAAA,OAAAld,KAAAkX,OAAAngB,EAAAmgB,SAGArqB,KAAAqwB,EAAA,eAAAS,MAAA/R,OAAA7U,EAAAgmB,OAAAnR,SACA/e,KAAAqwB,EAAA,eAAAS,MAAA3F,OAAAjhB,EAAA8V,GAAA,WACAhgB,KAAAqwB,EAAA,eAAAS,MAAAC,OAAA7mB,EAAAgmB,OAAA3uB,MACAvB,KAAAqwB,EAAA,OAAA1F,GACA,OACA,WACApB,EAAAwB,MAAA,OACA7gB,EAAA0mB,kBACA5wB,KAAAqwB,EAAA,kBAAAW,OAEA1H,EAAA7iB,KAAAzG,KAAAkK,EAAAqf,IACAzM,KAAA9c,OAEAkK,EAAA0mB,kBACA5wB,KAAAqwB,EAAA,OAAAY,OAEAjxB,KAAAqwB,EAAA,eAAAa,UAGAjH,GAAAA,EAAAxjB,KAAA8iB,EAAAA,GAEAvpB,KAAAowB,aACA9G,EAAA7iB,KAAAzG,KAAAkK,EAAAqf,GAIArf,EAAA6lB,YACA1Z,OAAAjR,QAAA0X,KACA,mBACA,SAAAxU,GACA6oB,EAAA1qB,KAAAzG,KAAAsI,GAAAlD,OAAAsO,QACAoJ,KAAA9c,OAIAqW,OAAAjR,QAAA0X,KACA,kBACA,SAAAxU,GACAtI,KAAA8qB,MAAA,KAAAxiB,GAAAlD,OAAAsO,QACAoJ,KAAA9c,OAGAA,KAAAqwB,EAAAK,OACAhD,IAAA0B,EAAA,WACA1B,IAAA,aACA/C,GAAAyE,EAAA,UAAA,SAAA9mB,GAEA,GAAA8oB,GAAAjwB,EAAAmR,eAAAhK,EAAA6iB,OAAA,SAAA5Y,GACA,GAAAA,EAAAO,aAAA,yBACA,OAAA,GAKA5I,GAAAmnB,cACAD,GACA,GAAAlnB,EAAA8lB,cAEA/S,EAAAqU,cAAA9B,EAAAlnB,GACAipB,EAAA5G,GAAAlkB,KAAAwW,IAEAmU,GACAxG,EAAAnkB,KAAAwW,EAAA3U,GAAAlD,OAAAsO,MAAAxJ,KAGAygB,GAAA,YAAA,SAAAriB,GAEA,MADAnH,GAAAsS,UAAAnL,EAAAkpB,gBACA,IAGAxxB,KAAAmwB,YACAzC,IAAA0B,EAAA,WACA1B,IAAA,aACA/C,GAAAyE,EAAA,UAAA,0BAAA,SAAA9mB,GACA,OAAA4B,EAAA8lB,cAAA9lB,EAAAmnB,eACApU,EAAAqU,cAAA9B,EAAAlnB,OACAmpB,GAAA9G,GAAAlkB,KACAwW,EACAjd,KAAA8S,aAAA,6BAGA6X,GAAA,YAAA,SAAAriB,GAEA,MADAnH,GAAAsS,UAAAnL,EAAAkpB,gBACA,KAGA5G,EAAA,SAAAtiB,EAAA4B,EAAA+f,EAAAkB,EAAA1jB,GACA,GAAA8hB,GAAAA,MACAjhB,GAAA+iB,aAAA/iB,EAAA6iB,OAAA7iB,EAAA+iB,YAEAF,EAAAhqB,EAAAmR,eAAAhK,EAAA6iB,OAAA,SAAAA,GACA,GAAAA,EAAArY,aAAA,yBACA,OAAA,IAIAqY,IACA1jB,EAAA0jB,EAAArY,aAAA,yBAEAyW,GACAtM,KAAAjd,KACAmG,IAAAsB,EACAK,MAAAoC,EAAAwmB,OAAA9G,KAAAniB,GACAgiB,SAAAvf,EAAA8V,GACAsL,UAAAH,GAGAjhB,EAAAwmB,OAAA9G,KAAAniB,GAAAgkB,SACAvhB,EAAAwmB,OAAA9G,KAAAniB,GAAAgkB,QAAAhlB,KAAA8iB,EAAA9hB,IAIA8hB,EAAA,KACArf,EAAA,KACA+f,EAAA,KACAkB,EAAA,KACA1jB,EAAA,MAEA0pB,EAAA,SAAA7oB,GACAA,EAAAqjB,SAAA1qB,IAAAC,KAAAmC,UAAAI,KACAzD,KAAAgrB,SAGA0G,GACAC,WAAA,WACA3xB,KAAA8qB,OAAAxoB,KAAA,OAAAioB,IAAA,SAEAqH,YAAA,WACA5xB,KAAA8qB,OAAAxoB,KAAA,QAAAioB,IAAA,SAEAsH,cAAA,WACA7xB,KAAA8qB,OAAAxoB,KAAA,OAAAioB,IAAA,YAEAuH,eAAA,WACA9xB,KAAA8qB,OAAAxoB,KAAA,QAAAioB,IAAA,YAEAwH,gBAAA,WACA/xB,KAAA8qB,OAAAxoB,KAAA,SAAAioB,IAAA,aAGAgH,GACA5G,GAAA,WACA,GAAAqH,GAAAhyB,KAAAmwB,YAAAhd,IAAA,WACA8e,EAAAjyB,KAAAmwB,YAAAjW,SACAgY,GACA3R,MAAAvgB,KAAAmwB,YAAA/C,aACA/C,OAAArqB,KAAAmwB,YAAA9C,eAEA8E,GACA5R,MAAAlK,OAAAjR,QAAAmb,QACA8J,OAAAhU,OAAAjR,QAAAilB,SACA+H,WAAA/b,OAAAlW,UAAAiyB,aACAC,UAAAhc,OAAAlW,UAAAkyB,aAEAC,EAAA,SAAAhqB,GAkBA,MAjBA2U,GAAAsV,KAAAjqB,EAAAqnB,QAAA1S,EAAAqU,cAAA3B,QACA1S,EAAAuV,KAAAlqB,EAAAsnB,QAAA3S,EAAAqU,cAAA1B,SAiBAttB,KAAA2vB,EAAA3vB,KAAA2a,EAAAsV,KACAhI,IAAA0H,EAAA1H,IAAAtN,EAAAuV,MAKAL,GAAA5R,MAAA2R,EAAA3R,MAEA4R,EAAA9H,OAAA6H,EAAA7H,MAEApN,GAAAsV,KAAA,EACAtV,EAAAuV,KAAA,EAGAvV,EAAAwV,UAAApc,OACA,+EAEA4G,EAAAyV,QAAArc,OACA,oEAEA4G,EAAAwV,UAAAtf,KAAAqX,OAAAwH,IACA/U,EAAAyV,QAAAvf,KACA7Q,KAAA2vB,EAAA3vB,KACAioB,IAAA0H,EAAA1H,IACAhK,MAAA2R,EAAA3R,MACA8J,OAAA6H,EAAA7H,OACAG,OAAAwH,EAAA,IAGA3b,OAAAlW,SAAA+a,MACAiP,OAAAlN,EAAAwV,WACAtI,OAAAlN,EAAAyV,SAEAzV,EAAAkT,YAAA7N,SAAA,UAEAjM,OAAAlW,SAAA+a,MACAyP,GACAyE,EAAA,UAAA,kBAAApvB,KAAA6iB,WACA,SAAAva,GACA2U,EAAAyV,QAAAvf,IAAAmf,EAAAhqB,MAGAqiB,GACAyE,EAAA,QAAA,kBAAApvB,KAAA6iB,WACA,SAAAva,GACAipB,EAAA7D,IAAAjnB,KAAAwW,KAGA0N,GAAA,4BAAA3qB,KAAA6iB,WAAA,SAAAva,GACAipB,EAAA7D,IAAAjnB,KAAAwW,KAGA5G,OAAAlW,SAAA+a,MACA4V,KAAA,eAAA,MACA3d,IAAA,cAAA,QACAwX,GAAA,eAAA,IAEA+C,IAAA,WACA,GAAAiF,GAAA,WACA,GAAAzI,GAAAlqB,KAAA0yB,QAAAxY,QACAla,MAAA4yB,YAAA/B,WACA3G,EAAA5nB,MAAA+T,OAAAlW,UAAAiyB,aACAlI,EAAAK,KAAAlU,OAAAlW,UAAAkyB,aAEAryB,KAAAmwB,YAAAhd,IAAA+W,GACAlqB,KAAA4yB,YAAAtwB,KAAA4nB,EAAA5nB,KACAtC,KAAA4yB,YAAArI,IAAAL,EAAAK,IAEAL,EAAA,KAGAlqB,MAAAmwB,YAAA1C,YAAA,UACAkF,EAAAlsB,KAAAzG,MAEAA,KAAA0yB,QAAAzG,SACAjsB,KAAA0yB,QAAA,KACA1yB,KAAAyyB,UAAAxG,SACAjsB,KAAAyyB,UAAA,KAGApc,OAAAlW,SAAA+a,MACAwS,IAAA0B,EAAA,UAAA,kBAAApvB,KAAA6iB,YACA6K,IAAA0B,EAAA,QAAA,kBAAApvB,KAAA6iB,YACA6K,IAAA,4BAAA1tB,KAAA6iB,YAEAxM,OAAAlW,SAAA+a,MACA2X,WAAA,gBACA1f,IAAA,cAAA,QACAua,IAAA,eAEApE,EAAA7iB,KAAAzG,KAAAid,EAAA2V,aACA3V,KAAAjd,KACA+qB,MAAA,WAIA0G,GACA9G,GAAA,SAAAmI,GACA,GAAAd,GAAAhyB,KAAAmwB,YAAAhd,IAAA,WACA8e,EAAAjyB,KAAAmwB,YAAAjW,SACAgY,GACA3R,MAAAvgB,KAAAmwB,YAAA/C,aACA/C,OAAArqB,KAAAmwB,YAAA9C,eAQA0F,IALAxS,MAAAlK,OAAAjR,QAAAmb,QACA8J,OAAAhU,OAAAjR,QAAAilB,SACA+H,WAAA/b,OAAAlW,UAAAiyB,aACAC,UAAAhc,OAAAlW,UAAAkyB,cAGA9H,IAAA,SAAAjiB,GAKA,MAJA0qB,GAAAd,EAAA7H,OAAApN,EAAAuV,OACAvV,EAAAuV,KAAAN,EAAA7H,OAAA2I,GAGA1qB,EAAA2qB,UACAD,EAAAd,EAAA7H,OAAA,EAAApN,EAAAuV,OACAvV,EAAAuV,MAAAN,EAAA7H,OAAA2I,GAAA,IAIA1wB,KAAA2vB,EAAA3vB,KACAioB,IAAA0H,EAAA1H,IAAAtN,EAAAuV,KACAjS,MAAA2R,EAAA3R,MACA8J,OAAA6H,EAAA7H,OAAA,EAAApN,EAAAuV,OAEAlqB,EAAA4qB,QACAF,EAAAd,EAAA7H,OAAA,EAAApN,EAAAuV,OACAvV,EAAAuV,MAAAN,EAAA7H,OAAA2I,GAAA,IAIA1wB,KAAA2vB,EAAA3vB,KAAA2a,EAAAuV,KACAjI,IAAA0H,EAAA1H,IAAAtN,EAAAuV,KACAjS,MAAA2R,EAAA3R,MAAA,EAAAtD,EAAAuV,KACAnI,OAAA6H,EAAA7H,OAAA,EAAApN,EAAAuV,QAIAlwB,KAAA2vB,EAAA3vB,KACAioB,IAAA0H,EAAA1H,IAAAtN,EAAAuV,KACAjS,MAAA2R,EAAA3R,MACA8J,OAAA6H,EAAA7H,OAAApN,EAAAuV,OAIAW,OAAA,SAAA7qB,GAKA,MAJA0qB,GAAAd,EAAA7H,OAAApN,EAAAuV,OACAvV,EAAAuV,MAAAN,EAAA7H,OAAA2I,GAGA1qB,EAAA2qB,UACAD,EAAAd,EAAA7H,OAAA,EAAApN,EAAAuV,OACAvV,EAAAuV,OAAAN,EAAA7H,OAAA2I,GAAA,IAIA1wB,KAAA2vB,EAAA3vB,KACAioB,IAAA0H,EAAA1H,IAAAtN,EAAAuV,KACAjS,MAAA2R,EAAA3R,MACA8J,OAAA6H,EAAA7H,OAAA,EAAApN,EAAAuV,OAEAlqB,EAAA4qB,QACAF,EAAAd,EAAA7H,OAAA,EAAApN,EAAAuV,OACAvV,EAAAuV,OAAAN,EAAA7H,OAAA2I,GAAA,IAIA1wB,KAAA2vB,EAAA3vB,KAAA2a,EAAAuV,KACAjI,IAAA0H,EAAA1H,IAAAtN,EAAAuV,KACAjS,MAAA2R,EAAA3R,MAAA,EAAAtD,EAAAuV,KACAnI,OAAA6H,EAAA7H,OAAA,EAAApN,EAAAuV,QAIAlwB,KAAA2vB,EAAA3vB,KACAioB,IAAA0H,EAAA1H,IACAhK,MAAA2R,EAAA3R,MACA8J,OAAA6H,EAAA7H,OAAApN,EAAAuV,OAIAlwB,KAAA,SAAAgG,GAKA,MAJA8qB,GAAAlB,EAAA3R,MAAAtD,EAAAsV,OACAtV,EAAAsV,KAAAL,EAAA3R,MAAA6S,GAGA9qB,EAAA2qB,UACAG,EAAAlB,EAAA3R,MAAA,EAAAtD,EAAAsV,OACAtV,EAAAsV,MAAAL,EAAA3R,MAAA6S,GAAA,IAIA9wB,KAAA2vB,EAAA3vB,KAAA2a,EAAAsV,KACAhI,IAAA0H,EAAA1H,IACAhK,MAAA2R,EAAA3R,MAAA,EAAAtD,EAAAsV,KACAlI,OAAA6H,EAAA7H,SAEA/hB,EAAA4qB,QACAE,EAAAlB,EAAA3R,MAAA,EAAAtD,EAAAsV,OACAtV,EAAAsV,MAAAL,EAAA3R,MAAA6S,GAAA,IAIA9wB,KAAA2vB,EAAA3vB,KAAA2a,EAAAsV,KACAhI,IAAA0H,EAAA1H,IAAAtN,EAAAsV,KACAhS,MAAA2R,EAAA3R,MAAA,EAAAtD,EAAAsV,KACAlI,OAAA6H,EAAA7H,OAAA,EAAApN,EAAAsV,QAIAjwB,KAAA2vB,EAAA3vB,KAAA2a,EAAAsV,KACAhI,IAAA0H,EAAA1H,IACAhK,MAAA2R,EAAA3R,MAAAtD,EAAAsV,KACAlI,OAAA6H,EAAA7H,SAIAjf,MAAA,SAAA9C,GAKA,MAJA8qB,GAAAlB,EAAA3R,MAAAtD,EAAAsV,OACAtV,EAAAsV,MAAAL,EAAA3R,MAAA6S,GAGA9qB,EAAA2qB,UACAG,EAAAlB,EAAA3R,MAAA,EAAAtD,EAAAsV,OACAtV,EAAAsV,OAAAL,EAAA3R,MAAA6S,GAAA,IAIA9wB,KAAA2vB,EAAA3vB,KAAA2a,EAAAsV,KACAhI,IAAA0H,EAAA1H,IACAhK,MAAA2R,EAAA3R,MAAA,EAAAtD,EAAAsV,KACAlI,OAAA6H,EAAA7H,SAEA/hB,EAAA4qB,QACAE,EAAAlB,EAAA3R,MAAA,EAAAtD,EAAAsV,OACAtV,EAAAsV,OAAAL,EAAA3R,MAAA6S,GAAA,IAIA9wB,KAAA2vB,EAAA3vB,KAAA2a,EAAAsV,KACAhI,IAAA0H,EAAA1H,IAAAtN,EAAAsV,KACAhS,MAAA2R,EAAA3R,MAAA,EAAAtD,EAAAsV,KACAlI,OAAA6H,EAAA7H,OAAA,EAAApN,EAAAsV,QAIAjwB,KAAA2vB,EAAA3vB,KACAioB,IAAA0H,EAAA1H,IACAhK,MAAA2R,EAAA3R,MAAAtD,EAAAsV,KACAlI,OAAA6H,EAAA7H,SAIAsH,WAAA,SAAArpB,GASA,MARA8qB,GAAAlB,EAAA3R,MAAAtD,EAAAsV,OACAtV,EAAAsV,KAAAL,EAAA3R,MAAA6S,GAGAJ,EAAAd,EAAA7H,OAAApN,EAAAuV,OACAvV,EAAAuV,KAAAN,EAAA7H,OAAA2I,GAGA1qB,EAAA2qB,UAAA3qB,EAAA4qB,QACAF,EAAAd,EAAA7H,OAAA,EAAApN,EAAAuV,OACAvV,EAAAuV,MAAAN,EAAA7H,OAAA2I,GAAA,GAEAI,EAAAlB,EAAA3R,MAAA,EAAAtD,EAAAsV,OACAtV,EAAAsV,MAAAL,EAAA3R,MAAA6S,GAAA,IAIA9wB,KAAA2vB,EAAA3vB,KAAA2a,EAAAsV,KACAhI,IAAA0H,EAAA1H,IAAAtN,EAAAuV,KACAjS,MAAA2R,EAAA3R,MAAA,EAAAtD,EAAAsV,KACAlI,OAAA6H,EAAA7H,OAAA,EAAApN,EAAAuV,QAGAQ,EAAAd,EAAA7H,OAAA,EAAApN,EAAAuV,OACAvV,EAAAuV,MAAAN,EAAA7H,OAAA2I,GAAA,GAEAI,EAAAlB,EAAA3R,MAAA,EAAAtD,EAAAsV,OACAtV,EAAAsV,MAAAL,EAAA3R,MAAA6S,GAAA,IAIA9wB,KAAA2vB,EAAA3vB,KAAA2a,EAAAsV,KACAhI,IAAA0H,EAAA1H,IAAAtN,EAAAuV,KACAjS,MAAA2R,EAAA3R,MAAAtD,EAAAsV,KACAlI,OAAA6H,EAAA7H,OAAApN,EAAAuV,QAIAZ,YAAA,SAAAtpB,GASA,MARA8qB,GAAAlB,EAAA3R,MAAAtD,EAAAsV,OACAtV,EAAAsV,MAAAL,EAAA3R,MAAA6S,GAGAJ,EAAAd,EAAA7H,OAAApN,EAAAuV,OACAvV,EAAAuV,KAAAN,EAAA7H,OAAA2I,GAGA1qB,EAAA2qB,UAAA3qB,EAAA4qB,QACAF,EAAAd,EAAA7H,OAAA,EAAApN,EAAAuV,OACAvV,EAAAuV,MAAAN,EAAA7H,OAAA2I,GAAA,GAEAI,EAAAlB,EAAA3R,MAAA,EAAAtD,EAAAsV,OACAtV,EAAAsV,OAAAL,EAAA3R,MAAA6S,GAAA,IAIA9wB,KAAA2vB,EAAA3vB,KAAA2a,EAAAsV,KACAhI,IAAA0H,EAAA1H,IAAAtN,EAAAuV,KACAjS,MAAA2R,EAAA3R,MAAA,EAAAtD,EAAAsV,KACAlI,OAAA6H,EAAA7H,OAAA,EAAApN,EAAAuV,QAIAlwB,KAAA2vB,EAAA3vB,KACAioB,IAAA0H,EAAA1H,IAAAtN,EAAAuV,KACAjS,MAAA2R,EAAA3R,MAAAtD,EAAAsV,KACAlI,OAAA6H,EAAA7H,OAAApN,EAAAuV,OAIAX,cAAA,SAAAvpB,GASA,MARA8qB,GAAAlB,EAAA3R,MAAAtD,EAAAsV,OACAtV,EAAAsV,KAAAL,EAAA3R,MAAA6S,GAGAJ,EAAAd,EAAA7H,OAAApN,EAAAuV,OACAvV,EAAAuV,MAAAN,EAAA7H,OAAA2I,GAGA1qB,EAAA2qB,UAAA3qB,EAAA4qB,QACAE,EAAAlB,EAAA3R,MAAA,EAAAtD,EAAAsV,OACAtV,EAAAsV,MAAAL,EAAA3R,MAAA6S,GAAA,GAEAJ,EAAAd,EAAA7H,OAAA,EAAApN,EAAAuV,OACAvV,EAAAuV,OAAAN,EAAA7H,OAAA2I,GAAA,IAGA1wB,KAAA2vB,EAAA3vB,KAAA2a,EAAAsV,KACAhI,IAAA0H,EAAA1H,IAAAtN,EAAAuV,KACAjS,MAAA2R,EAAA3R,MAAA,EAAAtD,EAAAsV,KACAlI,OAAA6H,EAAA7H,OAAA,EAAApN,EAAAuV,QAIAlwB,KAAA2vB,EAAA3vB,KAAA2a,EAAAsV,KACAhI,IAAA0H,EAAA1H,IACAhK,MAAA2R,EAAA3R,MAAAtD,EAAAsV,KACAlI,OAAA6H,EAAA7H,OAAApN,EAAAuV,OAIAV,eAAA,SAAAxpB,GASA,MARA8qB,GAAAlB,EAAA3R,MAAAtD,EAAAsV,OACAtV,EAAAsV,MAAAL,EAAA3R,MAAA6S,GAGAJ,EAAAd,EAAA7H,OAAApN,EAAAuV,OACAvV,EAAAuV,MAAAN,EAAA7H,OAAA2I,GAGA1qB,EAAA2qB,UAAA3qB,EAAA4qB,QACAE,EAAAlB,EAAA3R,MAAA,EAAAtD,EAAAsV,OACAtV,EAAAsV,OAAAL,EAAA3R,MAAA6S,GAAA,GAEAJ,EAAAd,EAAA7H,OAAA,EAAApN,EAAAuV,OACAvV,EAAAuV,OAAAN,EAAA7H,OAAA2I,GAAA,IAGA1wB,KAAA2vB,EAAA3vB,KAAA2a,EAAAsV,KACAhI,IAAA0H,EAAA1H,IAAAtN,EAAAuV,KACAjS,MAAA2R,EAAA3R,MAAA,EAAAtD,EAAAsV,KACAlI,OAAA6H,EAAA7H,OAAA,EAAApN,EAAAuV,QAIAlwB,KAAA2vB,EAAA3vB,KACAioB,IAAA0H,EAAA1H,IACAhK,MAAA2R,EAAA3R,MAAAtD,EAAAsV,KACAlI,OAAA6H,EAAA7H,OAAApN,EAAAuV,SAKAF,EAAA,SAAAhqB,GAIA,MAHA2U,GAAAsV,KAAAjqB,EAAAqnB,QAAA1S,EAAAqU,cAAA3B,QACA1S,EAAAuV,KAAAlqB,EAAAsnB,QAAA3S,EAAAqU,cAAA1B,QAEAmD,EAAAD,GAAAxqB,IAGA8qB,EAAA,IACAJ,EAAA,IAEAK,GACA9I,IAAA,aACA4I,OAAA,aACA7wB,KAAA,aACA8I,MAAA,aACAumB,WAAA,cACAC,YAAA,cACAC,cAAA,cACAC,eAAA,cAGA7U,GAAAsV,KAAA,EACAtV,EAAAuV,KAAA,EAGAvV,EAAAwV,UAAApc,OACA,+EAEA4G,EAAAyV,QAAArc,OACA,oEAEA4G,EAAAwV,UAAAtf,KACAqX,OAAAwH,EACAsB,OAAAD,EAAAP,KAEA7V,EAAAyV,QAAAvf,KACA7Q,KAAA2vB,EAAA3vB,KACAioB,IAAA0H,EAAA1H,IACAhK,MAAA2R,EAAA3R,MACA8J,OAAA6H,EAAA7H,OACAG,OAAAwH,EAAA,EACAsB,OAAAD,EAAAP,KAEAzc,OAAAlW,SAAA+a,MACAiP,OAAAlN,EAAAwV,WACAtI,OAAAlN,EAAAyV,SACAzV,EAAAkT,YAAA7N,SAAA,UAEAjM,OAAAlW,SAAA+a,MACA4B,KACAsS,EAAA,UAAA,oBAAApvB,KAAA6iB,WACA,SAAAva,GACA2U,EAAAyV,QAAAvf,IAAAmf,EAAAhqB,MAGAwU,KACAsS,EAAA,QAAA,oBAAApvB,KAAA6iB,WACA,SAAAva,GACAmpB,EAAA/D,IAAAjnB,KAAAwW,KAGAH,KAAA,8BAAA9c,KAAA6iB,WAAA,SACAva,GAEAmpB,EAAA/D,IAAAjnB,KAAAwW,KAGA5G,OAAAlW,SAAA+a,MACA4V,KAAA,eAAA,MACA3d,IAAA,cAAA,QACA2J,KAAA,eAAA,IAEA4Q,IAAA,WACA,GAAAiF,GAAA,WACA,GAAAzI,GAAAlqB,KAAA0yB,QAAAxY,QACA7D,QAAAC,OAAA4T,GACA3J,MAAAvgB,KAAA0yB,QAAAnS,QACA8J,OAAArqB,KAAA0yB,QAAArI,WAEArqB,KAAA4yB,YAAA/B,WACA3G,EAAA5nB,MAAA+T,OAAAlW,UAAAiyB,aACAlI,EAAAK,KAAAlU,OAAAlW,UAAAkyB,aAEAryB,KAAAmwB,YAAAhd,IAAA+W,GAEAlqB,KAAA4yB,YAAAtwB,KAAA4nB,EAAA5nB,KACAtC,KAAA4yB,YAAArI,IAAAL,EAAAK,IACAvqB,KAAA4yB,YAAArS,MAAA2J,EAAA3J,MACAvgB,KAAA4yB,YAAAvI,OAAAH,EAAAG,OACArqB,KAAAqwB,EAAA,KAAAld,KACAkX,OAAAH,EAAAG,OAAArqB,KAAA4yB,YAAAW,eAEAvzB,KAAA4yB,YAAA1C,SACAlwB,KAAAqwB,EAAA,eAAAld,KACAkX,OAAAH,EAAAG,OAAArqB,KAAA4yB,YAAAW,eAEAvzB,KAAAqwB,EAAA,OAAAld,KACAkX,OAAAH,EAAAG,OAAArqB,KAAA4yB,YAAAW,gBAIArJ,EAAA,KAGAlqB,MAAAmwB,YAAA1C,YAAA,UACAkF,EAAAlsB,KAAAzG,MAEAA,KAAA0yB,QAAAzG,SACAjsB,KAAA0yB,QAAA,KACA1yB,KAAAyyB,UAAAxG,SACAjsB,KAAAyyB,UAAA,KAEAnJ,EAAA7iB,KAAAzG,KAAAid,EAAA2V,aACA3V,KAAAjd,KACA+qB,MAAA,WAGA1U,OAAAlW,SAAA+a,MACA8Q,OACAoD,EAAA,UAAA,oBAAApvB,KAAA6iB,YAEAmJ,OAAAoD,EAAA,QAAA,oBAAApvB,KAAA6iB,YACAmJ,OAAA,8BAAAhsB,KAAA6iB,YAEAxM,OAAAlW,SAAA+a,MACA2X,WAAA,gBACA1f,IAAA,cAAA,QACA6Y,OAAA,gBA0EAhsB,MAAA+hB,KAAA,WACA/hB,KAAAspB,eAAAzH,EAAAyH,eACAtpB,KAAAuwB,SAAA1O,EAAA0O,UAmBAvwB,KAAAgqB,KAAA,SAAA9f,EAAA+f,EAAA2B,GAmBA,MAlBA,mBAAAA,KAAAA,EAAA,GACA5rB,KAAAmwB,YAIAvE,EAAA,GAEA5rB,KAAAowB,aAAA,EACAzb,WACA,WACA3U,KAAAgqB,KAAA9f,EAAA+f,EAAA2B,EAAA,IACA9O,KAAA9c,MACA6hB,EAAAoH,cAIAjpB,KAAAowB,aAAA,GAdAlmB,EAAA+S,EAAA2V,YAAAvc,OAAAC,QAAA,KAAAuL,EAAA3X,GACA8f,EAAAvjB,KAAAzG,KAAAkK,EAAA+f,GACAjqB,KAAAowB,aAAA,GAcApwB,MAkBAA,KAAAgrB,MAAA,SAAAe,GACA,GAAA7hB,GAAAA,OAAAqf,EAAAA,MAgEA,OA9DAvpB,MAAAmwB,cACAjmB,EAAA+S,EAAA2V,YACA5yB,KAAAmwB,YAAA7N,SAAA,WACAjM,OAAAjR,QAAA4mB,OAAA,oBACA3V,OAAAjR,QAAA4mB,OAAA,mBAEArX,WACA,WAEA,GAAAzK,EAAAgmB,OAAA,CACA,GAAAsD,GAAAxzB,KAAAqwB,EAAA,MACA,IAAAmD,EAAA,CACA,GAAAC,GAAAD,EAAAvY,IAAA,GACAyY,EAAAD,EAAAE,gBACAF,EAAAE,gBACAF,EAAAG,cAAAzzB,QAEA,KACAkwB,EAAAqD,EAAAxY,MACA2Y,WACA9tB,KAAA,WACAsqB,EAAArwB,MAAAisB,WAEA,MAAA3jB,IACAorB,EAAAI,UAAA,GACAN,EAAA1C,KAAA,MAAA,eAAA7E,SAGA7mB,OAAA2uB,gBAAA3uB,OAAA2uB,kBAIA/zB,KAAAmwB,YAAAlE,SACAjsB,KAAAmwB,YAAA,KAGAnwB,KAAAowB,aACA9G,EAAA7iB,KAAAzG,KAAAkK,GACA+S,KAAAjd,KACA+qB,MAAA,UAIAgB,GAAA5qB,EAAA4F,WAAAglB,EAAA9B,YACAV,GACAtM,KAAAjd,KACAggB,GAAA9V,EAAA8V,GACA6I,MAAA3e,EAAA2e,MACAtI,MAAArW,EAAAqW,MACA8J,OAAAngB,EAAAmgB,OACAU,MAAA,QACAsF,EAAArwB,KAAAqwB,GAEAtE,EAAA9B,SAAAxjB,KAAA8iB,EAAAA,KAEAzM,KAAA9c,MACA6hB,EAAAoH,cAIAjpB,KAAAg0B,WAAA,EAEAh0B,MAOAA,KAAAi0B,SAAA,WACA,MAAA,UAAAnE;AACA,GAAA9vB,KAAAg0B,aAAA,EAAA,CACA,GAAA9pB,GAAA+S,EAAA2V,WACA,oBAAA9C,KACAA,EAAAjO,EAAAiO,kBAEA9vB,KAAAg0B,WAAA,EACAh0B,KAAAqwB,EAAAnV,KAAA8V,OACA/T,EAAA2V,YAAAsB,eAAAhqB,EAAAmgB,OACApN,EAAA2V,YAAAvI,OAAA,EACAqH,EAAA5B,GAAArpB,KAAAzG,MAEAspB,EAAA7iB,KAAAzG,KAAAkK,GACA+S,KAAAjd,KACA+qB,MAAA,aAIA,MAAA/qB,UAQAA,KAAAm0B,QAAA,WACA,GAAAjqB,GAAA+S,EAAA2V,WAaA,OAZA5yB,MAAAg0B,YACAh0B,KAAAg0B,WAAA,EACAh0B,KAAAqwB,EAAAnV,KAAA+V,OACAhU,EAAA2V,YAAAvI,OAAApN,EAAA2V,YAAAsB,eACAjX,EAAA2V,YAAAsB,eAAA1tB,OAEAxG,KAAA8qB,OAAAxoB,KAAA,SAAAioB,IAAA,WACAjB,EAAA7iB,KAAAzG,KAAAkK,GACA+S,KAAAjd,KACA+qB,MAAA,aAGA/qB,MASAA,KAAAmT,IAAA,SAAAA,GAYA,MAXAnT,MAAAmwB,cAAAlT,EAAA0T,aACA3wB,KAAAmwB,YAAAhd,IAAAA,GACA,mBAAAA,GAAAoN,QACAtD,EAAA2V,YAAArS,MAAApN,EAAAoN,OAEA,mBAAApN,GAAAkX,SACApN,EAAA2V,YAAAvI,OAAAlX,EAAAkX,QAGArqB,KAAA8qB,SAEA9qB,MAQAA,KAAAo0B,eAAA,SAAAC,GAGA,MAFApX,GAAA2V,YAAAvc,OAAAC,UAAA2G,EAAA2V,YAAAyB,GACAr0B,KAAA8qB,QACA9qB,MAcAA,KAAA8qB,MAAA,WACA,MAAA,UAAAR,EAAAhiB,GACA,IAAAtI,KAAAmwB,YAAA,MAAAnwB,KAEA,IAAAkK,GAAA+S,EAAA2V,YACA1I,GACA3J,MAAArW,EAAAqW,MACA8J,OAAAngB,EAAAmgB,QAGAsG,EAAAzmB,EAAAmnB,aAAA,SAAAiD,GACA,MAAA,mBAAAA,KAEAnzB,EAAA4F,WAAAutB,GACAA,IADA,SAGApqB,EAAAymB,WA4EA,OA1EAA,IACAzmB,EAAAwmB,QAAA1wB,KAAAqwB,EAAAK,OAAAO,OACA/mB,EAAAwmB,QACAxmB,EAAAqpB,aAAAvzB,KAAAqwB,EAAAK,OAAArD,cACAnD,EAAAG,QAAAngB,EAAAqpB,cAEArpB,EAAAqpB,aAAA,EAEArJ,EAAA3J,MAAAlK,OAAAjR,QAAAmb,QACA2J,EAAAG,OAAAngB,EAAAmgB,OACAH,EAAA5nB,KAAA,EACA4nB,EAAAK,IAAA,IAEArgB,EAAAwmB,QAAA1wB,KAAAqwB,EAAAK,OAAAO,OACA3G,GACAjU,OAAAC,QAAA,EAAApM,EAAAogB,SAAAA,GAGApgB,EAAAwmB,QACAxmB,EAAAqpB,aAAAvzB,KAAAqwB,EAAAK,OAAArD,cACAnD,EAAAG,QAAAngB,EAAAqpB,cAEArpB,EAAAqpB,aAAA,EAIA,QAAArpB,EAAAogB,SAAAhoB,KACA4nB,EAAA5nB,KAAA4H,EAAAogB,SAAAuF,QAAA,EACA,SAAA3lB,EAAAogB,SAAAhoB,KAEA4nB,EAAA5nB,KACA+T,OAAAjR,QAAAmb,QACA2J,EAAA3J,OACArW,EAAAogB,SAAAuF,QAAA,GACA,UAAA3lB,EAAAogB,SAAAhoB,KACA4nB,EAAA5nB,KAAA+T,OAAAjR,QAAAmb,QAAA,EAAA2J,EAAA3J,MAAA,EAEA2J,EAAA5nB,KAAA4H,EAAAogB,SAAAhoB,MAAA,EAGA,OAAA4H,EAAAogB,SAAAC,IACAL,EAAAK,IAAArgB,EAAAogB,SAAAuF,QAAA,EACA,UAAA3lB,EAAAogB,SAAAC,IACAL,EAAAK,IACAlU,OAAAjR,QAAAilB,SACAH,EAAAG,QACAngB,EAAAogB,SAAAuF,QAAA,GACA,UAAA3lB,EAAAogB,SAAAC,IACAL,EAAAK,IAAAlU,OAAAjR,QAAAilB,SAAA,EAAAH,EAAAG,OAAA,EAEAH,EAAAK,IAAArgB,EAAAogB,SAAAC,KAAA,EAEAL,EAAA5nB,KAAA,IAAA4nB,EAAA5nB,KAAA,GACA4nB,EAAAK,IAAA,IAAAL,EAAAK,IAAA,GAEArgB,EAAA2mB,WACA3G,EAAAK,KAAAlU,OAAAjR,QAAAitB,YACAnI,EAAA5nB,MAAA+T,OAAAjR,QAAAgtB,eAIApyB,KAAAmwB,YAAAhd,IAAA+W,GAEAlqB,KAAAqwB,EAAA,KAAAld,KACAkX,OAAAH,EAAAG,QAAAngB,EAAAqpB,cAAA,KAGArpB,EAAAgmB,SACAlwB,KAAAqwB,EAAA,eAAAld,KACAkX,OAAAH,EAAAG,OAAAngB,EAAAqpB,eAEAvzB,KAAAqwB,EAAA,OAAAld,KAAAkX,OAAAH,EAAAG,OAAAngB,EAAAqpB,gBAGAvzB,SAKAA,KAAAqiB,KAAA,WACAoG,EAAA8L,eAAA9L,EAAA8L,mBACA9L,EAAA8L,eAAAztB,KAAA9G,MAEA8C,WAAA3B,EAAA0F,SAAA/D,UAAA,KACA9C,KAAA4hB,UAAA9e,UAAA,KAEAyK,MAAAvN,KAAA8C,gBAKAqsB,EAAAluB,IAAAwgB,GAAA+S,SCnuCA,WACA,GAAArF,GAAAluB,IAAAwgB,GAAA+S,MAEA1H,EAAA,WACA,MAAA,uzEA+CAqC,GAAApF,MACA+C,QAAAA,EAEA7R,IAAA,SAAAsR,EAAA7C,EAAA4C,GACA,MAAArrB,KAAAiiB,SAAAuE,OAAA0H,EAAApF,KAAAwC,GAAA9lB,KAAAzG,KAAAssB,GAAA5C,QCvDA,WAEA,GAAAjB,GAAAxnB,IAAAwgB,GACAtgB,EAAAF,IAAA2G,KACA6sB,EAAAA,MAEAhM,GAAAnG,UACA9f,UAAA,YACA,WA0DA,MAAA,YACA,GAAAya,GAAAjd,KACA6hB,EAAAA,OACA6S,EAAA,CAEA10B,MAAA6iB,WAAA5hB,IAAAI,UACArB,KAAAmrB,OAAA,KACAnrB,KAAAgb,aACAhb,KAAA20B,gBACA30B,KAAA40B,iBACA50B,KAAA60B,aACA70B,KAAA80B,YACAva,MAAA,GAAAC,IAAA,IAEAxa,KAAA2hB,QACAiH,eAAA,QACAC,MAAA,UACAkM,YAAA,EACAC,KAAA,MACAC,WAAA,aACAC,YAAA,GAAAnsB,MACAkgB,YAAA,IACAkM,YACAC,cAAA,KACAC,mBAAA,KACAC,cAAA,KACAC,YAAA,GAEAxM,MACAyM,YAAA,kBACAC,aAAA,mBACAC,SAAA,KACAC,OAAA10B,IAAAC,KAAAy0B,SAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,MAAA,OACAC,QAAA,MAEAC,gBAAA,EACAC,WAAA,MACAC,mBAAA,UACAC,mBAAA,UAGAnU,EAAA7hB,KAAA2hB,MAEA,IAAA2H,GAAA,SAAApf,EAAAqf,GACArf,GAAAA,EAAAof,eACApf,EAAAof,eAAA7iB,KAAA8iB,EAAAA,GAEAvpB,KAAAspB,gBACAtpB,KAAAspB,eAAA7iB,KAAA8iB,EAAAA,GAGAA,EAAA,MAEA0M,EAAA,WACA,GACAvM,GAAArT,OAAAC,QAAA,KAAAuL,GACAqU,cACAC,qBAGAzM,GAAAyM,iBAAA,OAAAzM,EAAAwM,WAAA,OAAA/0B,EAAA4R,UAAA8O,EAAAsT,WAAAC,eACA1L,EAAAyM,iBAAA,eAAAzM,EAAAwM,WAAA,eAAA/0B,EAAA4R,UAAA8O,EAAAsT,WAAAC,eACA1L,EAAAyM,iBAAA,MAAAh1B,EAAA4R,UAAA8O,EAAAsT,WAAAC,eAEA1L,EAAAwM,WAAA/0B,EAAAgS,IAAAuW,EAAAwM,YACAxM,EAAAyM,iBAAAh1B,EAAAgS,IAAAuW,EAAAyM,iBAEA,KACA,MAAA1B,GAAA1K,KAAA9O,IAAAxU,KAAAzG,KAAA,YAAA0pB,GADA,QAIAA,EAAA,OAGA0M,EAAA,WACA,GAIAC,GAAAC,EAHA3kB,EAAAxQ,EAAAiI,KAAAyY,EAAAqT,aACAznB,EAAA,GACApE,EAAA,EAkDA,OA/CAwY,GAAA0U,UACA,OAAA1U,EAAAmT,MAAA,KAAAnT,EAAAmT,MACAvnB,EAAAoU,EAAA0U,QAAAb,SAAA7T,EAAA0U,QAAAb,SAAAxzB,QAAA,KAAAyP,EAAA1C,eAAA0C,EAAA1C,cACA5F,EAAAwY,EAAA0U,QAAAC,UAAA3U,EAAA0U,QAAAC,UAAAt0B,QAAA,KAAA2f,EAAAkH,KAAA4M,OAAAhkB,EAAAnI,aAAAqY,EAAAkH,KAAA4M,OAAAhkB,EAAAnI,YAEAxJ,KAAAqwB,EAAA,mBAAAoG,KAAA,WACA,MAAA5U,GAAA0U,QAAAG,UACA,sCAAAjpB,EAAA,8CACApE,EAAA,UAGA,uCAAAA,EAAA,6CACAoE,EAAA,eAKA,SAAAoU,EAAAmT,MAAA,KAAAnT,EAAAmT,MACAvnB,EAAAoU,EAAA0U,QAAAb,SAAA7T,EAAA0U,QAAAb,SAAAxzB,QAAA,KAAAyP,EAAA1C,eAAA0C,EAAA1C,cACAjP,KAAAqwB,EAAA,mBAAAoG,KAAA,sCAAAhpB,EAAA,YAEA,QAAAoU,EAAAmT,MAAA,KAAAnT,EAAAmT,OACAqB,EAAAxU,EAAA0U,QAAAb,SAAA7T,EAAA0U,QAAAb,SAAAxzB,QAAA,KAAAyP,EAAA1C,cAAA,IAAA0C,EAAA1C,cAAA,GACAqnB,EAAAzU,EAAA0U,QAAAb,SAAA7T,EAAA0U,QAAAb,SAAAxzB,QAAA,KAAA8J,OAAA2F,EAAA1C,eAAA,GAAAjD,OAAA2F,EAAA1C,eAAA,EACAjP,KAAAqwB,EAAA,mBAAAoG,KAAAJ,EAAA,MAAAC,IAGAt2B,KAAAqwB,EAAA,mBAAA3F,KAAA,2BAAAC,GAAA9I,EAAA+G,eAAA,SAAAtgB,GACA,GAIA0sB,GAJA7J,EAAAhqB,EAAAmR,eAAAhK,EAAA6iB,OAAA,SAAAA,GACA,GAAAA,EAAArY,aAAA,yBACA,OAAA,GAGAqY,KACA6J,EAAA7J,EAAArY,aAAA,yBACA9S,KAAA22B,WAAA3B,IAEA7J,EAAA,KACA6J,EAAA,MACAlY,KAAA9c,QAGA2R,EAAA,KACAlE,EAAA,KACApE,EAAA,KACAgtB,EAAA,KACAC,EAAA,KACAt2B,MAEA42B,EAAA,SAAAC,GACA,GAgBAC,GAGA1wB,EACAqB,EAAAsvB,EAGArN,EACAK,EAvBAiN,EAAA71B,EAAAiI,KAAAytB,GACAI,EAAA,GAAAluB,MAAAiuB,EAAA/nB,cAAA+nB,EAAAxtB,WAAA,EAAA,IACA0tB,EAAArV,EAAAqT,YACAiC,EAAA,WACA,GAAAC,GAAAH,EAAA/lB,QACA,IAAAkmB,IAAAA,EAAA,GACAA,GAAAvV,EAAAkT,WAEA,KACA,MAAA5zB,GAAAiI,KAAA6tB,GAAAI,KAAAlpB,GAAAipB,KADA,QAIAA,EAAA,SAIAE,EAAAN,EAAAxtB,WACA+tB,KAGAC,EAAAx3B,KAAAqwB,EAAA,KAAA9P,QACAkX,EAAAxrB,KAAAG,MAAAorB,GAAA,EAAA,GA2BA,KAvBA3V,EAAAsT,WAAA9K,SACAoN,EAAAt2B,EAAAwK,OAAAkW,EAAAsT,WAAA9K,QAAAlpB,EAAAwK,OAAAkW,EAAAsT,WAAAG,gBAGAiC,EAAA,OAAAtrB,KAAAG,MAAAqrB,EAAA,GAAA,EAAAt2B,EAAAwK,OAAAkW,EAAAsT,WAAAI,aAAA,KACAgC,EAAA,eAAAA,EAAA,OACAA,EAAA,QAAAp2B,EAAA4R,UAAA8O,EAAAsT,WAAAI,aAEA7L,GACArlB,aAAAuS,OAAA3V,IAAAC,KAAAmD,WACAqzB,SAGA7V,EAAAkT,cACArL,EAAArlB,UAAAqlB,EAAArlB,UAAAuS,OAAA8S,EAAArlB,UAAAuI,MAAA,EAAAiV,EAAAkT,cAAAzW,OAAAuD,EAAAkT,cAGArL,EAAArlB,UAAAiP,QAAA,SAAA2D,GACAA,EAAAqe,cAAAn0B,EAAA4R,UAAA8O,EAAAsT,WAAAG,iBAGAwB,EAAAK,EACA/wB,EAAA,EACAA,EAAA,GAAA,CAEA,IADAqB,EAAA,EACAA,EAAA,GAAA,CACAsvB,GAAA,GAAAtvB,EAAAoa,EAAAkT,cAAA,CACA,IACA4C,GAAA,GAAAx2B,EAAAiI,KAAA0tB,GAAAc,SAAA/V,EAAAoT,aACA4C,GACAC,IAAA1xB,EACA2xB,IAAAtwB,EACAuwB,cAAA,GAAAvwB,EACAkwB,SAAA,GAAAA,EACAM,cAAApW,EAAAkH,KAAA6M,QAAA1zB,QAAA,KAAA40B,EAAArtB,WACA8tB,WAAAp2B,EAAAgS,IAAAokB,GACAjV,SAAA,WAEA,GAAA4V,GAAA,EA2BA,OAzBArW,GAAAsW,WAEAD,GADAjb,EAAA2X,cAAA+C,GACAb,EAAAttB,YAAA8tB,EAAA,QAAA,GAGA,WAIAR,EAAAttB,YAAA8tB,IAEAY,GADAP,GAAAx2B,EAAAiI,KAAA8tB,GAAAU,SAAA,aACA,SAEA,QAGA,GAAAd,EAAA5lB,WACAgnB,GAAA,WAEA,GAAApB,EAAA5lB,WACAgnB,GAAA,cAKAA,KAEA,IACA,WACA,MAAAjb,GAAA4X,UAAA8C,GAAA1a,EAAA4X,UAAA8C,GAAA9O,OAAAhH,EAAAkU,mBAAA,MAEA,IACA,WACA,MAAA9Y,GAAA0X,aAAAgD,GAAA,eAAA,MAGAjO,GAAAgO,KAAA5wB,KAAA+wB,GAEApwB,IACAqvB,EAAA31B,EAAAiI,KAAA0tB,GAAAO,KAAAlpB,EAAA,KAEAwpB,EAAA,KACAE,EAAA,KAEAzxB,IAEA2jB,EAAA0K,EAAA1K,KAAA9O,IAAAxU,KAAAzG,KAAA,UAAA0pB,GACA1pB,KAAAqwB,EAAA,KAAAoG,KAAA1M,GACA/pB,KAAAqwB,EAAA,KAAA3F,KAAA,6BAAAC,GAAA9I,EAAA+G,eAAA,SAAAtgB,GACAA,EAAAA,GAAAlD,OAAAsO,MACA0kB,EAAA3xB,KAAAwW,EAAA3U,EAAA,QACAnH,EAAAsS,UAAAnL,KAGAtI,KAAA80B,YACAva,MAAA4c,EAAA3c,IAAAsc,GAGAxN,EAAA7iB,KAAAzG,KAAA,MACAid,KAAAjd,KACA+wB,OAAA,WACA+D,WAAA90B,KAAA80B,aAEAsB,EAAA3vB,KAAAzG,MAEAg3B,EAAA,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KACAL,EAAA,KACAQ,EAAA,KACAC,EAAA,KACAnxB,EAAA,KACAqB,EAAA,KACA+vB,EAAA,KACAC,EAAA,KACA/N,EAAA,KACAK,EAAA,MAEAsO,EAAA,SAAAxB,GACA,GAIAzwB,GACAqB,EACAuK,EACAsmB,EAGA5O,EACAK,EAVAiN,EAAA71B,EAAAiI,KAAAytB,GACA0B,EAAAvB,EAAAxtB,WACA+tB,KAKAC,EAAAx3B,KAAAqwB,EAAA,KAAA9P,QACAkX,EAAAxrB,KAAAG,MAAAorB,GAAA,EAAA,GAqBA,KAjBA3V,EAAAsT,WAAA9K,SACAoN,EAAAt2B,EAAAwK,OAAAkW,EAAAsT,WAAA9K,QAAAlpB,EAAAwK,OAAAkW,EAAAsT,WAAAG,gBAGAiC,EAAA,OAAAtrB,KAAAG,MAAAqrB,EAAA,GAAA,EAAAt2B,EAAAwK,OAAAkW,EAAAsT,WAAAI,aAAA,KACAgC,EAAA,eAAAA,EAAA,OACAA,EAAA,QAAAp2B,EAAA4R,UAAA8O,EAAAsT,WAAAI,aAEA7L,GACA4L,cAAAn0B,EAAA4R,UAAA8O,EAAAsT,WAAAG,eACAkD,aAAA3W,EAAAkH,KAAA0M,aACAiC,SAGAY,EAAA,EACAtmB,EAAA,EACA5L,EAAA,EACAA,EAAA,GAAA,CAEA,IADAqB,EAAA,EACAA,EAAA,GAAA,CACA,GACAgxB,IACAX,IAAA1xB,EACA2xB,IAAAtwB,EACAixB,aAAA,GAAAjxB,EACA6vB,UAAAN,EAAA/nB,cAAA,IAAA9N,EAAA2P,SAAAkB,EAAA,EAAA,GAAA,MACA2mB,eAAA9W,EAAAkH,KAAA4M,OAAA3jB,GACAulB,WAAAp2B,EAAAgS,IAAAokB,GACAjV,SAAA,WACA,MAAAT,GAAAsW,WACAlb,EAAA2X,cAAA5iB,GAAA,OAAA,UAGA,UAGA,IACA,WACA,MAAAA,IAAAumB,EAAA,QAAA,MAEA,IACA,WACA,MAAAtb,GAAA4X,UAAA7iB,GAAAiL,EAAA4X,UAAA7iB,GAAA6W,OAAAhH,EAAAkU,mBAAA,MAGArM,GAAAgO,KAAA5wB,KAAA2xB,GACAzmB,IACAvK,IACAgxB,EAAA,KAEAryB,IAEA2jB,EAAA0K,EAAA1K,KAAA9O,IAAAxU,KAAAzG,KAAA,YAAA0pB,GACA1pB,KAAAqwB,EAAA,KAAAoG,KAAA1M,GACA/pB,KAAAqwB,EAAA,KAAA3F,KAAA,8BAAAC,GAAA9I,EAAA+G,eAAA,SAAAtgB,GACAA,EAAAA,GAAAlD,OAAAsO,MACA0kB,EAAA3xB,KAAAwW,EAAA3U,EAAA,SACAnH,EAAAsS,UAAAnL,KAGAtI,KAAA80B,YACAva,MAAAyc,EAAA/nB,cAAA,IAAA9N,EAAA2P,SAAAwnB,EAAA,EAAA,GACA9d,IAAAwc,EAAA/nB,cAAA,IAAA9N,EAAA2P,SAAAkB,EAAA,IAGAsX,EAAA7iB,KAAAzG,KAAA,MACAid,KAAAjd,KACA+wB,OAAA,aACA+D,WAAA90B,KAAA80B,aAEAsB,EAAA3vB,KAAAzG,MAEAg3B,EAAA,KACAuB,EAAA,KACAhB,EAAA,KACAnxB,EAAA,KACAqB,EAAA,KACAuK,EAAA,KACAsmB,EAAA,KACAd,EAAA,KACAC,EAAA,KACA/N,EAAA,KACAK,EAAA,MAEA6O,EAAA,SAAA/B,GACA,GAIAzwB,GACAqB,EACAsK,EACA8mB,EAGAnP,EACAK,EAVAiN,EAAA71B,EAAAiI,KAAAytB,GACAiC,EAAA9B,EAAA/nB,cACAsoB,KAKAC,EAAAx3B,KAAAqwB,EAAA,KAAA9P,QACAkX,EAAAxrB,KAAAG,MAAAorB,GAAA,EAAA,GAqBA,KAjBA3V,EAAAsT,WAAA9K,SACAoN,EAAAt2B,EAAAwK,OAAAkW,EAAAsT,WAAA9K,QAAAlpB,EAAAwK,OAAAkW,EAAAsT,WAAAG,gBAGAiC,EAAA,OAAAtrB,KAAAG,MAAAqrB,EAAA,GAAA,EAAAt2B,EAAAwK,OAAAkW,EAAAsT,WAAAI,aAAA,KACAgC,EAAA,eAAAA,EAAA,OACAA,EAAA,QAAAp2B,EAAA4R,UAAA8O,EAAAsT,WAAAI,aAEA7L,GACA4L,cAAAn0B,EAAA4R,UAAA8O,EAAAsT,WAAAG,eACAkD,aAAA3W,EAAAkH,KAAAyM,YACAkC,SAGAmB,EAAAC,EAAA,GACA/mB,EAAA+mB,EAAA,GACA1yB,EAAA,EACAA,EAAA,GAAA,CAEA,IADAqB,EAAA,EACAA,EAAA,GAAA,CACA,GACAsxB,IACAjB,IAAA1xB,EACA2xB,IAAAtwB,EACAixB,aAAA,GAAAjxB,EACAuxB,SAAAjnB,EAAA,IAAA5Q,EAAA2P,SAAAkmB,EAAAxtB,WAAA,EAAA,GAAA,MACAyvB,cAAApX,EAAAkH,KAAA2M,SAAAxzB,QAAA,KAAA6P,GACAwlB,WAAAp2B,EAAAgS,IAAAokB,GACAjV,SAAA,WACA,MAAAT,GAAAsW,WACAlb,EAAA2X,cAAA7iB,GAAA,OAAA,UAGA,UAGA,IACA,WACA,MAAAA,IAAA+mB,EAAA,QAAA,MAEA,IACA,WACA,MAAA7b,GAAA2X,cAAA7iB,GAAAkL,EAAA2X,cAAA7iB,GAAA8W,OAAAhH,EAAAkU,mBAAA,MAGArM,GAAAgO,KAAA5wB,KAAAiyB,GACAhnB,IACAtK,IACAsxB,EAAA,KAEA3yB,IAEA2jB,EAAA0K,EAAA1K,KAAA9O,IAAAxU,KAAAzG,KAAA,WAAA0pB,GACA1pB,KAAAqwB,EAAA,KAAAoG,KAAA1M,GACA/pB,KAAAqwB,EAAA,KAAA3F,KAAA,6BAAAC,GAAA9I,EAAA+G,eAAA,SAAAtgB,GACAA,EAAAA,GAAAlD,OAAAsO,MACA0kB,EAAA3xB,KAAAzG,KAAAsI,EAAA,QACAnH,EAAAsS,UAAAnL,KAGAtI,KAAA80B,YACAva,MAAAse,EAAAre,IAAAzI,EAAA,GAGAuX,EAAA7iB,KAAAzG,KAAA,MACAid,KAAAjd,KACA+wB,OAAA,YACA+D,WAAA90B,KAAA80B,aAEAsB,EAAA3vB,KAAAzG,MAEAg3B,EAAA,KACA8B,EAAA,KACAvB,EAAA,KACAnxB,EAAA,KACAqB,EAAA,KACAsK,EAAA,KACA8mB,EAAA,KACArB,EAAA,KACAC,EAAA,KACA/N,EAAA,KACAK,EAAA,MAEAqO,EAAA,SAAA9vB,EAAA0sB,EAAA7J,EAAArjB,GACA,GACAoxB,GACAC,EACAhB,CAEAnD,GAAAA,GAAA,OACA7J,EAAAhqB,EAAAmR,eAAAhK,EAAA6iB,OAAA,SAAAA,GACA,GAAAA,EAAArY,aAAA,sBAAAkiB,GACA,OAAA,IAGA7J,IACArjB,EAAAqjB,EAAArY,aAAA,sBAAAkiB,GAEAmE,EAAAh4B,EAAAiI,KAAAtB,GAAA8vB,SAAA/V,EAAAoT,aACAkD,GAAA,EACAzD,EAAA7S,EAAAgU,eAAA10B,EAAA6G,SAAA6Z,EAAAgU,gBAAAhU,EAAAgU,eAAA,EAAA,EAEAhU,EAAAsW,aACAlb,EAAA2X,cAAAuE,KAAAhB,GAAA,IAGA,QAAAnD,EACAmD,IAEAlb,EAAAjC,UAAA1U,QAAAouB,IACAwE,EAAAjc,EAAAjC,UAAAsD,OAAA,EAAArB,EAAAjC,UAAA1U,QAAAouB,EAAA,IACAwE,EAAA5lB,QAAA,SAAAnF,GACA8O,EAAAoT,EAAA,KAAA3F,KAAA,6BAAAvpB,EAAAiI,KAAA+E,GAAAypB,SAAA/V,EAAAoT,aAAA,MAAAxH,YAAA,mBAIApX,OAAA8U,GAAA7I,SAAA,gBACArF,EAAAjC,UAAAlU,KAAAgB,GAEAmV,EAAAwO,SACAxO,EAAAwO,QAAAhlB,MACAwW,KAAAjd,KAAAoJ,KAAAtB,EAAAqjB,OAAAnrB,KAAAmrB,OAAAiO,YAAAjO,KAKA,SAAA6J,EACA,SAAAnT,EAAAiU,WACAqC,IACAlb,EAAAjC,UAAA1U,QAAAouB,IACAwE,EAAAjc,EAAAjC,UAAAsD,OAAA,EAAArB,EAAAjC,UAAA1U,QAAAouB,EAAA,IACAwE,EAAA5lB,QAAA,SAAAnF,GACA8O,EAAAoT,EAAA,KAAA3F,KAAA,8BAAAvpB,EAAAiI,KAAA+E,GAAAypB,SAAA,eAAA,MAAAnK,YAAA,qBAIApX,OAAA8U,GAAA7I,SAAA,kBACArF,EAAAjC,UAAAlU,KAAAgB,GAEAmV,EAAAwO,SACAxO,EAAAwO,QAAAhlB,MACAwW,KAAAjd,KAAAoJ,KAAAtB,EAAAqjB,OAAAnrB,KAAAmrB,OAAAiO,YAAAjO,KAMAlO,EAAA0Z,WAAA,MAAA7uB,GAGA,QAAAktB,IACA,QAAAnT,EAAAiU,WACAqC,IACAlb,EAAAjC,UAAA1U,QAAAouB,IACAwE,EAAAjc,EAAAjC,UAAAsD,OAAA,EAAArB,EAAAjC,UAAA1U,QAAAouB,EAAA,IACAwE,EAAA5lB,QAAA,SAAAnF,GACA8O,EAAAoT,EAAA,KAAA3F,KAAA,6BAAAvpB,EAAAiI,KAAA+E,GAAAypB,SAAA,eAAA,MAAAnK,YAAA,oBAIApX,OAAA8U,GAAA7I,SAAA,iBACArF,EAAAjC,UAAAlU,KAAAgB,GAEAmV,EAAAwO,SACAxO,EAAAwO,QAAAhlB,MACAwW,KAAAjd,KAAAoJ,KAAAtB,EAAAqjB,OAAAnrB,KAAAmrB,OAAAiO,YAAAjO,KAMAlO,EAAA0Z,WAAA,QAAA7uB,KAKAktB,EAAA,KACA7J,EAAA,KACArjB,EAAA,KACAoxB,EAAA,KACAC,EAAA,KACAhB,EAAA,MAEA3H,EAAA,SAAAloB,EAAA6iB,EAAArjB,GACAqjB,EAAAhqB,EAAAmR,eAAAhK,EAAA6iB,OAAA,SAAAA,GACA,GAAAA,EAAArY,aAAA,sBACA,OAAA,IAGAqY,IACArjB,EAAAqjB,EAAArY,aAAA,sBACA,OAAA+O,EAAAmT,MAAA,KAAAnT,EAAAmT,MACA,QAAAltB,EACA+Z,EAAAqT,YAAA/zB,EAAAiI,KAAAyY,EAAAqT,aAAAmC,KAAArlB,QAGA6P,EAAAqT,YAAA/zB,EAAAiI,KAAAyY,EAAAqT,aAAAmC,KAAArlB,EAAA,KAEA4kB,EAAAnwB,KAAAzG,KAAA6hB,EAAAqT,cAEA,SAAArT,EAAAmT,MAAA,KAAAnT,EAAAmT,MACA,QAAAltB,EACA+Z,EAAAqT,YAAA/zB,EAAAiI,KAAAyY,EAAAqT,aAAAmC,KAAAtlB,QAGA8P,EAAAqT,YAAA/zB,EAAAiI,KAAAyY,EAAAqT,aAAAmC,KAAAtlB,EAAA,KAEAsmB,EAAA5xB,KAAAzG,KAAA6hB,EAAAqT,cAEA,QAAArT,EAAAmT,MAAA,KAAAnT,EAAAmT,OACA,QAAAltB,EACA+Z,EAAAqT,YAAA/zB,EAAAiI,KAAAyY,EAAAqT,aAAAmC,KAAAtlB,SAGA8P,EAAAqT,YAAA/zB,EAAAiI,KAAAyY,EAAAqT,aAAAmC,KAAAtlB,EAAA,MAEA6mB,EAAAnyB,KAAAzG,KAAA6hB,EAAAqT,eAIA/J,EAAA,KACArjB,EAAA,MAEAuxB,EAAA,WACA1kB,WAAA,WACA,GAAA,QAAAkN,EAAAmT,MAAA,MAAAnT,EAAAmT,KACA,IAAA,GAAAvtB,KAAAzH,MAAA60B,UACA70B,KAAAqwB,EAAA,KAAA3F,KAAA,6BAAAjjB,EAAA,MAAA6a,SAAAtiB,KAAA60B,UAAAptB,GAAAohB,OAAAhH,EAAAkU,qBAGAjZ,KAAA9c,QAEAs5B,EAAA,WACA3kB,WAAA,WACA,IAAA,GAAAlN,KAAAzH,MAAA20B,aACA30B,KAAAqwB,EAAA,KAAA3F,KAAA,6BAAAjjB,EAAA,MAAA6a,SAAA,iBAEAxF,KAAA9c,QAEAu5B,EAAA,WACA5kB,WAAA,WACA,GAAA,QAAAkN,EAAAmT,MAAA,MAAAnT,EAAAmT,KACA,IAAA,GAAAvtB,KAAAzH,MAAAw5B,UACAx5B,KAAAw5B,UAAA/xB,GAAAnD,OACAtE,KAAAqwB,EAAA,KAAA3F,KAAA,6BAAAjjB,EAAA,MAAAijB,KAAA,iBAAA+L,KAAAz2B,KAAAw5B,UAAA/xB,GAAAnD,OAEAtE,KAAAqwB,EAAA,KAAA3F,KAAA,6BAAAjjB,EAAA,MAAA6a,SAAAtiB,KAAAw5B,UAAA/xB,GAAAohB,QAGA/L,KAAA9c,QAEAy5B,EAAA,WACA,GAAA,QAAA5X,EAAAmT,MAAA,MAAAnT,EAAAmT,KACA,IAAA,GAAAvtB,KAAAzH,MAAAw5B,UACAx5B,KAAAqwB,EAAA,KAAA3F,KAAA,6BAAAjjB,EAAA,MAAAijB,KAAA,iBAAA1L,QACAhf,KAAAqwB,EAAA,KAAA3F,KAAA,6BAAAjjB,EAAA,MAAAgmB,YAAAztB,KAAAw5B,UAAA/xB,GAAAohB,OAuBA7oB,MAAA+hB,KAAA,WAGA/hB,KAAAspB,eAAAzH,EAAAyH,eACAtpB,KAAAyrB,QAAA5J,EAAA4J,QAEA5J,EAAAsJ,QACAloB,QAAA+e,IAAA/gB,IAAAC,KAAAqB,SAAA,cAAA,MAAA,cAEAvC,KAAAmrB,OAAA9U,OAAAwL,EAAAsJ,QAEAtJ,EAAAqT,YAAA/zB,EAAAiI,KAAAyY,EAAAqT,aACAl1B,KAAAmrB,OAAAsL,KAAAR,EAAAxvB,KAAAzG,OAGAA,KAAAqwB,GACAtwB,KAAAC,KAAAmrB,OAAAT,KAAA,8BACA6L,QAAAv2B,KAAAmrB,OAAAT,KAAA,iCACAgP,kBAAA15B,KAAAmrB,OAAAT,KAAA,yCACAxP,KAAAlb,KAAAmrB,OAAAT,KAAA,+BAGA7I,EAAA0U,SACAv2B,KAAAqwB,EAAA,KAAA1F,GAAA9I,EAAA+G,eAAA,uBAAA,SAAAtgB,GACAkoB,EAAA/pB,KAAAzG,KAAAsI,GAAAlD,OAAAsO,QACAoJ,KAAA9c,OAIA6hB,EAAA7G,WACAhb,KAAA25B,aAAA9X,EAAA7G,WAAA,GAGA6G,EAAAsW,YACAn4B,KAAA45B,cAAA/X,EAAAsW,YAAA,GAGAtW,EAAAgY,QACA75B,KAAA85B,UAAAjY,EAAAgY,QAAA,GAGAllB,WAAA,WACA,QAAAkN,EAAAmT,MAAA,MAAAnT,EAAAmT,KACA4B,EAAAnwB,KAAAzG,KAAA6hB,EAAAqT,aAEA,UAAArT,EAAAmT,MAAA,MAAAnT,EAAAmT,KACAqD,EAAA5xB,KAAAzG,KAAA6hB,EAAAqT,aAEA,SAAArT,EAAAmT,MAAA,MAAAnT,EAAAmT,MACA4D,EAAAnyB,KAAAzG,KAAA6hB,EAAAqT,cAEApY,KAAA9c,QASAA,KAAA22B,WAAA,SAAA3B,EAAA+E,GAkBA,MAjBA,mBAAAA,KAAAlY,EAAAqT,YAAA6E,GACA/E,IAAAnT,EAAAmT,KAAAA,GAEAh1B,KAAAqwB,EAAA,KAAA5C,YAAA,UAAAnL,SAAA,WACA3N,WAAA,WACA,OAAAkN,EAAAmT,MAAA,KAAAnT,EAAAmT,KACA4B,EAAAnwB,KAAAzG,KAAA6hB,EAAAqT,aAEA,SAAArT,EAAAmT,MAAA,KAAAnT,EAAAmT,KACAqD,EAAA5xB,KAAAzG,KAAA6hB,EAAAqT,aAEA,QAAArT,EAAAmT,MAAA,KAAAnT,EAAAmT,MACA4D,EAAAnyB,KAAAzG,KAAA6hB,EAAAqT,aAEAl1B,KAAAqwB,EAAA,KAAA5C,YAAA,WAAAnL,SAAA,WACAxF,KAAA9c,MAAA6hB,EAAAoH,aAEAjpB,MAYAA,KAAA25B,aAAA,WACA1c,EAAA0X,eACA,IAAAvlB,IACA+K,IAAA,SAAAlN,EAAAvG,EAAAoL,GAEA,MADApL,MACAvF,EAAAgG,QAAA8F,IACAgQ,EAAAjC,UAAA/N,EAAAA,EAAAqR,OAAA,EAAAxM,GACA7E,EAAAqG,QAAA,SAAA2D,GACA9V,EAAA2H,OAAAmO,KACAA,EAAA9V,EAAAiI,KAAA6N,GAAA2gB,SAAA/V,EAAAoT,cACAvuB,EAAAuQ,IAAA,IAEAvQ,GAPAA,GAWA,OAAA,UAAAsU,EAAAgf,GACA,GAAA7wB,KAGA,IAFAurB,EAAA7S,EAAAgU,eAAA10B,EAAA6G,SAAA6Z,EAAAgU,gBAAAhU,EAAAgU,eAAA,EAAA,EAEAhU,EAAA7G,UAAAA,EAAA,CACA,IAAA7Z,EAAAgG,QAAA6T,GAGA,MAAAhb,KAFAmJ,GAAAiG,EAAA+K,IAAAa,KAAA0Z,GAaA,MAPA10B,MAAA20B,aAAAte,OAAAC,UAAAnN,GAGA6wB,KAAA,GAAAV,EAAA7yB,KAAAzG,MAEAmJ,EAAA,KAEAnJ,SAOAA,KAAAqb,aAAA,WACA,MAAArb,MAAAgb,WAMAhb,KAAA45B,cAAA,WACA3c,EAAA2X,gBACA,IAAAxlB,IACA+K,IAAA,SAAAlN,EAAAvG,GAEA,MADAA,MACAvF,EAAAgG,QAAA8F,IACAA,EAAAqG,QAAA,SAAA2D,GACA9V,EAAA2H,OAAAmO,KACAA,EAAA9V,EAAAiI,KAAA6N,GAAA2gB,SAAA/V,EAAAoT,cACAvuB,EAAAuQ,IAAA,IAEAvQ,GANAA,GAQA9G,IAAA,SAAAqN,EAAAvG,GAEA,GADAA,KACAvF,EAAAgG,QAAA8F,GAAA,MAAAvG,EACA,IAAAuG,EAAAgN,MAAA,MAAAvT,EACA,KAAA,GAAAe,KAAAwF,GACAvG,EAAAe,GAAAwF,EAAAxF,EAEA,OAAAf,IAEAuT,MAAA,SAAAhN,EAAAvG,GAEA,MADAA,MACAvF,EAAAgG,QAAA8F,GAAAvG,EACAuG,EAAAgN,OAEAhN,EAAAgN,MAAA3G,QAAA,SAAA2D,GACA,GAAA9V,EAAA+H,aAAA+N,EAAAgjB,OAAA94B,EAAA+H,aAAA+N,EAAAijB,IACA,IAAA,GAAA/rB,GAAAhN,EAAAiI,KAAA6N,EAAAgjB,MAAA9rB,GAAAhN,EAAAiI,KAAA6N,EAAAijB,IAAA/rB,EAAA/D,QAAA+D,EAAA1E,UAAA,GACA/C,EAAAvF,EAAAiI,KAAA+E,GAAAypB,SAAA/V,EAAAoT,eAAA,MAIA,KAAA,GAAA7uB,GAAA6Q,EAAAgjB,KAAA7zB,GAAA6Q,EAAAijB,GAAA9zB,IACAM,EAAAN,IAAA,IAKAM,GAfAA,GAmBA,OAAA,UAAAyxB,EAAA6B,GAEA,GAAA7zB,GACAgD,IAEA,IAAA0Y,EAAAsW,WAAAA,EACA,GAAAh3B,EAAAgG,QAAAgxB,GACAhvB,EAAAiG,EAAA+K,IAAAge,OAEA,CACA,IAAAhyB,IAAAiJ,GACA,GAAA+oB,EAAAhyB,GAAA,CACAgD,EAAAiG,EAAAjJ,GAAAgyB,EACA,OAGA,IAAAvuB,OAAAD,KAAAR,GAAA7C,SACA6C,EAAAiG,EAAAxP,IAAAu4B,IASA,MAJAn4B,MAAA40B,cAAAzrB,EAEA6wB,KAAA,GAAAh6B,KAAA22B,aAEA32B,SAOAA,KAAA85B,UAAA,WACA7c,EAAA4X,YACA,IAAAzlB,IACAxP,IAAA,SAAAqN,EAAAvG,GAEA,GADAA,KACAvF,EAAAgG,QAAA8F,GAAA,MAAAvG,EACA,IAAAuG,EAAAgN,MAAA,MAAAvT,EACA,KAAA,GAAAe,KAAAwF,GACAvG,EAAAe,GAAAwF,EAAAxF,EAIA,OADAwF,GAAA,KACAvG,GAEAuT,MAAA,SAAAhN,EAAAvG,GAEA,MADAA,MACAvF,EAAAgG,QAAA8F,GAAAvG,EACAuG,EAAAgN,OAEAhN,EAAAgN,MAAA3G,QAAA,SAAA2D,GACA,GAAA9V,EAAA+H,aAAA+N,EAAAgjB,OAAA94B,EAAA+H,aAAA+N,EAAAijB,IACA,IAAA,GAAA/rB,GAAAhN,EAAAiI,KAAA6N,EAAAgjB,MAAA9rB,GAAAhN,EAAAiI,KAAA6N,EAAAijB,IAAA/rB,EAAA/D,QAAA+D,EAAA1E,UAAA,GACA/C,EAAAvF,EAAAiI,KAAA+E,GAAAypB,SAAA/V,EAAAoT,eAAApM,MAAA5R,EAAA4R,MAAAvkB,MAAA2S,EAAA3S,WAIA,KAAA,GAAA8B,GAAA6Q,EAAAgjB,KAAA7zB,GAAA6Q,EAAAijB,GAAA9zB,IACAM,EAAAN,IAAAyiB,MAAA5R,EAAA4R,MAAAvkB,MAAA2S,EAAA3S,SAKA2I,EAAA,KACAvG,GAhBAA,GAoBA,OAAA,UAAAmzB,EAAAM,GAEA,GACAh0B,GACAgD,IAGA,IAAA0Y,EAAAgY,OAAAA,EAAA,CACA,IAAA1zB,IAAAiJ,GACA,GAAAyqB,EAAA1zB,GAAA,CACAgD,EAAAiG,EAAAjJ,GAAA0zB,EACA,OAGA,IAAAjwB,OAAAD,KAAAR,GAAA7C,SACA6C,EAAAiG,EAAAxP,IAAAi6B,IAOA,MAHA75B,MAAA60B,UAAA1rB,EAEAgxB,KAAA,GAAAd,EAAA5yB,KAAAzG,MACAA,SAOAA,KAAAo6B,UAAA,WACAnd,EAAAuc,YAEA,IAAApqB,IACA6K,MAAA,SAAAhN,EAAAvG,GAEA,MADAA,MACAvF,EAAAgG,QAAA8F,GAAAvG,EACAuG,EAAAgN,OAEAhN,EAAAgN,MAAA3G,QAAA,SAAA2D,GACA,GAAA9V,EAAA+H,aAAA+N,EAAAgjB,OAAA94B,EAAA+H,aAAA+N,EAAAijB,IACA,IAAA,GAAA/rB,GAAA,GAAApF,MAAA5H,EAAAiI,KAAA6N,EAAAgjB,OAAA9rB,GAAAhN,EAAAiI,KAAA6N,EAAAijB,IAAA/rB,EAAA/D,QAAA+D,EAAA1E,UAAA,GACA0E,EAAAa,WAAA7N,EAAAiI,KAAA6N,EAAAgjB,MAAAjrB,UACAtI,EAAAvF,EAAAiI,KAAA+E,GAAAypB,SAAA/V,EAAAoT,eAAApM,MAAA5R,EAAA4R,OAAAhH,EAAAmU,mBAAA1xB,MAAA2S,EAAAojB,WACAlsB,EAAAa,WAAA7N,EAAAiI,KAAA6N,EAAAijB,IAAAlrB,UACAtI,EAAAvF,EAAAiI,KAAA+E,GAAAypB,SAAA/V,EAAAoT,eAAApM,MAAA5R,EAAA4R,OAAAhH,EAAAmU,mBAAA1xB,MAAA2S,EAAAqjB,SAEA5zB,EAAAvF,EAAAiI,KAAA+E,GAAAypB,SAAA/V,EAAAoT,eAAApM,MAAA5R,EAAA4R,OAAAhH,EAAAmU,sBAMA/oB,EAAA,KACAvG,GAjBAA,GAqBA,OAAA,UAAA6zB,EAAAJ,GAEA,GAEAhxB,KAoBA,OAhBAgxB,MAAA,GACAV,EAAAhzB,KAAAzG,OAGA6hB,EAAA0Y,OAAAA,KACApxB,EAAAiG,EAAA6K,MAAAsgB,IAGAv6B,KAAAw5B,UAAArwB,EAKAgxB,KAAA,GACAZ,EAAA9yB,KAAAzG,MAEAA,SAKAA,KAAAqiB,KAAA,WAEAoG,EAAA+R,kBAAA/R,EAAA+R,sBACA/R,EAAA+R,kBAAA1zB,KAAA9G,MAEA8C,WAAA3B,EAAA0F,SAAA/D,UAAA,KACA9C,KAAA4hB,UAAA9e,UAAA,KAEAyK,MAAAvN,KAAA8C,gBAGA2xB,EAAAxzB,IAAAwgB,GAAAgZ,YC1jCA,WAEA,GAAAhG,GAAAxzB,IAAAwgB,GAAAgZ,SAEAC,EAAA,SAAApO,GACA,MAAA,+xBAaAsJ,EAAA,SAAAtJ,GACA,MAAA,w6CAiCAkK,EAAA,SAAAlK,GACA,MAAA,g1CA+BAoJ,EAAA,SAAApJ,GACA,MAAA,00CAgCAmI,GAAA1K,MACA2Q,UAAAA,EACA9E,QAAAA,EACAY,UAAAA,EACAd,SAAAA,EAEAza,IAAA,SAAAsR,EAAA7C,EAAA4C,GACA,MAAArrB,KAAAiiB,SAAAuE,OAAAgN,EAAA1K,KAAAwC,GAAA9lB,KAAAzG,KAAAssB,GAAA5C,QC5HA,WAEA,GAAAjB,GAAAxnB,IAAAwgB,GACAtgB,EAAAF,IAAA2G,KACA+yB,EAAAA,MAEAlS,GAAAnG,UACA9f,UAAA,UACA,WA8BA,MAAA,YACA,GAAAya,GAAAjd,KACA6hB,EAAAA,MAEA7hB,MAAA6iB,WAAA5hB,IAAAI,UACArB,KAAA2hB,QACAiH,eAAA,QACAC,MAAA,UACAC,MAAA,GACAC,MACAC,GAAA,KACAvT,OAAA,UAEAwT,YAAA,IACAwR,UACA5E,gBAAA,EACAU,SACAj0B,KAAArB,IAAA4a,IAAA+e,OAAAC,gBAAA,WACAnF,SAAAz0B,IAAA4a,IAAA+e,OAAAE,eAAA,KACAtE,UAAAv1B,IAAA4a,IAAA+e,OAAAG,gBAAA,KACA3vB,MAAAnK,IAAA4a,IAAA+e,OAAAI,iBAAA,WACAtE,WAAA,IAGAuE,YAEAj7B,KAAAqpB,SACArpB,KAAAk7B,aAAA,KACAl7B,KAAAm7B,0BACAn7B,KAAAo7B,UAAA,KACAp7B,KAAAq7B,WAAA,KAEAxZ,EAAA7hB,KAAA2hB,MAEA,IAAA2H,GAAA,SAAAzf,EAAA0f,GAOA,MANA1f,IAAAA,EAAAyf,eACAzf,EAAAyf,eAAA7iB,KAAA8iB,EAAAA,GAEAvpB,KAAAspB,gBACAtpB,KAAAspB,eAAA7iB,KAAA8iB,EAAAA,IAEA,GAEA+R,EAAA,WAEA,GAAAC,IACA/f,MAAA,SAAAggB,EAAAlzB,GACAtI,KAAAgqB,KAAAwR,IAEAC,MAAA,SAAAD,EAAAlzB,GACAtI,KAAAgqB,KAAAwR,KAIAE,GACAC,MAAA,SAAAH,EAAAI,GACA,GAAA/xB,GAAA7J,KAAAqpB,MAAAmS,GACAK,EAAAD,EAAAt1B,OACAqb,GACAka,YAAAA,GAAA,EAGAA,GAAA,IACAla,EAAAiI,MACAZ,IAAA1kB,MAAAud,EAAAkH,KAAA,GAAAF,MAAAhH,EAAAgH,SAIA7oB,KAAAqpB,MAAAmS,GAAAnlB,OAAAC,QAAA,EAAAqL,EAAA9X,GAEA8X,EAAA,KACAka,EAAA,MAEAzyB,KAAA,SAAAoyB,EAAAI,GACA,GAAA/xB,GAAA7J,KAAAqpB,MAAAmS,GACAM,EAAAjyB,EAAAijB,QAAAjjB,EAAAijB,QAAAvM,OAAA,IAAA,IACAwb,EAAAlyB,EAAAijB,QAAAjjB,EAAAijB,QAAA+C,QAAA,EAAA,EACAgM,EAAAD,EAAAt1B,OACAqb,GACAma,aAAAA,EAAAD,GAAAA,EAAA,GAAAE,EACAjP,SAAAvM,MAAAub,EAAAjM,OAAAkM,GACAF,YAAAA,GAAA,EAGAA,GAAA,IAAAhyB,EAAA+f,OACAjI,EAAAiI,MACAZ,IAAA1kB,MAAAud,EAAAkH,KAAA,GAAAF,MAAAhH,EAAAgH,SAIA7oB,KAAAqpB,MAAAmS,GAAAnlB,OAAAC,QAAA,EAAAqL,EAAA9X,GAEAiyB,EAAA,KACAC,EAAA,KACApa,EAAA,KACAka,EAAA,MAEAG,aAAA,SAAAR,EAAAI,GACA,GAAA/xB,GAAA7J,KAAAqpB,MAAAmS,GACAK,EAAAD,EAAAt1B,OACAqb,GACAka,YAAAA,GAAA,EAGA77B,MAAAqpB,MAAAmS,GAAAnlB,OAAAC,QAAA,EAAAqL,EAAA9X,GAEA8X,EAAA,KACAka,EAAA,MAEAI,SAAA,SAAAT,EAAAI,GACA,GAAA/xB,GAAA7J,KAAAqpB,MAAAmS,GACAK,EAAAD,EAAAt1B,OACAqb,GACAka,YAAAA,GAAA,EAGA77B,MAAAqpB,MAAAmS,GAAAnlB,OAAAC,QAAA,EAAAqL,EAAA9X,GAEA8X,EAAA,KACAka,EAAA,MAEAK,OAAA,SAAAV,EAAAI,GACA,GAAA/xB,GAAA7J,KAAAqpB,MAAAmS,GACAK,EAAAD,EAAAt1B,OACAqb,GACAka,YAAAA,GAAA,EAGA77B,MAAAqpB,MAAAmS,GAAAnlB,OAAAC,QAAA,EAAAqL,EAAA9X,GAEA8X,EAAA,KACAka,EAAA,MAEA/kB,MAAA,SAAA0kB,EAAAI,GACA,GAAA/xB,GAAA7J,KAAAqpB,MAAAmS,GACAM,EAAAjyB,EAAAijB,QAAAjjB,EAAAijB,QAAAvM,OAAA,IAAA,IACAwb,EAAAlyB,EAAAijB,QAAAjjB,EAAAijB,QAAA+C,QAAA,EAAA,EACAgM,EAAAD,EAAAt1B,OACAqb,GACAma,aAAAA,EAAAD,GAAAA,EAAA,GAAAE,EACAjP,SAAAvM,MAAAub,EAAAjM,OAAAkM,GACAF,YAAAA,GAAA,GAEAM,EAAAtyB,EAAAojB,QAAAvC,KAAA,mCAEAyR,GAAAlhB,IAAA,KACAkhB,EAAAhpB,KAAAipB,mBAAA,IAAAj7B,EAAA2V,MAAA8kB,EAAAtvB,OAAA,WAAA+M,gBAEAuiB,EAAAjR,GAAA,SAAA,WACAwR,EAAAhpB,KAAAipB,mBAAA,IAAAj7B,EAAA2V,MAAA9W,KAAA8H,OAAA,WAAAuR,mBAIAwiB,EAAA,IAAAhyB,EAAA+f,OACAjI,EAAAiI,MACAZ,IAAA1kB,MAAAud,EAAAkH,KAAA,GAAAF,MAAAhH,EAAAgH,SAIA7oB,KAAAqpB,MAAAmS,GAAAnlB,OAAAC,QAAA,EAAAqL,EAAA9X,GAEAiyB,EAAA,KACAC,EAAA,KACApa,EAAA,KACAka,EAAA,MAIA,OAAA,UAAAL,GACA,GAAA3xB,GAAA7J,KAAAqpB,MAAAmS,GACA7R,EAAAA,MAEA,KAAA9f,EAAAijB,QAEA,MADA7pB,SAAA+e,IAAA/gB,IAAAC,KAAAqB,SAAA,YAAA,MAAA,SACAvC,IAMA,IAHA2pB,EAAA,SAAA9f,EAAAojB,QAAAhS,IAAA,GAAAxI,QAAAhH,cAAA5B,EAAAojB,QAAApjB,EAAAojB,QAAAvC,KAAA,eAGAvpB,EAAA4F,WAAA8C,EAAAijB,SACA4O,EAAA,OAAAj1B,KAAAzG,KAAAw7B,EAAA7R,OAGA,KAAA,GAAAxjB,KAAAu1B,GACA,GAAA7xB,EAAAijB,QAAA/M,MAAA5Z,EAAA,CACAu1B,EAAAv1B,GAAAM,KAAAzG,KAAAw7B,EAAA7R,EACA,OAuBA,MAlBAA,GACAqC,OAAA,mBACAA,OAAA,mBACAlP,KAAA,kBAAAye,EAAA/f,MAAAsB,KAAA9c,KAAAw7B,IACA1e,KAAA,kBAAAye,EAAAE,MAAA3e,KAAA9c,KAAAw7B,IAEA3xB,EAAAojB,QACAvC,KAAA,sBACAsB,OAAA,mBACAlP,KAAA,kBAAAye,EAAAE,MAAA3e,KAAA9c,KAAAw7B,IAEA3xB,EAAAijB,QAAAuP,WAAAp7B,IAAAwgB,GAAA4a,WACA1S,EAAA2S,aAAAzyB,EAAAijB,QAAAuP,WAGA1S,EAAA,KACA9f,EAAA,KACA2xB,EAAA,KACAx7B,SAIAu8B,EAAA,SAAApS,GACA,IAAAnqB,KAAAk7B,aAAA,MAAAl7B,KAEA,IAAAw8B,GAAA,SAAA3yB,GACA,GAGA4yB,GAHAC,EAAArmB,OAAAjR,QAAAu3B,EAAAtmB,OAAAlW,SAAA+a,MACA/P,KAAAyxB,EAAA,GACAC,KAAAC,IAGA3xB,GAAAtB,EAAAojB,QAAA/S,SACA2iB,GACAtc,MAAA1W,EAAAojB,QAAAG,aACA/C,OAAAxgB,EAAAojB,QAAAI,eAEAyP,GACAC,SAAA9wB,KAAAgK,IAAAymB,EAAAnc,QAAAoc,EAAApc,SACAyc,UAAA/wB,KAAAgK,IAAAymB,EAAArS,SAAAsS,EAAAtS,UACA9J,MAAAvgB,KAAAk7B,aAAA9N,aACA/C,OAAArqB,KAAAk7B,aAAA7N,eAKAxjB,EAAAozB,WAAA,KAAApzB,EAAAozB,WAAA,SAAApzB,EAAAozB,UASAR,EAAA5yB,EAAAozB,WAPAR,EAAA,MACAtxB,EAAAof,IAAAuS,EAAAzS,OAAAuS,EAAA,EACAH,EAAA,MACAtxB,EAAAof,IAAAsS,EAAAxS,OAAAyS,EAAAzS,OAAAuS,EAAAE,EAAAE,YACAP,EAAA,WAMAtS,GACAnqB,KAAAk7B,aACA5Y,SAAA,aAAAma,EAGA,IAAAS,GAAA,WACA,GAAA/pB,IAAA7Q,KAAA,EAAAioB,IAAA,EACA,QAAAkS,GACA,IAAA,MACAtpB,EAAA7Q,KAAA6I,EAAA7I,KAAAu6B,EAAAtc,MAAA,EAAAuc,EAAAvc,MAAA,EACApN,EAAAoX,IAAApf,EAAAof,IAAAsS,EAAAxS,OAAAuS,CACA,MACA,KAAA,SACAzpB,EAAA7Q,KAAA6I,EAAA7I,KAAAu6B,EAAAtc,MAAA,EAAAuc,EAAAvc,MAAA,EACApN,EAAAoX,IAAApf,EAAAof,IAAAuS,EAAAzS,OAAAuS,CACA,MACA,KAAA,OACAzpB,EAAA7Q,KAAA6I,EAAA7I,KAAAu6B,EAAAtc,MAAAqc,EACAzpB,EAAAoX,IAAApf,EAAAof,IAAAuS,EAAAzS,OAAA,EAAAwS,EAAAxS,OAAA,CACA,MACA,KAAA,QACAlX,EAAA7Q,KAAA6I,EAAA7I,KAAAw6B,EAAAvc,MAAAqc,EACAzpB,EAAAoX,IAAApf,EAAAof,IAAAuS,EAAAzS,OAAA,EAAAwS,EAAAxS,OAAA,EAGA,MAAAlX,OAGA,WACA,OAAAspB,GAAA,UAAAA,IACAS,EAAA56B,KAAA,GACA46B,EAAA56B,KAAAs6B,EACA58B,KAAAm9B,kBAAAhqB,KAAA7Q,KAAA6I,EAAA7I,KAAAu6B,EAAAtc,MAAA,EAAA2c,EAAA56B,QACA46B,EAAA56B,KAAAw6B,EAAAvc,MAAAuc,EAAAC,WACAG,EAAA56B,KAAAw6B,EAAAC,SAAAD,EAAAvc,MAAAqc,EACA58B,KAAAm9B,kBAAAhqB,KAAA7Q,KAAA6I,EAAA7I,KAAAu6B,EAAAtc,MAAA,EAAA2c,EAAA56B,WAGAmE,KAAAzG,MAEAA,KAAAk7B,aACA/nB,IAAA+pB,IAEArzB,EAAA7J,KAAAqpB,MAAArpB,KAAAm7B,uBAEAhR,KACAnqB,KAAAk7B,aAAA/nB,KAAAoX,WACAlU,OAAAlW,SAAA+a,MAAAiP,OAAAnqB,KAAAk7B,eAGAvmB,WAAA,WACA6nB,EAAA/1B,KAAAzG,KAAA6J,IACAiT,KAAA9c,QAEAo9B,EAAA,SAAA90B,EAAA6iB,GACA,IAAAnrB,KAAAk7B,aAAA,MAAAl7B,KAEA,IAAA6J,GAAA7J,KAAAqpB,MAAArpB,KAAAm7B,uBAUA,OARAhQ,GAAAhqB,EAAAmR,eAAAhK,EAAA6iB,OAAA,SAAAA,GACA,QAAAA,EAAArY,aAAA,qBAGAjJ,EAAAojB,QAAAhS,IAAA,IAAAkQ,GAAA,UAIAA,EAKAnrB,MAJAA,KAAAgrB,QACAhrB,OAKAq9B,EAAA,SAAA/0B,EAAA6iB,GAUA,GARA7iB,EAAA+iB,aAAA/iB,EAAA6iB,OAAA7iB,EAAA+iB,YAEAF,EAAAhqB,EAAAmR,eAAAhK,EAAA6iB,OAAA,SAAAA,GACA,GAAAA,EAAArY,aAAA,mBACA,OAAA,IAIA,CACA,GACAjJ,GAAA7J,KAAAqpB,MAAArpB,KAAAm7B,wBACA1zB,EAAA0jB,EAAArY,aAAA,kBAGA,IAAAjJ,EAAA+f,MAAA/f,EAAA+f,KAAAniB,GAAAgkB,QAAA,CACA,GAAAlC,IACApjB,IAAAsB,EACAK,MAAA+B,EAAA+f,KAAAniB,GACAwV,KAAAjd,KACA6J,KAAAA,EAEAA,GAAA+f,KAAAniB,GAAAgkB,QAAAhlB,KAAA8iB,EAAA9hB,OAGAzH,MAAAgrB,UAIAsS,EAAA,SAAAh1B,GACAA,EAAAqjB,SAAA1qB,IAAAC,KAAAmC,UAAAI,KACAzD,KAAAgrB,SAGAuS,EAAA,SAAAC,GAIA,MAHAr8B,GAAA4G,SAAAy1B,KACAA,EAAAnnB,OAAAmnB,GAAA9T,KAAA,qBAEAvoB,EAAA4G,SAAAy1B,GAIAr8B,EAAAS,OAAA5B,KAAAqpB,MAAA,WACA,MAAArpB,MAAAggB,IAAAwd,QAJAv6B,SAAA+e,IAAA/gB,IAAAC,KAAAqB,SAAA,YAAA,MAAA,cAkBAvC,MAAA+hB,KAAA,WACA/hB,KAAAspB,eAAAzH,EAAAyH,gBAwDAtpB,KAAA8c,KAAA,SAAAjT,GACA,GAAA4zB,MACAjC,EAAAA,MAIA,OAFA3xB,GAAAwM,OAAAC,QAAA,EAAAmnB,EAAA5b,EAAAhY,GAEAA,EAAAshB,QAIAthB,EAAAojB,QAAA5W,OAAAxM,EAAAshB,QAEAthB,EAAAojB,QAAAhS,IAAA,IAKApR,EAAAmW,KAAAnW,EAAAmW,GAAAnW,EAAAojB,QAAAvD,KAAA,qBAEA7f,EAAAmW,KACAnW,EAAAmW,GAAA,cAAA/e,IAAAI,UACAwI,EAAAojB,QAAAvD,KAAA,mBAAA7f,EAAAmW,KAEAwb,EAAAr6B,EAAAS,OAAA5B,KAAAqpB,MAAA,WACA,MAAArpB,MAAAggB,IAAAnW,EAAAmW,KAGAwb,QACAx7B,KAAAqpB,MAAAviB,KAAA+C,GACAyxB,EAAA70B,KAAAzG,KAAAA,KAAAqpB,MAAA/iB,OAAA,KAGAtG,KAAAqpB,MAAAmS,GAAAnlB,OAAAC,QAAA,KAAAtW,KAAAqpB,MAAAmS,GAAA3xB,GACAyxB,EAAA70B,KAAAzG,KAAAw7B,IAGAiC,EAAA,KACAjC,EAAA,KACAx7B,OAzBAiD,QAAA+e,IAAA/gB,IAAAC,KAAAqB,SAAA,YAAA,MAAA,SACAvC,QAPAiD,QAAA+e,IAAA/gB,IAAAC,KAAAqB,SAAA,YAAA,MAAA,SACAvC,OAwCAA,KAAA09B,gBAAA,WAEA,GAAAC,IACAv0B,KAAA,SAAAw0B,EAAAC,EAAAC,GACA,GACAC,GAAAC,EAAAC,EADAC,IASA,OANA,UAAAN,EAAA3Q,QAAAhS,IAAA,GAAAxI,QAAAhH,eACAmyB,EAAA3Q,QAAAvC,KAAA,eAAA3kB,KAAA,WACAm4B,EAAAp3B,KAAA9G,KAAA8H,SAIA,GAAA+1B,GACAK,EAAA53B,OAAA,GAAA,KAAA43B,EAAA,IAEAH,EAAA98B,IAAA2G,KAAAwJ,KAAA8sB,EAAA,IAAAzsB,MAAAysB,EAAA,KACAH,EAAA,IAEAE,EAAAH,IAKAG,EAAAH,EAGAG,IACAL,EAAAO,eAAA,GAAAC,cAAAzE,cAAAsE,IAAA,GAAAtH,WAAA,IAAAsH,GACAj+B,KAAA09B,gBAAAE,EAAA5d,GAAA,EAAAie,IAGAH,GAEA,GAAAD,GAEAK,EAAA53B,OAAA,IAEAy3B,EAAA98B,IAAA2G,KAAAwJ,KAAA8sB,EAAA,IAAAzsB,MAAAysB,EAAA,KACAH,EAAA,IAEAC,EAAAE,EAAA,KAIAF,IACAJ,EAAAO,eAAA,GAAAC,cAAAzE,cAAAqE,IAAA,GAAArH,WAAA,IAAAqH,GACAh+B,KAAA09B,gBAAAE,EAAA5d,GAAA,EAAAge,IAGAF,GAhBA,QAqBA,OAAA,UAAAN,EAAAa,EAAA/xB,EAAAyf,GAEA,GAAAyP,GAAAr6B,EAAA6G,SAAAw1B,GAAAA,EAAAD,EAAA92B,KAAAzG,KAAAw9B,GACA3zB,EAAA7J,KAAAqpB,MAAAmS,GACAI,EAAAA,MAIA,IAFA7P,IAAAA,MAEAliB,EAAA,CAKA,GAHA+xB,EAAA,SAAA/xB,EAAAojB,QAAAhS,IAAA,GAAAxI,QAAAhH,cAAA5B,EAAAojB,QAAA5W,OAAAxM,EAAAojB,QAAAvC,KAAA,eAAAzP,IAAAojB,IACAzC,EAAAtvB,IAAAA,GAEAzC,EAAAy0B,qBAEA,CACA,GAAAnC,GAAAtyB,EAAAojB,QAAAvC,KAAA,mCACAyR,GAAAlhB,IAAA,IACAkhB,EAAAhpB,KAAAipB,mBAAA9vB,QAJAsvB,GAAA2C,QAAA,SAUA10B,GAAAgyB,YAAA,GAEA8B,EAAA9zB,EAAAijB,QAAA/M,QACAzT,EAAAqxB,EAAA9zB,EAAAijB,QAAA/M,MAAAtZ,KAAAzG,KAAA6J,EAAAw0B,EAAA/xB,GAIA,IAAAid,IACAtM,KAAAA,EACA8N,MAAA,cACAlhB,KAAAA,EACAw0B,WAAAA,EACAv2B,MAAAwE,EACA4xB,QAAA5xB,GAEA,WAAAzC,EAAAojB,QAAAhS,IAAA,GAAAxI,QAAAhH,gBACA8d,EAAA2U,UACAr0B,EAAAojB,QAAAvC,KAAA,eAAA3kB,KAAA;AACAwjB,EAAA2U,OAAAp3B,KAAA9G,KAAA8H,UAIAwhB,EAAA7iB,KAAAzG,KAAA6J,EAAA0f,GAEA,GAAA1f,EAAAgyB,aAAA9P,EAAAyS,YACAx+B,KAAAgrB,QAQA,MAJAnhB,GAAA,KACA2zB,EAAA,KACAa,EAAA,KACA/xB,EAAA,KACAtM,SAWAA,KAAAy+B,gBAAA,WACA,MAAA,UAAAjB,EAAAa,GACA,GAAA7C,GAAAr6B,EAAA6G,SAAAw1B,GAAAA,EAAAD,EAAA92B,KAAAzG,KAAAw9B,GACA3zB,EAAA7J,KAAAqpB,MAAAmS,GACAI,EAAAA,MAEA,OAAA/xB,IACA+xB,EAAA,SAAA/xB,EAAAojB,QAAAhS,IAAA,GAAAxI,QAAAhH,cAAA5B,EAAAojB,QAAA5W,OAAAxM,EAAAojB,QAAAvC,KAAA,eAAAzP,IAAAojB,IACAzC,EAAAtvB,QAGAzC,EAAA,KACA2zB,EAAA,KACAa,EAAA,KACAr+B,UASAA,KAAAgqB,KAAA,WAEA,GAAA0U,IACA/C,MAAA,SAAAH,EAAAvR,GACA,GAAApgB,GAAA7J,KAAAqpB,MAAAmS,EAIA,OAHA3xB,GAAAijB,QAAArmB,KAAAoD,EAAA,SAAA4sB,GACAxM,EAAAwM,MAEA,GAEArtB,KAAA,SAAAoyB,GAMA,IAAA,GALA3xB,GAAA7J,KAAAqpB,MAAAmS,GACA/E,KACAkI,EAAAtoB,OAAAC,UAAAuL,EAAA4Y,UAAAvF,YAAA,GAAAnsB,QACA4gB,EAAA,SAAA9f,EAAAojB,QAAAhS,IAAA,GAAAxI,QAAAhH,cAAA5B,EAAAojB,QAAApjB,EAAAojB,QAAAvC,KAAA,eAEAtkB,EAAA,EAAAA,EAAAyD,EAAAgyB,YAAAz1B,IACAqwB,EAAA3vB,KAAA,qBACA3F,EAAA4R,UAAAlJ,EAAAijB,QAAAvM,OAAA,qEAEAna,EAAA,YACAA,EAAAyD,EAAAgyB,YAAA,GAAApF,EAAA3vB,KAAA,qBAAA+C,EAAAijB,QAAA+C,OAAA,qCAEA4G,GAAA3vB,KAAA,mCACA+C,EAAA60B,cAAAjI,KAAAA,EAAArzB,KAAA,KAGAyG,EAAAs0B,kBACAt0B,EAAA60B,cAAAhU,KAAA,0BAAA3kB,KAAA,WAGA,GAAA64B,GAAA5+B,KAAA8S,aAAA,wBACA+rB,EAAAlV,EAAA1O,IAAA2jB,GAAA92B,MACAqG,EAAAlN,IAAA2G,KAAAwB,KAAAy1B,GACAC,GACAltB,KADA,SACAhD,GACA,MAAA3N,KAAA2G,KAAAwB,KAAAwF,GAAAgpB,SAAA,UAEA/lB,MAJA,SAIAjD,GACA,MAAA3N,KAAA2G,KAAAwB,KAAAwF,GAAAgpB,SAAA,aAEAR,IAPA,SAOAxoB,GACA,MAAAA,IAIA+vB,GAAAzJ,YAAA/mB,EAEA0wB,IAAAF,EAAA3jB,WAAA7M,IAEAwwB,EAAAtoB,OAAAC,QAAA,EAAAqoB,EAAA90B,EAAAijB,QAAAnL,YACAgd,EAAAxT,OAAAnrB,KACA2+B,EAAAlT,QAAA,WACAxO,EAAAygB,gBAAA7zB,EAAAmW,GAAA4e,EAAAE,EAAAH,EAAA7I,YAAA,OAAA91B,KAAAoJ,QAGAS,EAAAs0B,eAAAr3B,MACAi4B,OAAAl1B,EAAAmW,GACAqe,WAAAO,EACAR,cAAA,GAAAn9B,KAAAwgB,GAAAgZ,SAAAkE,QAKA3C,aAAA,SAAAR,GAGA,IAAA,GAFA3xB,GAAA7J,KAAAqpB,MAAAmS,GACA/E,KACArwB,EAAA,EAAAA,EAAAyD,EAAAgyB,YAAAz1B,IACAqwB,EAAA3vB,KAAA,qBACA3F,EAAA4R,UAAAlJ,EAAAijB,QAAAvM,OAAA,uEAEAna,EAAA,YACAA,EAAAyD,EAAAgyB,YAAA,GAAApF,EAAA3vB,KAAA,qBAAA+C,EAAAijB,QAAA+C,OAAA,qCAEA4G,GAAA3vB,KAAA,mCACA+C,EAAA60B,cAAAjI,KAAAA,EAAArzB,KAAA,KAGAyG,EAAA60B,cAAAhU,KAAA,4BAAA3kB,KAAA,WACA,GAAA64B,GAAA5+B,KAAA8S,aAAA,0BACAksB,KAEAC,EAAA,SAAApsB,GACA,GAAA9F,GAAAmyB,EAAA94B,CACA,KAAAA,EAAAyM,EAAAvM,OAAAF,EAAAA,GAAA,EACA2G,EAAAd,KAAAG,MAAAH,KAAAkzB,SAAA/4B,GACA84B,EAAArsB,EAAAzM,EAAA,GACAyM,EAAAzM,EAAA,GAAAyM,EAAA9F,GACA8F,EAAA9F,GAAAmyB,CAEA,OAAArsB,KACA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAEAusB,IACA96B,MAAA,WAAA+6B,GAAA,SAAA/6B,MAAA,IAAA+6B,GAAA,SAGAJ,GAAA3rB,QAAA,SAAA2D,GACA+nB,EAAAl4B,KAAA,0BAAA+C,EAAAijB,QAAAnL,OAAA2d,aAAA,MACAN,EAAAl4B,KAAA,sCAAA+C,EAAAijB,QAAAnL,OAAA4d,SAAA,YACA11B,EAAAijB,QAAAnL,OAAA6d,SAAA,4BAAAvoB,EAAA,KAAAA,EAAA,aACA+nB,EAAAl4B,KAAA,YAEAs4B,EAAA9rB,QAAA,SAAA2D,GACA+nB,EAAAl4B,KAAA,0BAAA+C,EAAAijB,QAAAnL,OAAA2d,aAAA,MACAN,EAAAl4B,KAAA,sCAAA+C,EAAAijB,QAAAnL,OAAA8d,gBAAA,YACA51B,EAAAijB,QAAAnL,OAAA6d,SAAA,4BAAAvoB,EAAAooB,GAAA,KAAApoB,EAAA3S,MAAA,aACA06B,EAAAl4B,KAAA,YAGAk4B,EAAAl4B,KAAA,mCAEAupB,EAAArwB,MAAAy2B,KAAAuI,EAAA57B,KAAA,KAAAunB,GAAA,QAAA,0BAAA,WACA,GAAA+U,GAAA1/B,KAAA8S,aAAA,yBACA8oB,EAAA,SAAA/xB,EAAAojB,QAAAhS,IAAA,GAAAxI,QAAAhH,cAAA5B,EAAAojB,QAAA5W,OAAAxM,EAAAojB,QAAAvC,KAAA,eAAAzP,IAAA2jB,IACAtyB,EAAAsvB,EAAAtvB,KAEA,SAAAozB,EACA9D,EAAAtvB,IAAAA,EAAAtB,UAAA,EAAAsB,EAAAhG,OAAA,IAEA,SAAAo5B,EACA9D,EAAAtvB,IAAA,IAGAsvB,EAAAtvB,IAAAA,EAAAozB,GAGApW,EAAA7iB,KAAAzG,KAAA6J,GACAoT,KAAAA,EACA8N,MAAA,cACAlhB,KAAAA,EACA/B,MAAA8zB,EAAAtvB,aAKA2vB,SAAA,SAAAT,GAGA,IAAA,GAFA3xB,GAAA7J,KAAAqpB,MAAAmS,GACA/E,KACArwB,EAAA,EAAAA,EAAAyD,EAAAgyB,YAAAz1B,IACAqwB,EAAA3vB,KAAA,qBACA3F,EAAA4R,UAAAlJ,EAAAijB,QAAAvM,OAAA,qEAEAna,EAAA,YACAA,EAAAyD,EAAAgyB,YAAA,GAAApF,EAAA3vB,KAAA,qBAAA+C,EAAAijB,QAAA+C,OAAA,qCAEA4G,GAAA3vB,KAAA,mCACA+C,EAAA60B,cAAAjI,KAAAA,EAAArzB,KAAA,IAEA,IAAAu8B,MAEA73B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACAt7B,MAAA,WAAA+6B,GAAA,WAGAv3B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,KAAA83B,WAAA,QAGAt7B,MAAA,QAAA+6B,GAAA,UACAv3B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA83B,WAAA,QAKAt7B,MAAA,QAAA+6B,GAAA,UACAv3B,MAAA,IAAA83B,WAAA,MACA93B,MAAA,IAAA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","file":"ax5ui.all.min.js","sourcesContent":["'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function () {\n    'use strict';\n\n    // root of function\n\n    var root = this,\n        win = this,\n        doc = win ? win.document : null,\n        docElem = win ? win.document.documentElement : null,\n        reIsJson = /^([\"'](\\\\.|[^\"\\\\\\n\\r])*?[\"']|[,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t])+?$/,\n        reMs = /^-ms-/,\n        reSnakeCase = /[\\-_]([\\da-z])/gi,\n        reCamelCase = /([A-Z])/g,\n        reDot = /\\./,\n        reInt = /[-|+]?[\\D]/gi,\n        reNotNum = /\\D/gi,\n        reMoneySplit = new RegExp('([0-9])([0-9][0-9][0-9][,.])'),\n        reAmp = /&/g,\n        reEq = /=/,\n        reClassNameSplit = /[ ]+/g,\n\n\n    /** @namespace {Object} ax5 */\n    ax5 = {},\n        info = void 0,\n        U = void 0,\n        dom = void 0;\n\n    /**\n     * guid\n     * @member {Number} ax5.guid\n     */\n    ax5.guid = 1;\n    /**\n     * ax5.guid를 구하고 증가시킵니다.\n     * @method ax5.getGuid\n     * @returns {Number} guid\n     */\n    ax5.getGuid = function () {\n        return ax5.guid++;\n    };\n\n    /**\n     * 상수모음\n     * @namespace ax5.info\n     */\n    ax5.info = info = function () {\n        var _arguments = arguments;\n\n        /**\n         * ax5 version\n         * @member {String} ax5.info.version\n         */\n        var version = \"1.4.129\";\n\n        /**\n         * ax5 library path\n         * @member {String} ax5.info.baseUrl\n         */\n        var baseUrl = \"\";\n\n        /**\n         * ax5 에러 출력메세지 사용자 재 정의\n         * @member {Object} ax5.info.onerror\n         * @examples\n         * ```\n         * ax5.info.onerror = function(){\n        *  console.log(arguments);\n        * }\n         * ```\n         */\n        var onerror = function onerror() {\n            console.error(U.toArray(_arguments).join(\":\"));\n        };\n\n        /**\n         * event keyCodes\n         * @member {Object} ax5.info.eventKeys\n         * @example\n         * ```\n         * {\n        * \tBACKSPACE: 8, TAB: 9,\n        * \tRETURN: 13, ESC: 27, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, DELETE: 46,\n        * \tHOME: 36, END: 35, PAGEUP: 33, PAGEDOWN: 34, INSERT: 45, SPACE: 32\n        * }\n         * ```\n         */\n        var eventKeys = {\n            BACKSPACE: 8, TAB: 9,\n            RETURN: 13, ESC: 27, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, DELETE: 46,\n            HOME: 36, END: 35, PAGEUP: 33, PAGEDOWN: 34, INSERT: 45, SPACE: 32\n        };\n\n        /**\n         * week names\n         * @member {Object[]} weekNames\n         * @member {string} weekNames[].label\n         *\n         * @example\n         * ```\n         * [\n         *  {label: \"SUN\"},{label: \"MON\"},{label: \"TUE\"},{label: \"WED\"},{label: \"THU\"},{label: \"FRI\"},{label: \"SAT\"}\n         * ]\n         * console.log( weekNames[0] );\n         * console.log( ax5.info.weekNames[(new Date()).getDay()].label )\n         * ```\n         */\n        var weekNames = [{ label: \"SUN\" }, { label: \"MON\" }, { label: \"TUE\" }, { label: \"WED\" }, { label: \"THU\" }, { label: \"FRI\" }, { label: \"SAT\" }];\n\n        /**\n         * 사용자 브라우저 식별용 오브젝트\n         * @member {Object} ax5.info.browser\n         * @example\n         * ```\n         * console.log( ax5.info.browser );\n         * //Object {name: \"chrome\", version: \"39.0.2171.71\", mobile: false}\n         * ```\n         */\n        var browser = function (ua, mobile, browserName, match, browser, browserVersion) {\n            if (!win || !win.navigator) return {};\n\n            ua = navigator.userAgent.toLowerCase(), mobile = ua.search(/mobile/g) != -1, browserName, match, browser, browserVersion;\n\n            if (ua.search(/iphone/g) != -1) {\n                return { name: \"iphone\", version: 0, mobile: true };\n            } else if (ua.search(/ipad/g) != -1) {\n                return { name: \"ipad\", version: 0, mobile: true };\n            } else if (ua.search(/android/g) != -1) {\n                match = /(android)[ \\/]([\\w.]+)/.exec(ua) || [];\n                browserVersion = match[2] || \"0\";\n                return { name: \"android\", version: browserVersion, mobile: mobile };\n            } else {\n                browserName = \"\";\n                match = /(opr)[ \\/]([\\w.]+)/.exec(ua) || /(chrome)[ \\/]([\\w.]+)/.exec(ua) || /(webkit)[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) || [];\n                browser = match[1] || \"\";\n                browserVersion = match[2] || \"0\";\n\n                if (browser == \"msie\") browser = \"ie\";\n                return {\n                    name: browser,\n                    version: browserVersion,\n                    mobile: mobile\n                };\n            }\n            ua = null, mobile = null, browserName = null, match = null, browser = null, browserVersion = null;\n        }();\n\n        /**\n         * 브라우저 여부\n         * @member {Boolean} ax5.info.isBrowser\n         */\n        var isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && win.document);\n\n        /**\n         * 브라우저에 따른 마우스 휠 이벤트이름\n         * @member {Object} ax5.info.wheelEnm\n         */\n        var wheelEnm = win && /Firefox/i.test(navigator.userAgent) ? \"DOMMouseScroll\" : \"mousewheel\";\n\n        /**\n         * 첫번째 자리수 동사 - (필요한것이 없을때 : 4, 실행오류 : 5)\n         * 두번째 자리수 목적어 - 문자열 0, 숫자 1, 배열 2, 오브젝트 3, 함수 4, DOM 5, 파일 6, 기타 7\n         * 세번째 자리수 옵션\n         * @member {Object} ax5.info.errorMsg\n         */\n        var errorMsg = {};\n\n        /**\n         * 현재 페이지의 Url 정보를 리턴합니다.\n         * @method ax5.info.urlUtil\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log( ax5.util.toJson( ax5.info.urlUtil() ) );\n         * {\n        *\t\"baseUrl\": \"http://ax5:2018\",\n        *\t\"href\": \"http://ax5:2018/samples/index.html?a=1&b=1#abc\",\n        *\t\"param\": \"a=1&b=1\",\n        *\t\"referrer\": \"\",\n        *\t\"pathname\": \"/samples/index.html\",\n        *\t\"hostname\": \"ax5\",\n        *\t\"port\": \"2018\",\n        *\t\"url\": \"http://ax5:2018/samples/index.html\",\n        *\t\"hashdata\": \"abc\"\n        * }\n         * ```\n         */\n        function urlUtil(url, urls) {\n            url = {\n                href: win.location.href,\n                param: win.location.search,\n                referrer: doc.referrer,\n                pathname: win.location.pathname,\n                hostname: win.location.hostname,\n                port: win.location.port\n            }, urls = url.href.split(/[\\?#]/);\n            url.param = url.param.replace(\"?\", \"\");\n            url.url = urls[0];\n            if (url.href.search(\"#\") > -1) {\n                url.hashdata = U.last(urls);\n            }\n            urls = null;\n            url.baseUrl = U.left(url.href, \"?\").replace(url.pathname, \"\");\n            return url;\n        }\n\n        /**\n         * ax5-error-msg.js 에 정의된 ax5 error를 반환합니다.\n         * @method ax5.info.getError\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log( ax5.info.getError(\"single-uploader\", \"460\", \"upload\") );\n         *\n         * if(!this.selectedFile){\n        *      if (cfg.onEvent) {\n        *      \tvar that = {\n        *      \t\taction: \"error\",\n        *      \t\terror: ax5.info.getError(\"single-uploader\", \"460\", \"upload\")\n        *      \t};\n        *      \tcfg.onEvent.call(that, that);\n        *      }\n        *      return this;\n        * }\n         * ```\n         */\n        function getError(className, errorCode, methodName) {\n            if (info.errorMsg && info.errorMsg[className]) {\n                return {\n                    className: className,\n                    errorCode: errorCode,\n                    methodName: methodName,\n                    msg: info.errorMsg[className][errorCode]\n                };\n            } else {\n                return { className: className, errorCode: errorCode, methodName: methodName };\n            }\n        }\n\n        /**\n         * 브라우져의 터치 기능 유무를 확인합니다.\n         * @method ax5.info.supportTouch\n         * @returns {boolean}\n         * @example\n         * ```\n         * var chkFlag = ax5.info.supportTouch;\n         */\n        var supportTouch = win ? 'ontouchstart' in win || navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0 : false;\n\n        var supportFileApi = win ? win.FileReader && win.File && win.FileList && win.Blob : false;\n\n        return {\n            errorMsg: errorMsg,\n            version: version,\n            baseUrl: baseUrl,\n            onerror: onerror,\n            eventKeys: eventKeys,\n            weekNames: weekNames,\n            browser: browser,\n            isBrowser: isBrowser,\n            supportTouch: supportTouch,\n            supportFileApi: supportFileApi,\n            wheelEnm: wheelEnm,\n            urlUtil: urlUtil,\n            getError: getError\n        };\n    }();\n\n    /**\n     * Refer to this by {@link ax5}.\n     * @namespace ax5.util\n     */\n    ax5['util'] = U = function () {\n        var _toString = Object.prototype.toString;\n\n        /**\n         * Object나 Array의 아이템으로 사용자 함수를 호출합니다.\n         * @method ax5.util.each\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @example\n         * ```js\n         * var axf = ax5.util;\n         * axf.each([0,1,2], function(){\n        * \t// with this\n        * });\n         * axf.each({a:1, b:2}, function(){\n        * \t// with this\n        * });\n         * ```\n         */\n        function each(O, _fn) {\n            if (isNothing(O)) return [];\n            var key = void 0,\n                i = 0,\n                l = O.length,\n                isObj = l === undefined || typeof O === \"function\";\n            if (isObj) {\n                for (key in O) {\n                    if (typeof O[key] != \"undefined\") if (_fn.call(O[key], key, O[key]) === false) break;\n                }\n            } else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\") if (_fn.call(O[i], i, O[i++]) === false) break;\n                }\n            }\n            return O;\n        }\n\n        // In addition to using the http://underscorejs.org : map, reduce, reduceRight, find\n        /**\n         * 원본 아이템들을 이용하여 사용자 함수의 리턴값으로 이루어진 새로운 배열을 만듭니다.\n         * @method ax5.util.map\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @returns {Array}\n         * @example\n         * ```js\n         * var myArray = [0,1,2,3,4];\n         * var myObject = {a:1, b:\"2\", c:{axj:\"what\", arrs:[0,2,\"3\"]},\n        *    fn: function(abcdd){\n        *        return abcdd;\n        *    }\n        * };\n         *\n         * var _arr = ax5.util.map( myArray,  function(index, I){\n        *    return index+1;\n        * });\n         * console.log(_arr);\n         * // [1, 2, 3, 4, 5]\n         *\n         * var _arr = ax5.util.map( myObject,  function(k, v){\n        *    return v * 2;\n        * });\n         * console.log(_arr);\n         * // [2, 4, NaN, NaN]\n         * ```\n         */\n        function map(O, _fn) {\n            if (isNothing(O)) return [];\n            var key = void 0,\n                i = 0,\n                l = O.length,\n                results = [],\n                fnResult = void 0;\n            if (isObject(O)) {\n                for (key in O) {\n                    if (typeof O[key] != \"undefined\") {\n                        fnResult = undefined;\n                        if ((fnResult = _fn.call(O[key], key, O[key])) === false) break;else results.push(fnResult);\n                    }\n                }\n            } else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\") {\n                        fnResult = undefined;\n                        if ((fnResult = _fn.call(O[i], i, O[i++])) === false) break;else results.push(fnResult);\n                    }\n                }\n            }\n            return results;\n        }\n\n        /**\n         * 원본 아이템들을 이용하여 사용자 함수의 리턴값이 참인 아이템의 위치나 키값을 반환합니다.\n         * @method ax5.util.search\n         * @param {Object|Array} O\n         * @param {Function|String|Number} _fn - 함수 또는 값\n         * @returns {Number|String}\n         * @example\n         * ```js\n         * var myArray = [0,1,2,3,4,5,6];\n         * var myObject = {a:\"123\",\"b\":\"123\",c:123};\n         *\n         * ax5.util.search(myArray,  function(){\n        *    return this > 3;\n        * });\n         * // 4\n         * ax5.util.search(myObject,  function(k, v){\n        *    return v === 123;\n        * });\n         * // \"c\"\n         * ax5.util.search([1,2,3,4], 3);\n         * // 2\n         * ax5.util.search([1,2], 4);\n         * // -1\n         * ax5.util.search([\"name\",\"value\"], \"value\");\n         * // 1\n         * ax5.util.search([\"name\",\"value\"], \"values\");\n         * // -1\n         * ax5.util.search({k1:\"name\",k2:\"value\"}, \"value2\");\n         * // -1\n         * ax5.util.search({k1:\"name\",k2:\"value\"}, \"value\");\n         * // \"k2\"\n         * ```\n         */\n        function search(O, _fn) {\n            if (isNothing(O)) return -1;\n            if (isObject(O)) {\n                for (var key in O) {\n                    if (typeof O[key] != \"undefined\" && isFunction(_fn) && _fn.call(O[key], key, O[key])) {\n                        return key;\n                        break;\n                    } else if (O[key] == _fn) {\n                        return key;\n                        break;\n                    }\n                }\n            } else {\n                for (var i = 0, l = O.length; i < l; i++) {\n                    if (typeof O[i] != \"undefined\" && isFunction(_fn) && _fn.call(O[i], i, O[i])) {\n                        return i;\n                        break;\n                    } else if (O[i] == _fn) {\n                        return i;\n                        break;\n                    }\n                }\n            }\n            return -1;\n        }\n\n        /**\n         * @method ax5.util.sum\n         * @param {Array|Object} O\n         * @param {Number} [defaultValue]\n         * @param {Function} _fn\n         * @returns {Number}\n         * @example\n         * ```js\n         * var arr = [\n         *  {name: \"122\", value: 9},\n         *  {name: \"122\", value: 10},\n         *  {name: \"123\", value: 11}\n         * ];\n         *\n         * var rs = ax5.util.sum(arr, function () {\n         *  if(this.name == \"122\") {\n         *      return this.value;\n         *  }\n         * });\n         * console.log(rs); // 19\n         *\n         * console.log(ax5.util.sum(arr, 10, function () {\n         *   return this.value;\n         * }));\n         * // 40\n         * ```\n         */\n        function sum(O, defaultValue, _fn) {\n            var i = void 0,\n                l = void 0,\n                tokenValue = void 0;\n            if (isFunction(defaultValue) && typeof _fn === \"undefined\") {\n                _fn = defaultValue;\n                defaultValue = 0;\n            }\n            if (typeof defaultValue === \"undefined\") defaultValue = 0;\n\n            if (isArray(O)) {\n                i = 0;\n                l = O.length;\n                for (; i < l; i++) {\n                    if (typeof O[i] !== \"undefined\") {\n                        if ((tokenValue = _fn.call(O[i], O[i])) === false) break;else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue;\n            } else if (isObject(O)) {\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if ((tokenValue = _fn.call(O[i], O[i])) === false) break;else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue;\n            } else {\n                console.error(\"argument error : ax5.util.sum - use Array or Object\");\n                return defaultValue;\n            }\n        }\n\n        /**\n         * @method ax5.util.avg\n         * @param {Array|Object} O\n         * @param {Number} [defaultValue]\n         * @param {Function} _fn\n         * @returns {Number}\n         * @example\n         * ```js\n         * var arr = [\n         *  {name: \"122\", value: 9},\n         *  {name: \"122\", value: 10},\n         *  {name: \"123\", value: 11}\n         * ];\n         *\n         * var rs = ax5.util.avg(arr, function () {\n         *      return this.value;\n         * });\n         *\n         * console.log(rs); // 10\n         * ```\n         */\n        function avg(O, defaultValue, _fn) {\n            var i = void 0,\n                l = void 0,\n                tokenValue = void 0;\n            if (isFunction(defaultValue) && typeof _fn === \"undefined\") {\n                _fn = defaultValue;\n                defaultValue = 0;\n            }\n            if (typeof defaultValue === \"undefined\") defaultValue = 0;\n\n            if (isArray(O)) {\n                i = 0;\n                l = O.length;\n                for (; i < l; i++) {\n                    if (typeof O[i] !== \"undefined\") {\n                        if ((tokenValue = _fn.call(O[i], O[i])) === false) break;else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue / l;\n            } else if (isObject(O)) {\n                l = 0;\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if ((tokenValue = _fn.call(O[i], O[i])) === false) break;else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;++l;\n                    }\n                }\n                return defaultValue / l;\n            } else {\n                console.error(\"argument error : ax5.util.sum - use Array or Object\");\n                return defaultValue;\n            }\n        }\n\n        /**\n         * 배열의 왼쪽에서 오른쪽으로 연산을 진행하는데 수행한 결과가 왼쪽 값으로 반영되어 최종 왼쪽 값을 반환합니다.\n         * @method ax5.util.reduce\n         * @param {Array|Object} O\n         * @param {Function} _fn\n         * @returns {Alltypes}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.reduce( aarray, function(p, n){\n        *   return p * n;\n        * });\n         * console.log(result, aarray);\n         * // 120 [5, 4, 3, 2, 1]\n         *\n         * ax5.util.reduce({a:1, b:2}, function(p, n){\n        *    return parseInt(p|0) + parseInt(n);\n        * });\n         * // 3\n         * ```\n         */\n        function reduce(O, _fn) {\n            var i, l, tokenItem;\n            if (isArray(O)) {\n                i = 0, l = O.length, tokenItem = O[i];\n                for (; i < l - 1;) {\n                    if (typeof O[i] != \"undefined\") {\n                        if ((tokenItem = _fn.call(root, tokenItem, O[++i])) === false) break;\n                    }\n                }\n                return tokenItem;\n            } else if (isObject(O)) {\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if ((tokenItem = _fn.call(root, tokenItem, O[i])) === false) break;\n                    }\n                }\n                return tokenItem;\n            } else {\n                console.error(\"argument error : ax5.util.reduce - use Array or Object\");\n                return null;\n            }\n        }\n\n        /**\n         * 배열의 오른쪽에서 왼쪽으로 연산을 진행하는데 수행한 결과가 오른쪽 값으로 반영되어 최종 오른쪽 값을 반환합니다.\n         * @method ax5.util.reduceRight\n         * @param {Array} O\n         * @param {Function} _fn\n         * @returns {Alltypes}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.reduceRight( aarray, function(p, n){\n        *    console.log( n );\n        *    return p * n;\n        * });\n         * console.log(result, aarray);\n         * 120 [5, 4, 3, 2, 1]\n         * ```\n         */\n        function reduceRight(O, _fn) {\n            var i = O.length - 1,\n                tokenItem = O[i];\n            for (; i > 0;) {\n                if (typeof O[i] != \"undefined\") {\n                    if ((tokenItem = _fn.call(root, tokenItem, O[--i])) === false) break;\n                }\n            }\n            return tokenItem;\n        }\n\n        /**\n         * 배열또는 오브젝트의 각 아이템을 인자로 하는 사용자 함수의 결과가 참인 아이템들의 배열을 반환합니다.\n         * @method ax5.util.filter\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @returns {Array}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.filter( aarray, function(){\n        *    return this % 2;\n        * });\n         * console.log(result);\n         * // [5, 3, 1]\n         *\n         * var filObject = {a:1, s:\"string\", oa:{pickup:true, name:\"AXISJ\"}, os:{pickup:true, name:\"AX5\"}};\n         * result = ax5.util.filter( filObject, function(){\n        * \treturn this.pickup;\n        * });\n         * console.log( ax5.util.toJson(result) );\n         * // [{\"pickup\": , \"name\": \"AXISJ\"}, {\"pickup\": , \"name\": \"AX5\"}]\n         * ```\n         */\n        function filter(O, _fn) {\n            if (isNothing(O)) return [];\n            var k,\n                i = 0,\n                l = O.length,\n                results = [],\n                fnResult;\n            if (isObject(O)) {\n                for (k in O) {\n                    if (typeof O[k] != \"undefined\") {\n                        if (fnResult = _fn.call(O[k], k, O[k])) results.push(O[k]);\n                    }\n                }\n            } else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (fnResult = _fn.call(O[i], i, O[i])) results.push(O[i]);\n                        i++;\n                    }\n                }\n            }\n            return results;\n        }\n\n        /**\n         * Object를 JSONString 으로 반환합니다.\n         * @method ax5.util.toJson\n         * @param {Object|Array} O\n         * @returns {String} JSON\n         * @example\n         * ```js\n         * var ax = ax5.util;\n         * var myObject = {\n        *    a:1, b:\"2\", c:{axj:\"what\", arrs:[0,2,\"3\"]},\n        *    fn: function(abcdd){\n        *        return abcdd;\n        *    }\n        * };\n         * console.log( ax.toJson(myObject) );\n         * ```\n         */\n        function toJson(O) {\n            var jsonString = \"\";\n            if (ax5.util.isArray(O)) {\n                var i = 0,\n                    l = O.length;\n                jsonString += \"[\";\n                for (; i < l; i++) {\n                    if (i > 0) jsonString += \",\";\n                    jsonString += toJson(O[i]);\n                }\n                jsonString += \"]\";\n            } else if (ax5.util.isObject(O)) {\n                jsonString += \"{\";\n                var jsonObjectBody = [];\n                each(O, function (key, value) {\n                    jsonObjectBody.push('\"' + key + '\": ' + toJson(value));\n                });\n                jsonString += jsonObjectBody.join(\", \");\n                jsonString += \"}\";\n            } else if (ax5.util.isString(O)) {\n                jsonString = '\"' + O + '\"';\n            } else if (ax5.util.isNumber(O)) {\n                jsonString = O;\n            } else if (ax5.util.isUndefined(O)) {\n                jsonString = \"undefined\";\n            } else if (ax5.util.isFunction(O)) {\n                jsonString = '\"{Function}\"';\n            } else {\n                jsonString = O;\n            }\n            return jsonString;\n        }\n\n        /**\n         * 관용의 JSON Parser\n         * @method ax5.util.parseJson\n         * @param {String} JSONString\n         * @param {Boolean} [force] - 강제 적용 여부 (json 문자열 검사를 무시하고 오브젝트 변환을 시도합니다.)\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log(ax5.util.parseJson('{\"a\":1}'));\n         * // Object {a: 1}\n         * console.log(ax5.util.parseJson(\"{'a':1, 'b':'b'}\"));\n         * // Object {a: 1, b: \"b\"}\n         * console.log(ax5.util.parseJson(\"{'a':1, 'b':function(){return 1;}}\", true));\n         * // Object {a: 1, b: function}\n         * console.log(ax5.util.parseJson(\"{a:1}\"));\n         * // Object {a: 1}\n         * console.log(ax5.util.parseJson(\"[1,2,3]\"));\n         * // [1, 2, 3]\n         * console.log(ax5.util.parseJson(\"['1','2','3']\"));\n         * // [\"1\", \"2\", \"3\"]\n         * console.log(ax5.util.parseJson(\"[{'a':'99'},'2','3']\"));\n         * // [Object, \"2\", \"3\"]\n         * ```\n         */\n        function parseJson(str, force) {\n            if (force || reIsJson.test(str)) {\n                try {\n                    return new Function('', 'return ' + str)();\n                } catch (e) {\n                    return { error: 500, msg: 'syntax error' };\n                }\n            } else {\n                return { error: 500, msg: 'syntax error' };\n            }\n        }\n\n        /**\n         * 인자의 타입을 반환합니다.\n         * @method ax5.util.getType\n         * @param {Object|Array|String|Number|Element|Etc} O\n         * @returns {String} window|element|object|array|function|string|number|undefined|nodelist\n         * @example\n         * ```js\n         * var axf = ax5.util;\n         * var a = 11;\n         * var b = \"11\";\n         * console.log( axf.getType(a) );\n         * console.log( axf.getType(b) );\n         * ```\n         */\n        function getType(O) {\n            var typeName;\n            if (O != null && O == O.window) {\n                typeName = \"window\";\n            } else if (!!(O && O.nodeType == 1)) {\n                typeName = \"element\";\n            } else if (!!(O && O.nodeType == 11)) {\n                typeName = \"fragment\";\n            } else if (O === null) {\n                typeName = \"null\";\n            } else if (typeof O === \"undefined\") {\n                typeName = \"undefined\";\n            } else if (_toString.call(O) == \"[object Object]\") {\n                typeName = \"object\";\n            } else if (_toString.call(O) == \"[object Array]\") {\n                typeName = \"array\";\n            } else if (_toString.call(O) == \"[object String]\") {\n                typeName = \"string\";\n            } else if (_toString.call(O) == \"[object Number]\") {\n                typeName = \"number\";\n            } else if (_toString.call(O) == \"[object NodeList]\") {\n                typeName = \"nodelist\";\n            } else if (typeof O === \"function\") {\n                typeName = \"function\";\n            }\n            return typeName;\n        }\n\n        /**\n         * 오브젝트가 window 인지 판단합니다.\n         * @method ax5.util.isWindow\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isWindow(O) {\n            return O != null && O == O.window;\n        }\n\n        /**\n         * 오브젝트가 HTML 엘리먼트여부인지 판단합니다.\n         * @method ax5.util.isElement\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isElement(O) {\n            return !!(O && (O.nodeType == 1 || O.nodeType == 11));\n        }\n\n        /**\n         * 오브젝트가 Object인지 판단합니다.\n         * @method ax5.util.isObject\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isObject(O) {\n            return _toString.call(O) == \"[object Object]\";\n        }\n\n        /**\n         * 오브젝트가 Array인지 판단합니다.\n         * @method ax5.util.isArray\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isArray(O) {\n            return _toString.call(O) == \"[object Array]\";\n        }\n\n        /**\n         * 오브젝트가 Function인지 판단합니다.\n         * @method ax5.util.isFunction\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isFunction(O) {\n            return typeof O === \"function\";\n        }\n\n        /**\n         * 오브젝트가 String인지 판단합니다.\n         * @method ax5.util.isString\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isString(O) {\n            return _toString.call(O) == \"[object String]\";\n        }\n\n        /**\n         * 오브젝트가 Number인지 판단합니다.\n         * @method ax5.util.isNumber\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNumber(O) {\n            return _toString.call(O) == \"[object Number]\";\n        }\n\n        /**\n         * 오브젝트가 NodeList인지 판단합니다.\n         * @method ax5.util.isNodelist\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNodelist(O) {\n            return !!(_toString.call(O) == \"[object NodeList]\" || typeof O !== \"undefined\" && O && O[0] && O[0].nodeType == 1);\n        }\n\n        /**\n         * 오브젝트가 undefined인지 판단합니다.\n         * @method ax5.util.isUndefined\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isUndefined(O) {\n            return typeof O === \"undefined\";\n        }\n\n        /**\n         * 오브젝트가 undefined이거나 null이거나 빈값인지 판단합니다.\n         * @method ax5.util.isNothing\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNothing(O) {\n            return typeof O === \"undefined\" || O === null || O === \"\";\n        }\n\n        /**\n         * 오브젝트가 날자값인지 판단합니다.\n         * @method ax5.util.isDate\n         * @param {Date} O\n         * @returns {Boolean}\n         * @example\n         * ```js\n         * ax5.util.isDate('2016-09-30');\n         * // false\n         * ax5.util.isDate( new Date('2016-09-30') );\n         * // true\n         * ```\n         */\n        function isDate(O) {\n            return O instanceof Date && !isNaN(O.valueOf());\n        }\n\n        function isDateFormat(O) {\n            var result = false;\n            if (!O) {} else if (O instanceof Date && !isNaN(O.valueOf())) {\n                result = true;\n            } else {\n                if (O.length > 7) {\n                    if (date(O) instanceof Date) {\n                        return true;\n                    }\n                }\n                O = O.replace(/\\D/g, '');\n                if (O.length > 7) {\n                    var mm = O.substr(4, 2),\n                        dd = O.substr(6, 2);\n                    O = date(O);\n                    if (O.getMonth() == mm - 1 && O.getDate() == dd) {\n                        result = true;\n                    }\n                }\n            }\n            return result;\n        }\n\n        /**\n         * 오브젝트의 첫번째 아이템을 반환합니다.\n         * @method ax5.util.first\n         * @param {Object|Array} O\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.first({a:1, b:2});\n         * // Object {a: 1}\n         * ax5.util.first([1,2,3,4]);\n         * // 1\n         * ```\n         */\n        function first(O) {\n            if (isObject(O)) {\n                var keys = Object.keys(O);\n                var item = {};\n                item[keys[0]] = O[keys[0]];\n                return item;\n            } else if (isArray(O)) {\n                return O[0];\n            } else {\n                console.error(\"ax5.util.object.first\", \"argument type error\");\n                return undefined;\n            }\n        }\n\n        /**\n         * 오브젝트의 마지막 아이템을 반환합니다.\n         * @method ax5.util.last\n         * @param {Object|Array} O\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.last({a:1, b:2});\n         * // Object {b: 2}\n         * ax5.util.last([1,2,3,4]);\n         * // 4\n         * ```\n         */\n        function last(O) {\n            if (isObject(O)) {\n                var keys = Object.keys(O);\n                var item = {};\n                item[keys[keys.length - 1]] = O[keys[keys.length - 1]];\n                return item;\n            } else if (isArray(O)) {\n                return O[O.length - 1];\n            } else {\n                console.error(\"ax5.util.object.last\", \"argument type error\");\n                return undefined;\n            }\n        }\n\n        /**\n         * 쿠키를 설정합니다.\n         * @method ax5.util.setCookie\n         * @param {String} cname - 쿠키이름\n         * @param {String} cvalue - 쿠키값\n         * @param {Number} [exdays] - 쿠키 유지일수\n         * @param {Object} [opts] - path, domain 설정 옵션\n         * @example\n         * ```js\n         * ax5.util.setCookie(\"jslib\", \"AX5\");\n         * ax5.util.setCookie(\"jslib\", \"AX5\", 3);\n         * ax5.util.setCookie(\"jslib\", \"AX5\", 3, {path:\"/\", domain:\".axisj.com\"});\n         * ```\n         */\n        function setCookie(cn, cv, exdays, opts) {\n            var expire;\n            if (typeof exdays === \"number\") {\n                expire = new Date();\n                expire.setDate(expire.getDate() + exdays);\n            }\n            opts = opts || {};\n            return doc.cookie = [escape(cn), '=', escape(cv), expire ? \"; expires=\" + expire.toUTCString() : \"\", // use expires attribute, max-age is not supported by IE\n            opts.path ? \"; path=\" + opts.path : \"\", opts.domain ? \"; domain=\" + opts.domain : \"\", opts.secure ? \"; secure\" : \"\"].join(\"\");\n        }\n\n        /**\n         * 쿠키를 가져옵니다.\n         * @method ax5.util.getCookie\n         * @param {String} cname\n         * @returns {String} cookie value\n         * @example\n         * ```js\n         * ax5.util.getCookie(\"jslib\");\n         * ```\n         */\n        function getCookie(cname) {\n            var name = cname + \"=\";\n            var ca = doc.cookie.split(';'),\n                i = 0,\n                l = ca.length;\n            for (; i < l; i++) {\n                var c = ca[i];\n                while (c.charAt(0) == ' ') {\n                    c = c.substring(1);\n                }if (c.indexOf(name) != -1) return unescape(c.substring(name.length, c.length));\n            }\n            return \"\";\n        }\n\n        /**\n         * jsonString 으로 alert 합니다.\n         * @method ax5.util.alert\n         * @param {Object|Array|String|Number} O\n         * @returns {Object|Array|String|Number} O\n         * @example ```js\n         * ax5.util.alert({a:1,b:2});\n         * ax5.util.alert(\"정말?\");\n         * ```\n         */\n        function alert(O) {\n            win.alert(toJson(O));\n            return O;\n        }\n\n        /**\n         * 문자열의 특정 문자열까지 잘라주거나 원하는 포지션까지 잘라줍니다.\n         * @method ax5.util.left\n         * @param {String} str - 문자열\n         * @param {String|Number} pos - 찾을 문자열 또는 포지션\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.left(\"abcd.efd\", 3);\n         * // abc\n         * ax5.util.left(\"abcd.efd\", \".\");\n         * // abcd\n         * ```\n         */\n        function left(str, pos) {\n            if (typeof str === \"undefined\" || typeof pos === \"undefined\") return \"\";\n            if (isString(pos)) {\n                return str.indexOf(pos) > -1 ? str.substr(0, str.indexOf(pos)) : \"\";\n            } else if (isNumber(pos)) {\n                return str.substr(0, pos);\n            } else {\n                return \"\";\n            }\n        }\n\n        /**\n         * 문자열의 특정 문자열까지 잘라주거나 원하는 포지션까지 잘라줍니다.\n         * @method ax5.util.right\n         * @param {String} str - 문자열\n         * @param {String|Number} pos - 찾을 문자열 또는 포지션\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.right(\"abcd.efd\", 3);\n         * // efd\n         * ax5.util.right(\"abcd.efd\", \".\");\n         * // efd\n         * ```\n         */\n        function right(str, pos) {\n            if (typeof str === \"undefined\" || typeof pos === \"undefined\") return \"\";\n            str = '' + str;\n            if (isString(pos)) {\n                return str.lastIndexOf(pos) > -1 ? str.substr(str.lastIndexOf(pos) + 1) : \"\";\n            } else if (isNumber(pos)) {\n                return str.substr(str.length - pos);\n            } else {\n                return \"\";\n            }\n        }\n\n        /**\n         * css형 문자열이나 특수문자가 포함된 문자열을 카멜케이스로 바꾸어 반환합니다.\n         * @method ax5.util.camelCase\n         * @param {String} str\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.camelCase(\"inner-width\");\n         * ax5.util.camelCase(\"innerWidth\");\n         * // innerWidth\n         * ```\n         */\n        function camelCase(str) {\n            return str.replace(reMs, \"ms-\").replace(reSnakeCase, function (all, letter) {\n                return letter.toUpperCase();\n            });\n        }\n\n        /**\n         * css형 문자열이나 카멜케이스문자열을 스네이크 케이스 문자열로 바꾸어 반환합니다.\n         * @method ax5.util.snakeCase\n         * @param {String} str\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.snakeCase(\"innerWidth\");\n         * ax5.util.snakeCase(\"inner-Width\");\n         * ax5.util.snakeCase(\"innerWidth\");\n         * // inner-width\n         * ```\n         */\n        function snakeCase(str) {\n            return camelCase(str).replace(reCamelCase, function (all, letter) {\n                return \"-\" + letter.toLowerCase();\n            });\n        }\n\n        /**\n         * 문자열에서 -. 을 제외한 모든 문자열을 제거하고 숫자로 반환합니다. 옵션에 따라 원하는 형식의 숫자로 변환 할 수 도 있습니다.\n         * @method ax5.util.number\n         * @param {String|Number} str\n         * @param {Object} cond - 옵션\n         * @returns {String|Number}\n         * @example\n         * ```js\n         * var cond = {\n        * \tround: {Number|Boolean} - 반올림할 자릿수,\n        * \tmoney: {Boolean} - 통화,\n        * \tabs: {Boolean} - 절대값,\n        * \tbyte: {Boolean} - 바이트\n        * }\n         *\n         * console.log(ax5.util.number(123456789.678, {round:1}));\n         * console.log(ax5.util.number(123456789.678, {round:1, money:true}));\n         * console.log(ax5.util.number(123456789.678, {round:2, byte:true}));\n         * console.log(ax5.util.number(-123456789.8888, {abs:true, round:2, money:true}));\n         * console.log(ax5.util.number(\"A-1234~~56789.8~888PX\", {abs:true, round:2, money:true}));\n         *\n         * //123456789.7\n         * //123,456,789.7\n         * //117.7MB\n         * //123,456,789.89\n         * //123,456,789.89\n         * ```\n         */\n        function number(str, cond) {\n            var result,\n                pair = ('' + str).split(reDot),\n                isMinus,\n                returnValue;\n\n            isMinus = Number(pair[0].replace(/,/g, \"\")) < 0 || pair[0] == \"-0\";\n            returnValue = 0.0;\n            pair[0] = pair[0].replace(reInt, \"\");\n\n            if (pair[1]) {\n                pair[1] = pair[1].replace(reNotNum, \"\");\n                returnValue = Number(pair[0] + \".\" + pair[1]) || 0;\n            } else {\n                returnValue = Number(pair[0]) || 0;\n            }\n            result = isMinus ? -returnValue : returnValue;\n\n            each(cond, function (k, c) {\n                if (k == \"round\") {\n                    if (isNumber(c)) {\n                        if (c < 0) {\n                            result = +(Math.round(result + \"e-\" + Math.abs(c)) + \"e+\" + Math.abs(c));\n                        } else {\n                            result = +(Math.round(result + \"e+\" + c) + \"e-\" + c);\n                        }\n                    } else {\n                        result = Math.round(result);\n                    }\n                }\n                if (k == \"floor\") {\n                    result = Math.floor(result);\n                }\n                if (k == \"ceil\") {\n                    result = Math.ceil(result);\n                } else if (k == \"money\") {\n                    result = function (val) {\n                        var txtNumber = '' + val;\n                        if (isNaN(txtNumber) || txtNumber == \"\") {\n                            return \"\";\n                        } else {\n                            var arrNumber = txtNumber.split('.');\n                            arrNumber[0] += '.';\n                            do {\n                                arrNumber[0] = arrNumber[0].replace(reMoneySplit, '$1,$2');\n                            } while (reMoneySplit.test(arrNumber[0]));\n                            if (arrNumber.length > 1) {\n                                return arrNumber.join('');\n                            } else {\n                                return arrNumber[0].split('.')[0];\n                            }\n                        }\n                    }(result);\n                } else if (k == \"abs\") {\n                    result = Math.abs(Number(result));\n                } else if (k == \"byte\") {\n                    result = function (val) {\n                        val = Number(result);\n                        var nUnit = \"KB\";\n                        var myByte = val / 1024;\n                        if (myByte / 1024 > 1) {\n                            nUnit = \"MB\";\n                            myByte = myByte / 1024;\n                        }\n                        if (myByte / 1024 > 1) {\n                            nUnit = \"GB\";\n                            myByte = myByte / 1024;\n                        }\n                        return number(myByte, { round: 1 }) + nUnit;\n                    }(result);\n                }\n            });\n\n            return result;\n        }\n\n        /**\n         * 배열 비슷한 오브젝트를 배열로 변환해줍니다.\n         * @method ax5.util.toArray\n         * @param {Object|Elements|Arguments} O\n         * @returns {Array}\n         * @example\n         * ```js\n         * ax5.util.toArray(arguments);\n         * //\n         * ```\n         */\n        function toArray(O) {\n            if (typeof O.length != \"undefined\") return Array.prototype.slice.call(O);\n            return [];\n        }\n\n        /**\n         * 첫번째 인자에 두번째 인자 아이템을 합쳐줍니다. concat과 같은 역할을 하지만. 인자가 Array타입이 아니어도 됩니다.\n         * @method ax5.util.merge\n         * @param {Array|ArrayLike} first\n         * @param {Array|ArrayLike} second\n         * @returns {Array} first\n         * @example\n         * ```\n         *\n         * ```\n         */\n        function merge(first, second) {\n            var l = second.length,\n                i = first.length,\n                j = 0;\n\n            if (typeof l === \"number\") {\n                for (; j < l; j++) {\n                    first[i++] = second[j];\n                }\n            } else {\n                while (second[j] !== undefined) {\n                    first[i++] = second[j++];\n                }\n            }\n\n            first.length = i;\n\n            return first;\n        }\n\n        /**\n         * 오브젝트를 파라미터형식으로 또는 파라미터를 오브젝트 형식으로 변환합니다.\n         * @method ax5.util.param\n         * @param {Object|Array|String} O\n         * @param {String} [cond] - param|object\n         * @returns {Object|String}\n         * @example\n         * ```\n         * ax5.util.param({a:1,b:'1232'}, \"param\");\n         * ax5.util.param(\"a=1&b=1232\", \"param\");\n         * // \"a=1&b=1232\"\n         * ax5.util.param(\"a=1&b=1232\");\n         * // {a: \"1\", b: \"1232\"}\n         * ```\n         */\n        function param(O, cond) {\n            var p;\n            if (isString(O) && typeof cond !== \"undefined\" && cond == \"param\") {\n                return O;\n            } else if (isString(O) && typeof cond !== \"undefined\" && cond == \"object\" || isString(O) && typeof cond === \"undefined\") {\n                p = {};\n                each(O.split(reAmp), function () {\n                    var item = this.split(reEq);\n                    if (!p[item[0]]) p[item[0]] = item[1];else {\n                        if (isString(p[item[0]])) p[item[0]] = [p[item[0]]];\n                        p[item[0]].push(item[1]);\n                    }\n                });\n                return p;\n            } else {\n                p = [];\n                each(O, function (k, v) {\n                    p.push(k + \"=\" + escape(v));\n                });\n                return p.join('&');\n            }\n        }\n\n        function encode(s) {\n            return encodeURIComponent(s);\n        }\n\n        function decode(s) {\n            return decodeURIComponent(s);\n        }\n\n        function error() {\n            ax5.info.onerror.apply(this, arguments);\n        }\n\n        function localDate(yy, mm, dd, hh, mi, ss) {\n            var utcD, localD;\n            localD = new Date();\n            if (mm < 0) mm = 0;\n            if (typeof hh === \"undefined\") hh = 12;\n            if (typeof mi === \"undefined\") mi = 0;\n            utcD = new Date(Date.UTC(yy, mm, dd || 1, hh, mi, ss || 0));\n\n            if (mm == 0 && dd == 1 && utcD.getUTCHours() + utcD.getTimezoneOffset() / 60 < 0) {\n                utcD.setUTCHours(0);\n            } else {\n                utcD.setUTCHours(utcD.getUTCHours() + utcD.getTimezoneOffset() / 60);\n            }\n            return utcD;\n        }\n\n        /**\n         * 날짜 형식의 문자열이나 Date객체를 조건에 맞게 처리 한 후 원하는 return 값으로 반환합니다.\n         * @method ax5.util.date\n         * @param {String|Date} d\n         * @param {Object} cond\n         * @returns {Date|String}\n         * @example\n         * ```js\n         * ax5.util.date('2013-01-01'); // Tue Jan 01 2013 23:59:00 GMT+0900 (KST)\n         * ax5.util.date((new Date()), {add:{d:10}, return:'yyyy/MM/dd'}); // \"2015/07/01\"\n         * ax5.util.date('1919-03-01', {add:{d:10}, return:'yyyy/MM/dd hh:mm:ss'}); // \"1919/03/11 23:59:00\"\n         * ```\n         */\n        function date(d, cond) {\n            var yy = void 0,\n                mm = void 0,\n                dd = void 0,\n                hh = void 0,\n                mi = void 0,\n                aDateTime = void 0,\n                aTimes = void 0,\n                aTime = void 0,\n                aDate = void 0,\n                va = void 0,\n                ISO_8601 = /^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?)?)?)?$/i,\n                ISO_8601_FULL = /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$/i;\n\n            if (isString(d)) {\n                if (d.length == 0) {\n                    d = new Date();\n                } else if (d.length > 15) {\n                    if (ISO_8601_FULL.test(d) || ISO_8601.test(d)) {\n                        d = new Date(d);\n                    } else {\n                        aDateTime = d.split(/ /g), aTimes, aTime, aDate = aDateTime[0].split(/\\D/g), yy = aDate[0];\n                        mm = parseFloat(aDate[1]);\n                        dd = parseFloat(aDate[2]);\n                        aTime = aDateTime[1] || \"09:00\";\n                        aTimes = aTime.substring(0, 5).split(\":\");\n                        hh = parseFloat(aTimes[0]);\n                        mi = parseFloat(aTimes[1]);\n                        if (right(aTime, 2) === \"AM\" || right(aTime, 2) === \"PM\") hh += 12;\n                        d = localDate(yy, mm - 1, dd, hh, mi);\n                    }\n                } else if (d.length == 14) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, number(va.substr(6, 2)), number(va.substr(8, 2)), number(va.substr(10, 2)), number(va.substr(12, 2)));\n                } else if (d.length > 7) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, number(va.substr(6, 2)));\n                } else if (d.length > 4) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, 1);\n                } else if (d.length > 2) {\n                    va = d.replace(/\\D/g, \"\");\n                    return localDate(va.substr(0, 4), va.substr(4, 2) - 1, 1);\n                } else {\n                    d = new Date();\n                }\n            }\n            if (typeof cond === \"undefined\" || typeof d === \"undefined\") {\n                return d;\n            } else {\n                if (\"add\" in cond) {\n                    d = function (_d, opts) {\n                        var yy = void 0,\n                            mm = void 0,\n                            dd = void 0,\n                            mxdd = void 0,\n                            DyMilli = 1000 * 60 * 60 * 24;\n\n                        if (typeof opts[\"d\"] !== \"undefined\") {\n                            _d.setTime(_d.getTime() + opts[\"d\"] * DyMilli);\n                        } else if (typeof opts[\"m\"] !== \"undefined\") {\n                            yy = _d.getFullYear();\n                            mm = _d.getMonth();\n                            dd = _d.getDate();\n                            yy = yy + parseInt(opts[\"m\"] / 12);\n                            mm += opts[\"m\"] % 12;\n                            mxdd = daysOfMonth(yy, mm);\n                            if (mxdd < dd) dd = mxdd;\n                            _d = new Date(yy, mm, dd, 12);\n                        } else if (typeof opts[\"y\"] !== \"undefined\") {\n                            _d.setTime(_d.getTime() + opts[\"y\"] * 365 * DyMilli);\n                        } else if (typeof opts[\"h\"] !== \"undefined\") {\n                            _d.setTime(_d.getTime() + opts[\"h\"] * 1000 * 60 * 60);\n                        }\n\n                        return _d;\n                    }(new Date(d), cond[\"add\"]);\n                }\n                if (\"set\" in cond) {\n                    d = function (_d, opts) {\n                        var yy = void 0,\n                            mm = void 0,\n                            dd = void 0,\n                            processor = {\n                            \"firstDayOfMonth\": function firstDayOfMonth(date) {\n                                yy = date.getFullYear();\n                                mm = date.getMonth();\n                                dd = 1;\n                                return new Date(yy, mm, dd, 12);\n                            },\n                            \"lastDayOfMonth\": function lastDayOfMonth(date) {\n                                yy = date.getFullYear();\n                                mm = date.getMonth();\n                                dd = daysOfMonth(yy, mm);\n                                return new Date(yy, mm, dd, 12);\n                            }\n                        };\n                        if (opts in processor) {\n                            return processor[opts](_d);\n                        } else {\n                            return _d;\n                        }\n                    }(new Date(d), cond[\"set\"]);\n                }\n                if (\"return\" in cond) {\n                    return function () {\n\n                        var fStr = cond[\"return\"],\n                            nY = void 0,\n                            nM = void 0,\n                            nD = void 0,\n                            nH = void 0,\n                            nMM = void 0,\n                            nS = void 0,\n                            nDW = void 0,\n                            yre = void 0,\n                            regY = void 0,\n                            mre = void 0,\n                            regM = void 0,\n                            dre = void 0,\n                            regD = void 0,\n                            hre = void 0,\n                            regH = void 0,\n                            mire = void 0,\n                            regMI = void 0,\n                            sre = void 0,\n                            regS = void 0,\n                            dwre = void 0,\n                            regDW = void 0;\n\n                        nY = d.getUTCFullYear();\n                        nM = setDigit(d.getMonth() + 1, 2);\n                        nD = setDigit(d.getDate(), 2);\n                        nH = setDigit(d.getHours(), 2);\n                        nMM = setDigit(d.getMinutes(), 2);\n                        nS = setDigit(d.getSeconds(), 2);\n                        nDW = d.getDay();\n\n                        yre = /[^y]*(yyyy)[^y]*/gi;\n                        yre.exec(fStr);\n                        regY = RegExp.$1;\n                        mre = /[^m]*(MM)[^m]*/g;\n                        mre.exec(fStr);\n                        regM = RegExp.$1;\n                        dre = /[^d]*(dd)[^d]*/gi;\n                        dre.exec(fStr);\n                        regD = RegExp.$1;\n                        hre = /[^h]*(hh)[^h]*/gi;\n                        hre.exec(fStr);\n                        regH = RegExp.$1;\n                        mire = /[^m]*(mm)[^i]*/g;\n                        mire.exec(fStr);\n                        regMI = RegExp.$1;\n                        sre = /[^s]*(ss)[^s]*/gi;\n                        sre.exec(fStr);\n                        regS = RegExp.$1;\n                        dwre = /[^d]*(dw)[^w]*/gi;\n                        dwre.exec(fStr);\n                        regDW = RegExp.$1;\n\n                        if (regY === \"yyyy\") {\n                            fStr = fStr.replace(regY, right(nY, regY.length));\n                        }\n                        if (regM === \"MM\") {\n                            if (regM.length == 1) nM = d.getMonth() + 1;\n                            fStr = fStr.replace(regM, nM);\n                        }\n                        if (regD === \"dd\") {\n                            if (regD.length == 1) nD = d.getDate();\n                            fStr = fStr.replace(regD, nD);\n                        }\n                        if (regH === \"hh\") {\n                            fStr = fStr.replace(regH, nH);\n                        }\n                        if (regMI === \"mm\") {\n                            fStr = fStr.replace(regMI, nMM);\n                        }\n                        if (regS === \"ss\") {\n                            fStr = fStr.replace(regS, nS);\n                        }\n                        if (regDW == \"dw\") {\n                            fStr = fStr.replace(regDW, info.weekNames[nDW].label);\n                        }\n                        return fStr;\n                    }();\n                } else {\n                    return d;\n                }\n            }\n        }\n\n        /**\n         * 인자인 날짜가 오늘부터 몇일전인지 반환합니다. 또는 인자인 날짜가 가까운 미래에 몇일 후인지 반환합니다.\n         * @method ax5.util.dday\n         * @param {String|Data} d\n         * @param {Object} cond\n         * @returns {Number}\n         * @example\n         * ```js\n         * ax5.util.dday('2016-01-29');\n         * // 1\n         * ax5.util.dday('2016-01-29', {today:'2016-01-28'});\n         * // 1\n         * ax5.util.dday('1977-03-29', {today:'2016-01-28', age:true});\n         * // 39\n         * ```\n         */\n        function dday(d, cond) {\n            var memoryDay = date(d),\n                DyMilli = 1000 * 60 * 60 * 24,\n                today = new Date(),\n                diffnum,\n                thisYearMemoryDay;\n\n            function getDayTime(_d) {\n                return Math.floor(_d.getTime() / DyMilli) * DyMilli;\n            }\n\n            if (typeof cond === \"undefined\") {\n                diffnum = number((getDayTime(memoryDay) - getDayTime(today)) / DyMilli, { floor: true });\n                return diffnum;\n            } else {\n                diffnum = number((getDayTime(memoryDay) - getDayTime(today)) / DyMilli, { floor: true });\n                if (cond[\"today\"]) {\n                    today = date(cond.today);\n                    diffnum = number((getDayTime(memoryDay) - getDayTime(today)) / DyMilli, { floor: true });\n                }\n                if (cond[\"thisYear\"]) {\n                    thisYearMemoryDay = new Date(today.getFullYear(), memoryDay.getMonth(), memoryDay.getDate());\n                    diffnum = number((getDayTime(thisYearMemoryDay) - getDayTime(today)) / DyMilli, { floor: true });\n                    if (diffnum < 0) {\n                        thisYearMemoryDay = new Date(today.getFullYear() + 1, memoryDay.getMonth(), memoryDay.getDate());\n                        diffnum = number((getDayTime(thisYearMemoryDay) - getDayTime(today)) / DyMilli, { floor: true });\n                    }\n                }\n                if (cond[\"age\"]) {\n                    thisYearMemoryDay = new Date(today.getFullYear(), memoryDay.getMonth(), memoryDay.getDate());\n                    diffnum = thisYearMemoryDay.getFullYear() - memoryDay.getFullYear();\n                }\n\n                return diffnum;\n            }\n        }\n\n        /**\n         * 인자인 날짜가 몇년 몇월의 몇번째 주차인지 반환합니다.\n         * @method ax5.util.weeksOfMonth\n         * @param {String|Data} d\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.weeksOfMonth(\"2015-10-01\"); // {year: 2015, month: 10, count: 1}\n         * ax5.util.weeksOfMonth(\"2015-09-19\"); // {year: 2015, month: 9, count: 3}\n         * ```\n         */\n        function weeksOfMonth(d) {\n            var myDate = date(d);\n            return {\n                year: myDate.getFullYear(),\n                month: myDate.getMonth() + 1,\n                count: parseInt(myDate.getDate() / 7 + 1)\n            };\n        }\n\n        /**\n         * 년월에 맞는 날자수를 반환합니다.\n         * (new Date()).getMonth() 기준으로 월값을 보냅니다. \"2월\" 인경우 \"1\" 을 넘기게 됩니다.\n         * @method ax5.util.daysOfMonth\n         * @param {Number} y\n         * @param {Number} m\n         * @returns {Number}\n         * @examples\n         * ```js\n         * ax5.util.daysOfMonth(2015, 11); // 31\n         * ax5.util.daysOfMonth(2015, 1); // 28\n         * ```\n         */\n        function daysOfMonth(y, m) {\n            if (m == 3 || m == 5 || m == 8 || m == 10) {\n                return 30;\n            } else if (m == 1) {\n                return y % 4 == 0 && y % 100 != 0 || y % 400 == 0 ? 29 : 28;\n            } else {\n                return 31;\n            }\n        }\n\n        /**\n         * 원하는 횟수 만큼 자릿수 맞춤 문자열을 포함한 문자열을 반환합니다.\n         * 문자열 길이보다 작은값을 보내면 무시됩니다.\n         * @method ax5.util.setDigit\n         * @param {String|Number} num\n         * @param {Number} length\n         * @param {String} [padder=0]\n         * @param {Number} [radix]\n         * @returns {String}\n         * @example\n         * ```\n         * ax5.util.setDigit(2016, 6)\n         * // \"002016\"\n         * ax5.util.setDigit(2016, 2)\n         * // \"2016\"\n         * ```\n         */\n        function setDigit(num, length, padder, radix) {\n            var s = num.toString(radix || 10);\n            return times(padder || '0', length - s.length) + s;\n        }\n\n        /**\n         * 문자열을 지정된 수만큼 반복 합니다.\n         * @param {String} s\n         * @param {Number} count\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.times(2016, 2)\n         * //\"20162016\"\n         * ```\n         */\n        function times(s, count) {\n            return count < 1 ? '' : new Array(count + 1).join(s);\n        }\n\n        /**\n         * 타겟엘리먼트의 부모 엘리멘트 트리에서 원하는 조건의 엘리먼트를 얻습니다.\n         * @method ax5.util.findParentNode\n         * @param {Element} _target - target element\n         * @param {Object|Function} cond - 원하는 element를 찾을 조건\n         * @returns {Element}\n         * @example\n         * ```\n         * // cond 속성정의\n         * var cond = {\n        * \ttagname: {String} - 태그명 (ex. a, div, span..),\n        * \tclazz: {String} - 클래스명\n        * \t[, 그 외 찾고 싶은 attribute명들]\n        * };\n         * console.log(\n         * console.log(\n         *    ax5.util.findParentNode(e.target, {tagname:\"a\", clazz:\"ax-menu-handel\", \"data-custom-attr\":\"attr_value\"})\n         * );\n         * // cond 함수로 처리하기\n         * jQuery('#id').bind(\"click.app_expand\", function(e){\n        * \tvar target = ax5.util.findParentNode(e.target, function(target){\n        * \t\tif($(target).hasClass(\"aside\")){\n        * \t\t\treturn true;\n        * \t\t}\n        * \t\telse{\n        * \t\t\treturn true;\n        * \t\t}\n        * \t});\n        * \t//client-aside\n        * \tif(target.id !== \"client-aside\"){\n        * \t\t// some action\n        * \t}\n        * });\n         * ```\n         */\n\n        function findParentNode(_target, cond) {\n            if (_target) {\n                while (function () {\n                    var result = true;\n                    if (typeof cond === \"undefined\") {\n                        _target = _target.parentNode ? _target.parentNode : false;\n                    } else if (isFunction(cond)) {\n                        result = cond(_target);\n                    } else if (isObject(cond)) {\n                        for (var k in cond) {\n                            if (k === \"tagname\") {\n                                if (_target.tagName.toLocaleLowerCase() != cond[k]) {\n                                    result = false;\n                                    break;\n                                }\n                            } else if (k === \"clazz\" || k === \"class_name\") {\n                                if (\"className\" in _target) {\n                                    var klasss = _target.className.split(reClassNameSplit);\n                                    var hasClass = false;\n                                    for (var a = 0; a < klasss.length; a++) {\n                                        if (klasss[a] == cond[k]) {\n                                            hasClass = true;\n                                            break;\n                                        }\n                                    }\n                                    result = hasClass;\n                                } else {\n                                    result = false;\n                                    break;\n                                }\n                            } else {\n                                // 그외 속성값들.\n                                if (_target.getAttribute) {\n                                    if (_target.getAttribute(k) != cond[k]) {\n                                        result = false;\n                                        break;\n                                    }\n                                } else {\n                                    result = false;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    return !result;\n                }()) {\n                    if (_target.parentNode && _target.parentNode.parentNode) {\n                        _target = _target.parentNode;\n                    } else {\n                        _target = false;\n                        break;\n                    }\n                }\n            }\n            return _target;\n        }\n\n        /**\n         * @method ax5.util.cssNumber\n         * @param {String|Number} val\n         * @returns {String}\n         * @example\n         * ```\n         * console.log(ax5.util.cssNumber(\"100px\"))\n         * console.log(ax5.util.cssNumber(\"100%\"))\n         * console.log(ax5.util.cssNumber(\"100\"))\n         * console.log(ax5.util.cssNumber(100))\n         * console.log(ax5.util.cssNumber(\"!!100@#\"))\n         * ```\n         */\n        function cssNumber(val) {\n            var re = /\\D?(\\d+)([a-zA-Z%]*)/i,\n                found = ('' + val).match(re),\n                unit = found[2] || \"px\";\n\n            return found[1] + unit;\n        }\n\n        /**\n         * css string 및 object 를 넘기면 object 및 string 으로 변환되어 리턴됩니다.\n         * @method ax5.util.css\n         * @param {Object|String} val - CSS String or CSS Object\n         * @returns {String|Object}\n         * @example\n         * ```\n         * console.log(ax5.util.css({background: \"#ccc\", padding: \"50px\", width: \"100px\"}));\n         * //\"background:#ccc;padding:50px;width:100px;\"\n         * console.log(ax5.util.css('width:100px;padding: 50px; background: #ccc'));\n         * // object {width: \"100px\", padding: \"50px\", background: \"#ccc\"}\n         * ```\n         */\n        function css(val) {\n            var returns;\n            if (isObject(val)) {\n                returns = '';\n                for (var k in val) {\n                    returns += k + ':' + val[k] + ';';\n                }\n                return returns;\n            } else if (isString(val)) {\n                returns = {};\n                var valSplited = val.split(/[ ]*;[ ]*/g);\n                valSplited.forEach(function (v) {\n                    if ((v = v.trim()) !== \"\") {\n                        var vSplited = v.split(/[ ]*:[ ]*/g);\n                        returns[vSplited[0]] = vSplited[1];\n                    }\n                });\n                return returns;\n            }\n        }\n\n        /**\n         * @method ax5.util.stopEvent\n         * @param {Event} e\n         * @example\n         * ```\n         * ax5.util.stopEvent(e);\n         * ```\n         */\n        function stopEvent(e) {\n            // 이벤트 중지 구문\n            if (!e) var e = window.event;\n\n            //e.cancelBubble is supported by IE -\n            // this will kill the bubbling process.\n            e.cancelBubble = true;\n            e.returnValue = false;\n\n            //e.stopPropagation works only in Firefox.\n            if (e.stopPropagation) e.stopPropagation();\n            if (e.preventDefault) e.preventDefault();\n\n            return false;\n            // 이벤트 중지 구문 끝\n        }\n\n        /**\n         * @method ax5.util.selectRange\n         * @param {Element} el\n         * @param {Element} offset\n         * @example\n         * ```\n         * ax5.util.selectRange($(\"#select-test-0\")); // selectAll\n         * ax5.util.selectRange($(\"#select-test-0\"), \"selectAll\"); //selectAll\n         * ax5.util.selectRange($(\"#select-test-0\"), \"start\"); // focus on start\n         * ax5.util.selectRange($(\"#select-test-0\"), \"end\"); // focus on end\n         * ax5.util.selectRange($(\"#select-test-0\"), [1, 5]); // select 1~5\n         * ```\n         */\n        var selectRange = function () {\n            var processor = {\n                'textRange': {\n                    'selectAll': function selectAll(el, range, offset) {},\n                    'arr': function arr(el, range, offset) {\n                        range.moveStart(\"character\", offset[0]); // todo ie node select 체크필요\n                        range.collapse();\n                        range.moveEnd(\"character\", offset[1]);\n                    },\n                    'start': function start(el, range, offset) {\n                        range.moveStart(\"character\", 0);\n                        range.collapse();\n                    },\n                    'end': function end(el, range, offset) {\n                        range.moveStart(\"character\", range.text.length);\n                        range.collapse();\n                    }\n                },\n                'range': {\n                    'selectAll': function selectAll(el, range, offset) {\n                        range.selectNodeContents(el);\n                    },\n                    'arr': function arr(el, range, offset) {\n                        if (isObject(offset[0])) {\n                            range.setStart(offset[0].node, offset[0].offset);\n                            range.setEnd(offset[1].node, offset[1].offset);\n                        } else {\n                            range.setStart(el.firstChild, offset[0]);\n                            range.setEnd(el.firstChild, offset[1]);\n                        }\n                    },\n                    'start': function start(el, range, offset) {\n                        range.selectNodeContents(el);\n                        range.collapse(true);\n                    },\n                    'end': function end(el, range, offset) {\n                        range.selectNodeContents(el);\n                        range.collapse(false);\n                    }\n                }\n            };\n            return function (el, offset) {\n                var range, rangeType, selection;\n\n                if (el instanceof jQuery) {\n                    el = el.get(0);\n                }\n                if (!el) return;\n\n                // 레인지 타입 선택\n                if (doc.body.createTextRange) {\n                    range = document.body.createTextRange();\n                    range.moveToElementText(el);\n                    rangeType = \"textRange\";\n                } else if (window.getSelection) {\n                    selection = window.getSelection();\n                    range = document.createRange();\n                    rangeType = \"range\";\n                }\n\n                // range 적용\n                if (typeof offset == \"undefined\") {\n                    processor[rangeType].selectAll.call(this, el, range, offset);\n                } else if (isArray(offset)) {\n                    processor[rangeType].arr.call(this, el, range, offset);\n                } else {\n                    for (var key in processor[rangeType]) {\n                        if (offset == key) {\n                            processor[rangeType][key].call(this, el, range, offset);\n                            break;\n                        }\n                    }\n                }\n\n                // 포커스 및 셀렉트\n                if (doc.body.createTextRange) {\n                    range.select();\n                    el.focus();\n                } else if (window.getSelection) {\n                    el.focus();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n            };\n        }();\n\n        /**\n         * 지정한 시간을 지연시켜 함수를 실행합니다.\n         * @method ax5.util.debounce\n         * @param {Function} func\n         * @param {Number} wait\n         * @param {Object} options\n         * @returns {debounced}\n         * @example\n         * ```js\n         * var debounceFn = ax5.util.debounce(function( val ) { console.log(val); }, 300);\n         * $(document.body).click(function(){\n         *  debounceFn(new Date());\n         * });\n         * ```\n         */\n        // https://github.com/lodash/lodash/blob/master/debounce.js\n        function debounce(func, wait, options) {\n            var lastArgs = void 0,\n                lastThis = void 0,\n                maxWait = void 0,\n                result = void 0,\n                timerId = void 0,\n                lastCallTime = void 0;\n\n            var lastInvokeTime = 0;\n            var leading = false;\n            var maxing = false;\n            var trailing = true;\n\n            if (typeof func != 'function') {\n                throw new TypeError('Expected a function');\n            }\n            wait = +wait || 0;\n            if (isObject(options)) {\n                leading = !!options.leading;\n                maxing = 'maxWait' in options;\n                maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : maxWait;\n                trailing = 'trailing' in options ? !!options.trailing : trailing;\n            }\n\n            function invokeFunc(time) {\n                var args = lastArgs;\n                var thisArg = lastThis;\n\n                lastArgs = lastThis = undefined;\n                lastInvokeTime = time;\n                result = func.apply(thisArg, args);\n                return result;\n            }\n\n            function leadingEdge(time) {\n                // Reset any `maxWait` timer.\n                lastInvokeTime = time;\n                // Start the timer for the trailing edge.\n                timerId = setTimeout(timerExpired, wait);\n                // Invoke the leading edge.\n                return leading ? invokeFunc(time) : result;\n            }\n\n            function remainingWait(time) {\n                var timeSinceLastCall = time - lastCallTime;\n                var timeSinceLastInvoke = time - lastInvokeTime;\n                var result = wait - timeSinceLastCall;\n\n                return maxing ? Math.min(result, maxWait - timeSinceLastInvoke) : result;\n            }\n\n            function shouldInvoke(time) {\n                var timeSinceLastCall = time - lastCallTime;\n                var timeSinceLastInvoke = time - lastInvokeTime;\n\n                // Either this is the first call, activity has stopped and we're at the\n                // trailing edge, the system time has gone backwards and we're treating\n                // it as the trailing edge, or we've hit the `maxWait` limit.\n                return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n            }\n\n            function timerExpired() {\n                var time = Date.now();\n                if (shouldInvoke(time)) {\n                    return trailingEdge(time);\n                }\n                // Restart the timer.\n                timerId = setTimeout(timerExpired, remainingWait(time));\n            }\n\n            function trailingEdge(time) {\n                timerId = undefined;\n\n                // Only invoke if we have `lastArgs` which means `func` has been\n                // debounced at least once.\n                if (trailing && lastArgs) {\n                    return invokeFunc(time);\n                }\n                lastArgs = lastThis = undefined;\n                return result;\n            }\n\n            function cancel() {\n                if (timerId !== undefined) {\n                    clearTimeout(timerId);\n                }\n                lastInvokeTime = 0;\n                lastArgs = lastCallTime = lastThis = timerId = undefined;\n            }\n\n            function flush() {\n                return timerId === undefined ? result : trailingEdge(Date.now());\n            }\n\n            function debounced() {\n                var time = Date.now();\n                var isInvoking = shouldInvoke(time);\n\n                for (var _len = arguments.length, args = Array(_len), _key2 = 0; _key2 < _len; _key2++) {\n                    args[_key2] = arguments[_key2];\n                }\n\n                lastArgs = args;\n                lastThis = this;\n                lastCallTime = time;\n\n                if (isInvoking) {\n                    if (timerId === undefined) {\n                        return leadingEdge(lastCallTime);\n                    }\n                    if (maxing) {\n                        // Handle invocations in a tight loop.\n                        timerId = setTimeout(timerExpired, wait);\n                        return invokeFunc(lastCallTime);\n                    }\n                }\n                if (timerId === undefined) {\n                    timerId = setTimeout(timerExpired, wait);\n                }\n                return result;\n            }\n            debounced.cancel = cancel;\n            debounced.flush = flush;\n            return debounced;\n        }\n\n        /**\n         * @method ax5.util.throttle\n         * @param func\n         * @param wait\n         * @param options\n         * @return {debounced}\n         */\n        //https://github.com/lodash/lodash/blob/master/throttle.js\n        function throttle(func, wait, options) {\n            var leading = true;\n            var trailing = true;\n\n            if (typeof func != 'function') {\n                throw new TypeError('Expected a function');\n            }\n            if (isObject(options)) {\n                leading = 'leading' in options ? !!options.leading : leading;\n                trailing = 'trailing' in options ? !!options.trailing : trailing;\n            }\n            return debounce(func, wait, {\n                'leading': leading,\n                'maxWait': wait,\n                'trailing': trailing\n            });\n        }\n\n        /**\n         * @method ax5.util.deepCopy\n         * @param {Object} obj\n         * @returns {Object}\n         * @example\n         * ```js\n         * var obj = [\n         *  {name:\"A\", child:[{name:\"a-1\"}]},\n         *  {name:\"B\", child:[{name:\"b-1\"}], callBack: function(){ console.log('callBack'); }}\n         * ];\n         * var copiedObj = ax5.util.deepCopy(obj)\n         * ```\n         */\n        function deepCopy(obj) {\n            var r, l;\n            if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) == 'object') {\n                if (U.isArray(obj)) {\n                    l = obj.length;\n                    r = new Array(l);\n                    for (var i = 0; i < l; i++) {\n                        r[i] = deepCopy(obj[i]);\n                    }\n                    return r;\n                } else {\n                    return jQuery.extend({}, obj);\n                }\n            }\n            return obj;\n        }\n\n        /**\n         * HTML 문자열을 escape 처리합니다.\n         * \"&lt;\" represents the < sign.\n         * \"&gt;\" represents the > sign.\n         * \"&amp;\" represents the & sign.\n         * \"&quot; represents the \" mark.\n         * [Character entity references](https://www.w3.org/TR/html401/charset.html#h-5.3)\n         * @method ax5.util.escapeHtml\n         * @param {String} s\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.escapeHtml('HTML <span>string</span> & \"escape\"')\n         * //\"HTML &lt;span&gt;string&lt;/span&gt; &amp; &quot;escape&quot;\"\n         * ```\n         */\n        function escapeHtml(s) {\n            if (_toString.call(s) != \"[object String]\") return s;\n            if (!s) return \"\";\n            return s.replace(/[\\<\\>\\&\\\"]/gm, function (match) {\n                switch (match) {\n                    case \"<\":\n                        return \"&lt;\";\n                    case \">\":\n                        return \"&gt;\";\n                    case \"&\":\n                        return \"&amp;\";\n                    case \"\\\"\":\n                        return \"&quot;\";\n                    default:\n                        return match;\n                }\n            });\n        }\n\n        /**\n         * HTML 문자열을 unescape 처리합니다.\n         * escapeHtml를 참고하세요.\n         * @method ax5.util.unescapeHtml\n         * @param {String} s\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.unescapeHtml('HTML &lt;span&gt;string&lt;/span&gt; &amp; &quot;escape&quot;')\n         * //\"HTML <span>string</span> & \"escape\"\"\n         * ```\n         */\n        function unescapeHtml(s) {\n            if (_toString.call(s) != \"[object String]\") return s;\n            if (!s) return \"\";\n            return s.replace(/(&lt;)|(&gt;)|(&amp;)|(&quot;)/gm, function (match) {\n                switch (match) {\n                    case \"&lt;\":\n                        return \"<\";\n                    case \"&gt;\":\n                        return \">\";\n                    case \"&amp;\":\n                        return \"&\";\n                    case \"&quot;\":\n                        return \"\\\"\";\n                    default:\n                        return match;\n                }\n            });\n        }\n\n        /**\n         * @method ax5.util.string\n         * @param {String} tmpl\n         * @param {*} args\n         * @return {ax5string}\n         * @example\n         * ```js\n         * ax5.util.string(\"{0} is dead, but {1} is alive! {0} {2}\").format(\"ASP\", \"ASP.NET\");\n         * ax5.util.string(\"{0} is dead, but {1} is alive! {0} {2}\").format([\"ASP\", \"ASP.NET\"]);\n         * ax5.util.stinrg(\"{0} counts\").format(100);\n         * ```\n         */\n        function string(_string) {\n            return new function (_string) {\n                this.value = _string;\n                this.toString = function () {\n                    return this.value;\n                };\n                /**\n                 * @method ax5.util.string.format\n                 * @returns {*}\n                 */\n                this.format = function () {\n                    var args = [];\n                    for (var i = 0, l = arguments.length; i < l; i++) {\n                        args = args.concat(arguments[i]);\n                    }\n                    return this.value.replace(/{(\\d+)}/g, function (match, number) {\n                        return typeof args[number] != 'undefined' ? args[number] : match;\n                    });\n                };\n                /**\n                 * @method ax5.util.string.escape\n                 * @returns {*}\n                 */\n                this.escape = function () {\n                    return escapeHtml(this.value);\n                };\n                /**\n                 * @method ax5.util.string.unescape\n                 * @returns {*}\n                 */\n                this.unescape = function () {\n                    return unescapeHtml(this.value);\n                };\n                /**\n                 * @method ax5.util.string.encode\n                 * @returns {*}\n                 */\n                this.encode = function () {\n                    return encode(this.value);\n                };\n                /**\n                 * @method ax5.util.string.decode\n                 * @returns {*}\n                 */\n                this.decode = function () {\n                    return decode(this.value);\n                };\n                /**\n                 * @method ax5.util.string.left\n                 * @param {String|Number} pos - 찾을 문자열 또는 포지션\n                 * @returns {*}\n                 */\n                this.left = function (_pos) {\n                    return left(this.value, _pos);\n                };\n                /**\n                 * @method ax5.util.string.right\n                 * @param {String|Number} pos - 찾을 문자열 또는 포지션\n                 * @returns {*}\n                 */\n                this.right = function (_pos) {\n                    return right(this.value, _pos);\n                };\n                /**\n                 * @method ax5.util.string.camelCase\n                 * @returns {*}\n                 */\n                this.camelCase = function () {\n                    return camelCase(this.value);\n                };\n                /**\n                 * @method ax5.util.string.snakeCase\n                 * @returns {*}\n                 */\n                this.snakeCase = function () {\n                    return snakeCase(this.value);\n                };\n            }(_string);\n        }\n\n        /**\n         * @method ax5.util.color\n         * @param _hexColor\n         * @return {ax5color}\n         * @example\n         * ```js\n         * ax5.util.color(\"#ff3300\").lighten(10).getHexValue()\n         * console.log(ax5.util.color(\"#ff3300\").darken(10).getHexValue());\n         * ```\n         */\n        function color(_hexColor) {\n\n            var matchers = function () {\n\n                // <http://www.w3.org/TR/css3-values/#integers>\n                var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n                // <http://www.w3.org/TR/css3-values/#number-value>\n                var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n                // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n                var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n                // Actual matching.\n                // Parentheses and commas are optional, but not required.\n                // Whitespace can take the place of commas or opening paren\n                var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n                var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n                return {\n                    CSS_UNIT: new RegExp(CSS_UNIT),\n                    rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n                    rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n                    hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n                    hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n                    hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n                    hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n                    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n                    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n                    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n                    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n                };\n            }();\n\n            var convertObject = function convertObject(_color) {\n                var match = void 0;\n                if (match = matchers.rgb.exec(_color)) {\n                    return { r: match[1], g: match[2], b: match[3] };\n                }\n                if (match = matchers.rgba.exec(_color)) {\n                    return { r: match[1], g: match[2], b: match[3], a: match[4] };\n                }\n                if (match = matchers.hsl.exec(_color)) {\n                    return { h: match[1], s: match[2], l: match[3] };\n                }\n                if (match = matchers.hsla.exec(_color)) {\n                    return { h: match[1], s: match[2], l: match[3], a: match[4] };\n                }\n                if (match = matchers.hsv.exec(_color)) {\n                    return { h: match[1], s: match[2], v: match[3] };\n                }\n                if (match = matchers.hsva.exec(_color)) {\n                    return { h: match[1], s: match[2], v: match[3], a: match[4] };\n                }\n                if (match = matchers.hex8.exec(_color)) {\n                    return {\n                        r: parseInt(match[1], 16),\n                        g: parseInt(match[2], 16),\n                        b: parseInt(match[3], 16),\n                        a: parseInt(match[4] / 255, 16),\n                        format: \"hex8\"\n                    };\n                }\n                if (match = matchers.hex6.exec(_color)) {\n                    return {\n                        r: parseInt(match[1], 16),\n                        g: parseInt(match[2], 16),\n                        b: parseInt(match[3], 16),\n                        format: \"hex\"\n                    };\n                }\n                if (match = matchers.hex4.exec(_color)) {\n                    return {\n                        r: parseInt(match[1] + '' + match[1], 16),\n                        g: parseInt(match[2] + '' + match[2], 16),\n                        b: parseInt(match[3] + '' + match[3], 16),\n                        a: parseInt(match[4] + '' + match[4], 16),\n                        format: \"hex8\"\n                    };\n                }\n                if (match = matchers.hex3.exec(_color)) {\n                    return {\n                        r: parseInt(match[1] + '' + match[1], 16),\n                        g: parseInt(match[2] + '' + match[2], 16),\n                        b: parseInt(match[3] + '' + match[3], 16),\n                        format: \"hex\"\n                    };\n                }\n\n                return false;\n            };\n\n            function isOnePointZero(n) {\n                return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n            }\n\n            function isPercentage(n) {\n                return typeof n === \"string\" && n.indexOf('%') != -1;\n            }\n\n            function convertToPercentage(n) {\n                if (n <= 1) {\n                    n = n * 100 + \"%\";\n                }\n\n                return n;\n            }\n\n            function convertTo255(n) {\n                return ax5.util.number(Math.min(255, Math.max(n, 0)), { 'round': 2 });\n            }\n\n            function convertToHex(n) {\n                return setDigit(Math.round(n).toString(16), 2);\n            }\n\n            function bound01(n, max) {\n                if (isOnePointZero(n)) {\n                    n = \"100%\";\n                }\n\n                var processPercent = isPercentage(n);\n                n = Math.min(max, Math.max(0, parseFloat(n)));\n\n                // Automatically convert percentage into number\n                if (processPercent) {\n                    n = parseInt(n * max, 10) / 100;\n                }\n\n                // Handle floating point rounding errors\n                if (Math.abs(n - max) < 0.000001) {\n                    return 1;\n                }\n\n                // Convert into [0, 1] range if it isn't already\n                return n % max / parseFloat(max);\n            }\n\n            function rgbToHsl(r, g, b) {\n                r = bound01(r, 255);\n                g = bound01(g, 255);\n                b = bound01(b, 255);\n\n                var max = Math.max(r, g, b),\n                    min = Math.min(r, g, b);\n                var h,\n                    s,\n                    l = (max + min) / 2;\n\n                if (max == min) {\n                    h = s = 0; // achromatic\n                } else {\n                    var d = max - min;\n                    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n                    switch (max) {\n                        case r:\n                            h = (g - b) / d + (g < b ? 6 : 0);\n                            break;\n                        case g:\n                            h = (b - r) / d + 2;\n                            break;\n                        case b:\n                            h = (r - g) / d + 4;\n                            break;\n                    }\n\n                    h /= 6;\n                }\n\n                return { h: h, s: s, l: l };\n            }\n\n            function hslToRgb(h, s, l) {\n                var r = void 0,\n                    g = void 0,\n                    b = void 0;\n\n                h = bound01(h, 360);\n                s = bound01(s, 100);\n                l = bound01(l, 100);\n\n                function hue2rgb(p, q, t) {\n                    if (t < 0) t += 1;\n                    if (t > 1) t -= 1;\n                    if (t < 1 / 6) return p + (q - p) * 6 * t;\n                    if (t < 1 / 2) return q;\n                    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n                    return p;\n                }\n\n                if (s === 0) {\n                    r = g = b = l; // achromatic\n                } else {\n                    var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n                    var p = 2 * l - q;\n                    r = hue2rgb(p, q, h + 1 / 3);\n                    g = hue2rgb(p, q, h);\n                    b = hue2rgb(p, q, h - 1 / 3);\n                }\n\n                return { r: r * 255, g: g * 255, b: b * 255 };\n            }\n\n            return new function (_color) {\n                this._originalValue = _color;\n                _color = convertObject(_color);\n                this.r = _color.r;\n                this.g = _color.g;\n                this.b = _color.b;\n                this.a = _color.a || 1;\n                this._format = _color.format;\n                this._hex = convertToHex(this.r) + convertToHex(this.g) + convertToHex(this.b);\n\n                this.getHexValue = function () {\n                    return this._hex;\n                };\n\n                this.lighten = function (amount) {\n                    amount = amount === 0 ? 0 : amount || 10;\n                    var hsl = rgbToHsl(this.r, this.g, this.b),\n                        rgb = {};\n\n                    hsl.l += amount / 100;\n                    hsl.l = Math.min(1, Math.max(0, hsl.l));\n                    hsl.h = hsl.h * 360;\n\n                    rgb = hslToRgb(hsl.h, convertToPercentage(hsl.s), convertToPercentage(hsl.l));\n\n                    return color('rgba(' + convertTo255(rgb.r) + ', ' + convertTo255(rgb.g) + ', ' + convertTo255(rgb.b) + ', ' + this.a + ')');\n                };\n\n                this.darken = function (amount) {\n                    amount = amount === 0 ? 0 : amount || 10;\n                    var hsl = rgbToHsl(this.r, this.g, this.b),\n                        rgb = {};\n\n                    hsl.l -= amount / 100;\n                    hsl.l = Math.min(1, Math.max(0, hsl.l));\n                    hsl.h = hsl.h * 360;\n\n                    rgb = hslToRgb(hsl.h, convertToPercentage(hsl.s), convertToPercentage(hsl.l));\n\n                    return color('rgba(' + convertTo255(rgb.r) + ', ' + convertTo255(rgb.g) + ', ' + convertTo255(rgb.b) + ', ' + this.a + ')');\n                };\n\n                this.getBrightness = function () {\n                    return (this.r * 299 + this.g * 587 + this.b * 114) / 1000;\n                };\n\n                this.isDark = function () {\n                    return this.getBrightness() < 128;\n                };\n\n                this.isLight = function () {\n                    return !this.isDark();\n                };\n\n                this.getHsl = function () {\n                    var hsl = rgbToHsl(this.r, this.g, this.b);\n                    hsl.l = Math.min(1, Math.max(0, hsl.l));\n                    hsl.h = hsl.h * 360;\n                    return {\n                        h: hsl.h,\n                        s: hsl.s,\n                        l: hsl.l\n                    };\n                };\n            }(_hexColor);\n        }\n\n        return {\n            alert: alert,\n            each: each,\n            map: map,\n            search: search,\n            reduce: reduce,\n            reduceRight: reduceRight,\n            filter: filter,\n            sum: sum,\n            avg: avg,\n            toJson: toJson,\n            parseJson: parseJson,\n            first: first,\n            last: last,\n            deepCopy: deepCopy,\n\n            left: left,\n            right: right,\n            getType: getType,\n            isWindow: isWindow,\n            isElement: isElement,\n            isObject: isObject,\n            isArray: isArray,\n            isFunction: isFunction,\n            isString: isString,\n            isNumber: isNumber,\n            isNodelist: isNodelist,\n            isUndefined: isUndefined,\n            isNothing: isNothing,\n            setCookie: setCookie,\n            getCookie: getCookie,\n            camelCase: camelCase,\n            snakeCase: snakeCase,\n            number: number,\n            toArray: toArray,\n            merge: merge,\n            param: param,\n            error: error,\n            date: date,\n            dday: dday,\n            daysOfMonth: daysOfMonth,\n            weeksOfMonth: weeksOfMonth,\n            setDigit: setDigit,\n            times: times,\n            findParentNode: findParentNode,\n            cssNumber: cssNumber,\n            css: css,\n            isDate: isDate,\n            isDateFormat: isDateFormat,\n            stopEvent: stopEvent,\n            selectRange: selectRange,\n            debounce: debounce,\n            throttle: throttle,\n            escapeHtml: escapeHtml,\n            unescapeHtml: unescapeHtml,\n\n            string: string,\n            color: color\n        };\n    }();\n\n    if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === \"object\" && _typeof(module.exports) === \"object\") {\n        module.exports = ax5;\n    } else {\n        root.ax5 = function () {\n            return ax5;\n        }(); // ax5.ui에 연결\n    }\n}).call(typeof window !== \"undefined\" ? window : undefined);\n\nax5.def = {};\nax5.info.errorMsg[\"ax5dialog\"] = {\n    \"501\": \"Duplicate call error\"\n};\n\nax5.info.errorMsg[\"ax5picker\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find content key\"\n};\n\nax5.info.errorMsg[\"single-uploader\"] = {\n    \"460\": \"There are no files to be uploaded.\",\n    \"461\": \"There is no uploaded files.\"\n};\n\nax5.info.errorMsg[\"ax5calendar\"] = {\n    \"401\": \"Can not find target element\"\n};\n\nax5.info.errorMsg[\"ax5formatter\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find pattern\"\n};\n\nax5.info.errorMsg[\"ax5menu\"] = {\n    \"501\": \"Can not find menu item\"\n};\n\nax5.info.errorMsg[\"ax5select\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find option\"\n};\n\nax5.info.errorMsg[\"ax5combobox\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find option\"\n};\n// 필수 Ployfill 확장 구문\n(function () {\n    'use strict';\n\n    var root = this,\n        re_trim = /^\\s*|\\s*$/g;\n\n    // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n    if (!Object.keys) {\n        Object.keys = function () {\n            var hwp = Object.prototype.hasOwnProperty,\n                hdeb = !{ toString: null }.propertyIsEnumerable('toString'),\n                de = ['toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'constructor'],\n                del = de.length;\n\n            return function (obj) {\n                if ((typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' && (typeof obj !== 'function' || obj === null)) throw new TypeError('type err');\n                var r = [],\n                    prop,\n                    i;\n                for (prop in obj) {\n                    if (hwp.call(obj, prop)) r.push(prop);\n                }if (hdeb) {\n                    for (i = 0; i < del; i++) {\n                        if (hwp.call(obj, de[i])) r.push(de[i]);\n                    }\n                }\n                return r;\n            };\n        }();\n    }\n\n    // ES5 15.4.4.18 Array.prototype.forEach ( callbackfn [ , thisArg ] )\n    // From https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach\n    if (!Array.prototype.forEach) {\n        Array.prototype.forEach = function (fun /*, thisp */) {\n            if (this === void 0 || this === null) {\n                throw TypeError();\n            }\n            var t = Object(this);\n            var len = t.length >>> 0;\n            if (typeof fun !== \"function\") {\n                throw TypeError();\n            }\n            var thisp = arguments[1],\n                i;\n            for (i = 0; i < len; i++) {\n                if (i in t) {\n                    fun.call(thisp, t[i], i, t);\n                }\n            }\n        };\n    }\n\n    // ES5 15.3.4.5 Function.prototype.bind ( thisArg [, arg1 [, arg2, ... ]] )\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function (o) {\n            if (typeof this !== 'function') {\n                throw TypeError(\"function\");\n            }\n            var slice = [].slice,\n                args = slice.call(arguments, 1),\n                self = this,\n                bound = function bound() {\n                return self.apply(this instanceof nop ? this : o, args.concat(slice.call(arguments)));\n            };\n\n            function nop() {}\n\n            nop.prototype = self.prototype;\n            bound.prototype = new nop();\n            return bound;\n        };\n    }\n\n    /*global document */\n    /**\n     * define document.querySelector & document.querySelectorAll for IE7\n     *\n     * A not very fast but small hack. The approach is taken from\n     * http://weblogs.asp.net/bleroy/archive/2009/08/31/queryselectorall-on-old-ie-versions-something-that-doesn-t-work.aspx\n     *\n     */\n    (function () {\n        if (document.querySelectorAll || document.querySelector) {\n            return;\n        }\n        if (!document.createStyleSheet) return;\n        var style = document.createStyleSheet(),\n            select = function select(selector, maxCount) {\n            var all = document.all,\n                l = all.length,\n                i,\n                resultSet = [];\n\n            style.addRule(selector, \"foo:bar\");\n            for (i = 0; i < l; i += 1) {\n                if (all[i].currentStyle.foo === \"bar\") {\n                    resultSet.push(all[i]);\n                    if (resultSet.length > maxCount) {\n                        break;\n                    }\n                }\n            }\n            style.removeRule(0);\n            return resultSet;\n        };\n\n        document.querySelectorAll = function (selector) {\n            return select(selector, Infinity);\n        };\n        document.querySelector = function (selector) {\n            return select(selector, 1)[0] || null;\n        };\n    })();\n\n    if (!String.prototype.trim) {\n        (function () {\n            String.prototype.trim = function () {\n                return this.replace(re_trim, '');\n            };\n        })();\n    }\n\n    if (!window.JSON) {\n        window.JSON = {\n            parse: function parse(sJSON) {\n                return new Function('', 'return ' + sJSON)();\n            },\n            stringify: function () {\n                var r = /[\"]/g,\n                    _f;\n                return _f = function f(vContent) {\n                    var result, i, j;\n                    switch (result = typeof vContent === 'undefined' ? 'undefined' : _typeof(vContent)) {\n                        case 'string':\n                            return '\"' + vContent.replace(r, '\\\\\"') + '\"';\n                        case 'number':\n                        case 'boolean':\n                            return vContent.toString();\n                        case 'undefined':\n                            return 'undefined';\n                        case 'function':\n                            return '\"\"';\n                        case 'object':\n                            if (!vContent) return 'null';\n                            result = '';\n                            if (vContent.splice) {\n                                for (i = 0, j = vContent.length; i < j; i++) {\n                                    result += ',' + _f(vContent[i]);\n                                }return '[' + result.substr(1) + ']';\n                            } else {\n                                for (i in vContent) {\n                                    if (vContent.hasOwnProperty(i) && vContent[i] !== undefined && typeof vContent[i] != 'function') result += ',\"' + i + '\":' + _f(vContent[i]);\n                                }return '{' + result.substr(1) + '}';\n                            }\n                    }\n                };\n            }()\n        };\n    }\n\n    // splice ie8 <= polyfill\n    (function () {\n        if (!document.documentMode || document.documentMode >= 9) return false;\n        var _splice = Array.prototype.splice;\n        Array.prototype.splice = function () {\n            var args = Array.prototype.slice.call(arguments);\n            if (typeof args[1] === \"undefined\") args[1] = this.length - args[0];\n            return _splice.apply(this, args);\n        };\n    })();\n\n    /**\n     * Shim for \"fixing\" IE's lack of support (IE < 9) for applying slice\n     * on host objects like NamedNodeMap, NodeList, and HTMLCollection\n     * (technically, since host objects have been implementation-dependent,\n     * at least before ES6, IE hasn't needed to work this way).\n     * Also works on strings, fixes IE < 9 to allow an explicit undefined\n     * for the 2nd argument (as in Firefox), and prevents errors when\n     * called on other DOM objects.\n     */\n    (function () {\n        'use strict';\n\n        var _slice = Array.prototype.slice;\n\n        try {\n            // Can't be used with DOM elements in IE < 9\n            _slice.call(document.documentElement);\n        } catch (e) {\n            // Fails in IE < 9\n            // This will work for genuine arrays, array-like objects,\n            // NamedNodeMap (attributes, entities, notations),\n            // NodeList (e.g., getElementsByTagName), HTMLCollection (e.g., childNodes),\n            // and will not fail on other DOM objects (as do DOM elements in IE < 9)\n            Array.prototype.slice = function (begin, end) {\n                // IE < 9 gets unhappy with an undefined end argument\n                end = typeof end !== 'undefined' ? end : this.length;\n\n                // For native Array objects, we use the native slice function\n                if (Object.prototype.toString.call(this) === '[object Array]') {\n                    return _slice.call(this, begin, end);\n                }\n\n                // For array like object we handle it ourselves.\n                var i,\n                    cloned = [],\n                    size,\n                    len = this.length;\n\n                // Handle negative value for \"begin\"\n                var start = begin || 0;\n                start = start >= 0 ? start : Math.max(0, len + start);\n\n                // Handle negative value for \"end\"\n                var upTo = typeof end == 'number' ? Math.min(end, len) : len;\n                if (end < 0) {\n                    upTo = len + end;\n                }\n\n                // Actual expected size of the slice\n                size = upTo - start;\n\n                if (size > 0) {\n                    cloned = new Array(size);\n                    if (this.charAt) {\n                        for (i = 0; i < size; i++) {\n                            cloned[i] = this.charAt(start + i);\n                        }\n                    } else {\n                        for (i = 0; i < size; i++) {\n                            cloned[i] = this[start + i];\n                        }\n                    }\n                }\n\n                return cloned;\n            };\n        }\n    })();\n\n    // Console-polyfill. MIT license. https://github.com/paulmillr/console-polyfill\n    // Make it safe to do console.log() always.\n    (function (con) {\n        var prop, method;\n        var empty = {};\n        var dummy = function dummy() {};\n        var properties = 'memory'.split(',');\n        var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' + 'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' + 'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\n        while (prop = properties.pop()) {\n            con[prop] = con[prop] || empty;\n        }while (method = methods.pop()) {\n            con[method] = con[method] || dummy;\n        }\n    })(window.console || {}); // Using `this` for web workers.\n\n\n    // Modernizr style test\n    if (!(window.webkitMatchMedia || window.mozMatchMedia || window.oMatchMedia || window.msMatchMedia || window.matchMedia)) {\n        var root = document.getElementsByTagName('html')[0];\n        root.className += ' no-matchmedia';\n    }\n\n    /*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license */\n    window.matchMedia || (window.matchMedia = function () {\n        \"use strict\";\n\n        // For browsers that support matchMedium api such as IE 9 and webkit\n\n        var styleMedia = window.styleMedia || window.media;\n\n        // For those that don't support matchMedium\n        if (!styleMedia) {\n            var style = document.createElement('style'),\n                script = document.getElementsByTagName('script')[0],\n                info = null;\n\n            style.type = 'text/css';\n            style.id = 'matchmediajs-test';\n\n            script.parentNode.insertBefore(style, script);\n\n            // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n            info = 'getComputedStyle' in window && window.getComputedStyle(style, null) || style.currentStyle;\n\n            styleMedia = {\n                matchMedium: function matchMedium(media) {\n                    var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n                    // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n                    if (style.styleSheet) {\n                        style.styleSheet.cssText = text;\n                    } else {\n                        style.textContent = text;\n                    }\n\n                    // Test if media query is true or false\n                    return info.width === '1px';\n                }\n            };\n        }\n\n        return function (media) {\n            return {\n                matches: styleMedia.matchMedium(media || 'all'),\n                media: media || 'all'\n            };\n        };\n    }());\n\n    /*! matchMedia() polyfill addListener/removeListener extension. Author & copyright (c) 2012: Scott Jehl. Dual MIT/BSD license */\n    (function () {\n        // Bail out for browsers that have addListener support\n        if (window.matchMedia && window.matchMedia('all').addListener) {\n            return false;\n        }\n\n        var localMatchMedia = window.matchMedia,\n            hasMediaQueries = localMatchMedia('only all').matches,\n            isListening = false,\n            timeoutID = 0,\n            // setTimeout for debouncing 'handleChange'\n        queries = [],\n            // Contains each 'mql' and associated 'listeners' if 'addListener' is used\n        handleChange = function handleChange(evt) {\n            // Debounce\n            clearTimeout(timeoutID);\n\n            timeoutID = setTimeout(function () {\n                for (var i = 0, il = queries.length; i < il; i++) {\n                    var mql = queries[i].mql,\n                        listeners = queries[i].listeners || [],\n                        matches = localMatchMedia(mql.media).matches;\n\n                    // Update mql.matches value and call listeners\n                    // Fire listeners only if transitioning to or from matched state\n                    if (matches !== mql.matches) {\n                        mql.matches = matches;\n\n                        for (var j = 0, jl = listeners.length; j < jl; j++) {\n                            listeners[j].call(window, mql);\n                        }\n                    }\n                }\n            }, 30);\n        };\n\n        window.matchMedia = function (media) {\n            var mql = localMatchMedia(media),\n                listeners = [],\n                index = 0;\n\n            mql.addListener = function (listener) {\n                // Changes would not occur to css media type so return now (Affects IE <= 8)\n                if (!hasMediaQueries) {\n                    return;\n                }\n\n                // Set up 'resize' listener for browsers that support CSS3 media queries (Not for IE <= 8)\n                // There should only ever be 1 resize listener running for performance\n                if (!isListening) {\n                    isListening = true;\n                    window.addEventListener('resize', handleChange, true);\n                }\n\n                // Push object only if it has not been pushed already\n                if (index === 0) {\n                    index = queries.push({\n                        mql: mql,\n                        listeners: listeners\n                    });\n                }\n\n                listeners.push(listener);\n            };\n\n            mql.removeListener = function (listener) {\n                for (var i = 0, il = listeners.length; i < il; i++) {\n                    if (listeners[i] === listener) {\n                        listeners.splice(i, 1);\n                    }\n                }\n            };\n\n            return mql;\n        };\n    })();\n\n    // extend innerWidth ..\n    var html = document.getElementsByTagName('html')[0];\n    var body = document.getElementsByTagName('body')[0];\n\n    /*\n    if (!window.innerWidth) window.innerWidth = html.clientWidth;\n    if (!window.innerHeight) window.innerHeight = html.clientHeight;\n    if (!window.scrollX) window.scrollX = window.pageXOffset || html.scrollLeft;\n    if (!window.scrollY) window.scrollY = window.pageYOffset || html.scrollTop;\n    */\n}).call(window);\n/**\n * Refer to this by {@link ax5}.\n * @namespace ax5.ui\n */\n\n/**\n * @class ax5.ui.root\n * @classdesc ax5 ui class\n * @author tom@axisj.com\n * @example\n * ```\n * var myui = new ax5.ui.root();\n * ```\n */\nax5.ui = function () {\n\n    function axUi() {\n        this.config = {};\n        this.name = \"root\";\n\n        /**\n         * 클래스의 속성 정의 메소드 속성 확장후에 내부에 init 함수를 호출합니다.\n         * @method ax5.ui.root.setConfig\n         * @param {Object} config - 클래스 속성값\n         * @param {Boolean} [callInit=true] - init 함수 호출 여부\n         * @returns {ax5.ui.axUi}\n         * @example\n         * ```\n         * var myui = new ax5.ui.root();\n         * myui.setConfig({\n        * \tid:\"abcd\"\n        * });\n         * ```\n         */\n        this.setConfig = function (cfg, callInit) {\n            jQuery.extend(true, this.config, cfg);\n            if (typeof callInit == \"undefined\" || callInit === true) {\n                this.init();\n            }\n            return this;\n        };\n        this.init = function () {\n            console.log(this.config);\n        };\n\n        this.bindWindowResize = function (callBack) {\n            setTimeout(function () {\n                jQuery(window).resize(function () {\n                    if (this.bindWindowResize__) clearTimeout(this.bindWindowResize__);\n                    this.bindWindowResize__ = setTimeout(function () {\n                        callBack.call(this);\n                    }.bind(this), 10);\n                }.bind(this));\n            }.bind(this), 100);\n        };\n\n        this.stopEvent = function (e) {\n            if (e.preventDefault) e.preventDefault();\n            if (e.stopPropagation) e.stopPropagation();\n            e.cancelBubble = true;\n            return false;\n        };\n\n        this.toString = function () {\n            return this.name + '@' + this.version;\n        };\n\n        // instance init\n        this.main = function () {}.apply(this, arguments);\n    }\n\n    /**\n     * @method ax5.ui.addClass\n     * @param {Object} config\n     * @param {String} config.className - name of Class\n     * @param {Object} [config.classStore=ax5.ui] - 클래스가 저장될 경로\n     * @param {Function} [config.superClass=ax5.ui.root]\n     * @param {Function} cls - Class Function\n     */\n    function addClass(config, cls) {\n        if (!config || !config.className) throw 'invalid call';\n        var classStore = config.classStore ? config.classStore : ax5.ui;\n        if (!classStore) throw 'invalid classStore';\n\n        // make ui definition variable\n        ax5.def[config.className] = {\n            version: ax5.info.version\n        };\n\n        var factory = function factory(cls, arg) {\n            switch (arg.length) {\n                case 0:\n                    return new cls();\n                    break;\n                case 1:\n                    return new cls(arg[0]);\n                    break;\n                case 2:\n                    return new cls(arg[0], arg[1]);\n                    break;\n                case 3:\n                    return new cls(arg[0], arg[1], arg[2]);\n                    break;\n            }\n        };\n        var initInstance = function initInstance(name, version, instance) {\n            instance.name = name;\n            instance.version = version;\n            instance.instanceId = ax5.getGuid();\n            return instance;\n        };\n        var initPrototype = function initPrototype(cls) {\n            var superClass = config.superClass ? config.superClass : ax5.ui.root;\n            if (!ax5.util.isFunction(superClass)) throw 'invalid superClass';\n            superClass.call(this); // 부모호출\n            cls.prototype = new superClass(); // 상속\n        };\n        var wrapper = function wrapper() {\n            if (!this || !(this instanceof wrapper)) throw 'invalid call';\n            var instance = factory(cls, arguments);\n            return initInstance(config.className, config.version || \"\", instance);\n        };\n        initPrototype.call(this, cls);\n        classStore[config.className] = wrapper;\n    }\n\n    return {\n        root: axUi,\n        addClass: addClass\n    };\n}();\n\n/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n * https://github.com/thomasJang/mustache.js -- imporove some variables\n */\n\n(function defineMustache(global, factory) {\n\n    factory(global.mustache = {});\n})(window.ax5, function mustacheFactory(mustache) {\n\n    var objectToString = Object.prototype.toString;\n    var isArray = Array.isArray || function isArrayPolyfill(object) {\n        return objectToString.call(object) === '[object Array]';\n    };\n\n    function isFunction(object) {\n        return typeof object === 'function';\n    }\n\n    /**\n     * More correct typeof string handling array\n     * which normally returns typeof 'object'\n     */\n    function typeStr(obj) {\n        return isArray(obj) ? 'array' : typeof obj === 'undefined' ? 'undefined' : _typeof(obj);\n    }\n\n    function escapeRegExp(string) {\n        return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n    }\n\n    /**\n     * Null safe way of checking whether or not an object,\n     * including its prototype, has a given property\n     */\n    function hasProperty(obj, propName) {\n        return obj != null && (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) === 'object' && propName in obj;\n    }\n\n    // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n    // See https://github.com/janl/mustache.js/issues/189\n    var regExpTest = RegExp.prototype.test;\n\n    function testRegExp(re, string) {\n        return regExpTest.call(re, string);\n    }\n\n    var nonSpaceRe = /\\S/;\n\n    function isWhitespace(string) {\n        return !testRegExp(nonSpaceRe, string);\n    }\n\n    var entityMap = {\n        '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#39;', '/': '&#x2F;'\n    };\n\n    function escapeHtml(string) {\n        return String(string).replace(/[&<>\"'\\/]/g, function fromEntityMap(s) {\n            return entityMap[s];\n        });\n    }\n\n    var whiteRe = /\\s*/;\n    var spaceRe = /\\s+/;\n    var equalsRe = /\\s*=/;\n    var curlyRe = /\\s*\\}/;\n    var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n    /**\n     * Breaks up the given `template` string into a tree of tokens. If the `tags`\n     * argument is given here it must be an array with two string values: the\n     * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n     * course, the default is to use mustaches (i.e. mustache.tags).\n     *\n     * A token is an array with at least 4 elements. The first element is the\n     * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n     * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n     * all text that appears outside a symbol this element is \"text\".\n     *\n     * The second element of a token is its \"value\". For mustache tags this is\n     * whatever else was inside the tag besides the opening symbol. For text tokens\n     * this is the text itself.\n     *\n     * The third and fourth elements of the token are the start and end indices,\n     * respectively, of the token in the original template.\n     *\n     * Tokens that are the root node of a subtree contain two more elements: 1) an\n     * array of tokens in the subtree and 2) the index in the original template at\n     * which the closing tag for that section begins.\n     */\n    function parseTemplate(template, tags) {\n        if (!template) return [];\n\n        var sections = []; // Stack to hold section tokens\n        var tokens = []; // Buffer to hold the tokens\n        var spaces = []; // Indices of whitespace tokens on the current line\n        var hasTag = false; // Is there a {{tag}} on the current line?\n        var nonSpace = false; // Is there a non-space char on the current line?\n\n        // Strips all whitespace tokens array for the current line\n        // if there was a {{#tag}} on it and otherwise only space.\n        function stripSpace() {\n            if (hasTag && !nonSpace) {\n                while (spaces.length) {\n                    delete tokens[spaces.pop()];\n                }\n            } else {\n                spaces = [];\n            }\n\n            hasTag = false;\n            nonSpace = false;\n        }\n\n        var openingTagRe, closingTagRe, closingCurlyRe;\n\n        function compileTags(tagsToCompile) {\n            if (typeof tagsToCompile === 'string') tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n            if (!isArray(tagsToCompile) || tagsToCompile.length !== 2) throw new Error('Invalid tags: ' + tagsToCompile);\n\n            openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n            closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n            closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n        }\n\n        compileTags(tags || mustache.tags);\n\n        var scanner = new Scanner(template);\n\n        var start, type, value, chr, token, openSection;\n        while (!scanner.eos()) {\n            start = scanner.pos;\n\n            // Match any text between tags.\n            value = scanner.scanUntil(openingTagRe);\n\n            if (value) {\n                for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n                    chr = value.charAt(i);\n\n                    if (isWhitespace(chr)) {\n                        spaces.push(tokens.length);\n                    } else {\n                        nonSpace = true;\n                    }\n\n                    tokens.push(['text', chr, start, start + 1]);\n                    start += 1;\n\n                    // Check for whitespace on the current line.\n                    if (chr === '\\n') stripSpace();\n                }\n            }\n\n            // Match the opening tag.\n            if (!scanner.scan(openingTagRe)) break;\n\n            hasTag = true;\n\n            // Get the tag type.\n            type = scanner.scan(tagRe) || 'name';\n            scanner.scan(whiteRe);\n\n            // Get the tag value.\n            if (type === '=') {\n                value = scanner.scanUntil(equalsRe);\n                scanner.scan(equalsRe);\n                scanner.scanUntil(closingTagRe);\n            } else if (type === '{') {\n                value = scanner.scanUntil(closingCurlyRe);\n                scanner.scan(curlyRe);\n                scanner.scanUntil(closingTagRe);\n                type = '&';\n            } else {\n                value = scanner.scanUntil(closingTagRe);\n            }\n\n            // Match the closing tag.\n            if (!scanner.scan(closingTagRe)) throw new Error('Unclosed tag at ' + scanner.pos);\n\n            token = [type, value, start, scanner.pos];\n            tokens.push(token);\n\n            if (type === '#' || type === '^') {\n                sections.push(token);\n            } else if (type === '/') {\n                // Check section nesting.\n                openSection = sections.pop();\n\n                if (!openSection) throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n                if (openSection[1] !== value) throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n            } else if (type === 'name' || type === '{' || type === '&') {\n                nonSpace = true;\n            } else if (type === '=') {\n                // Set the tags for the next time around.\n                compileTags(value);\n            }\n        }\n\n        // Make sure there are no open sections when we're done.\n        openSection = sections.pop();\n\n        if (openSection) throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n        return nestTokens(squashTokens(tokens));\n    }\n\n    /**\n     * Combines the values of consecutive text tokens in the given `tokens` array\n     * to a single token.\n     */\n    function squashTokens(tokens) {\n        var squashedTokens = [];\n\n        var token, lastToken;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            token = tokens[i];\n\n            if (token) {\n                if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n                    lastToken[1] += token[1];\n                    lastToken[3] = token[3];\n                } else {\n                    squashedTokens.push(token);\n                    lastToken = token;\n                }\n            }\n        }\n\n        return squashedTokens;\n    }\n\n    /**\n     * Forms the given array of `tokens` into a nested tree structure where\n     * tokens that represent a section have two additional items: 1) an array of\n     * all tokens that appear in that section and 2) the index in the original\n     * template that represents the end of that section.\n     */\n    function nestTokens(tokens) {\n        var nestedTokens = [];\n        var collector = nestedTokens;\n        var sections = [];\n\n        var token, section;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            token = tokens[i];\n\n            switch (token[0]) {\n                case '#':\n                case '^':\n                    collector.push(token);\n                    sections.push(token);\n                    collector = token[4] = [];\n                    break;\n                case '/':\n                    section = sections.pop();\n                    section[5] = token[2];\n                    collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n                    break;\n                default:\n                    collector.push(token);\n            }\n        }\n\n        return nestedTokens;\n    }\n\n    /**\n     * A simple string scanner that is used by the template parser to find\n     * tokens in template strings.\n     */\n    function Scanner(string) {\n        this.string = string;\n        this.tail = string;\n        this.pos = 0;\n    }\n\n    /**\n     * Returns `true` if the tail is empty (end of string).\n     */\n    Scanner.prototype.eos = function eos() {\n        return this.tail === '';\n    };\n\n    /**\n     * Tries to match the given regular expression at the current position.\n     * Returns the matched text if it can match, the empty string otherwise.\n     */\n    Scanner.prototype.scan = function scan(re) {\n        var match = this.tail.match(re);\n\n        if (!match || match.index !== 0) return '';\n\n        var string = match[0];\n\n        this.tail = this.tail.substring(string.length);\n        this.pos += string.length;\n\n        return string;\n    };\n\n    /**\n     * Skips all text until the given regular expression can be matched. Returns\n     * the skipped string, which is the entire tail if no match can be made.\n     */\n    Scanner.prototype.scanUntil = function scanUntil(re) {\n        var index = this.tail.search(re),\n            match;\n\n        switch (index) {\n            case -1:\n                match = this.tail;\n                this.tail = '';\n                break;\n            case 0:\n                match = '';\n                break;\n            default:\n                match = this.tail.substring(0, index);\n                this.tail = this.tail.substring(index);\n        }\n\n        this.pos += match.length;\n\n        return match;\n    };\n\n    /**\n     * Represents a rendering context by wrapping a view object and\n     * maintaining a reference to the parent context.\n     */\n    function Context(view, parentContext) {\n        this.view = view;\n        this.cache = {\n            '.': this.view,\n            '@each': function each() {\n                var returns = [];\n                for (var k in this) {\n                    returns.push({ '@key': k, '@value': this[k] });\n                }\n                return returns;\n            }\n        };\n        this.parent = parentContext;\n    }\n\n    /**\n     * Creates a new context using the given view with this context\n     * as the parent.\n     */\n    Context.prototype.push = function push(view) {\n        return new Context(view, this);\n    };\n\n    /**\n     * Returns the value of the given name in this context, traversing\n     * up the context hierarchy if the value is absent in this context's view.\n     */\n    Context.prototype.lookup = function lookup(name) {\n        var cache = this.cache;\n\n        var value;\n        if (cache.hasOwnProperty(name)) {\n            value = cache[name];\n        } else {\n            var context = this,\n                names,\n                index,\n                lookupHit = false;\n\n            while (context) {\n                if (name.indexOf('.') > 0) {\n                    value = context.view;\n                    names = name.split('.');\n                    index = 0;\n\n                    /**\n                     * Using the dot notion path in `name`, we descend through the\n                     * nested objects.\n                     *\n                     * To be certain that the lookup has been successful, we have to\n                     * check if the last object in the path actually has the property\n                     * we are looking for. We store the result in `lookupHit`.\n                     *\n                     * This is specially necessary for when the value has been set to\n                     * `undefined` and we want to avoid looking up parent contexts.\n                     **/\n                    while (value != null && index < names.length) {\n                        if (index === names.length - 1) lookupHit = hasProperty(value, names[index]);\n\n                        value = value[names[index++]];\n                    }\n                } else {\n                    value = context.view[name];\n                    lookupHit = hasProperty(context.view, name);\n                }\n\n                if (lookupHit) break;\n\n                context = context.parent;\n            }\n\n            cache[name] = value;\n        }\n\n        if (isFunction(value)) value = value.call(this.view);\n\n        return value;\n    };\n\n    /**\n     * A Writer knows how to take a stream of tokens and render them to a\n     * string, given a context. It also maintains a cache of templates to\n     * avoid the need to parse the same template twice.\n     */\n    function Writer() {\n        this.cache = {};\n    }\n\n    /**\n     * Clears all cached templates in this writer.\n     */\n    Writer.prototype.clearCache = function clearCache() {\n        this.cache = {};\n    };\n\n    /**\n     * Parses and caches the given `template` and returns the array of tokens\n     * that is generated from the parse.\n     */\n    Writer.prototype.parse = function parse(template, tags) {\n        var cache = this.cache;\n        var tokens = cache[template];\n\n        if (tokens == null) tokens = cache[template] = parseTemplate(template, tags);\n\n        return tokens;\n    };\n\n    /**\n     * High-level method that is used to render the given `template` with\n     * the given `view`.\n     *\n     * The optional `partials` argument may be an object that contains the\n     * names and templates of partials that are used in the template. It may\n     * also be a function that is used to load partial templates on the fly\n     * that takes a single argument: the name of the partial.\n     */\n    Writer.prototype.render = function render(template, view, partials) {\n        var tokens = this.parse(template);\n        var context = view instanceof Context ? view : new Context(view);\n        return this.renderTokens(tokens, context, partials, template);\n    };\n\n    /**\n     * Low-level method that renders the given array of `tokens` using\n     * the given `context` and `partials`.\n     *\n     * Note: The `originalTemplate` is only ever used to extract the portion\n     * of the original template that was contained in a higher-order section.\n     * If the template doesn't use higher-order sections, this argument may\n     * be omitted.\n     */\n    Writer.prototype.renderTokens = function renderTokens(tokens, context, partials, originalTemplate) {\n        var buffer = '';\n        var token, symbol, value;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            value = undefined;\n            token = tokens[i];\n            symbol = token[0];\n\n            if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);else if (symbol === '&') value = this.unescapedValue(token, context);else if (symbol === 'name') value = this.escapedValue(token, context);else if (symbol === 'text') value = this.rawValue(token);\n\n            if (value !== undefined) buffer += value;\n        }\n\n        return buffer;\n    };\n\n    Writer.prototype.renderSection = function renderSection(token, context, partials, originalTemplate) {\n        var self = this;\n        var buffer = '';\n\n        var value = context.lookup(token[1]);\n\n        // This function is used to render an arbitrary template\n        // in the current context by higher-order sections.\n        function subRender(template) {\n            return self.render(template, context, partials);\n        }\n\n        if (!value) return;\n\n        if (isArray(value)) {\n            for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n                if (value[j]) {\n                    if (_typeof(value[j]) === 'object') {\n                        value[j]['@i'] = j;\n                        value[j]['@first'] = j === 0;\n                    }\n\n                    buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n                }\n            }\n        } else if ((typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' || typeof value === 'string' || typeof value === 'number') {\n            buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n        } else if (isFunction(value)) {\n            if (typeof originalTemplate !== 'string') throw new Error('Cannot use higher-order sections without the original template');\n\n            // Extract the portion of the original template that the section contains.\n            value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n            if (value != null) buffer += value;\n        } else {\n            buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n        }\n        return buffer;\n    };\n\n    Writer.prototype.renderInverted = function renderInverted(token, context, partials, originalTemplate) {\n        var value = context.lookup(token[1]);\n\n        // Use JavaScript's definition of falsy. Include empty arrays.\n        // See https://github.com/janl/mustache.js/issues/186\n        if (!value || isArray(value) && value.length === 0) return this.renderTokens(token[4], context, partials, originalTemplate);\n    };\n\n    Writer.prototype.renderPartial = function renderPartial(token, context, partials) {\n        if (!partials) return;\n\n        var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n        if (value != null) return this.renderTokens(this.parse(value), context, partials, value);\n    };\n\n    Writer.prototype.unescapedValue = function unescapedValue(token, context) {\n        var value = context.lookup(token[1]);\n        if (value != null) return value;\n    };\n\n    Writer.prototype.escapedValue = function escapedValue(token, context) {\n        var value = context.lookup(token[1]);\n        if (value != null) return mustache.escape(value);\n    };\n\n    Writer.prototype.rawValue = function rawValue(token) {\n        return token[1];\n    };\n\n    mustache.name = 'mustache.js';\n    mustache.version = '2.1.3';\n    mustache.tags = ['{{', '}}'];\n\n    // All high-level mustache.* functions use this writer.\n    var defaultWriter = new Writer();\n\n    /**\n     * Clears all cached templates in the default writer.\n     */\n    mustache.clearCache = function clearCache() {\n        return defaultWriter.clearCache();\n    };\n\n    /**\n     * Parses and caches the given template in the default writer and returns the\n     * array of tokens it contains. Doing this ahead of time avoids the need to\n     * parse templates on the fly as they are rendered.\n     */\n    mustache.parse = function parse(template, tags) {\n        return defaultWriter.parse(template, tags);\n    };\n\n    /**\n     * Renders the `template` with the given `view` and `partials` using the\n     * default writer.\n     */\n    mustache.render = function render(template, view, partials) {\n        if (typeof template !== 'string') {\n            throw new TypeError('Invalid template! Template should be a \"string\" ' + 'but \"' + typeStr(template) + '\" was given as the first ' + 'argument for mustache#render(template, view, partials)');\n        }\n\n        return defaultWriter.render(template, view, partials);\n    };\n\n    // This is here for backwards compatibility with 0.4.x.,\n    /*eslint-disable */ // eslint wants camel cased function name\n    mustache.to_html = function to_html(template, view, partials, send) {\n        /*eslint-enable*/\n\n        var result = mustache.render(template, view, partials);\n\n        if (isFunction(send)) {\n            send(result);\n        } else {\n            return result;\n        }\n    };\n\n    // Export the escaping function so that the user may override it.\n    // See https://github.com/janl/mustache.js/issues/244\n    mustache.escape = escapeHtml;\n\n    // Export these mainly for testing, but also for advanced usage.\n    mustache.Scanner = Scanner;\n    mustache.Context = Context;\n    mustache.Writer = Writer;\n});\n// ax5.ui.dialog\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var DIALOG = void 0;\n\n    UI.addClass({\n        className: \"dialog\"\n    }, function () {\n        /**\n         * @class ax5dialog\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var dialog = new ax5.ui.dialog();\n         * var mask = new ax5.ui.mask();\n         * dialog.setConfig({\n         *     zIndex: 5000,\n         *     onStateChanged: function () {\n         *         if (this.state === \"open\") {\n         *             mask.open();\n         *         }\n         *         else if (this.state === \"close\") {\n         *             mask.close();\n         *         }\n         *     }\n         * });\n         *\n         * dialog.alert({\n         *     theme: 'default',\n         *     title: 'Alert default',\n         *     msg: theme + ' color'\n         * }, function () {\n         *     console.log(this);\n         * });\n         * ```\n         */\n        var ax5dialog = function ax5dialog() {\n            var self = this,\n                cfg = void 0;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                id: 'ax5-dialog-' + this.instanceId,\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n                theme: 'default',\n                width: 300,\n                title: '',\n                msg: '',\n                lang: {\n                    \"ok\": \"ok\", \"cancel\": \"cancel\"\n                },\n                animateTime: 150,\n                autoCloseTime: 0\n            };\n            this.activeDialog = null;\n            this.autoCloseTimer = null;\n            this.queue = [];\n\n            cfg = this.config;\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                that = null;\n                return true;\n            };\n            /**\n             * @private ax5dialog.getContent\n             * @param {String} dialogId\n             * @param {Object} opts\n             * @returns dialogDisplay\n             */\n            var getContent = function getContent(dialogId, opts) {\n\n                var data = {\n                    dialogId: dialogId,\n                    title: opts.title || cfg.title || \"\",\n                    msg: (opts.msg || cfg.msg || \"\").replace(/\\n/g, \"<br/>\"),\n                    input: opts.input,\n                    btns: opts.btns,\n                    '_crlf': function _crlf() {\n                        return this.replace(/\\n/g, \"<br/>\");\n                    },\n                    additionalContent: function (additionalContent) {\n                        if (U.isFunction(additionalContent)) {\n                            return additionalContent.call(opts);\n                        } else {\n                            return additionalContent;\n                        }\n                    }(opts.additionalContent)\n                };\n\n                try {\n                    return DIALOG.tmpl.get.call(this, \"dialogDisplay\", data);\n                } finally {\n                    data = null;\n                }\n            };\n            /**\n             * @private ax5dialog.open\n             * @param {Object} opts\n             * @param callback\n             */\n            var open = function open(opts, callback) {\n                var pos = {},\n                    box = void 0;\n\n                opts.id = opts.id || cfg.id;\n\n                box = {\n                    width: opts.width\n                };\n                jQuery(document.body).append(getContent.call(this, opts.id, opts));\n\n                this.dialogConfig = opts;\n                this.activeDialog = jQuery('#' + opts.id);\n                this.activeDialog.css({ width: box.width });\n\n                if (typeof callback === \"undefined\") {\n                    callback = opts.callback;\n                }\n\n                // dialog 높이 구하기 - 너비가 정해지면 높이가 변경 될 것.\n                opts.height = box.height = this.activeDialog.height();\n\n                //- position 정렬\n                if (typeof opts.position === \"undefined\" || opts.position === \"center\") {\n                    pos.top = jQuery(window).height() / 2 - box.height / 2;\n                    pos.left = jQuery(window).width() / 2 - box.width / 2;\n                } else {\n                    pos.left = opts.position.left || 0;\n                    pos.top = opts.position.top || 0;\n                }\n                if (cfg.zIndex) {\n                    pos[\"z-index\"] = cfg.zIndex;\n                }\n                this.activeDialog.css(pos);\n\n                // bind button event\n                if (opts.dialogType === \"prompt\") {\n                    this.activeDialog.find(\"[data-dialog-prompt]\").get(0).focus();\n                } else {\n                    this.activeDialog.find(\"[data-dialog-btn]\").get(0).focus();\n                }\n\n                this.activeDialog.find(\"[data-dialog-btn]\").on(cfg.clickEventName, function (e) {\n                    btnOnClick.call(this, e || window.event, opts, callback);\n                }.bind(this));\n\n                // bind key event\n                jQuery(window).bind(\"keydown.ax5dialog\", function (e) {\n                    onKeyup.call(this, e || window.event, opts, callback);\n                }.bind(this));\n\n                jQuery(window).bind(\"resize.ax5dialog\", function (e) {\n                    align.call(this, e || window.event);\n                }.bind(this));\n\n                onStateChanged.call(this, opts, {\n                    self: this,\n                    state: \"open\"\n                });\n\n                if (opts.autoCloseTime) {\n                    this.autoCloseTimer = setTimeout(function () {\n                        self.close();\n                    }, opts.autoCloseTime);\n                }\n\n                pos = null;\n                box = null;\n            };\n            var align = function align(e) {\n                if (!this.activeDialog) return this;\n                var opts = self.dialogConfig,\n                    box = {\n                    width: opts.width,\n                    height: opts.height\n                };\n\n                //- position 정렬\n                if (typeof opts.position === \"undefined\" || opts.position === \"center\") {\n                    box.top = window.innerHeight / 2 - box.height / 2;\n                    box.left = window.innerWidth / 2 - box.width / 2;\n                } else {\n                    box.left = opts.position.left || 0;\n                    box.top = opts.position.top || 0;\n                }\n                if (box.left < 0) box.left = 0;\n                if (box.top < 0) box.top = 0;\n\n                this.activeDialog.css(box);\n\n                opts = null;\n                box = null;\n\n                return this;\n            };\n            var btnOnClick = function btnOnClick(e, opts, callback, target, k) {\n                var that = void 0,\n                    emptyKey = null;\n\n                if (e.srcElement) e.target = e.srcElement;\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-dialog-btn\")) {\n                        return true;\n                    }\n                });\n\n                if (target) {\n                    k = target.getAttribute(\"data-dialog-btn\");\n\n                    that = {\n                        self: this,\n                        key: k, value: opts.btns[k],\n                        dialogId: opts.id,\n                        btnTarget: target\n                    };\n                    if (opts.dialogType === \"prompt\") {\n                        that.input = {};\n                        for (var oi in opts.input) {\n                            that.input[oi] = this.activeDialog.find('[data-dialog-prompt=' + oi + ']').val();\n                            if (opts.input[oi].required && (that.input[oi] == \"\" || that.input[oi] == null)) {\n                                emptyKey = oi;\n                                break;\n                            }\n                        }\n                    }\n                    if (opts.btns[k].onClick) {\n                        opts.btns[k].onClick.call(that, k);\n                    } else if (opts.dialogType === \"alert\") {\n                        if (callback) callback.call(that, k);\n                        this.close({ doNotCallback: true });\n                    } else if (opts.dialogType === \"confirm\") {\n                        if (callback) callback.call(that, k);\n                        this.close({ doNotCallback: true });\n                    } else if (opts.dialogType === \"prompt\") {\n                        if (k === 'ok') {\n                            if (emptyKey) {\n                                this.activeDialog.find('[data-dialog-prompt=\"' + emptyKey + '\"]').get(0).focus();\n                                return false;\n                            }\n                        }\n                        if (callback) callback.call(that, k);\n                        this.close({ doNotCallback: true });\n                    }\n                }\n\n                that = null;\n                opts = null;\n                callback = null;\n                target = null;\n                k = null;\n            };\n            var onKeyup = function onKeyup(e, opts, callback, target, k) {\n                var that = void 0,\n                    emptyKey = null;\n\n                if (e.keyCode == ax5.info.eventKeys.ESC) {\n                    this.close();\n                }\n                if (opts.dialogType === \"prompt\") {\n                    if (e.keyCode == ax5.info.eventKeys.RETURN) {\n                        that = {\n                            self: this,\n                            key: k, value: opts.btns[k],\n                            dialogId: opts.id,\n                            btnTarget: target\n                        };\n                        that.input = {};\n\n                        for (var oi in opts.input) {\n                            that.input[oi] = this.activeDialog.find('[data-dialog-prompt=' + oi + ']').val();\n                            if (opts.input[oi].required && (that.input[oi] == \"\" || that.input[oi] == null)) {\n                                emptyKey = oi;\n                                break;\n                            }\n                        }\n                        if (emptyKey) {\n                            that = null;\n                            emptyKey = null;\n                            return false;\n                        }\n                        if (callback) callback.call(that, k);\n                        this.close({ doNotCallback: true });\n                    }\n                }\n\n                that = null;\n                emptyKey = null;\n                opts = null;\n                callback = null;\n                target = null;\n                k = null;\n            };\n\n            /**\n             * Preferences of dialog UI\n             * @method ax5dialog.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {String} [config.theme=\"default\"]\n             * @param {Number} [config.width=300]\n             * @param {String} [config.title=\"\"]\n             * @param {Number} [config.zIndex]\n             * @param {Function} [config.onStateChanged] - `onStateChanged` function can be defined in setConfig method or new ax5.ui.dialog initialization method. However, you can us to define an\n             * event function after initialization, if necessary\n             * @param {Object} [config.lang]\n             * @param {String} [config.lang.ok=\"ok\"]\n             * @param {String} [config.lang.cancel=\"cancel\"]\n             * @param {Number} [config.animateTime=150]\n             * @param {Number} [config.autoCloseTime=0] - 0보다 크면 autoCloseTime 프레임후에 dialog auto close\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * var dialog = new ax5.ui.dialog();\n             * dialog.setConfig({\n             *      title: \"app dialog title\",\n             *      zIndex: 5000,\n             *      onStateChanged: function () {\n             *          if (this.state === \"open\") {\n             *              mask.open();\n             *          }\n             *          else if (this.state === \"close\") {\n             *              mask.close();\n             *          }\n             *      }\n             * });\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                // this.onLoad = cfg.onLoad;\n            };\n\n            /**\n             * open the dialog of alert type\n             * @method ax5dialog.alert\n             * @param {Object|String} config - dialog 속성을 json으로 정의하거나 msg만 전달\n             * @param {String} [config.theme=\"default\"]\n             * @param {Number} [config.width=300]\n             * @param {String} [config.title=\"\"]\n             * @param {Number} [config.zIndex]\n             * @param {Function} [config.onStateChanged]\n             * @param {Object} [config.lang]\n             * @param {String} [config.lang.ok=\"ok\"]\n             * @param {String} [config.lang.cancel=\"cancel\"]\n             * @param {Number} [config.animateTime=150]\n             * @param {Number} [config.autoCloseTime=0] - 0보다 크면 autoCloseTime 프레임후에 dialog auto close\n             * @param {Function|String} [config.additionalContent]\n             * @param {Function} [callback] - 사용자 확인 이벤트시 호출될 callback 함수\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * myDialog.alert({\n             *  title: 'app title',\n             *  msg: 'alert'\n             * }, function(){});\n             * ```\n             */\n            this.alert = function (opts, callback, tryCount) {\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    };\n                }\n\n                opts = jQuery.extend(true, {}, cfg, opts);\n                opts.dialogType = \"alert\";\n                opts.theme = opts.theme || cfg.theme || \"\";\n                opts.callback = callback;\n\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: { label: cfg.lang[\"ok\"], theme: opts.theme }\n                    };\n                }\n\n                if (this.activeDialog) {\n                    this.queue.push(opts);\n                } else {\n                    open.call(this, opts, callback);\n                }\n                return this;\n            };\n\n            /**\n             * open the dialog of confirm type\n             * @method ax5dialog.confirm\n             * @param {Object|String} config - dialog 속성을 json으로 정의하거나 msg만 전달\n             * @param {String} [config.theme=\"default\"]\n             * @param {Number} [config.width=300]\n             * @param {String} [config.title=\"\"]\n             * @param {Number} [config.zIndex]\n             * @param {Function} [config.onStateChanged]\n             * @param {Object} [config.lang]\n             * @param {String} [config.lang.ok=\"ok\"]\n             * @param {String} [config.lang.cancel=\"cancel\"]\n             * @param {Number} [config.animateTime=150]\n             * @param {Number} [config.autoCloseTime=0] - 0보다 크면 autoCloseTime 프레임후에 dialog auto close\n             * @param {Function|String} [config.additionalContent]\n             * @param {Function} [callback] - 사용자 확인 이벤트시 호출될 callback 함수\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * myDialog.confirm({\n             *      title: 'app title',\n             *      msg: 'confirm',\n             *      additionalContent: function () {\n             *          return \"<div style='border:1px solid #ccc;border-radius: 5px;background: #eee;padding: 10px;'>추가정보</div>\";\n             *      }\n             * }, function(){});\n             * ```\n             */\n            this.confirm = function (opts, callback, tryCount) {\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    };\n                }\n\n                opts = jQuery.extend(true, {}, cfg, opts);\n                opts.dialogType = \"confirm\";\n                opts.theme = opts.theme || cfg.theme || \"\";\n                opts.callback = callback;\n\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: { label: cfg.lang[\"ok\"], theme: opts.theme },\n                        cancel: { label: cfg.lang[\"cancel\"] }\n                    };\n                }\n\n                if (this.activeDialog) {\n                    this.queue.push(opts);\n                } else {\n                    open.call(this, opts, callback);\n                }\n\n                return this;\n            };\n\n            /**\n             * open the dialog of prompt type\n             * @method ax5dialog.prompt\n             * @param {Object|String} config - dialog 속성을 json으로 정의하거나 msg만 전달\n             * @param {String} [config.theme=\"default\"]\n             * @param {Number} [config.width=300]\n             * @param {String} [config.title=\"\"]\n             * @param {Number} [config.zIndex]\n             * @param {Function} [config.onStateChanged]\n             * @param {Object} [config.lang]\n             * @param {String} [config.lang.ok=\"ok\"]\n             * @param {String} [config.lang.cancel=\"cancel\"]\n             * @param {Number} [config.animateTime=150]\n             * @param {Number} [config.autoCloseTime=0] - 0보다 크면 autoCloseTime 프레임후에 dialog auto close\n             * @param {Function|String} [config.additionalContent]\n             * @param {Function} [callback] - 사용자 확인 이벤트시 호출될 callback 함수\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * myDialog.prompt({\n             *  title: 'app title',\n             *  msg: 'alert'\n             * }, function(){});\n             * ```\n             */\n            this.prompt = function (opts, callback, tryCount) {\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    };\n                }\n\n                opts = jQuery.extend(true, {}, cfg, opts);\n                opts.dialogType = \"prompt\";\n                opts.theme = opts.theme || cfg.theme || \"\";\n                opts.callback = callback;\n\n                if (typeof opts.input === \"undefined\") {\n                    opts.input = {\n                        value: { label: \"\" }\n                    };\n                }\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: { label: cfg.lang[\"ok\"], theme: opts.theme },\n                        cancel: { label: cfg.lang[\"cancel\"] }\n                    };\n                }\n\n                if (this.activeDialog) {\n                    this.queue.push(opts);\n                } else {\n                    open.call(this, opts, callback);\n                }\n\n                return this;\n            };\n\n            /**\n             * close the dialog\n             * @method ax5dialog.close\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * myDialog.close();\n             * ```\n             */\n            this.close = function (_option) {\n                var opts = void 0,\n                    that = void 0;\n\n                if (this.activeDialog) {\n                    if (this.autoCloseTimer) clearTimeout(this.autoCloseTimer);\n\n                    opts = self.dialogConfig;\n\n                    this.activeDialog.addClass(\"destroy\");\n                    jQuery(window).unbind(\"keydown.ax5dialog\");\n                    jQuery(window).unbind(\"resize.ax5dialog\");\n\n                    setTimeout(function () {\n                        if (this.activeDialog) {\n                            this.activeDialog.remove();\n                            this.activeDialog = null;\n                        }\n\n                        that = {\n                            self: this,\n                            state: \"close\",\n                            dialogId: opts.id\n                        };\n\n                        if (opts.callback && (!_option || !_option.doNotCallback)) {\n                            opts.callback.call(that);\n                        }\n\n                        if (opts && opts.onStateChanged) {\n                            opts.onStateChanged.call(that, that);\n                        } else if (this.onStateChanged) {\n                            this.onStateChanged.call(that, that);\n                        }\n\n                        if (this.queue && this.queue.length) {\n                            open.call(this, this.queue.shift());\n                        }\n\n                        opts = null;\n                        that = null;\n                    }.bind(this), cfg.animateTime);\n                }\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n\n                UI.dialog_instance = UI.dialog_instance || [];\n                UI.dialog_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n        return ax5dialog;\n    }());\n\n    DIALOG = ax5.ui.dialog;\n})();\n\n// ax5.ui.dialog.tmpl\n(function () {\n\n    var DIALOG = ax5.ui.dialog;\n\n    var dialogDisplay = function dialogDisplay(columnKeys) {\n        return ' \\n        <div id=\"{{dialogId}}\" data-dialog-els=\"root\" class=\"ax5-ui-dialog {{theme}}\">\\n            <div class=\"ax-dialog-header\" data-dialog-els=\"header\">\\n                {{{title}}}\\n            </div>\\n            <div class=\"ax-dialog-body\" data-dialog-els=\"body\">\\n                <div class=\"ax-dialog-msg\">{{{msg}}}</div>\\n                \\n                {{#input}}\\n                <div class=\"ax-dialog-prompt\">\\n                    {{#@each}}\\n                    <div class=\"form-group\">\\n                    {{#@value.label}}\\n                    <label>{{#_crlf}}{{{.}}}{{/_crlf}}</label>\\n                    {{/@value.label}}\\n                    <input type=\"{{@value.type}}\" placeholder=\"{{@value.placeholder}}\" class=\"form-control {{@value.theme}}\" data-dialog-prompt=\"{{@key}}\" style=\"width:100%;\" value=\"{{@value.value}}\" />\\n                    {{#@value.help}}\\n                    <p class=\"help-block\">{{#_crlf}}{{.}}{{/_crlf}}</p>\\n                    {{/@value.help}}\\n                    </div>\\n                    {{/@each}}\\n                </div>\\n                {{/input}}\\n                \\n                <div class=\"ax-dialog-buttons\" data-dialog-els=\"buttons\">\\n                    <div class=\"ax-button-wrap\">\\n                    {{#btns}}\\n                        {{#@each}}\\n                        <button type=\"button\" data-dialog-btn=\"{{@key}}\" class=\"btn btn-{{@value.theme}}\">{{@value.label}}</button>\\n                        {{/@each}}\\n                    {{/btns}}\\n                    </div>\\n                </div>\\n                \\n                {{#additionalContent}}\\n                <div data-dialog-els=\"additional-content\">{{{.}}}</div>\\n                {{/additionalContent}}\\n            </div>\\n        </div>  \\n        ';\n    };\n\n    DIALOG.tmpl = {\n        \"dialogDisplay\": dialogDisplay,\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(DIALOG.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.mask\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MASK = void 0;\n\n    UI.addClass({\n        className: \"mask\"\n    }, function () {\n        /**\n         * @class ax5mask\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var customMask = function customMask() {\n         *     var cTmpl = '' +\n         *         '<div class=\"ax-mask\" id=\"{{maskId}}\" >' +\n         *         '    <div class=\"ax-mask-bg\" style=\"background-color:red !important;\"></div>' +\n         *         '    <div class=\"ax-mask-content\">' +\n         *         '        {{{body}}}' +\n         *         '    </div>' +\n         *         '</div>';\n         *     return cTmpl;\n         * };\n         * ax5.ui.mask.tmpl.customMask = customMask;\n         *\n         * var mask = new ax5.ui.mask();\n         *\n         * mask.open({\n         *     templateName: 'customMask',\n         *     content: 'custom MASK on target',\n         *     target: $(\"#user-content\").get(0),\n         *     onClick: function(){\n         *         console.log(this);\n         *     }\n         * });\n         * ```\n         */\n        return function () {\n            var self = this,\n                cfg = void 0;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: '',\n                target: jQuery(document.body).get(0),\n                animateTime: 250\n            };\n            this.maskContent = '';\n            this.status = \"off\";\n\n            cfg = this.config;\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                opts = null;\n                that = null;\n                return true;\n            };\n            var getBodyTmpl = function getBodyTmpl(data) {\n                if (typeof data.templateName === \"undefined\") data.templateName = \"defaultMask\";\n                return MASK.tmpl.get.call(this, data.templateName, data);\n            };\n            var setBody = function setBody(content) {\n                this.maskContent = content;\n            };\n\n            /**\n             * Preferences of Mask UI\n             * @method ax5mask.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5mask}\n             * @example\n             * ```\n             * setConfig({\n             *      target : {Element|AX5 nodelist}, // 마스크 처리할 대상\n             *      content : {String}, // 마스크안에 들어가는 내용물\n             *      onStateChanged: function(){} // 마스크 상태변경 시 호출되는 함수 this.type으로 예외처리 가능\n             * }\n             * ```\n             */\n            this.init = function () {\n                // after setConfig();\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                if (this.config.content) setBody.call(this, this.config.content);\n            };\n\n            /**\n             * open mask\n             * target 을 주지 않으면 기본적으로 body 에 마스크가 적용되고 원하는 타겟을 지정해서 마스크를 씌울 수 있습니다.\n             * 기본 정의된 마스크 외에 사용자가 템플릿을 정의해서 마스크를 사용 가능합니다.\n             * @method ax5mask.open\n             * @param {Object} config\n             * @param {String} config\n             * @returns {ax5mask}\n             * @example\n             * ```js\n             * my_mask.open({\n             *     target: document.body,\n             *     content: \"<h1>Loading..</h1>\",\n             *     onStateChanged: function () {\n             *\n             *     }\n             * });\n             *\n             * my_mask.open({\n             *     target: $(\"#mask-target\").get(0), // dom Element\n             *     content: \"<h1>Loading..</h1>\",\n             *     onStateChanged: function () {\n             *\n             *     }\n             * });\n             *\n             *\n             * var customMask = function customMask() {\n             *     var cTmpl = '' +\n             *             '<div class=\"ax-mask\" id=\"{{maskId}}\" >' +\n             *             '    <div class=\"ax-mask-bg\" style=\"background-color:red   !important;\"></div>' +\n             *             '    <div class=\"ax-mask-content\">' +\n             *             '        {{{body}}}' +\n             *             '    </div>' +\n             *             '</div>';\n             *     return cTmpl;\n             * };\n             * ax5.ui.mask.tmpl.customMask = customMask;\n             *\n             * my_mask.open({\n             *     target: $(\"#mask-target\").get(0), // dom Element\n             *     content: \"<h1>Loading..</h1>\",\n             *     \n             *     onStateChanged: function () {\n             *\n             *     }\n             * });\n             * ```\n             */\n            this.open = function (options) {\n\n                if (this.status === \"on\") this.close();\n                if (options && options.content) setBody.call(this, options.content);\n                if (options && typeof options.templateName === \"undefined\") options.templateName = \"defaultMask\";\n                self.maskConfig = jQuery.extend(true, {}, this.config, options);\n\n                var _cfg = self.maskConfig,\n                    target = _cfg.target,\n                    $target = jQuery(target),\n                    maskId = 'ax-mask-' + ax5.getGuid(),\n                    $mask = void 0,\n                    css = {},\n                    that = {},\n                    templateName = _cfg.templateName,\n                    body = getBodyTmpl({\n                    theme: _cfg.theme,\n                    maskId: maskId,\n                    body: this.maskContent,\n                    templateName: templateName\n                });\n\n                jQuery(document.body).append(body);\n\n                // 마스크의 타겟이 html body 가 아니라면\n                if (target && target !== jQuery(document.body).get(0)) {\n                    css = {\n                        position: _cfg.position || \"absolute\",\n                        left: $target.offset().left,\n                        top: $target.offset().top,\n                        width: $target.outerWidth(),\n                        height: $target.outerHeight()\n                    };\n\n                    $target.addClass(\"ax-masking\");\n\n                    // 마스크의 타겟이 html body가 아닌경우 window resize 이벤트를 추적하여 엘리먼트 마스크의 CSS 속성 변경\n                    jQuery(window).on(\"resize.ax5mask-\" + this.instanceId, function (_$target) {\n                        this.align();\n                    }.bind(this));\n                }\n\n                if (typeof self.maskConfig.zIndex !== \"undefined\") {\n                    css[\"z-index\"] = self.maskConfig.zIndex;\n                }\n\n                this.$mask = $mask = jQuery(\"#\" + maskId);\n                this.$target = $target;\n                this.status = \"on\";\n                $mask.css(css);\n\n                if (_cfg.onClick) {\n                    $mask.on(\"click\", function (e) {\n                        that = {\n                            self: self,\n                            state: \"open\",\n                            type: \"click\"\n                        };\n                        self.maskConfig.onClick.call(that, that);\n                    });\n                }\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"open\"\n                });\n\n                options = null;\n                _cfg = null;\n                target = null;\n                $target = null;\n                maskId = null;\n                $mask = null;\n                css = null;\n                that = null;\n                templateName = null;\n                body = null;\n\n                return this;\n            };\n\n            /**\n             * close mask\n             * @method ax5mask.close\n             * @param {Number} [_delay=0]\n             * @returns {ax5mask}\n             * @example\n             * ```\n             * my_mask.close();\n             * ```\n             */\n            this.close = function (_delay) {\n                if (this.$mask) {\n                    var _close = function _close() {\n                        this.status = \"off\";\n                        this.$mask.remove();\n                        this.$target.removeClass(\"ax-masking\");\n\n                        onStateChanged.call(this, null, {\n                            self: this,\n                            state: \"close\"\n                        });\n\n                        jQuery(window).off(\"resize.ax5mask-\" + this.instanceId);\n                    };\n\n                    if (_delay) {\n                        setTimeout(function () {\n                            _close.call(this);\n                        }.bind(this), _delay);\n                    } else {\n                        _close.call(this);\n                    }\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5mask.fadeOut\n             * @returns {ax5mask}\n             */\n            this.fadeOut = function () {\n                if (this.$mask) {\n                    var _close = function _close() {\n                        this.status = \"off\";\n                        this.$mask.remove();\n                        this.$target.removeClass(\"ax-masking\");\n\n                        onStateChanged.call(this, null, {\n                            self: this,\n                            state: \"close\"\n                        });\n\n                        jQuery(window).off(\"resize.ax5mask-\" + this.instanceId);\n                    };\n\n                    this.$mask.addClass(\"fade-out\");\n                    setTimeout(function () {\n                        _close.call(this);\n                    }.bind(this), cfg.animateTime);\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5mask.align\n             * @returns {ax5mask}\n             */\n            this.align = function () {\n                if (this.maskConfig && this.maskConfig.target && this.maskConfig.target !== jQuery(document.body).get(0)) {\n                    try {\n                        var css = {\n                            position: this.maskConfig.position || \"absolute\",\n                            left: this.$target.offset().left,\n                            top: this.$target.offset().top,\n                            width: this.$target.outerWidth(),\n                            height: this.$target.outerHeight()\n                        };\n                        this.$mask.css(css);\n                    } catch (e) {}\n                }\n                return this;\n            };\n\n            this.pullRequest = function () {\n                console.log(\"test pullRequest01\");\n                console.log(\"test pullRequest02\");\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n\n                UI.mask_instance = UI.mask_instance || [];\n                UI.mask_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n    }());\n    MASK = ax5.ui.mask;\n})();\n// ax5.ui.mask.tmpl\n(function () {\n\n    var MASK = ax5.ui.mask;\n\n    var defaultMask = function defaultMask(columnKeys) {\n        return '\\n            <div class=\"ax-mask {{theme}}\" id=\"{{maskId}}\">\\n                <div class=\"ax-mask-bg\"></div>\\n                <div class=\"ax-mask-content\">\\n                    <div class=\"ax-mask-body\">\\n                    {{{body}}}\\n                    </div>\\n                </div>\\n            </div>\\n        ';\n    };\n\n    MASK.tmpl = {\n        \"defaultMask\": defaultMask,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(MASK.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.toast\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var TOAST;\n\n    UI.addClass({\n        className: \"toast\"\n    }, function () {\n        /**\n         * @class ax5toast\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```\n         * ```js\n         * var toast = new ax5.ui.toast();\n         * toast.setConfig({\n         *     icon: '<i class=\"fa fa-bug\"></i>',\n         *     containerPosition: \"bottom-right\",\n         *     closeIcon: '<i class=\"fa fa-times\"></i>'\n         * });\n         *\n         * toast.onStateChanged = function(){\n         *     console.log(this);\n         * };\n         *\n         * toast.push({\n         *     icon: '<i class=\"fa fa-book\"></i>',\n         *     msg:\"999999\"\n         * });\n         *\n         * toast.push({\n         *     theme: theme,\n         *     msg: 'toast message'\n         * });\n         * ```\n         */\n        var ax5toast = function ax5toast() {\n            var self = this,\n                cfg,\n                toastSeq = 0,\n                toastSeqClear = null;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchstart\" : \"click\"),\n                theme: 'default',\n                width: 300,\n                icon: '',\n                closeIcon: '',\n                msg: '',\n                lang: {\n                    \"ok\": \"ok\", \"cancel\": \"cancel\"\n                },\n                displayTime: 3000,\n                animateTime: 250,\n                containerPosition: \"bottom-left\"\n            };\n            this.toastContainer = null;\n            this.queue = [];\n\n            cfg = this.config;\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                opts = null;\n                that = null;\n                return true;\n            },\n\n            /**\n             * @method ax5toast.getContent\n             * @param {String} toastId\n             * @param {Object} opts\n             * @returns toastDisplay\n             * @example\n             * ```js\n             * ax5toast.getContent('ax5-toast-3-1', opts);\n             * ```\n             */\n            getContent = function getContent(toastId, opts) {\n\n                var data = {\n                    toastId: toastId,\n                    theme: opts.theme,\n                    icon: opts.icon,\n                    msg: (opts.msg || \"\").replace(/\\n/g, \"<br/>\"),\n                    btns: opts.btns,\n                    closeIcon: opts.closeIcon\n                };\n\n                try {\n                    return TOAST.tmpl.get.call(this, \"toastDisplay\", data);\n                } finally {\n                    toastId = null;\n                    data = null;\n                }\n            },\n\n            /**\n             * @method ax5toast.open\n             * @param opts\n             * @param callBack\n             * @returns {ax5toast}\n             */\n            open = function open(opts, callBack) {\n                if (toastSeqClear) clearTimeout(toastSeqClear);\n\n                var toastBox,\n                    box = {\n                    width: opts.width\n                };\n\n                opts.id = 'ax5-toast-' + self.containerId + '-' + ++toastSeq;\n                if (jQuery('#' + opts.id).get(0)) return this;\n\n                if (U.left(cfg.containerPosition, '-') == 'bottom') {\n                    this.toastContainer.append(getContent(opts.id, opts));\n                } else {\n                    this.toastContainer.prepend(getContent(opts.id, opts));\n                }\n\n                toastBox = jQuery('#' + opts.id);\n                toastBox.css({ width: box.width });\n                opts.toastBox = toastBox;\n                this.queue.push(opts);\n\n                onStateChanged.call(this, opts, {\n                    self: this,\n                    state: \"open\",\n                    toastId: opts.id\n                });\n\n                if (opts.toastType === \"push\") {\n                    // 자동 제거 타이머 시작\n                    setTimeout(function () {\n                        this.close(opts, callBack);\n                    }.bind(this), cfg.displayTime);\n\n                    toastBox.find(\"[data-ax-toast-btn]\").on(cfg.clickEventName, function (e) {\n                        btnOnClick.call(this, e || window.event, opts, toastBox, callBack);\n                    }.bind(this));\n                } else if (opts.toastType === \"confirm\") {\n                    toastBox.find(\"[data-ax-toast-btn]\").on(cfg.clickEventName, function (e) {\n                        btnOnClick.call(this, e || window.event, opts, toastBox, callBack);\n                    }.bind(this));\n                }\n\n                box = null;\n            },\n                btnOnClick = function btnOnClick(e, opts, toastBox, callBack, target, k) {\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-ax-toast-btn\")) {\n                        return true;\n                    }\n                });\n\n                if (target) {\n                    k = target.getAttribute(\"data-ax-toast-btn\");\n\n                    var that = {\n                        key: k, value: opts.btns ? opts.btns[k] : k,\n                        toastId: opts.id,\n                        btn_target: target\n                    };\n\n                    if (opts.btns && opts.btns[k].onClick) {\n                        opts.btns[k].onClick.call(that, k);\n                    } else if (opts.toastType === \"push\") {\n                        if (callBack) callBack.call(that, k);\n                        this.close(opts, callBack);\n                    } else if (opts.toastType === \"confirm\") {\n                        if (callBack) callBack.call(that, k);\n                        this.close(opts, callBack);\n                    }\n                }\n\n                e = null;\n                opts = null;\n                toastBox = null;\n                callBack = null;\n                target = null;\n                k = null;\n            };\n\n            /**\n             * Preferences of toast UI\n             * @method ax5toast.set_config\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5toast}\n             * @example\n             * ```\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                // after set_config();\n                self.containerId = ax5.getGuid();\n                var styles = [];\n                if (cfg.zIndex) {\n                    styles.push(\"z-index:\" + cfg.zIndex);\n                }\n                jQuery(document.body).append('<div class=\"ax5-ui-toast-container ' + cfg.containerPosition + '\" data-toast-container=\"' + '' + self.containerId + '\" style=\"' + styles.join(\";\") + '\"></div>');\n                this.toastContainer = jQuery('[data-toast-container=\"' + self.containerId + '\"]');\n            };\n\n            /**\n             * @method ax5toast.push\n             * @param opts\n             * @param callBack\n             * @returns {ax5toast}\n             */\n            this.push = function (opts, callBack) {\n                if (!self.containerId) {\n                    this.init();\n                }\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    };\n                }\n                opts.toastType = \"push\";\n\n                self.dialogConfig = {};\n                jQuery.extend(true, self.dialogConfig, cfg, opts);\n                opts = self.dialogConfig;\n\n                open.call(this, opts, callBack);\n\n                opts = null;\n                callBack = null;\n                return this;\n            };\n\n            /**\n             * @method ax5toast.confirm\n             * @param opts\n             * @param callBack\n             * @returns {ax5toast}\n             */\n            this.confirm = function (opts, callBack) {\n                if (!self.containerId) {\n                    this.init();\n                }\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    };\n                }\n                opts.toastType = \"confirm\";\n\n                self.dialogConfig = {};\n                jQuery.extend(true, self.dialogConfig, cfg, opts);\n                opts = self.dialogConfig;\n\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: { label: cfg.lang[\"ok\"], theme: opts.theme }\n                    };\n                }\n                open.call(this, opts, callBack);\n\n                opts = null;\n                callBack = null;\n                return this;\n            };\n\n            /**\n             * close the toast\n             * @method ax5toast.close\n             * @returns {ax5toast}\n             * @example\n             * ```\n             * my_toast.close();\n             * ```\n             */\n            this.close = function (opts, callBack) {\n                if (typeof opts === \"undefined\") {\n                    opts = U.last(this.queue);\n                }\n\n                var toastBox = opts.toastBox;\n                toastBox.addClass(opts.toastType == \"push\" ? \"removed\" : \"destroy\");\n                this.queue = U.filter(this.queue, function () {\n                    return opts.id != this.id;\n                });\n                setTimeout(function () {\n                    var that = {\n                        toastId: opts.id\n                    };\n\n                    toastBox.remove();\n                    if (callBack) callBack.call(that);\n\n                    that = {\n                        self: this,\n                        state: \"close\",\n                        toastId: opts.id\n                    };\n                    onStateChanged.call(this, opts, that);\n\n                    // 3초후에도 아무 일이 없다면 완전히 제거\n                    if (this.queue.length === 0) {\n                        if (toastSeqClear) clearTimeout(toastSeqClear);\n                        toastSeqClear = setTimeout(function () {\n                            /// console.log(\"try clear seq\");\n                            if (this.queue.length === 0) toastSeq = 0;\n                        }.bind(this), 3000);\n                    }\n\n                    that = null;\n                    opts = null;\n                    callBack = null;\n                    toastBox = null;\n                }.bind(this), cfg.animateTime);\n\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n\n                UI.toast_instance = UI.toast_instance || [];\n                UI.toast_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n        return ax5toast;\n    }());\n    TOAST = ax5.ui.toast;\n})();\n// ax5.ui.toast.tmpl\n(function () {\n\n    var TOAST = ax5.ui.toast;\n\n    var toastDisplay = function toastDisplay(columnKeys) {\n        return '\\n        <div id=\"{{toastId}}\" data-ax5-ui=\"toast\" class=\"ax5-ui-toast {{theme}}\">\\n            {{#icon}}\\n            <div class=\"ax-toast-icon\">{{{.}}}</div>\\n            {{/icon}}\\n            <div class=\"ax-toast-body\">{{{msg}}}</div>\\n            {{#btns}}\\n            <div class=\"ax-toast-buttons\">\\n                <div class=\"ax-button-wrap\">\\n                    {{#@each}}\\n                    <button type=\"button\" data-ax-toast-btn=\"{{@key}}\" class=\"btn btn-{{@value.theme}}\">{{{@value.label}}}</button>\\n                    {{/@each}}\\n                </div>\\n            </div>\\n            {{/btns}}\\n            {{^btns}}\\n                <a class=\"ax-toast-close\" data-ax-toast-btn=\"ok\">{{{closeIcon}}}</a>\\n            {{/btns}}\\n            <div style=\"clear:both;\"></div>\\n        </div>';\n    };\n\n    TOAST.tmpl = {\n        \"toastDisplay\": toastDisplay,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(TOAST.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n/*\n * Copyright (c) 2016. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n// ax5.ui.modal\n(function () {\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MODAL = void 0;\n\n    UI.addClass({\n        className: \"modal\"\n    }, function () {\n        /**\n         * @class ax5modal\n         * @alias ax5.ui.modal\n         * @author tom@axisj.com\n         */\n        return function () {\n            var self = this,\n                cfg = void 0,\n                ENM = {\n                mousedown: \"mousedown\",\n                mousemove: \"mousemove\",\n                mouseup: \"mouseup\"\n            },\n                getMousePosition = function getMousePosition(e) {\n                var mouseObj = e;\n                if (\"changedTouches\" in e && e.changedTouches) {\n                    mouseObj = e.changedTouches[0];\n                }\n                return {\n                    clientX: mouseObj.clientX,\n                    clientY: mouseObj.clientY\n                };\n            };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                id: \"ax5-modal-\" + this.instanceId,\n                position: {\n                    left: \"center\",\n                    top: \"middle\",\n                    margin: 10\n                },\n                minimizePosition: \"bottom-right\",\n                clickEventName: \"ontouchstart\" in document.documentElement ? \"touchstart\" : \"click\",\n                theme: \"default\",\n                width: 300,\n                height: 400,\n                closeToEsc: true,\n                disableDrag: false,\n                disableResize: false,\n                animateTime: 250,\n                iframe: false\n            };\n            this.activeModal = null;\n            this.watingModal = false;\n            this.$ = {}; // UI inside of the jQuery object store\n\n            cfg = this.config; // extended config copy cfg\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                var eventProcessor = {\n                    resize: function resize(that) {\n                        if (opts && opts.onResize) {\n                            opts.onResize.call(that, that);\n                        } else if (this.onResize) {\n                            this.onResize.call(that, that);\n                        }\n                    },\n                    move: function move() {}\n                };\n                if (that.state in eventProcessor) {\n                    eventProcessor[that.state].call(this, that);\n                }\n\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n                return true;\n            },\n                getContent = function getContent(modalId, opts) {\n                var data = {\n                    modalId: modalId,\n                    theme: opts.theme,\n                    header: opts.header,\n                    fullScreen: opts.fullScreen ? \"fullscreen\" : \"\",\n                    styles: \"\",\n                    iframe: opts.iframe,\n                    iframeLoadingMsg: opts.iframeLoadingMsg,\n                    disableResize: opts.disableResize\n                };\n\n                if (opts.zIndex) {\n                    data.styles += \"z-index:\" + opts.zIndex + \";\";\n                }\n                if (opts.absolute) {\n                    data.styles += \"position:absolute;\";\n                }\n\n                if (data.iframe && typeof data.iframe.param === \"string\") {\n                    data.iframe.param = ax5.util.param(data.iframe.param);\n                }\n\n                return MODAL.tmpl.get.call(this, \"content\", data, {});\n            },\n                open = function open(opts, callback) {\n                var that = void 0;\n                jQuery(document.body).append(getContent.call(this, opts.id, opts));\n\n                this.activeModal = jQuery(\"#\" + opts.id);\n                // 파트수집\n                this.$ = {\n                    root: this.activeModal,\n                    header: this.activeModal.find('[data-modal-els=\"header\"]'),\n                    body: this.activeModal.find('[data-modal-els=\"body\"]')\n                };\n\n                if (opts.iframe) {\n                    this.$[\"iframe-wrap\"] = this.activeModal.find('[data-modal-els=\"iframe-wrap\"]');\n                    this.$[\"iframe\"] = this.activeModal.find('[data-modal-els=\"iframe\"]');\n                    this.$[\"iframe-form\"] = this.activeModal.find('[data-modal-els=\"iframe-form\"]');\n                    this.$[\"iframe-loading\"] = this.activeModal.find('[data-modal-els=\"iframe-loading\"]');\n                } else {\n                    this.$[\"body-frame\"] = this.activeModal.find('[data-modal-els=\"body-frame\"]');\n                }\n\n                //- position 정렬\n                this.align();\n\n                that = {\n                    self: this,\n                    id: opts.id,\n                    theme: opts.theme,\n                    width: opts.width,\n                    height: opts.height,\n                    state: \"open\",\n                    $: this.$\n                };\n\n                if (opts.iframe) {\n                    this.$[\"iframe-wrap\"].css({ height: opts.height });\n                    this.$[\"iframe\"].css({ height: opts.height });\n\n                    // iframe content load\n                    this.$[\"iframe-form\"].attr({ method: opts.iframe.method });\n                    this.$[\"iframe-form\"].attr({ target: opts.id + \"-frame\" });\n                    this.$[\"iframe-form\"].attr({ action: opts.iframe.url });\n                    this.$[\"iframe\"].on(\"load\", function () {\n                        that.state = \"load\";\n                        if (opts.iframeLoadingMsg) {\n                            this.$[\"iframe-loading\"].hide();\n                        }\n                        onStateChanged.call(this, opts, that);\n                    }.bind(this));\n                    if (!opts.iframeLoadingMsg) {\n                        this.$[\"iframe\"].show();\n                    }\n                    this.$[\"iframe-form\"].submit();\n                }\n\n                if (callback) callback.call(that, that);\n\n                if (!this.watingModal) {\n                    onStateChanged.call(this, opts, that);\n                }\n\n                // bind key event\n                if (opts.closeToEsc) {\n                    jQuery(window).bind(\"keydown.ax-modal\", function (e) {\n                        onkeyup.call(this, e || window.event);\n                    }.bind(this));\n                }\n\n                jQuery(window).bind(\"resize.ax-modal\", function (e) {\n                    this.align(null, e || window.event);\n                }.bind(this));\n\n                this.$.header.off(ENM[\"mousedown\"]).off(\"dragstart\").on(ENM[\"mousedown\"], function (e) {\n                    /// 이벤트 필터링 추가 : 버튼엘리먼트로 부터 발생된 이벤트이면 moveModal 시작하지 않도록 필터링\n                    var isButton = U.findParentNode(e.target, function (_target) {\n                        if (_target.getAttribute(\"data-modal-header-btn\")) {\n                            return true;\n                        }\n                    });\n\n                    if (!opts.isFullScreen && !isButton && opts.disableDrag != true) {\n                        self.mousePosition = getMousePosition(e);\n                        moveModal.on.call(self);\n                    }\n                    if (isButton) {\n                        btnOnClick.call(self, e || window.event, opts);\n                    }\n                }).on(\"dragstart\", function (e) {\n                    U.stopEvent(e.originalEvent);\n                    return false;\n                });\n\n                this.activeModal.off(ENM[\"mousedown\"]).off(\"dragstart\").on(ENM[\"mousedown\"], \"[data-ax5modal-resizer]\", function (e) {\n                    if (opts.disableDrag || opts.isFullScreen) return false;\n                    self.mousePosition = getMousePosition(e);\n                    resizeModal.on.call(self, this.getAttribute(\"data-ax5modal-resizer\"));\n                }).on(\"dragstart\", function (e) {\n                    U.stopEvent(e.originalEvent);\n                    return false;\n                });\n            },\n                btnOnClick = function btnOnClick(e, opts, callback, target, k) {\n                var that = void 0;\n                if (e.srcElement) e.target = e.srcElement;\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-modal-header-btn\")) {\n                        return true;\n                    }\n                });\n\n                if (target) {\n                    k = target.getAttribute(\"data-modal-header-btn\");\n\n                    that = {\n                        self: this,\n                        key: k,\n                        value: opts.header.btns[k],\n                        dialogId: opts.id,\n                        btnTarget: target\n                    };\n\n                    if (opts.header.btns[k].onClick) {\n                        opts.header.btns[k].onClick.call(that, k);\n                    }\n                }\n\n                that = null;\n                opts = null;\n                callback = null;\n                target = null;\n                k = null;\n            },\n                onkeyup = function onkeyup(e) {\n                if (e.keyCode == ax5.info.eventKeys.ESC) {\n                    this.close();\n                }\n            },\n                alignProcessor = {\n                \"top-left\": function topLeft() {\n                    this.align({ left: \"left\", top: \"top\" });\n                },\n                \"top-right\": function topRight() {\n                    this.align({ left: \"right\", top: \"top\" });\n                },\n                \"bottom-left\": function bottomLeft() {\n                    this.align({ left: \"left\", top: \"bottom\" });\n                },\n                \"bottom-right\": function bottomRight() {\n                    this.align({ left: \"right\", top: \"bottom\" });\n                },\n                \"center-middle\": function centerMiddle() {\n                    this.align({ left: \"center\", top: \"middle\" });\n                }\n            },\n                moveModal = {\n                on: function on() {\n                    var modalZIndex = this.activeModal.css(\"z-index\"),\n                        modalOffset = this.activeModal.offset(),\n                        modalBox = {\n                        width: this.activeModal.outerWidth(),\n                        height: this.activeModal.outerHeight()\n                    },\n                        windowBox = {\n                        width: jQuery(window).width(),\n                        height: jQuery(window).height(),\n                        scrollLeft: jQuery(document).scrollLeft(),\n                        scrollTop: jQuery(document).scrollTop()\n                    },\n                        getResizerPosition = function getResizerPosition(e) {\n                        self.__dx = e.clientX - self.mousePosition.clientX;\n                        self.__dy = e.clientY - self.mousePosition.clientY;\n\n                        /*\n                        if (minX > modalOffset.left + self.__dx) {\n                          self.__dx = -modalOffset.left;\n                        } else if (maxX < modalOffset.left + self.__dx) {\n                          self.__dx = maxX - modalOffset.left;\n                        }\n                         if (minY > modalOffset.top + self.__dy) {\n                          self.__dy = -modalOffset.top;\n                        } else if (maxY < modalOffset.top + self.__dy) {\n                          self.__dy = maxY - modalOffset.top;\n                        }\n                          */\n\n                        return {\n                            left: modalOffset.left + self.__dx,\n                            top: modalOffset.top + self.__dy\n                        };\n                    };\n\n                    var minX = 0,\n                        maxX = windowBox.width - modalBox.width,\n                        minY = 0,\n                        maxY = windowBox.height - modalBox.height;\n\n                    self.__dx = 0; // 변화량 X\n                    self.__dy = 0; // 변화량 Y\n\n                    // self.resizerBg : body 가 window보다 작을 때 문제 해결을 위한 DIV\n                    self.resizerBg = jQuery('<div class=\"ax5modal-resizer-background\" ondragstart=\"return false;\"></div>');\n                    self.resizer = jQuery('<div class=\"ax5modal-resizer\" ondragstart=\"return false;\"></div>');\n                    self.resizerBg.css({ zIndex: modalZIndex });\n                    self.resizer.css({\n                        left: modalOffset.left,\n                        top: modalOffset.top,\n                        width: modalBox.width,\n                        height: modalBox.height,\n                        zIndex: modalZIndex + 1\n                    });\n\n                    jQuery(document.body).append(self.resizerBg).append(self.resizer);\n\n                    self.activeModal.addClass(\"draged\");\n\n                    jQuery(document.body).on(ENM[\"mousemove\"] + \".ax5modal-move-\" + this.instanceId, function (e) {\n                        self.resizer.css(getResizerPosition(e));\n                    }).on(ENM[\"mouseup\"] + \".ax5modal-move-\" + this.instanceId, function (e) {\n                        moveModal.off.call(self);\n                    }).on(\"mouseleave.ax5modal-move-\" + this.instanceId, function (e) {\n                        moveModal.off.call(self);\n                    });\n\n                    jQuery(document.body).attr(\"unselectable\", \"on\").css(\"user-select\", \"none\").on(\"selectstart\", false);\n                },\n                off: function off() {\n                    var setModalPosition = function setModalPosition() {\n                        var box = this.resizer.offset();\n                        if (!this.modalConfig.absolute) {\n                            box.left -= jQuery(document).scrollLeft();\n                            box.top -= jQuery(document).scrollTop();\n                        }\n                        this.activeModal.css(box);\n                        this.modalConfig.left = box.left;\n                        this.modalConfig.top = box.top;\n\n                        box = null;\n                    };\n\n                    this.activeModal.removeClass(\"draged\");\n                    setModalPosition.call(this);\n\n                    this.resizer.remove();\n                    this.resizer = null;\n                    this.resizerBg.remove();\n                    this.resizerBg = null;\n                    //this.align();\n\n                    jQuery(document.body).off(ENM[\"mousemove\"] + \".ax5modal-move-\" + this.instanceId).off(ENM[\"mouseup\"] + \".ax5modal-move-\" + this.instanceId).off(\"mouseleave.ax5modal-move-\" + this.instanceId);\n\n                    jQuery(document.body).removeAttr(\"unselectable\").css(\"user-select\", \"auto\").off(\"selectstart\");\n\n                    onStateChanged.call(this, self.modalConfig, {\n                        self: this,\n                        state: \"move\"\n                    });\n                }\n            },\n                resizeModal = {\n                on: function on(resizerType) {\n                    var modalZIndex = this.activeModal.css(\"z-index\"),\n                        modalOffset = this.activeModal.offset(),\n                        modalBox = {\n                        width: this.activeModal.outerWidth(),\n                        height: this.activeModal.outerHeight()\n                    },\n                        windowBox = {\n                        width: jQuery(window).width(),\n                        height: jQuery(window).height(),\n                        scrollLeft: jQuery(document).scrollLeft(),\n                        scrollTop: jQuery(document).scrollTop()\n                    },\n                        resizerProcessor = {\n                        top: function top(e) {\n                            if (minHeight > modalBox.height - self.__dy) {\n                                self.__dy = modalBox.height - minHeight;\n                            }\n\n                            if (e.shiftKey) {\n                                if (minHeight > modalBox.height - self.__dy * 2) {\n                                    self.__dy = (modalBox.height - minHeight) / 2;\n                                }\n\n                                return {\n                                    left: modalOffset.left,\n                                    top: modalOffset.top + self.__dy,\n                                    width: modalBox.width,\n                                    height: modalBox.height - self.__dy * 2\n                                };\n                            } else if (e.altKey) {\n                                if (minHeight > modalBox.height - self.__dy * 2) {\n                                    self.__dy = (modalBox.height - minHeight) / 2;\n                                }\n\n                                return {\n                                    left: modalOffset.left + self.__dy,\n                                    top: modalOffset.top + self.__dy,\n                                    width: modalBox.width - self.__dy * 2,\n                                    height: modalBox.height - self.__dy * 2\n                                };\n                            } else {\n                                return {\n                                    left: modalOffset.left,\n                                    top: modalOffset.top + self.__dy,\n                                    width: modalBox.width,\n                                    height: modalBox.height - self.__dy\n                                };\n                            }\n                        },\n                        bottom: function bottom(e) {\n                            if (minHeight > modalBox.height + self.__dy) {\n                                self.__dy = -modalBox.height + minHeight;\n                            }\n\n                            if (e.shiftKey) {\n                                if (minHeight > modalBox.height + self.__dy * 2) {\n                                    self.__dy = (-modalBox.height + minHeight) / 2;\n                                }\n\n                                return {\n                                    left: modalOffset.left,\n                                    top: modalOffset.top - self.__dy,\n                                    width: modalBox.width,\n                                    height: modalBox.height + self.__dy * 2\n                                };\n                            } else if (e.altKey) {\n                                if (minHeight > modalBox.height + self.__dy * 2) {\n                                    self.__dy = (-modalBox.height + minHeight) / 2;\n                                }\n\n                                return {\n                                    left: modalOffset.left - self.__dy,\n                                    top: modalOffset.top - self.__dy,\n                                    width: modalBox.width + self.__dy * 2,\n                                    height: modalBox.height + self.__dy * 2\n                                };\n                            } else {\n                                return {\n                                    left: modalOffset.left,\n                                    top: modalOffset.top,\n                                    width: modalBox.width,\n                                    height: modalBox.height + self.__dy\n                                };\n                            }\n                        },\n                        left: function left(e) {\n                            if (minWidth > modalBox.width - self.__dx) {\n                                self.__dx = modalBox.width - minWidth;\n                            }\n\n                            if (e.shiftKey) {\n                                if (minWidth > modalBox.width - self.__dx * 2) {\n                                    self.__dx = (modalBox.width - minWidth) / 2;\n                                }\n\n                                return {\n                                    left: modalOffset.left + self.__dx,\n                                    top: modalOffset.top,\n                                    width: modalBox.width - self.__dx * 2,\n                                    height: modalBox.height\n                                };\n                            } else if (e.altKey) {\n                                if (minWidth > modalBox.width - self.__dx * 2) {\n                                    self.__dx = (modalBox.width - minWidth) / 2;\n                                }\n\n                                return {\n                                    left: modalOffset.left + self.__dx,\n                                    top: modalOffset.top + self.__dx,\n                                    width: modalBox.width - self.__dx * 2,\n                                    height: modalBox.height - self.__dx * 2\n                                };\n                            } else {\n                                return {\n                                    left: modalOffset.left + self.__dx,\n                                    top: modalOffset.top,\n                                    width: modalBox.width - self.__dx,\n                                    height: modalBox.height\n                                };\n                            }\n                        },\n                        right: function right(e) {\n                            if (minWidth > modalBox.width + self.__dx) {\n                                self.__dx = -modalBox.width + minWidth;\n                            }\n\n                            if (e.shiftKey) {\n                                if (minWidth > modalBox.width + self.__dx * 2) {\n                                    self.__dx = (-modalBox.width + minWidth) / 2;\n                                }\n\n                                return {\n                                    left: modalOffset.left - self.__dx,\n                                    top: modalOffset.top,\n                                    width: modalBox.width + self.__dx * 2,\n                                    height: modalBox.height\n                                };\n                            } else if (e.altKey) {\n                                if (minWidth > modalBox.width + self.__dx * 2) {\n                                    self.__dx = (-modalBox.width + minWidth) / 2;\n                                }\n\n                                return {\n                                    left: modalOffset.left - self.__dx,\n                                    top: modalOffset.top - self.__dx,\n                                    width: modalBox.width + self.__dx * 2,\n                                    height: modalBox.height + self.__dx * 2\n                                };\n                            } else {\n                                return {\n                                    left: modalOffset.left,\n                                    top: modalOffset.top,\n                                    width: modalBox.width + self.__dx,\n                                    height: modalBox.height\n                                };\n                            }\n                        },\n                        \"top-left\": function topLeft(e) {\n                            if (minWidth > modalBox.width - self.__dx) {\n                                self.__dx = modalBox.width - minWidth;\n                            }\n\n                            if (minHeight > modalBox.height - self.__dy) {\n                                self.__dy = modalBox.height - minHeight;\n                            }\n\n                            if (e.shiftKey || e.altKey) {\n                                if (minHeight > modalBox.height - self.__dy * 2) {\n                                    self.__dy = (modalBox.height - minHeight) / 2;\n                                }\n                                if (minWidth > modalBox.width - self.__dx * 2) {\n                                    self.__dx = (modalBox.width - minWidth) / 2;\n                                }\n\n                                return {\n                                    left: modalOffset.left + self.__dx,\n                                    top: modalOffset.top + self.__dy,\n                                    width: modalBox.width - self.__dx * 2,\n                                    height: modalBox.height - self.__dy * 2\n                                };\n                            } else {\n                                if (minHeight > modalBox.height - self.__dy * 2) {\n                                    self.__dy = (modalBox.height - minHeight) / 2;\n                                }\n                                if (minWidth > modalBox.width - self.__dx * 2) {\n                                    self.__dx = (modalBox.width - minWidth) / 2;\n                                }\n\n                                return {\n                                    left: modalOffset.left + self.__dx,\n                                    top: modalOffset.top + self.__dy,\n                                    width: modalBox.width - self.__dx,\n                                    height: modalBox.height - self.__dy\n                                };\n                            }\n                        },\n                        \"top-right\": function topRight(e) {\n                            if (minWidth > modalBox.width + self.__dx) {\n                                self.__dx = -modalBox.width + minWidth;\n                            }\n\n                            if (minHeight > modalBox.height - self.__dy) {\n                                self.__dy = modalBox.height - minHeight;\n                            }\n\n                            if (e.shiftKey || e.altKey) {\n                                if (minHeight > modalBox.height - self.__dy * 2) {\n                                    self.__dy = (modalBox.height - minHeight) / 2;\n                                }\n                                if (minWidth > modalBox.width + self.__dx * 2) {\n                                    self.__dx = (-modalBox.width + minWidth) / 2;\n                                }\n\n                                return {\n                                    left: modalOffset.left - self.__dx,\n                                    top: modalOffset.top + self.__dy,\n                                    width: modalBox.width + self.__dx * 2,\n                                    height: modalBox.height - self.__dy * 2\n                                };\n                            } else {\n                                return {\n                                    left: modalOffset.left,\n                                    top: modalOffset.top + self.__dy,\n                                    width: modalBox.width + self.__dx,\n                                    height: modalBox.height - self.__dy\n                                };\n                            }\n                        },\n                        \"bottom-left\": function bottomLeft(e) {\n                            if (minWidth > modalBox.width - self.__dx) {\n                                self.__dx = modalBox.width - minWidth;\n                            }\n\n                            if (minHeight > modalBox.height + self.__dy) {\n                                self.__dy = -modalBox.height + minHeight;\n                            }\n\n                            if (e.shiftKey || e.altKey) {\n                                if (minWidth > modalBox.width - self.__dx * 2) {\n                                    self.__dx = (modalBox.width - minWidth) / 2;\n                                }\n                                if (minHeight > modalBox.height + self.__dy * 2) {\n                                    self.__dy = (-modalBox.height + minHeight) / 2;\n                                }\n                                return {\n                                    left: modalOffset.left + self.__dx,\n                                    top: modalOffset.top - self.__dy,\n                                    width: modalBox.width - self.__dx * 2,\n                                    height: modalBox.height + self.__dy * 2\n                                };\n                            } else {\n                                return {\n                                    left: modalOffset.left + self.__dx,\n                                    top: modalOffset.top,\n                                    width: modalBox.width - self.__dx,\n                                    height: modalBox.height + self.__dy\n                                };\n                            }\n                        },\n                        \"bottom-right\": function bottomRight(e) {\n                            if (minWidth > modalBox.width + self.__dx) {\n                                self.__dx = -modalBox.width + minWidth;\n                            }\n\n                            if (minHeight > modalBox.height + self.__dy) {\n                                self.__dy = -modalBox.height + minHeight;\n                            }\n\n                            if (e.shiftKey || e.altKey) {\n                                if (minWidth > modalBox.width + self.__dx * 2) {\n                                    self.__dx = (-modalBox.width + minWidth) / 2;\n                                }\n                                if (minHeight > modalBox.height + self.__dy * 2) {\n                                    self.__dy = (-modalBox.height + minHeight) / 2;\n                                }\n                                return {\n                                    left: modalOffset.left - self.__dx,\n                                    top: modalOffset.top - self.__dy,\n                                    width: modalBox.width + self.__dx * 2,\n                                    height: modalBox.height + self.__dy * 2\n                                };\n                            } else {\n                                return {\n                                    left: modalOffset.left,\n                                    top: modalOffset.top,\n                                    width: modalBox.width + self.__dx,\n                                    height: modalBox.height + self.__dy\n                                };\n                            }\n                        }\n                    },\n                        getResizerPosition = function getResizerPosition(e) {\n                        self.__dx = e.clientX - self.mousePosition.clientX;\n                        self.__dy = e.clientY - self.mousePosition.clientY;\n\n                        return resizerProcessor[resizerType](e);\n                    };\n\n                    var minWidth = 100,\n                        minHeight = 100;\n\n                    var cursorType = {\n                        top: \"row-resize\",\n                        bottom: \"row-resize\",\n                        left: \"col-resize\",\n                        right: \"col-resize\",\n                        \"top-left\": \"nwse-resize\",\n                        \"top-right\": \"nesw-resize\",\n                        \"bottom-left\": \"nesw-resize\",\n                        \"bottom-right\": \"nwse-resize\"\n                    };\n\n                    self.__dx = 0; // 변화량 X\n                    self.__dy = 0; // 변화량 Y\n\n                    // self.resizerBg : body 가 window보다 작을 때 문제 해결을 위한 DIV\n                    self.resizerBg = jQuery('<div class=\"ax5modal-resizer-background\" ondragstart=\"return false;\"></div>');\n                    self.resizer = jQuery('<div class=\"ax5modal-resizer\" ondragstart=\"return false;\"></div>');\n                    self.resizerBg.css({\n                        zIndex: modalZIndex,\n                        cursor: cursorType[resizerType]\n                    });\n                    self.resizer.css({\n                        left: modalOffset.left,\n                        top: modalOffset.top,\n                        width: modalBox.width,\n                        height: modalBox.height,\n                        zIndex: modalZIndex + 1,\n                        cursor: cursorType[resizerType]\n                    });\n                    jQuery(document.body).append(self.resizerBg).append(self.resizer);\n                    self.activeModal.addClass(\"draged\");\n\n                    jQuery(document.body).bind(ENM[\"mousemove\"] + \".ax5modal-resize-\" + this.instanceId, function (e) {\n                        self.resizer.css(getResizerPosition(e));\n                    }).bind(ENM[\"mouseup\"] + \".ax5modal-resize-\" + this.instanceId, function (e) {\n                        resizeModal.off.call(self);\n                    }).bind(\"mouseleave.ax5modal-resize-\" + this.instanceId, function (e) {\n                        resizeModal.off.call(self);\n                    });\n\n                    jQuery(document.body).attr(\"unselectable\", \"on\").css(\"user-select\", \"none\").bind(\"selectstart\", false);\n                },\n                off: function off() {\n                    var setModalPosition = function setModalPosition() {\n                        var box = this.resizer.offset();\n                        jQuery.extend(box, {\n                            width: this.resizer.width(),\n                            height: this.resizer.height()\n                        });\n                        if (!this.modalConfig.absolute) {\n                            box.left -= jQuery(document).scrollLeft();\n                            box.top -= jQuery(document).scrollTop();\n                        }\n                        this.activeModal.css(box);\n\n                        this.modalConfig.left = box.left;\n                        this.modalConfig.top = box.top;\n                        this.modalConfig.width = box.width;\n                        this.modalConfig.height = box.height;\n                        this.$[\"body\"].css({\n                            height: box.height - this.modalConfig.headerHeight\n                        });\n                        if (this.modalConfig.iframe) {\n                            this.$[\"iframe-wrap\"].css({\n                                height: box.height - this.modalConfig.headerHeight\n                            });\n                            this.$[\"iframe\"].css({\n                                height: box.height - this.modalConfig.headerHeight\n                            });\n                        }\n\n                        box = null;\n                    };\n\n                    this.activeModal.removeClass(\"draged\");\n                    setModalPosition.call(this);\n\n                    this.resizer.remove();\n                    this.resizer = null;\n                    this.resizerBg.remove();\n                    this.resizerBg = null;\n\n                    onStateChanged.call(this, self.modalConfig, {\n                        self: this,\n                        state: \"resize\"\n                    });\n\n                    jQuery(document.body).unbind(ENM[\"mousemove\"] + \".ax5modal-resize-\" + this.instanceId).unbind(ENM[\"mouseup\"] + \".ax5modal-resize-\" + this.instanceId).unbind(\"mouseleave.ax5modal-resize-\" + this.instanceId);\n\n                    jQuery(document.body).removeAttr(\"unselectable\").css(\"user-select\", \"auto\").unbind(\"selectstart\");\n                }\n            };\n\n            /// private end\n\n            /**\n             * Preferences of modal UI\n             * @method ax5modal.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Number} [config.zIndex]\n             * @param {Object} [config.position]\n             * @param {String} [config.position.left=\"center\"]\n             * @param {String} [config.position.top=\"middle\"]\n             * @param {Number} [config.position.margin=10]\n             * @param {String} [config.minimizePosition=\"bottom-right\"]\n             * @param {Number} [config.width=300]\n             * @param {Number} [config.height=400]\n             * @param {Boolean} [config.closeToEsc=true]\n             * @param {Boolean} [config.absolute=false]\n             * @param {Boolean} [config.disableDrag=false]\n             * @param {Boolean} [config.disableResize=false]\n             * @param {Number} [config.animateTime=250]\n             * @param {Function} [config.fullScreen]\n             * @param {Function} [config.onStateChanged] - `onStateChanged` function can be defined in setConfig method or new ax5.ui.modal initialization method. However, you can us to define an event function after initialization, if necessary\n             * @param {Function} [config.onResize]\n             * @returns {ax5modal}\n             * @example\n             * ```js\n             * var modal = new ax5.ui.modal({\n             *     iframeLoadingMsg: '<i class=\"fa fa-spinner fa-5x fa-spin\" aria-hidden=\"true\"></i>',\n             *     header: {\n             *         title: \"MODAL TITLE\",\n             *         btns: {\n             *             minimize: {\n             *                 label: '<i class=\"fa fa-minus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n             *                     modal.minimize();\n             *                 }\n             *             },\n             *             maximize: {\n             *                 label: '<i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n             *                     modal.maximize();\n             *                 }\n             *             },\n             *             close: {\n             *                 label: '<i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n             *                     modal.close();\n             *                 }\n             *             }\n             *         }\n             *     }\n             * });\n             *\n             * modal.open({\n             *     width: 800,\n             *     height: 600,\n             *     fullScreen: function(){\n             *         return ($(window).width() < 600);\n             *     },\n             *     iframe: {\n             *         method: \"get\",\n             *         url: \"http://chequer-app:2017/html/login.html\",\n             *         param: \"callback=modalCallback\"\n             *     },\n             *     onStateChanged: function(){\n             *          console.log(this);\n             *     },\n             *     onResize: function(){\n             *          console.log(this);\n             *     }\n             * });\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onResize = cfg.onResize;\n            };\n\n            /**\n             * open the modal\n             * @method ax5modal.open\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * modal.open();\n             * modal.open({\n             *  width: 500,\n             *  height: 500\n             * });\n             * moaal.open({}, function(){\n             *  console.log(this);\n             * });\n             * ```\n             */\n            this.open = function (opts, callback, tryCount) {\n                if (typeof tryCount === \"undefined\") tryCount = 0;\n                if (!this.activeModal) {\n                    opts = self.modalConfig = jQuery.extend(true, {}, cfg, opts);\n                    open.call(this, opts, callback);\n                    this.watingModal = false;\n                } else if (tryCount < 3) {\n                    // 3번까지 재 시도\n                    this.watingModal = true;\n                    setTimeout(function () {\n                        this.open(opts, callback, tryCount + 1);\n                    }.bind(this), cfg.animateTime);\n                } else {\n                    // 열기 시도 종료\n                    this.watingModal = false;\n                }\n                return this;\n            };\n\n            /**\n             * close the modal\n             * @method ax5modal.close\n             * @param _option\n             * @returns {ax5modal}\n             * @example\n             * ```\n             * my_modal.close();\n             * my_modal.close({callback: function(){\n             *  // on close event\n             * });\n             * // close 함수에 callback을 전달하면 정확한 close 타이밍을 캐치할 수 있습니다\n             * ```\n             */\n\n            this.close = function (_option) {\n                var opts = void 0,\n                    that = void 0;\n\n                if (this.activeModal) {\n                    opts = self.modalConfig;\n                    this.activeModal.addClass(\"destroy\");\n                    jQuery(window).unbind(\"keydown.ax-modal\");\n                    jQuery(window).unbind(\"resize.ax-modal\");\n\n                    setTimeout(function () {\n                        // 프레임 제거\n                        if (opts.iframe) {\n                            var $iframe = this.$[\"iframe\"]; // iframe jQuery Object\n                            if ($iframe) {\n                                var iframeObject = $iframe.get(0),\n                                    idoc = iframeObject.contentDocument ? iframeObject.contentDocument : iframeObject.contentWindow.document;\n\n                                try {\n                                    $(idoc.body).children().each(function () {\n                                        $(this).remove();\n                                    });\n                                } catch (e) {}\n                                idoc.innerHTML = \"\";\n                                $iframe.attr(\"src\", \"about:blank\").remove();\n\n                                // force garbarge collection for IE only\n                                window.CollectGarbage && window.CollectGarbage();\n                            }\n                        }\n\n                        this.activeModal.remove();\n                        this.activeModal = null;\n\n                        // 모달 오픈 대기중이면 닫기 상태 전달 안함.\n                        if (!this.watingModal) {\n                            onStateChanged.call(this, opts, {\n                                self: this,\n                                state: \"close\"\n                            });\n                        }\n\n                        if (_option && U.isFunction(_option.callback)) {\n                            that = {\n                                self: this,\n                                id: opts.id,\n                                theme: opts.theme,\n                                width: opts.width,\n                                height: opts.height,\n                                state: \"close\",\n                                $: this.$\n                            };\n                            _option.callback.call(that, that);\n                        }\n                    }.bind(this), cfg.animateTime);\n                }\n\n                this.minimized = false; // hoksi\n\n                return this;\n            };\n\n            /**\n             * @method ax5modal.minimize\n             * @returns {ax5modal}\n             */\n            this.minimize = function () {\n                return function (minimizePosition) {\n                    if (this.minimized !== true) {\n                        var opts = self.modalConfig;\n                        if (typeof minimizePosition === \"undefined\") minimizePosition = cfg.minimizePosition;\n\n                        this.minimized = true;\n                        this.$.body.hide();\n                        self.modalConfig.originalHeight = opts.height;\n                        self.modalConfig.height = 0;\n                        alignProcessor[minimizePosition].call(this);\n\n                        onStateChanged.call(this, opts, {\n                            self: this,\n                            state: \"minimize\"\n                        });\n                    }\n\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5modal.restore\n             * @returns {ax5modal}\n             */\n            this.restore = function () {\n                var opts = self.modalConfig;\n                if (this.minimized) {\n                    this.minimized = false;\n                    this.$.body.show();\n                    self.modalConfig.height = self.modalConfig.originalHeight;\n                    self.modalConfig.originalHeight = undefined;\n\n                    this.align({ left: \"center\", top: \"middle\" });\n                    onStateChanged.call(this, opts, {\n                        self: this,\n                        state: \"restore\"\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * setCSS\n             * @method ax5modal.css\n             * @param {Object} css -\n             * @returns {ax5modal}\n             */\n            this.css = function (css) {\n                if (this.activeModal && !self.fullScreen) {\n                    this.activeModal.css(css);\n                    if (typeof css.width !== \"undefined\") {\n                        self.modalConfig.width = css.width;\n                    }\n                    if (typeof css.height !== \"undefined\") {\n                        self.modalConfig.height = css.height;\n                    }\n\n                    this.align();\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5modal.setModalConfig\n             * @param _config\n             * @returns {ax5.ui.ax5modal}\n             */\n            this.setModalConfig = function (_config) {\n                self.modalConfig = jQuery.extend({}, self.modalConfig, _config);\n                this.align();\n                return this;\n            };\n\n            /**\n             * @method ax5modal.align\n             * @param position\n             * @param e\n             * @returns {ax5modal}\n             * @example\n             * ```js\n             * modal.align({left:\"center\", top:\"middle\"});\n             * modal.align({left:\"left\", top:\"top\", margin: 20});\n             * ```\n             */\n            this.align = function () {\n                return function (position, e) {\n                    if (!this.activeModal) return this;\n\n                    var opts = self.modalConfig,\n                        box = {\n                        width: opts.width,\n                        height: opts.height\n                    };\n\n                    var fullScreen = opts.isFullScreen = function (_fullScreen) {\n                        if (typeof _fullScreen === \"undefined\") {\n                            return false;\n                        } else if (U.isFunction(_fullScreen)) {\n                            return _fullScreen();\n                        }\n                    }(opts.fullScreen);\n\n                    if (fullScreen) {\n                        if (opts.header) this.$.header.show();\n                        if (opts.header) {\n                            opts.headerHeight = this.$.header.outerHeight();\n                            box.height += opts.headerHeight;\n                        } else {\n                            opts.headerHeight = 0;\n                        }\n                        box.width = jQuery(window).width();\n                        box.height = opts.height;\n                        box.left = 0;\n                        box.top = 0;\n                    } else {\n                        if (opts.header) this.$.header.show();\n                        if (position) {\n                            jQuery.extend(true, opts.position, position);\n                        }\n\n                        if (opts.header) {\n                            opts.headerHeight = this.$.header.outerHeight();\n                            box.height += opts.headerHeight;\n                        } else {\n                            opts.headerHeight = 0;\n                        }\n\n                        //- position 정렬\n                        if (opts.position.left == \"left\") {\n                            box.left = opts.position.margin || 0;\n                        } else if (opts.position.left == \"right\") {\n                            // window.innerWidth;\n                            box.left = jQuery(window).width() - box.width - (opts.position.margin || 0);\n                        } else if (opts.position.left == \"center\") {\n                            box.left = jQuery(window).width() / 2 - box.width / 2;\n                        } else {\n                            box.left = opts.position.left || 0;\n                        }\n\n                        if (opts.position.top == \"top\") {\n                            box.top = opts.position.margin || 0;\n                        } else if (opts.position.top == \"bottom\") {\n                            box.top = jQuery(window).height() - box.height - (opts.position.margin || 0);\n                        } else if (opts.position.top == \"middle\") {\n                            box.top = jQuery(window).height() / 2 - box.height / 2;\n                        } else {\n                            box.top = opts.position.top || 0;\n                        }\n                        if (box.left < 0) box.left = 0;\n                        if (box.top < 0) box.top = 0;\n\n                        if (opts.absolute) {\n                            box.top += jQuery(window).scrollTop();\n                            box.left += jQuery(window).scrollLeft();\n                        }\n                    }\n\n                    this.activeModal.css(box);\n\n                    this.$[\"body\"].css({\n                        height: box.height - (opts.headerHeight || 0)\n                    });\n\n                    if (opts.iframe) {\n                        this.$[\"iframe-wrap\"].css({\n                            height: box.height - opts.headerHeight\n                        });\n                        this.$[\"iframe\"].css({ height: box.height - opts.headerHeight });\n                    } else {}\n                    return this;\n                };\n            }();\n\n            // 클래스 생성자\n            this.main = function () {\n                UI.modal_instance = UI.modal_instance || [];\n                UI.modal_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n    }());\n\n    MODAL = ax5.ui.modal;\n})();\n\n// ax5.ui.modal.tmpl\n(function () {\n    var MODAL = ax5.ui.modal;\n\n    var content = function content() {\n        return ' \\n        <div id=\"{{modalId}}\" data-modal-els=\"root\" class=\"ax5modal {{theme}} {{fullscreen}}\" style=\"{{styles}}\">\\n            {{#header}}\\n            <div class=\"ax-modal-header\" data-modal-els=\"header\">\\n                {{{title}}}\\n                {{#btns}}\\n                    <div class=\"ax-modal-header-addon\">\\n                    {{#@each}}\\n                    <button tabindex=\"-1\" data-modal-header-btn=\"{{@key}}\" class=\"{{@value.theme}}\">{{{@value.label}}}</button>\\n                    {{/@each}}\\n                    </div>\\n                {{/btns}}\\n            </div>\\n            {{/header}}\\n            <div class=\"ax-modal-body\" data-modal-els=\"body\">\\n            {{#iframe}}\\n                <div data-modal-els=\"iframe-wrap\" style=\"-webkit-overflow-scrolling: touch; overflow: auto;position: relative;\">\\n                    <table data-modal-els=\"iframe-loading\" style=\"width:100%;height:100%;\"><tr><td style=\"text-align: center;vertical-align: middle\">{{{iframeLoadingMsg}}}</td></tr></table>\\n                    <iframe name=\"{{modalId}}-frame\" src=\"\" width=\"100%\" height=\"100%\" frameborder=\"0\" data-modal-els=\"iframe\" style=\"position: absolute;left:0;top:0;\"></iframe>\\n                </div>\\n                <form name=\"{{modalId}}-form\" data-modal-els=\"iframe-form\">\\n                <input type=\"hidden\" name=\"modalId\" value=\"{{modalId}}\" />\\n                {{#param}}\\n                {{#@each}}\\n                <input type=\"hidden\" name=\"{{@key}}\" value=\"{{@value}}\" />\\n                {{/@each}}\\n                {{/param}}\\n                </form>\\n            {{/iframe}}\\n            {{^iframe}}\\n                <div data-modal-els=\"body-frame\" style=\"position: absolute;left:0;top:0;width:100%;height:100%;\"></div>\\n            {{/iframe}}\\n            </div>\\n            {{^disableResize}}\\n            <div data-ax5modal-resizer=\"top\"></div>\\n            <div data-ax5modal-resizer=\"right\"></div>\\n            <div data-ax5modal-resizer=\"bottom\"></div>\\n            <div data-ax5modal-resizer=\"left\"></div>\\n            <div data-ax5modal-resizer=\"top-left\"></div>\\n            <div data-ax5modal-resizer=\"top-right\"></div>\\n            <div data-ax5modal-resizer=\"bottom-left\"></div>\\n            <div data-ax5modal-resizer=\"bottom-right\"></div>\\n            {{/disableResize}}\\n        </div>\\n        ';\n    };\n\n    MODAL.tmpl = {\n        \"content\": content,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(MODAL.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.calendar\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var CALENDAR = void 0;\n\n    UI.addClass({\n        className: \"calendar\"\n    }, function () {\n\n        /**\n         * @class ax5calendar\n         * @classdesc\n         * @author tom@axisj.com\n         * @logs\n         * 2014-06-21 tom : 시작\n         * @example\n         * ```js\n         * ax5.info.months = [\"1월\",\"2월\",\"3월\",\"4월\",\"5월\",\"6월\",\"7월\",\"8월\",\"9월\",\"10월\",\"11월\"];\n         * ax5.info.weekNames = [\n         *     {label: \"일\"},\n         *     {label: \"월\"},\n         *     {label: \"화\"},\n         *     {label: \"수\"},\n         *     {label: \"목\"},\n         *     {label: \"금\"},\n         *     {label: \"토\"}\n         * ];\n         *\n         * var myCalendar = new ax5.ui.calendar({\n         *     control: {\n         *         left: '≪',\n         *         yearTmpl: '%s',\n         *         monthTmpl: '%s',\n         *         right: '≫',\n         *         yearFirst: true\n         *     },\n         *\n         *     dimensions: {\n         *         itemPadding: 1,\n         *         height: 200\n         *     },\n         *\n         *     target: document.getElementById(\"calendar-target\"),\n         *     displayDate: (new Date()),\n         *     mode: \"day\",\n         *     selectMode: \"day\",\n         *\n         *     marker: (function () {\n         *         var marker = {};\n         *         marker[_c_date(today, {'return': 'yyyy-MM-dd', 'add': {d: -1}})] = true;\n         *         marker[_c_date(today, {'return': 'yyyy-MM-dd', 'add': {d: 0}})] = true;\n         *         marker[_c_date(today, {'return': 'yyyy-MM-dd', 'add': {d: 1}})] = true;\n         *\n        *         return marker;\n         *     })(),\n         *     onClick: function () {\n         *         console.log(myCalendar.getSelection());\n         *     },\n         *     onStateChanged: function () {\n         *         console.log(this);\n         *     }\n         *     , multipleSelect: 2\n         * });\n         * ```\n         */\n        return function () {\n            var self = this,\n                cfg = void 0,\n                selectableCount = 1;\n\n            this.instanceId = ax5.getGuid();\n            this.target = null;\n            this.selection = [];\n            this.selectionMap = {};\n            this.selectableMap = {};\n            this.markerMap = {};\n            this.printedDay = {\n                start: \"\", end: \"\"\n            };\n            this.config = {\n                clickEventName: \"click\",\n                theme: 'default',\n                startOfWeek: 0,\n                mode: 'day', // day|month|year,\n                dateFormat: 'yyyy-MM-dd',\n                displayDate: new Date(),\n                animateTime: 100,\n                dimensions: {\n                    controlHeight: '40',\n                    controlButtonWidth: '40',\n                    colHeadHeight: '30',\n                    itemPadding: 2\n                },\n                lang: {\n                    yearHeading: \"Choose the year\",\n                    monthHeading: \"Choose the month\",\n                    yearTmpl: \"%s\",\n                    months: ax5.info.months || ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n                    dayTmpl: \"%s\"\n                },\n                multipleSelect: false,\n                selectMode: 'day',\n                defaultMarkerTheme: 'holiday',\n                defaultPeriodTheme: 'period'\n            };\n\n            cfg = this.config;\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                that = null;\n            };\n            var getFrame = function getFrame() {\n                var data = jQuery.extend(true, {}, cfg, {\n                    controlCSS: {},\n                    controlButtonCSS: {}\n                });\n\n                data.controlButtonCSS[\"height\"] = data.controlCSS[\"height\"] = U.cssNumber(cfg.dimensions.controlHeight);\n                data.controlButtonCSS[\"line-height\"] = data.controlCSS[\"line-height\"] = U.cssNumber(cfg.dimensions.controlHeight);\n                data.controlButtonCSS[\"width\"] = U.cssNumber(cfg.dimensions.controlHeight);\n\n                data.controlCSS = U.css(data.controlCSS);\n                data.controlButtonCSS = U.css(data.controlButtonCSS);\n\n                try {\n                    return CALENDAR.tmpl.get.call(this, \"frameTmpl\", data);\n                } finally {\n                    data = null;\n                }\n            };\n            var setDisplay = function setDisplay() {\n                var myDate = U.date(cfg.displayDate),\n                    yy = \"\",\n                    mm = \"\",\n                    yy1,\n                    yy2;\n\n                if (cfg.control) {\n                    if (cfg.mode == \"day\" || cfg.mode == \"d\") {\n                        yy = cfg.control.yearTmpl ? cfg.control.yearTmpl.replace('%s', myDate.getFullYear()) : myDate.getFullYear();\n                        mm = cfg.control.monthTmpl ? cfg.control.monthTmpl.replace('%s', cfg.lang.months[myDate.getMonth()]) : cfg.lang.months[myDate.getMonth()];\n\n                        this.$[\"control-display\"].html(function () {\n                            if (cfg.control.yearFirst) {\n                                return '<span data-calendar-display=\"year\">' + yy + '</span>' + '<span data-calendar-display=\"month\">' + mm + '</span>';\n                            } else {\n                                return '<span data-calendar-display=\"month\">' + mm + '</span>' + '<span data-calendar-display=\"year\">' + yy + '</span>';\n                            }\n                        }());\n                    } else if (cfg.mode == \"month\" || cfg.mode == \"m\") {\n                        yy = cfg.control.yearTmpl ? cfg.control.yearTmpl.replace('%s', myDate.getFullYear()) : myDate.getFullYear();\n                        this.$[\"control-display\"].html('<span data-calendar-display=\"year\">' + yy + '</span>');\n                    } else if (cfg.mode == \"year\" || cfg.mode == \"y\") {\n                        yy1 = cfg.control.yearTmpl ? cfg.control.yearTmpl.replace('%s', myDate.getFullYear() - 10) : myDate.getFullYear() - 10;\n                        yy2 = cfg.control.yearTmpl ? cfg.control.yearTmpl.replace('%s', Number(myDate.getFullYear()) + 9) : Number(myDate.getFullYear()) + 9;\n                        this.$[\"control-display\"].html(yy1 + ' ~ ' + yy2);\n                    }\n\n                    this.$[\"control-display\"].find('[data-calendar-display]').on(cfg.clickEventName, function (e) {\n                        var target = U.findParentNode(e.target, function (target) {\n                            if (target.getAttribute(\"data-calendar-display\")) {\n                                return true;\n                            }\n                        }),\n                            mode;\n                        if (target) {\n                            mode = target.getAttribute(\"data-calendar-display\");\n                            this.changeMode(mode);\n                        }\n                        target = null;\n                        mode = null;\n                    }.bind(this));\n                }\n\n                myDate = null;\n                yy = null;\n                mm = null;\n                yy1 = null;\n                yy2 = null;\n                return this;\n            };\n            var printDay = function printDay(nowDate) {\n                var dotDate = U.date(nowDate),\n                    monthStratDate = new Date(dotDate.getFullYear(), dotDate.getMonth(), 1, 12),\n                    _today = cfg.displayDate,\n                    tableStartDate = function () {\n                    var day = monthStratDate.getDay();\n                    if (day == 0) day = 7;\n                    day -= cfg.startOfWeek;\n\n                    try {\n                        return U.date(monthStratDate, { add: { d: -day } });\n                    } finally {\n                        day = null;\n                    }\n                }(),\n                    loopDate,\n                    thisMonth = dotDate.getMonth(),\n                    itemStyles = {},\n                    i,\n                    k,\n                    _k,\n                    frameWidth = this.$[\"body\"].width(),\n                    frameHeight = Math.floor(frameWidth * (6 / 7)),\n                    // 1week = 7days, 1month = 6weeks\n                data,\n                    tmpl;\n\n                if (cfg.dimensions.height) {\n                    frameHeight = U.number(cfg.dimensions.height) - U.number(cfg.dimensions.colHeadHeight);\n                }\n\n                itemStyles['height'] = Math.floor(frameHeight / 6) - U.number(cfg.dimensions.itemPadding) * 2 + 'px';\n                itemStyles['line-height'] = itemStyles['height'];\n                itemStyles['padding'] = U.cssNumber(cfg.dimensions.itemPadding);\n\n                data = {\n                    weekNames: [].concat(ax5.info.weekNames),\n                    list: []\n                };\n\n                if (cfg.startOfWeek) {\n                    data.weekNames = data.weekNames.concat(data.weekNames.slice(0, cfg.startOfWeek)).splice(cfg.startOfWeek);\n                }\n\n                data.weekNames.forEach(function (n) {\n                    n.colHeadHeight = U.cssNumber(cfg.dimensions.colHeadHeight);\n                });\n\n                loopDate = tableStartDate;\n                i = 0;\n                while (i < 6) {\n                    k = 0;\n                    while (k < 7) {\n                        _k = (7 + (k - cfg.startOfWeek)) % 7;\n                        var thisDate = '' + U.date(loopDate, { \"return\": cfg.dateFormat }),\n                            _date = {\n                            'row': i,\n                            'col': k,\n                            isStartOfWeek: k == 0,\n                            thisDate: '' + thisDate,\n                            thisDataLabel: cfg.lang.dayTmpl.replace('%s', loopDate.getDate()),\n                            itemStyles: U.css(itemStyles),\n                            addClass: function () {\n\n                                var classNames = \"\";\n\n                                if (cfg.selectable) {\n                                    if (self.selectableMap[thisDate]) {\n                                        classNames += loopDate.getMonth() == thisMonth ? \" live\" : \"\";\n                                    } else {\n                                        classNames += \" disable\";\n                                    }\n                                } else {\n                                    if (loopDate.getMonth() == thisMonth) {\n                                        if (thisDate == U.date(_today, { \"return\": \"yyyyMMdd\" })) {\n                                            classNames += \" focus\";\n                                        } else {\n                                            classNames += \" live\";\n                                        }\n\n                                        if (loopDate.getDay() == 0) {\n                                            classNames += \" sunday\";\n                                        }\n                                        if (loopDate.getDay() == 6) {\n                                            classNames += \" saturday\";\n                                        }\n                                    }\n                                }\n\n                                return classNames;\n                            }() + ' ' + function () {\n                                return self.markerMap[thisDate] ? self.markerMap[thisDate].theme || cfg.defaultMarkerTheme : '';\n                            }() + ' ' + function () {\n                                return self.selectionMap[thisDate] ? \"selected-day\" : '';\n                            }()\n                        };\n                        data.list.push(_date);\n\n                        k++;\n                        loopDate = U.date(loopDate, { add: { d: 1 } });\n\n                        thisDate = null;\n                        _date = null;\n                    }\n                    i++;\n                }\n                tmpl = CALENDAR.tmpl.get.call(this, \"dayTmpl\", data);\n                this.$[\"body\"].html(tmpl);\n                this.$[\"body\"].find('[data-calendar-item-date]').on(cfg.clickEventName, function (e) {\n                    e = e || window.event;\n                    onclick.call(self, e, 'date');\n                    U.stopEvent(e);\n                });\n\n                this.printedDay = {\n                    start: tableStartDate, end: loopDate\n                };\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    action: \"printDay\",\n                    printedDay: this.printedDay\n                });\n                setDisplay.call(this);\n\n                dotDate = null;\n                monthStratDate = null;\n                _today = null;\n                tableStartDate = null;\n                loopDate = null;\n                thisMonth = null;\n                itemStyles = null;\n                i = null;\n                k = null;\n                frameWidth = null;\n                frameHeight = null;\n                data = null;\n                tmpl = null;\n            };\n            var printMonth = function printMonth(nowDate) {\n                var dotDate = U.date(nowDate),\n                    nMonth = dotDate.getMonth(),\n                    itemStyles = {},\n                    i,\n                    k,\n                    m,\n                    tableStartMonth,\n                    frameWidth = this.$[\"body\"].width(),\n                    frameHeight = Math.floor(frameWidth * (6 / 7)),\n                    data,\n                    tmpl;\n\n                if (cfg.dimensions.height) {\n                    frameHeight = U.number(cfg.dimensions.height) - U.number(cfg.dimensions.colHeadHeight);\n                }\n\n                itemStyles['height'] = Math.floor(frameHeight / 4) - U.number(cfg.dimensions.itemPadding) * 2 + 'px';\n                itemStyles['line-height'] = itemStyles['height'];\n                itemStyles['padding'] = U.cssNumber(cfg.dimensions.itemPadding);\n\n                data = {\n                    colHeadHeight: U.cssNumber(cfg.dimensions.colHeadHeight),\n                    colHeadLabel: cfg.lang.monthHeading,\n                    list: []\n                };\n\n                tableStartMonth = 0;\n                m = 0;\n                i = 0;\n                while (i < 4) {\n                    k = 0;\n                    while (k < 3) {\n                        var _month = {\n                            row: i,\n                            col: k,\n                            isStartOfRow: k == 0,\n                            thisMonth: dotDate.getFullYear() + '-' + U.setDigit(m + 1, 2) + '-01', // + U.setDigit(dotDate.getDate(), 2),\n                            thisMonthLabel: cfg.lang.months[m],\n                            itemStyles: U.css(itemStyles),\n                            addClass: function () {\n                                if (cfg.selectable) {\n                                    return self.selectableMap[m] ? 'live' : 'disable';\n                                } else {\n                                    return 'live';\n                                }\n                            }() + ' ' + function () {\n                                return m == nMonth ? \"focus\" : \"\";\n                            }() + ' ' + function () {\n                                return self.markerMap[m] ? self.markerMap[m].theme || cfg.defaultMarkerTheme : '';\n                            }()\n                        };\n                        data.list.push(_month);\n                        m++;\n                        k++;\n                        _month = null;\n                    }\n                    i++;\n                }\n                tmpl = CALENDAR.tmpl.get.call(this, \"monthTmpl\", data);\n                this.$[\"body\"].html(tmpl);\n                this.$[\"body\"].find('[data-calendar-item-month]').on(cfg.clickEventName, function (e) {\n                    e = e || window.event;\n                    onclick.call(self, e, 'month');\n                    U.stopEvent(e);\n                });\n\n                this.printedDay = {\n                    start: dotDate.getFullYear() + '-' + U.setDigit(tableStartMonth + 1, 2),\n                    end: dotDate.getFullYear() + '-' + U.setDigit(m, 2)\n                };\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    action: \"printMonth\",\n                    printedDay: this.printedDay\n                });\n                setDisplay.call(this);\n\n                dotDate = null;\n                nMonth = null;\n                itemStyles = null;\n                i = null;\n                k = null;\n                m = null;\n                tableStartMonth = null;\n                frameWidth = null;\n                frameHeight = null;\n                data = null;\n                tmpl = null;\n            };\n            var printYear = function printYear(nowDate) {\n                var dotDate = U.date(nowDate),\n                    nYear = dotDate.getFullYear(),\n                    itemStyles = {},\n                    i,\n                    k,\n                    y,\n                    tableStartYear,\n                    frameWidth = this.$[\"body\"].width(),\n                    frameHeight = Math.floor(frameWidth * (6 / 7)),\n                    data,\n                    tmpl;\n\n                if (cfg.dimensions.height) {\n                    frameHeight = U.number(cfg.dimensions.height) - U.number(cfg.dimensions.colHeadHeight);\n                }\n\n                itemStyles['height'] = Math.floor(frameHeight / 5) - U.number(cfg.dimensions.itemPadding) * 2 + 'px';\n                itemStyles['line-height'] = itemStyles['height'];\n                itemStyles['padding'] = U.cssNumber(cfg.dimensions.itemPadding);\n\n                data = {\n                    colHeadHeight: U.cssNumber(cfg.dimensions.colHeadHeight),\n                    colHeadLabel: cfg.lang.yearHeading,\n                    list: []\n                };\n\n                tableStartYear = nYear - 10;\n                y = nYear - 10;\n                i = 0;\n                while (i < 5) {\n                    k = 0;\n                    while (k < 4) {\n                        var _year = {\n                            row: i,\n                            col: k,\n                            isStartOfRow: k == 0,\n                            thisYear: y + '-' + U.setDigit(dotDate.getMonth() + 1, 2) + '-01', // + U.setDigit(dotDate.getDate(), 2),\n                            thisYearLabel: cfg.lang.yearTmpl.replace('%s', y),\n                            itemStyles: U.css(itemStyles),\n                            addClass: function () {\n                                if (cfg.selectable) {\n                                    return self.selectableMap[y] ? 'live' : 'disable';\n                                } else {\n                                    return 'live';\n                                }\n                            }() + ' ' + function () {\n                                return y == nYear ? \"focus\" : \"\";\n                            }() + ' ' + function () {\n                                return self.selectableMap[y] ? self.selectableMap[y].theme || cfg.defaultMarkerTheme : '';\n                            }()\n                        };\n                        data.list.push(_year);\n                        y++;\n                        k++;\n                        _year = null;\n                    }\n                    i++;\n                }\n                tmpl = CALENDAR.tmpl.get.call(this, \"yearTmpl\", data);\n                this.$[\"body\"].html(tmpl);\n                this.$[\"body\"].find('[data-calendar-item-year]').on(cfg.clickEventName, function (e) {\n                    e = e || window.event;\n                    onclick.call(this, e, 'year');\n                    U.stopEvent(e);\n                });\n\n                this.printedDay = {\n                    start: tableStartYear, end: y - 1\n                };\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    action: \"printYear\",\n                    printedDay: this.printedDay\n                });\n                setDisplay.call(this);\n\n                dotDate = null;\n                nYear = null;\n                itemStyles = null;\n                i = null;\n                k = null;\n                y = null;\n                tableStartYear = null;\n                frameWidth = null;\n                frameHeight = null;\n                data = null;\n                tmpl = null;\n            };\n            var onclick = function onclick(e, mode, target, value) {\n                var removed, dt, selectable;\n\n                mode = mode || \"date\";\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-calendar-item-\" + mode)) {\n                        return true;\n                    }\n                });\n                if (target) {\n                    value = target.getAttribute(\"data-calendar-item-\" + mode);\n\n                    dt = U.date(value, { \"return\": cfg.dateFormat });\n                    selectable = true;\n                    selectableCount = cfg.multipleSelect ? U.isNumber(cfg.multipleSelect) ? cfg.multipleSelect : 2 : 1;\n\n                    if (cfg.selectable) {\n                        if (!self.selectableMap[dt]) selectable = false;\n                    }\n\n                    if (mode == \"date\") {\n                        if (selectable) {\n\n                            if (self.selection.length >= selectableCount) {\n                                removed = self.selection.splice(0, self.selection.length - (selectableCount - 1));\n                                removed.forEach(function (d) {\n                                    self.$[\"body\"].find('[data-calendar-item-date=\"' + U.date(d, { \"return\": cfg.dateFormat }) + '\"]').removeClass(\"selected-day\");\n                                });\n                            }\n\n                            jQuery(target).addClass(\"selected-day\");\n                            self.selection.push(value);\n\n                            if (self.onClick) {\n                                self.onClick.call({\n                                    self: this, date: value, target: this.target, dateElement: target\n                                });\n                            }\n                        }\n                    } else if (mode == \"month\") {\n                        if (cfg.selectMode == \"month\") {\n                            if (selectable) {\n                                if (self.selection.length >= selectableCount) {\n                                    removed = self.selection.splice(0, self.selection.length - (selectableCount - 1));\n                                    removed.forEach(function (d) {\n                                        self.$[\"body\"].find('[data-calendar-item-month=\"' + U.date(d, { \"return\": 'yyyy-MM-dd' }) + '\"]').removeClass(\"selected-month\");\n                                    });\n                                }\n\n                                jQuery(target).addClass(\"selected-month\");\n                                self.selection.push(value);\n\n                                if (self.onClick) {\n                                    self.onClick.call({\n                                        self: this, date: value, target: this.target, dateElement: target\n                                    });\n                                }\n                            }\n                        } else {\n                            self.changeMode(\"day\", value);\n                        }\n                    } else if (mode == \"year\") {\n                        if (cfg.selectMode == \"year\") {\n                            if (selectable) {\n                                if (self.selection.length >= selectableCount) {\n                                    removed = self.selection.splice(0, self.selection.length - (selectableCount - 1));\n                                    removed.forEach(function (d) {\n                                        self.$[\"body\"].find('[data-calendar-item-year=\"' + U.date(d, { \"return\": 'yyyy-MM-dd' }) + '\"]').removeClass(\"selected-year\");\n                                    });\n                                }\n\n                                jQuery(target).addClass(\"selected-year\");\n                                self.selection.push(value);\n\n                                if (self.onClick) {\n                                    self.onClick.call({\n                                        self: this, date: value, target: this.target, dateElement: target\n                                    });\n                                }\n                            }\n                        } else {\n                            self.changeMode(\"month\", value);\n                        }\n                    }\n                }\n\n                mode = null;\n                target = null;\n                value = null;\n                removed = null;\n                dt = null;\n                selectable = null;\n            };\n            var move = function move(e, target, value) {\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-calendar-move\")) {\n                        return true;\n                    }\n                });\n                if (target) {\n                    value = target.getAttribute(\"data-calendar-move\");\n                    if (cfg.mode == \"day\" || cfg.mode == \"d\") {\n                        if (value == \"left\") {\n                            cfg.displayDate = U.date(cfg.displayDate, { add: { m: -1 } });\n                        } else {\n                            cfg.displayDate = U.date(cfg.displayDate, { add: { m: 1 } });\n                        }\n                        printDay.call(this, cfg.displayDate);\n                    } else if (cfg.mode == \"month\" || cfg.mode == \"m\") {\n                        if (value == \"left\") {\n                            cfg.displayDate = U.date(cfg.displayDate, { add: { y: -1 } });\n                        } else {\n                            cfg.displayDate = U.date(cfg.displayDate, { add: { y: 1 } });\n                        }\n                        printMonth.call(this, cfg.displayDate);\n                    } else if (cfg.mode == \"year\" || cfg.mode == \"y\") {\n                        if (value == \"left\") {\n                            cfg.displayDate = U.date(cfg.displayDate, { add: { y: -10 } });\n                        } else {\n                            cfg.displayDate = U.date(cfg.displayDate, { add: { y: 10 } });\n                        }\n                        printYear.call(this, cfg.displayDate);\n                    }\n                }\n\n                target = null;\n                value = null;\n            };\n            var applyMarkerMap = function applyMarkerMap() {\n                setTimeout(function () {\n                    if (cfg.mode === \"day\" || cfg.mode === \"d\") {\n                        for (var k in this.markerMap) {\n                            this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').addClass(this.markerMap[k].theme || cfg.defaultMarkerTheme);\n                        }\n                    }\n                }.bind(this));\n            };\n            var applySelectionMap = function applySelectionMap() {\n                setTimeout(function () {\n                    for (var k in this.selectionMap) {\n                        this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').addClass(\"selected-day\");\n                    }\n                }.bind(this));\n            };\n            var applyPeriodMap = function applyPeriodMap() {\n                setTimeout(function () {\n                    if (cfg.mode === \"day\" || cfg.mode === \"d\") {\n                        for (var k in this.periodMap) {\n                            if (this.periodMap[k].label) {\n                                this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').find(\".addon-footer\").html(this.periodMap[k].label);\n                            }\n                            this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').addClass(this.periodMap[k].theme);\n                        }\n                    }\n                }.bind(this));\n            };\n            var clearPeriodMap = function clearPeriodMap() {\n                if (cfg.mode === \"day\" || cfg.mode === \"d\") {\n                    for (var k in this.periodMap) {\n                        this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').find(\".addon-footer\").empty();\n                        this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').removeClass(this.periodMap[k].theme);\n                    }\n                }\n            };\n\n            /**\n             * Preferences of calendar UI\n             * @method ax5calendar.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Element|nodelist} config.target\n             * @param {String} [config.mode=day|month|year]\n             * @param {Function} [config.onClick}\n             * @returns {ax5calendar}\n             * @example\n             * ```js\n             * var myCalendar = new ax5.ui.calendar();\n             * myCalendar.setConfig({\n             *  target: $(\"#target\"),\n             *  mode: \"day\"\n             * });\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                // after setConfig();\n\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5calendar\", \"401\", \"setConfig\"));\n                }\n                this.target = jQuery(cfg.target);\n\n                cfg.displayDate = U.date(cfg.displayDate);\n                this.target.html(getFrame.call(this));\n\n                // 파트수집\n                this.$ = {\n                    \"root\": this.target.find('[data-calendar-els=\"root\"]'),\n                    \"control\": this.target.find('[data-calendar-els=\"control\"]'),\n                    \"control-display\": this.target.find('[data-calendar-els=\"control-display\"]'),\n                    \"body\": this.target.find('[data-calendar-els=\"body\"]')\n                };\n\n                if (cfg.control) {\n                    this.$[\"root\"].on(cfg.clickEventName, '[data-calendar-move]', function (e) {\n                        move.call(this, e || window.event);\n                    }.bind(this));\n                }\n\n                // collect selectableMap\n                if (cfg.selection) {\n                    this.setSelection(cfg.selection, false);\n                }\n                // collect selectableMap\n                if (cfg.selectable) {\n                    this.setSelectable(cfg.selectable, false);\n                }\n                // collect markerMap\n                if (cfg.marker) {\n                    this.setMarker(cfg.marker, false);\n                }\n\n                setTimeout(function () {\n                    if (cfg.mode === \"day\" || cfg.mode === \"d\") {\n                        printDay.call(this, cfg.displayDate);\n                    } else if (cfg.mode === \"month\" || cfg.mode === \"m\") {\n                        printMonth.call(this, cfg.displayDate);\n                    } else if (cfg.mode === \"year\" || cfg.mode === \"y\") {\n                        printYear.call(this, cfg.displayDate);\n                    }\n                }.bind(this));\n            };\n\n            /**\n             * @method ax5calendar.changeMode\n             * @param {String} mode\n             * @param {String} changeDate\n             * @returns {ax5calendar}\n             */\n            this.changeMode = function (mode, changeDate) {\n                if (typeof changeDate != \"undefined\") cfg.displayDate = changeDate;\n                if (mode) cfg.mode = mode;\n\n                this.$[\"body\"].removeClass(\"fadein\").addClass(\"fadeout\");\n                setTimeout(function () {\n                    if (cfg.mode == \"day\" || cfg.mode == \"d\") {\n                        printDay.call(this, cfg.displayDate);\n                    } else if (cfg.mode == \"month\" || cfg.mode == \"m\") {\n                        printMonth.call(this, cfg.displayDate);\n                    } else if (cfg.mode == \"year\" || cfg.mode == \"y\") {\n                        printYear.call(this, cfg.displayDate);\n                    }\n                    this.$[\"body\"].removeClass(\"fadeout\").addClass(\"fadein\");\n                }.bind(this), cfg.animateTime);\n\n                return this;\n            };\n\n            /**\n             * @method ax5calendar.setSelection\n             * @param {Array} selection\n             * @returns {ax5calendar}\n             * @example\n             * ```\n             *\n             * ```\n             */\n            this.setSelection = function () {\n                self.selectionMap = {};\n                var processor = {\n                    'arr': function arr(v, map, count) {\n                        map = {};\n                        if (!U.isArray(v)) return map;\n                        self.selection = v = v.splice(0, count);\n                        v.forEach(function (n) {\n                            if (U.isDate(n)) n = U.date(n, { 'return': cfg.dateFormat });\n                            map[n] = true;\n                        });\n                        return map;\n                    }\n                };\n\n                return function (selection, isPrint) {\n                    var result = {};\n                    selectableCount = cfg.multipleSelect ? U.isNumber(cfg.multipleSelect) ? cfg.multipleSelect : 2 : 1;\n\n                    if (cfg.selection = selection) {\n                        if (U.isArray(selection)) {\n                            result = processor.arr(selection, {}, selectableCount);\n                        } else {\n                            return this;\n                        }\n                    }\n\n                    this.selectionMap = jQuery.extend({}, result);\n                    // 변경내용 적용하여 출력\n\n                    if (isPrint !== false) applySelectionMap.call(this);\n\n                    result = null;\n\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5calendar.getSelection\n             */\n            this.getSelection = function () {\n                return this.selection;\n            };\n\n            /**\n             * @method ax5calendar.setSelectable\n             */\n            this.setSelectable = function () {\n                self.selectableMap = {};\n                var processor = {\n                    'arr': function arr(v, map) {\n                        map = {};\n                        if (!U.isArray(v)) return map;\n                        v.forEach(function (n) {\n                            if (U.isDate(n)) n = U.date(n, { 'return': cfg.dateFormat });\n                            map[n] = true;\n                        });\n                        return map;\n                    },\n                    'obj': function obj(v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (v.range) return map;\n                        for (var k in v) {\n                            map[k] = v[k];\n                        }\n                        return map;\n                    },\n                    'range': function range(v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (!v.range) return map;\n\n                        v.range.forEach(function (n) {\n                            if (U.isDateFormat(n.from) && U.isDateFormat(n.to)) {\n                                for (var d = U.date(n.from); d <= U.date(n.to); d.setDate(d.getDate() + 1)) {\n                                    map[U.date(d, { \"return\": cfg.dateFormat })] = true;\n                                }\n                            } else {\n                                for (var i = n.from; i <= n.to; i++) {\n                                    map[i] = true;\n                                }\n                            }\n                        });\n\n                        return map;\n                    }\n                };\n\n                return function (selectable, isPrint) {\n\n                    var key,\n                        result = {};\n\n                    if (cfg.selectable = selectable) {\n                        if (U.isArray(selectable)) {\n                            result = processor.arr(selectable);\n                        } else {\n                            for (key in processor) {\n                                if (selectable[key]) {\n                                    result = processor[key](selectable);\n                                    break;\n                                }\n                            }\n                            if (Object.keys(result).length === 0) {\n                                result = processor.obj(selectable);\n                            }\n                        }\n                    }\n\n                    this.selectableMap = result;\n                    // 변경내용 적용하여 출력\n                    if (isPrint !== false) this.changeMode();\n\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5calendar.setMarker\n             */\n            this.setMarker = function () {\n                self.markerMap = {};\n                var processor = {\n                    'obj': function obj(v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (v.range) return map;\n                        for (var k in v) {\n                            map[k] = v[k];\n                        }\n\n                        v = null;\n                        return map;\n                    },\n                    'range': function range(v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (!v.range) return map;\n\n                        v.range.forEach(function (n) {\n                            if (U.isDateFormat(n.from) && U.isDateFormat(n.to)) {\n                                for (var d = U.date(n.from); d <= U.date(n.to); d.setDate(d.getDate() + 1)) {\n                                    map[U.date(d, { \"return\": cfg.dateFormat })] = { theme: n.theme, label: n.label };\n                                }\n                            } else {\n                                for (var i = n.from; i <= n.to; i++) {\n                                    map[i] = { theme: n.theme, label: n.label };\n                                }\n                            }\n                        });\n\n                        v = null;\n                        return map;\n                    }\n                };\n\n                return function (marker, isApply) {\n\n                    var key,\n                        result = {};\n\n                    if (cfg.marker = marker) {\n                        for (key in processor) {\n                            if (marker[key]) {\n                                result = processor[key](marker);\n                                break;\n                            }\n                        }\n                        if (Object.keys(result).length === 0) {\n                            result = processor.obj(marker);\n                        }\n                    }\n\n                    this.markerMap = result;\n                    // 변경내용 적용하여 출력\n                    if (isApply !== false) applyMarkerMap.call(this);\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5calendar.setPeriod\n             */\n            this.setPeriod = function () {\n                self.periodMap = {};\n\n                var processor = {\n                    'range': function range(v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (!v.range) return map;\n\n                        v.range.forEach(function (n) {\n                            if (U.isDateFormat(n.from) && U.isDateFormat(n.to)) {\n                                for (var d = new Date(U.date(n.from)); d <= U.date(n.to); d.setDate(d.getDate() + 1)) {\n                                    if (d.getTime() == U.date(n.from).getTime()) {\n                                        map[U.date(d, { \"return\": cfg.dateFormat })] = { theme: n.theme || cfg.defaultPeriodTheme, label: n.fromLabel };\n                                    } else if (d.getTime() == U.date(n.to).getTime()) {\n                                        map[U.date(d, { \"return\": cfg.dateFormat })] = { theme: n.theme || cfg.defaultPeriodTheme, label: n.toLabel };\n                                    } else {\n                                        map[U.date(d, { \"return\": cfg.dateFormat })] = { theme: n.theme || cfg.defaultPeriodTheme };\n                                    }\n                                }\n                            }\n                        });\n\n                        v = null;\n                        return map;\n                    }\n                };\n\n                return function (period, isApply) {\n\n                    var key,\n                        result = {};\n\n                    // 변경내용 적용하여 출력\n                    if (isApply !== false) {\n                        clearPeriodMap.call(this);\n                    }\n\n                    if (cfg.period = period) {\n                        result = processor.range(period);\n                    }\n\n                    this.periodMap = result;\n\n                    //console.log(this.periodMap);\n\n                    // 변경내용 적용하여 출력\n                    if (isApply !== false) {\n                        applyPeriodMap.call(this);\n                    }\n                    return this;\n                };\n            }();\n\n            // 클래스 생성자\n            this.main = function () {\n\n                UI.calendar_instance = UI.calendar_instance || [];\n                UI.calendar_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n    }());\n    CALENDAR = ax5.ui.calendar;\n})();\n// ax5.ui.calendar.tmpl\n(function () {\n\n    var CALENDAR = ax5.ui.calendar;\n\n    var frameTmpl = function frameTmpl(columnKeys) {\n        return '\\n                <div class=\"ax5-ui-calendar {{theme}}\" data-calendar-els=\"root\" onselectstart=\"return false;\">\\n                    {{#control}}\\n                    <div class=\"calendar-control\" data-calendar-els=\"control\" style=\"{{controlCSS}}\">\\n                        <a class=\"date-move-left\" data-calendar-move=\"left\" style=\"{{controlButtonCSS}}\">{{{left}}}</a>\\n                        <div class=\"date-display\" data-calendar-els=\"control-display\" style=\"{{controlCSS}}\"></div>\\n                        <a class=\"date-move-right\" data-calendar-move=\"right\" style=\"{{controlButtonCSS}}\">{{{right}}}</a>\\n                    </div>\\n                    {{/control}}\\n                    <div class=\"calendar-body\" data-calendar-els=\"body\"></div>\\n                </div>\\n                ';\n    };\n    var dayTmpl = function dayTmpl(columnKeys) {\n        return '\\n                <table data-calendar-table=\"day\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;\">\\n                    <thead>\\n                        <tr>\\n                        {{#weekNames}}\\n                            <td class=\"calendar-col-{{col}}\" style=\"height: {{colHeadHeight}}\">\\n                            {{label}}\\n                            </td>\\n                        {{/weekNames}}\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            {{#list}}    \\n                            {{#isStartOfWeek}}\\n                            {{^@first}}\\n                        </tr>\\n                        <tr>\\n                            {{/@first}}\\n                            {{/isStartOfWeek}}\\n                            <td class=\"calendar-col-{{col}}\" style=\"{{itemStyles}}\">\\n                                <a class=\"calendar-item-day {{addClass}}\" data-calendar-item-date=\"{{thisDate}}\">\\n                                    <span class=\"addon addon-header\"></span>\\n                                    {{thisDataLabel}}\\n                                    <span class=\"addon addon-footer\"></span>\\n                                </a>\\n                            </td>\\n                            {{/list}}\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                ';\n    };\n    var monthTmpl = function monthTmpl(columnKeys) {\n        return '\\n                <table data-calendar-table=\"month\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;\">\\n                    <thead>\\n                        <tr>\\n                            <td class=\"calendar-col-0\" colspan=\"3\" style=\"height: {{colHeadHeight}}\">\\n                            {{colHeadLabel}}\\n                            </td>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            {{#list}}    \\n                            {{#isStartOfRow}}\\n                            {{^@first}}\\n                        </tr>\\n                        <tr>\\n                            {{/@first}}\\n                            {{/isStartOfRow}}\\n                            <td class=\"calendar-col-{{col}}\" style=\"{{itemStyles}}\">\\n                                <a class=\"calendar-item-month {{addClass}}\" data-calendar-item-month=\"{{thisMonth}}\">\\n                                    <span class=\"addon\"></span>\\n                                    {{thisMonthLabel}}\\n                                    <span class=\"lunar\"></span>\\n                                </a>\\n                            </td>\\n                            {{/list}}\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                ';\n    };\n    var yearTmpl = function yearTmpl(columnKeys) {\n        return '\\n                <table data-calendar-table=\"year\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;\">\\n                    <thead>\\n                        <tr>\\n                            <td class=\"calendar-col-0\" colspan=\"4\" style=\"height: {{colHeadHeight}}\">\\n                            {{colHeadLabel}}\\n                            </td>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            {{#list}}    \\n                            {{#isStartOfRow}}\\n                            {{^@first}}\\n                        </tr>\\n                        <tr>\\n                            {{/@first}}\\n                            {{/isStartOfRow}}\\n                            <td class=\"calendar-col-{{col}}\" style=\"{{itemStyles}}\">\\n                                <a class=\"calendar-item-year {{addClass}}\" data-calendar-item-year=\"{{thisYear}}\">\\n                                    <span class=\"addon\"></span>\\n                                    {{thisYearLabel}}\\n                                    <span class=\"lunar\"></span>\\n                                </a>\\n                            </td>\\n                            {{/list}}\\n                        </tr>\\n                    </tbody>\\n                </table>\\n                ';\n    };\n\n    CALENDAR.tmpl = {\n        \"frameTmpl\": frameTmpl,\n        \"dayTmpl\": dayTmpl,\n        \"monthTmpl\": monthTmpl,\n        \"yearTmpl\": yearTmpl,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(CALENDAR.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.picker\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var PICKER = void 0;\n\n    UI.addClass({\n        className: \"picker\"\n    }, function () {\n        /**\n         * @class ax5picker\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * ax5.def.picker.date_leftArrow = '<i class=\"fa fa-chevron-left\"></i>';\n         * ax5.def.picker.date_yearTmpl = '%s';\n         * ax5.def.picker.date_monthTmpl = '%s';\n         * def.picker.date_rightArrow = '<i class=\"fa fa-chevron-right\"></i>';\n         *\n         * var picker = new ax5.ui.picker({\n         *     onStateChanged: function () {\n         *         console.log(this);\n         *     }\n         * });\n         *\n         * picker.bind({\n         *     target: $('[data-picker-date]'),\n         *     direction: \"auto\",\n         *     content: {\n         *         type: 'date',\n         *         formatter: {\n         *             pattern: 'date'\n         *         }\n         *     }\n         * });\n         * ```\n         */\n        return function () {\n            var self = this,\n                cfg = void 0;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n                theme: 'default',\n                title: '',\n                lang: {\n                    \"ok\": \"ok\",\n                    \"cancel\": \"cancel\"\n                },\n                animateTime: 100,\n                calendar: {\n                    multipleSelect: false,\n                    control: {\n                        left: ax5.def.picker.date_leftArrow || '&#x02190',\n                        yearTmpl: ax5.def.picker.date_yearTmpl || '%s',\n                        monthTmpl: ax5.def.picker.date_monthTmpl || '%s',\n                        right: ax5.def.picker.date_rightArrow || '&#x02192',\n                        yearFirst: true\n                    }\n                },\n                palette: {}\n            };\n            this.queue = [];\n            this.activePicker = null;\n            this.activePickerQueueIndex = -1;\n            this.openTimer = null;\n            this.closeTimer = null;\n\n            cfg = this.config;\n\n            var onStateChanged = function onStateChanged(item, that) {\n                if (item && item.onStateChanged) {\n                    item.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n                return true;\n            };\n            var bindPickerTarget = function () {\n\n                var pickerEvent = {\n                    'focus': function focus(queIdx, e) {\n                        this.open(queIdx);\n                    },\n                    'click': function click(queIdx, e) {\n                        this.open(queIdx);\n                    }\n                };\n\n                var pickerType = {\n                    '@fn': function fn(queIdx, _input) {\n                        var item = this.queue[queIdx],\n                            inputLength = _input.length,\n                            config = {\n                            inputLength: inputLength || 1\n                        };\n\n                        if (inputLength > 1) {\n                            config.btns = {\n                                ok: { label: cfg.lang[\"ok\"], theme: cfg.theme }\n                            };\n                        }\n\n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        config = null;\n                        inputLength = null;\n                    },\n                    'date': function date(queIdx, _input) {\n                        var item = this.queue[queIdx],\n                            contentWidth = item.content ? item.content.width || 270 : 270,\n                            contentMargin = item.content ? item.content.margin || 5 : 5,\n                            inputLength = _input.length,\n                            config = {\n                            contentWidth: contentWidth * inputLength + (inputLength - 1) * contentMargin,\n                            content: { width: contentWidth, margin: contentMargin },\n                            inputLength: inputLength || 1\n                        };\n\n                        if (inputLength > 1 && !item.btns) {\n                            config.btns = {\n                                ok: { label: cfg.lang[\"ok\"], theme: cfg.theme }\n                            };\n                        }\n\n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        contentWidth = null;\n                        contentMargin = null;\n                        config = null;\n                        inputLength = null;\n                    },\n                    'secure-num': function secureNum(queIdx, _input) {\n                        var item = this.queue[queIdx],\n                            inputLength = _input.length,\n                            config = {\n                            inputLength: inputLength || 1\n                        };\n\n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        config = null;\n                        inputLength = null;\n                    },\n                    'keyboard': function keyboard(queIdx, _input) {\n                        var item = this.queue[queIdx],\n                            inputLength = _input.length,\n                            config = {\n                            inputLength: inputLength || 1\n                        };\n\n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        config = null;\n                        inputLength = null;\n                    },\n                    'numpad': function numpad(queIdx, _input) {\n                        var item = this.queue[queIdx],\n                            inputLength = _input.length,\n                            config = {\n                            inputLength: inputLength || 1\n                        };\n\n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        config = null;\n                        inputLength = null;\n                    },\n                    'color': function color(queIdx, _input) {\n                        var item = this.queue[queIdx],\n                            contentWidth = item.content ? item.content.width || 270 : 270,\n                            contentMargin = item.content ? item.content.margin || 5 : 5,\n                            inputLength = _input.length,\n                            config = {\n                            contentWidth: contentWidth * inputLength + (inputLength - 1) * contentMargin,\n                            content: { width: contentWidth, margin: contentMargin },\n                            inputLength: inputLength || 1\n                        },\n                            $colorPreview = item.$target.find('[data-ax5picker-color=\"preview\"]');\n\n                        if ($colorPreview.get(0)) {\n                            $colorPreview.css({ \"background-color\": \"#\" + U.color(_input.val() || \"#000000\").getHexValue() });\n                            // 컬러 피커인 경우 input의 값이 변경되면 preview를 수정\n                            _input.on(\"change\", function () {\n                                $colorPreview.css({ \"background-color\": \"#\" + U.color(this.value || \"#000000\").getHexValue() });\n                            });\n                        }\n\n                        if (inputLength > 1 && !item.btns) {\n                            config.btns = {\n                                ok: { label: cfg.lang[\"ok\"], theme: cfg.theme }\n                            };\n                        }\n\n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        contentWidth = null;\n                        contentMargin = null;\n                        config = null;\n                        inputLength = null;\n                    }\n                };\n\n                return function (queIdx) {\n                    var item = this.queue[queIdx],\n                        input = void 0;\n\n                    if (!item.content) {\n                        console.log(ax5.info.getError(\"ax5picker\", \"501\", \"bind\"));\n                        return this;\n                    }\n\n                    input = item.$target.get(0).tagName.toUpperCase() == \"INPUT\" ? item.$target : item.$target.find('input[type]');\n\n                    // 함수타입\n                    if (U.isFunction(item.content)) {\n                        pickerType[\"@fn\"].call(this, queIdx, input);\n                    } else {\n                        for (var key in pickerType) {\n                            if (item.content.type == key) {\n                                pickerType[key].call(this, queIdx, input);\n                                break;\n                            }\n                        }\n                    }\n\n                    input.unbind('focus.ax5picker').unbind('click.ax5picker').bind('focus.ax5picker', pickerEvent.focus.bind(this, queIdx)).bind('click.ax5picker', pickerEvent.click.bind(this, queIdx));\n\n                    item.$target.find('.input-group-addon').unbind('click.ax5picker').bind('click.ax5picker', pickerEvent.click.bind(this, queIdx));\n\n                    if (item.content.formatter && ax5.ui.formatter) {\n                        input.ax5formatter(item.content.formatter);\n                    }\n\n                    input = null;\n                    item = null;\n                    queIdx = null;\n                    return this;\n                };\n            }();\n            var alignPicker = function alignPicker(append) {\n                if (!this.activePicker) return this;\n\n                var _alignPicker = function _alignPicker(item) {\n                    var $window = jQuery(window),\n                        $body = jQuery(document.body);\n                    var pos = {},\n                        positionMargin = 12,\n                        dim = {},\n                        pickerDim = {},\n                        pickerDirection;\n\n                    pos = item.$target.offset();\n                    dim = {\n                        width: item.$target.outerWidth(),\n                        height: item.$target.outerHeight()\n                    };\n                    pickerDim = {\n                        winWidth: Math.max($window.width(), $body.width()),\n                        winHeight: Math.max($window.height(), $body.height()),\n                        width: this.activePicker.outerWidth(),\n                        height: this.activePicker.outerHeight()\n                    };\n\n                    // picker css(width, left, top) & direction 결정\n\n                    if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n                        // set direction\n                        pickerDirection = \"top\";\n                        if (pos.top - pickerDim.height - positionMargin < 0) {\n                            pickerDirection = \"top\";\n                        } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                            pickerDirection = \"bottom\";\n                        }\n                    } else {\n                        pickerDirection = item.direction;\n                    }\n\n                    if (append) {\n                        this.activePicker.addClass(\"direction-\" + pickerDirection);\n                    }\n\n                    var positionCSS = function () {\n                        var css = { left: 0, top: 0 };\n                        switch (pickerDirection) {\n                            case \"top\":\n                                css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n                                css.top = pos.top + dim.height + positionMargin;\n                                break;\n                            case \"bottom\":\n                                css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n                                css.top = pos.top - pickerDim.height - positionMargin;\n                                break;\n                            case \"left\":\n                                css.left = pos.left + dim.width + positionMargin;\n                                css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n                                break;\n                            case \"right\":\n                                css.left = pos.left - pickerDim.width - positionMargin;\n                                css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n                                break;\n                        }\n                        return css;\n                    }();\n\n                    (function () {\n                        if (pickerDirection == \"top\" || pickerDirection == \"bottom\") {\n                            if (positionCSS.left < 0) {\n                                positionCSS.left = positionMargin;\n                                this.activePickerArrow.css({ left: pos.left + dim.width / 2 - positionCSS.left });\n                            } else if (positionCSS.left + pickerDim.width > pickerDim.winWidth) {\n                                positionCSS.left = pickerDim.winWidth - pickerDim.width - positionMargin;\n                                this.activePickerArrow.css({ left: pos.left + dim.width / 2 - positionCSS.left });\n                            }\n                        }\n                    }).call(this);\n\n                    this.activePicker.css(positionCSS);\n                };\n                var item = this.queue[this.activePickerQueueIndex];\n\n                if (append) {\n                    this.activePicker.css({ top: -999 });\n                    jQuery(document.body).append(this.activePicker);\n                }\n\n                setTimeout(function () {\n                    _alignPicker.call(this, item);\n                }.bind(this));\n            };\n            var onBodyClick = function onBodyClick(e, target) {\n                if (!this.activePicker) return this;\n\n                var item = this.queue[this.activePickerQueueIndex];\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-picker-els\")) {\n                        return true;\n                    } else if (item.$target.get(0) == target) {\n                        return true;\n                    }\n                });\n                if (!target) {\n                    this.close();\n                    return this;\n                }\n                //console.log(\"i'm picker\");\n                return this;\n            };\n            var onBtnClick = function onBtnClick(e, target) {\n                // console.log('btn click');\n                if (e.srcElement) e.target = e.srcElement;\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-picker-btn\")) {\n                        return true;\n                    }\n                });\n\n                if (target) {\n                    var item = this.queue[this.activePickerQueueIndex],\n                        k = target.getAttribute(\"data-picker-btn\");\n\n                    if (item.btns && item.btns[k].onClick) {\n                        var that = {\n                            key: k,\n                            value: item.btns[k],\n                            self: this,\n                            item: item\n                        };\n                        item.btns[k].onClick.call(that, k);\n                    } else {\n                        this.close();\n                    }\n                }\n            };\n            var onBodyKeyup = function onBodyKeyup(e) {\n                if (e.keyCode == ax5.info.eventKeys.ESC) {\n                    this.close();\n                }\n            };\n            var getQueIdx = function getQueIdx(boundID) {\n                if (!U.isString(boundID)) {\n                    boundID = jQuery(boundID).data(\"data-axpicker-id\");\n                }\n                if (!U.isString(boundID)) {\n                    console.log(ax5.info.getError(\"ax5picker\", \"402\", \"getQueIdx\"));\n                    return;\n                }\n                return U.search(this.queue, function () {\n                    return this.id == boundID;\n                });\n            };\n            /// private end\n\n            /**\n             * Preferences of picker UI\n             * @method ax5picker.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5picker}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n            };\n\n            /**\n             * bind picker UI\n             * @method ax5picker.bind\n             * @param {Object} item\n             * @param {Element} item.target\n             * @param {String} item.direction - top|left|right|bottom|auto\n             * @param {Number} item.contentWidth\n             * @param {Boolean} item.disableChangeTrigger\n             * @param {Function} item.onStateChanged\n             * @param {Object} item.btns\n             * @param {Object} item.content\n             * @param {Number} item.content.width\n             * @param {Number} item.content.margin\n             * @param {String} item.content.type\n             * @param {Object} item.content.config - binded UI config\n             * @param {Object} item.content.formatter\n             * @param {String} item.content.formatter.pattern\n             * @returns {ax5picker}\n             * @example\n             * ```js\n             * var picker = new ax5.ui.picker();\n             * $(document.body).ready(function () {\n             *   picker.bind({\n             *       target: $('[data-ax5picker=\"basic\"]'),\n             *       direction: \"top\",\n             *       content: {\n             *           width: 270,\n             *           margin: 10,\n             *           type: 'date',\n             *           config: {\n             *               control: {\n             *                   left: '<i class=\"fa fa-chevron-left\"></i>',\n             *                   yearTmpl: '%s',\n             *                   monthTmpl: '%s',\n             *                   right: '<i class=\"fa fa-chevron-right\"></i>'\n             *               },\n             *               lang: {\n             *                   yearTmpl: \"%s년\",\n             *                   months: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'],\n             *                   dayTmpl: \"%s\"\n             *               }\n             *           },\n             *           formatter: {\n             *               pattern: 'date'\n             *           }\n             *       },\n             *       onStateChanged: function () {\n             *\n             *       }\n             *   });\n             * });\n             * ```\n             */\n            this.bind = function (item) {\n                var pickerConfig = {},\n                    queIdx = void 0;\n\n                item = jQuery.extend(true, pickerConfig, cfg, item);\n\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5picker\", \"401\", \"bind\"));\n                    return this;\n                }\n                item.$target = jQuery(item.target);\n\n                if (!item.$target.get(0)) {\n                    console.log(ax5.info.getError(\"ax5picker\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                if (!item.id) item.id = item.$target.data(\"data-axpicker-id\");\n\n                if (!item.id) {\n                    item.id = 'ax5-picker-' + ax5.getGuid();\n                    item.$target.data(\"data-axpicker-id\", item.id);\n                }\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindPickerTarget.call(this, this.queue.length - 1);\n                } else {\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindPickerTarget.call(this, queIdx);\n                }\n\n                pickerConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * @method ax5picker.setContentValue\n             * @param {String} boundID\n             * @param {Number} inputIndex\n             * @param {String} val\n             * @returns {ax5picker} this\n             */\n            this.setContentValue = function () {\n\n                var multipleInputProcessor = {\n                    \"date\": function date(_item, _inputIndex, _val) {\n                        var values = [],\n                            diffDay,\n                            prevInputValue,\n                            nextInputValue;\n\n                        if (_item.$target.get(0).tagName.toUpperCase() !== \"INPUT\") {\n                            _item.$target.find('input[type]').each(function () {\n                                values.push(this.value);\n                            });\n                        }\n\n                        if (_inputIndex == 0) {\n                            if (values.length > 1 && values[1] !== \"\") {\n                                // 값 검증\n                                diffDay = ax5.util.dday(values[1], { today: values[0] });\n                                if (diffDay < 0) {\n                                    // 다음날짜 달력을 변경합니다.\n                                    nextInputValue = _val;\n                                } else {}\n                            } else {\n                                nextInputValue = _val;\n                            }\n\n                            if (nextInputValue) {\n                                _item.pickerCalendar[1].ax5uiInstance.setSelection([nextInputValue], false).changeMode(\"d\", nextInputValue);\n                                this.setContentValue(_item.id, 1, nextInputValue);\n                            }\n\n                            return _val;\n                        } else if (_inputIndex == 1) {\n\n                            if (values.length > 1) {\n                                // 값 검증\n                                diffDay = ax5.util.dday(values[1], { today: values[0] });\n                                if (diffDay < 0) {\n                                    // 다음날짜 달력을 변경합니다.\n                                    prevInputValue = values[1];\n                                }\n                            }\n\n                            if (prevInputValue) {\n                                _item.pickerCalendar[0].ax5uiInstance.setSelection([prevInputValue], false).changeMode(\"d\", prevInputValue);\n                                this.setContentValue(_item.id, 0, prevInputValue);\n                            }\n\n                            return _val;\n                        }\n                    }\n                };\n\n                return function (boundID, inputIndex, val, _option) {\n\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID),\n                        item = this.queue[queIdx],\n                        _input = void 0;\n\n                    if (!_option) _option = {};\n\n                    if (item) {\n\n                        _input = item.$target.get(0).tagName.toUpperCase() == \"INPUT\" ? item.$target : jQuery(item.$target.find('input[type]').get(inputIndex));\n                        _input.val(val);\n\n                        if (!item.disableChangeTrigger) {\n                            _input.trigger(\"change\");\n                        } else {\n                            var $colorPreview = item.$target.find('[data-ax5picker-color=\"preview\"]');\n                            if ($colorPreview.get(0)) {\n                                $colorPreview.css({ \"background-color\": val });\n                            }\n                        }\n\n                        // picker의 입력이 2개이상인 경우\n                        //console.log(item.inputLength);\n                        if (item.inputLength > 1) {\n                            // 경우에 따라 첫번 선택에 따라 해야할 일들 처리\n                            if (multipleInputProcessor[item.content.type]) {\n                                val = multipleInputProcessor[item.content.type].call(this, item, inputIndex, val);\n                            }\n                        }\n\n                        var that = {\n                            self: self,\n                            state: \"changeValue\",\n                            item: item,\n                            inputIndex: inputIndex,\n                            value: val,\n                            values: [val]\n                        };\n                        if (item.$target.get(0).tagName.toUpperCase() !== \"INPUT\") {\n                            that.values = [];\n                            item.$target.find('input[type]').each(function () {\n                                that.values.push(this.value);\n                            });\n                        }\n\n                        onStateChanged.call(this, item, that);\n\n                        if (item.inputLength == 1 && !_option.doNotClose) {\n                            this.close();\n                        }\n                    }\n\n                    item = null;\n                    boundID = null;\n                    inputIndex = null;\n                    val = null;\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5picker.getContentValue\n             * @param {String} boundID\n             * @param {Number} inputIndex\n             * @returns {ax5picker} this\n             */\n            this.getContentValue = function () {\n                return function (boundID, inputIndex) {\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID),\n                        item = this.queue[queIdx],\n                        _input = void 0;\n\n                    if (item) {\n                        _input = item.$target.get(0).tagName.toUpperCase() == \"INPUT\" ? item.$target : jQuery(item.$target.find('input[type]').get(inputIndex));\n                        return _input.val();\n                    }\n\n                    item = null;\n                    boundID = null;\n                    inputIndex = null;\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5picker.open\n             * @param {String} boundObjectId\n             * @returns {ax5picker} this\n             */\n            this.open = function () {\n\n                var pickerContent = {\n                    '@fn': function fn(queIdx, callback) {\n                        var item = this.queue[queIdx];\n                        item.content.call(item, function (html) {\n                            callback(html);\n                        });\n                        return true;\n                    },\n                    'date': function date(queIdx) {\n                        var item = this.queue[queIdx],\n                            html = [],\n                            calendarConfig = jQuery.extend({}, cfg.calendar, { displayDate: new Date() }),\n                            input = item.$target.get(0).tagName.toUpperCase() == \"INPUT\" ? item.$target : item.$target.find('input[type]');\n\n                        for (var i = 0; i < item.inputLength; i++) {\n                            html.push('<div ' + 'style=\"width:' + U.cssNumber(item.content.width) + ';float:left;\" ' + 'class=\"ax-picker-content-box\" ' + 'data-calendar-target=\"' + i + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        // calendar bind\n                        item.pickerCalendar = [];\n                        item.pickerContent.find('[data-calendar-target]').each(function () {\n\n                            // calendarConfig extend ~\n                            var idx = this.getAttribute(\"data-calendar-target\"),\n                                dValue = input.get(idx).value,\n                                d = ax5.util.date(dValue),\n                                dateConvert = {\n                                \"year\": function year(_d) {\n                                    return ax5.util.date(_d, { \"return\": \"yyyy\" });\n                                },\n                                \"month\": function month(_d) {\n                                    return ax5.util.date(_d, { \"return\": \"yyyy-MM\" });\n                                },\n                                \"day\": function day(_d) {\n                                    return _d;\n                                }\n                            };\n\n                            calendarConfig.displayDate = d;\n\n                            if (dValue) calendarConfig.selection = [d];\n\n                            calendarConfig = jQuery.extend(true, calendarConfig, item.content.config || {});\n                            calendarConfig.target = this;\n                            calendarConfig.onClick = function () {\n                                self.setContentValue(item.id, idx, dateConvert[calendarConfig.selectMode || \"day\"](this.date));\n                            };\n\n                            item.pickerCalendar.push({\n                                itemId: item.id,\n                                inputIndex: idx,\n                                ax5uiInstance: new ax5.ui.calendar(calendarConfig)\n                            });\n                        });\n                    },\n                    'secure-num': function secureNum(queIdx) {\n                        var item = this.queue[queIdx],\n                            html = [];\n                        for (var i = 0; i < item.inputLength; i++) {\n                            html.push('<div ' + 'style=\"width:' + U.cssNumber(item.content.width) + ';float:left;\" ' + 'class=\"ax-picker-content-box\" ' + 'data-secure-num-target=\"' + i + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        // secure-num bind\n                        item.pickerContent.find('[data-secure-num-target]').each(function () {\n                            var idx = this.getAttribute(\"data-secure-num-target\"),\n                                po = [];\n\n                            var numArray = function (a) {\n                                var j, x, i;\n                                for (i = a.length; i; i -= 1) {\n                                    j = Math.floor(Math.random() * i);\n                                    x = a[i - 1];\n                                    a[i - 1] = a[j];\n                                    a[j] = x;\n                                }\n                                return a;\n                            }([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\n                            var specialArray = [{ label: \"&#x02190\", fn: \"back\" }, { label: \"C\", fn: \"clear\" }];\n\n                            numArray.forEach(function (n) {\n                                po.push('<div style=\"float:left;' + item.content.config.btnWrapStyle + '\">');\n                                po.push('<button class=\"btn btn-default btn-' + item.content.config.btnTheme + '\" ' + 'style=\"' + item.content.config.btnStyle + '\" data-secure-num-value=\"' + n + '\">' + n + '</button>');\n                                po.push('</div>');\n                            });\n                            specialArray.forEach(function (n) {\n                                po.push('<div style=\"float:left;' + item.content.config.btnWrapStyle + '\">');\n                                po.push('<button class=\"btn btn-default btn-' + item.content.config.specialBtnTheme + '\" ' + 'style=\"' + item.content.config.btnStyle + '\" data-secure-num-value=\"' + n.fn + '\">' + n.label + '</button>');\n                                po.push('</div>');\n                            });\n\n                            po.push('<div style=\"clear:both;\"></div>');\n\n                            $(this).html(po.join('')).on(\"click\", '[data-secure-num-value]', function () {\n                                var act = this.getAttribute(\"data-secure-num-value\");\n                                var _input = item.$target.get(0).tagName.toUpperCase() == \"INPUT\" ? item.$target : jQuery(item.$target.find('input[type]').get(idx));\n                                var val = _input.val();\n\n                                if (act == \"back\") {\n                                    _input.val(val.substring(0, val.length - 1));\n                                } else if (act == \"clear\") {\n                                    _input.val('');\n                                } else {\n                                    _input.val(val + act);\n                                }\n\n                                onStateChanged.call(this, item, {\n                                    self: self,\n                                    state: \"changeValue\",\n                                    item: item,\n                                    value: _input.val()\n                                });\n                            });\n                        });\n                    },\n                    'keyboard': function keyboard(queIdx) {\n                        var item = this.queue[queIdx];\n                        var html = [];\n                        for (var i = 0; i < item.inputLength; i++) {\n                            html.push('<div ' + 'style=\"width:' + U.cssNumber(item.content.width) + ';float:left;\" ' + 'class=\"ax-picker-content-box\" ' + 'data-keyboard-target=\"' + i + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        var keyArray = [[{ value: \"`\", shiftValue: \"~\" }, { value: \"1\", shiftValue: \"!\" }, { value: \"2\", shiftValue: \"@\" }, { value: \"3\", shiftValue: \"#\" }, { value: \"4\", shiftValue: \"$\" }, { value: \"5\", shiftValue: \"%\" }, { value: \"6\", shiftValue: \"^\" }, { value: \"7\", shiftValue: \"&\" }, { value: \"8\", shiftValue: \"*\" }, { value: \"9\", shiftValue: \"(\" }, { value: \"0\", shiftValue: \")\" }, { value: \"-\", shiftValue: \"_\" }, { value: \"=\", shiftValue: \"+\" }, { label: \"&#x02190\", fn: \"back\" }], [{ value: \"q\", shiftValue: \"Q\" }, { value: \"w\", shiftValue: \"W\" }, { value: \"e\", shiftValue: \"E\" }, { value: \"r\", shiftValue: \"R\" }, { value: \"t\", shiftValue: \"T\" }, { value: \"y\", shiftValue: \"Y\" }, { value: \"u\", shiftValue: \"U\" }, { value: \"i\", shiftValue: \"I\" }, { value: \"o\", shiftValue: \"O\" }, { value: \"p\", shiftValue: \"P\" }, { value: \"[\", shiftValue: \"{\" }, { value: \"]\", shiftValue: \"}\" }, { value: \"\\\\\", shiftValue: \"|\" }], [{ label: \"Clear\", fn: \"clear\" }, { value: \"a\", shiftValue: \"A\" }, { value: \"s\", shiftValue: \"S\" }, { value: \"d\", shiftValue: \"D\" }, { value: \"f\", shiftValue: \"F\" }, { value: \"g\", shiftValue: \"G\" }, { value: \"h\", shiftValue: \"H\" }, { value: \"j\", shiftValue: \"J\" }, { value: \"k\", shiftValue: \"K\" }, { value: \"l\", shiftValue: \"L\" }, { value: \";\", shiftValue: \":\" }, { value: \"'\", shiftValue: \"\\\"\" }], [{ label: \"Shift\", fn: \"shift\" }, { value: \"z\", shiftValue: \"Z\" }, { value: \"x\", shiftValue: \"X\" }, { value: \"c\", shiftValue: \"C\" }, { value: \"v\", shiftValue: \"V\" }, { value: \"b\", shiftValue: \"B\" }, { value: \"n\", shiftValue: \"N\" }, { value: \"m\", shiftValue: \"M\" }, { value: \",\", shiftValue: \"<\" }, { value: \".\", shiftValue: \">\" }, { value: \"/\", shiftValue: \"?\" }, { label: \"Close\", fn: \"close\" }]];\n                        var specialArray = [{ label: \"&#x02190\", fn: \"back\" }, { label: \"C\", fn: \"clear\" }];\n\n                        var getKeyBoard = function getKeyBoard(isShiftKey) {\n                            var po = [];\n                            keyArray.forEach(function (row) {\n                                po.push('<div style=\"display: table;margin:0 auto;\">');\n                                row.forEach(function (n) {\n\n                                    var keyValue, keyLabel, btnWrapStyle, btnTheme, btnStyle;\n                                    if (n.fn) {\n                                        keyValue = n.fn;\n                                        keyLabel = n.label;\n                                        btnWrapStyle = item.content.config.specialBtnWrapStyle;\n                                        btnTheme = item.content.config.specialBtnTheme;\n                                        btnStyle = item.content.config.specialBtnStyle;\n                                    } else {\n                                        keyLabel = keyValue = isShiftKey ? n.shiftValue : n.value;\n                                        btnWrapStyle = item.content.config.btnWrapStyle;\n                                        btnTheme = item.content.config.btnTheme;\n                                        btnStyle = item.content.config.btnStyle;\n                                    }\n\n                                    po.push('<div style=\"display: table-cell;' + btnWrapStyle + '\">');\n                                    po.push('<button class=\"btn btn-default btn-' + btnTheme + '\" ' + 'style=\"' + btnStyle + '\" data-keyboard-value=\"' + keyValue + '\">' + keyLabel + '</button>');\n                                    po.push('</div>');\n                                });\n                                po.push('</div>');\n                            });\n                            return po.join('');\n                        };\n\n                        // secure-num bind\n                        item.pickerContent.find('[data-keyboard-target]').each(function () {\n                            var idx = this.getAttribute(\"data-keyboard-target\"),\n                                $this = $(this),\n                                isShiftKey = false,\n                                toggleShift = function toggleShift() {\n                                isShiftKey = !isShiftKey;\n                                $this.html(getKeyBoard(isShiftKey));\n                            };\n\n                            $this.html(getKeyBoard(isShiftKey)).on(\"mousedown\", '[data-keyboard-value]', function () {\n                                var act = this.getAttribute(\"data-keyboard-value\"),\n                                    _input = item.$target.get(0).tagName.toUpperCase() == \"INPUT\" ? item.$target : jQuery(item.$target.find('input[type]').get(idx)),\n                                    val = _input.val();\n\n                                switch (act) {\n                                    case \"back\":\n                                        _input.val(val.substring(0, val.length - 1));\n                                        break;\n                                    case \"clear\":\n                                        _input.val('');\n                                        break;\n                                    case \"shift\":\n                                        toggleShift();\n                                        return false;\n                                        break;\n                                    case \"close\":\n                                        self.close();\n                                        return false;\n                                        break;\n                                    default:\n                                        _input.val(val + act);\n                                }\n\n                                onStateChanged.call(this, item, {\n                                    self: self,\n                                    state: \"changeValue\",\n                                    item: item,\n                                    value: _input.val()\n                                });\n                            });\n                        });\n                    },\n                    'numpad': function numpad(queIdx) {\n                        var item = this.queue[queIdx],\n                            html = [];\n                        for (var i = 0; i < item.inputLength; i++) {\n                            html.push('<div ' + 'style=\"width:' + U.cssNumber(item.content.width) + ';float:left;\" ' + 'class=\"ax-picker-content-box\" ' + 'data-numpad-target=\"' + i + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        // secure-num bind\n                        item.pickerContent.find('[data-numpad-target]').each(function () {\n                            var idx = this.getAttribute(\"data-numpad-target\"),\n                                po = [],\n                                keyArray = item.content.config.keyArray || [{ value: \"7\" }, { value: \"8\" }, { value: \"9\" }, { label: \"BS\", fn: \"back\" }, { value: \"4\" }, { value: \"5\" }, { value: \"6\" }, { label: \"CLS\", fn: \"clear\" }, { value: \"1\" }, { value: \"2\" }, { value: \"3\" }, { value: \"\" }, { value: \".\" }, { value: \"0\" }, { value: \"\" }, { label: \"OK\", fn: \"enter\" }];\n\n                            keyArray.forEach(function (n) {\n                                var keyValue = void 0,\n                                    keyLabel = void 0,\n                                    btnWrapStyle = void 0,\n                                    btnTheme = void 0,\n                                    btnStyle = void 0;\n\n                                if (n.fn) {\n                                    keyValue = n.fn;\n                                    keyLabel = n.label;\n                                    btnTheme = item.content.config.specialBtnTheme;\n                                    btnWrapStyle = item.content.config.specialBtnWrapStyle;\n                                    btnStyle = item.content.config.specialBtnStyle;\n                                } else {\n                                    keyLabel = keyValue = n.value;\n                                    btnTheme = keyValue ? item.content.config.btnTheme : \"\";\n                                    btnWrapStyle = item.content.config.btnWrapStyle;\n                                    btnStyle = item.content.config.btnStyle;\n                                }\n\n                                po.push('<div style=\"float:left;' + btnWrapStyle + '\">');\n                                po.push('<button class=\"btn btn-default btn-' + btnTheme + '\" ' + 'style=\"' + btnStyle + '\" data-numpad-value=\"' + keyValue + '\">' + (keyLabel || \"&nbsp;\") + '</button>');\n                                po.push('</div>');\n                            });\n\n                            po.push('<div style=\"clear:both;\"></div>');\n\n                            $(this).html(po.join('')).on(\"mousedown\", '[data-numpad-value]', function () {\n                                var act = this.getAttribute(\"data-numpad-value\"),\n                                    _input = item.$target.get(0).tagName.toUpperCase() == \"INPUT\" ? item.$target : jQuery(item.$target.find('input[type]').get(idx)),\n                                    val = _input.val(),\n                                    state = \"\";\n\n                                switch (act) {\n                                    case \"back\":\n                                        state = \"changeValue\";\n                                        _input.val(val.substring(0, val.length - 1));\n                                        break;\n                                    case \"clear\":\n                                        state = \"changeValue\";\n                                        _input.val('');\n                                        break;\n                                    case \"enter\":\n                                        self.close(item, \"enter\");\n                                        return false;\n                                        break;\n                                    case \"close\":\n                                        self.close();\n                                        return false;\n                                        break;\n                                    default:\n                                        state = \"changeValue\";\n                                        _input.val(val + act);\n                                }\n\n                                onStateChanged.call(this, item, {\n                                    self: self,\n                                    state: state,\n                                    item: item,\n                                    value: _input.val()\n                                });\n                            });\n                        });\n                    },\n                    'color': function color(queIdx) {\n                        var item = this.queue[queIdx],\n                            html = [],\n                            paletteConfig = jQuery.extend({}, cfg.palette),\n                            input = item.$target.get(0).tagName.toUpperCase() == \"INPUT\" ? item.$target : item.$target.find('input[type]');\n\n                        for (var i = 0; i < item.inputLength; i++) {\n                            html.push('<div ' + 'style=\"padding: 5px;width:' + U.cssNumber(item.content.width) + ';float:left;\" ' + 'class=\"ax-picker-content-box\" ' + 'data-palette-target=\"' + i + '\" data-ax5palette=\"ax5picker-' + item.id + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        // calendar bind\n                        item.pickerPalette = [];\n\n                        item.pickerContent.find('[data-palette-target]').each(function () {\n                            // calendarConfig extend ~\n                            var idx = this.getAttribute(\"data-palette-target\"),\n                                dColor = input.get(idx).value;\n\n                            paletteConfig.selectedColor = dColor;\n                            paletteConfig = jQuery.extend(true, paletteConfig, item.content.config || {});\n                            paletteConfig.target = this;\n                            paletteConfig.onClick = function (color) {\n                                self.setContentValue(item.id, idx, color);\n                            };\n                            paletteConfig.onUpdateColor = function (color) {\n                                self.setContentValue(item.id, idx, color, { doNotClose: true });\n                            };\n\n                            item.pickerPalette.push({\n                                itemId: item.id,\n                                inputIndex: idx,\n                                ax5uiInstance: new ax5.ui.palette(paletteConfig)\n                            });\n                        });\n                    }\n                };\n\n                return function (boundID, tryCount) {\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID),\n                        item = this.queue[queIdx];\n\n                    /**\n                     다른 피커가 있는 경우와 다른 피커를 닫고 다시 오픈 명령이 내려진 경우에 대한 예외 처리 구문\n                     */\n                    if (this.openTimer) clearTimeout(this.openTimer);\n                    if (this.activePicker) {\n                        if (this.activePickerQueueIndex == queIdx) {\n                            return this;\n                        }\n\n                        if (tryCount > 2) return this;\n                        this.close();\n                        this.openTimer = setTimeout(function () {\n                            this.open(queIdx, (tryCount || 0) + 1);\n                        }.bind(this), cfg.animateTime);\n                        return this;\n                    }\n\n                    this.activePicker = jQuery(PICKER.tmpl.get.call(this, \"pickerTmpl\", item));\n                    this.activePickerArrow = this.activePicker.find(\".ax-picker-arrow\");\n                    this.activePickerQueueIndex = queIdx;\n                    item.pickerContent = this.activePicker.find('[data-picker-els=\"content\"]');\n\n                    if (U.isFunction(item.content)) {\n                        // 함수타입\n                        item.pickerContent.html(\"Loading..\");\n                        pickerContent[\"@fn\"].call(this, queIdx, function (html) {\n                            item.pickerContent.html(html);\n                        });\n                    } else {\n                        if (item.content.type in pickerContent) {\n                            pickerContent[item.content.type].call(this, queIdx);\n                        }\n                    }\n\n                    // bind event picker btns\n                    this.activePicker.find(\"[data-picker-btn]\").on(cfg.clickEventName, function (e) {\n                        onBtnClick.call(this, e || window.event, queIdx);\n                    }.bind(this));\n\n                    alignPicker.call(this, \"append\");\n\n                    jQuery(window).bind(\"resize.ax5picker\", function () {\n                        alignPicker.call(this);\n                    }.bind(this));\n\n                    // bind key event\n                    jQuery(window).bind(\"keyup.ax5picker\", function (e) {\n                        e = e || window.event;\n                        onBodyKeyup.call(this, e);\n                        U.stopEvent(e);\n                    }.bind(this));\n\n                    jQuery(window).bind(\"click.ax5picker\", function (e) {\n                        e = e || window.event;\n                        onBodyClick.call(this, e);\n                        U.stopEvent(e);\n                    }.bind(this));\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"open\",\n                        item: item\n                    });\n\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5picker.close\n             * @returns {ax5picker} this\n             */\n            this.close = function (item, state) {\n                if (this.closeTimer) clearTimeout(this.closeTimer);\n                if (!this.activePicker) return this;\n\n                item = this.queue[this.activePickerQueueIndex];\n\n                this.activePicker.addClass(\"destroy\");\n                jQuery(window).unbind(\"resize.ax5picker\");\n                jQuery(window).unbind(\"click.ax5picker\");\n                jQuery(window).unbind(\"keyup.ax5picker\");\n\n                this.closeTimer = setTimeout(function () {\n                    if (this.activePicker) this.activePicker.remove();\n                    this.activePicker = null;\n                    this.activePickerQueueIndex = -1;\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: state || \"close\"\n                    });\n                }.bind(this), cfg.animateTime);\n\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n    }());\n\n    PICKER = ax5.ui.picker;\n})();\n\n// ax5.ui.picker.tmpl\n(function () {\n\n    var PICKER = ax5.ui.picker;\n    var U = ax5.util;\n\n    var pickerTmpl = function pickerTmpl() {\n        return '\\n<div class=\"ax5-ui-picker {{theme}}\" id=\"{{id}}\" data-picker-els=\"root\" {{#zIndex}}style=\"z-index:{{zIndex}};\"{{/zIndex}}>\\n    {{#title}}\\n        <div class=\"ax-picker-heading\">{{title}}</div>\\n    {{/title}}\\n    <div class=\"ax-picker-body\">\\n        <div class=\"ax-picker-content\" data-picker-els=\"content\" style=\"width:{{contentWidth}}px;\"></div>\\n        {{#btns}}\\n            <div class=\"ax-picker-buttons\">\\n            {{#btns}}\\n                {{#@each}}\\n                <button data-picker-btn=\"{{@key}}\" class=\"btn btn-default {{@value.theme}}\">{{@value.label}}</button>\\n                {{/@each}}\\n            {{/btns}}\\n            </div>\\n        {{/btns}}\\n    </div>\\n    <div class=\"ax-picker-arrow\"></div>\\n</div>\\n';\n    };\n\n    PICKER.tmpl = {\n        \"pickerTmpl\": pickerTmpl,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(PICKER.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n/**\n * ax5.ui.picker_instance\n * @type {ax5picker}\n * @example\n * ```js\n * // picker 기본 속성을 변경해야 한다면\n * ax5.ui.picker_instance.setConfig({\n * });\n *\n * ```\n */\nif (ax5 && ax5.ui && ax5.ui.picker) {\n    ax5.ui.picker_instance = new ax5.ui.picker();\n\n    jQuery.fn.ax5picker = function () {\n        return function (config) {\n            if (ax5.util.isString(arguments[0])) {\n                var methodName = arguments[0];\n\n                switch (methodName) {\n                    case \"open\":\n                        return ax5.ui.picker_instance.open(this);\n                        break;\n                    case \"close\":\n                        return ax5.ui.picker_instance.close(this);\n                        break;\n                    case \"setValue\":\n                        return ax5.ui.picker_instance.setContentValue(this, arguments[1], arguments[2]);\n                        break;\n                    default:\n                        return this;\n                }\n            } else {\n                if (typeof config == \"undefined\") config = {};\n                jQuery.each(this, function () {\n                    var defaultConfig = {\n                        target: this\n                    };\n                    config = jQuery.extend(true, config, defaultConfig);\n                    ax5.ui.picker_instance.bind(config);\n                });\n            }\n            return this;\n        };\n    }();\n}\n\n// ax5.ui.formatter\n(function () {\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var FORMATTER = void 0;\n\n    UI.addClass({\n        className: \"formatter\"\n    }, function () {\n        var TODAY = new Date();\n        var setSelectionRange = function setSelectionRange(input, pos) {\n            if (typeof pos == \"undefined\") {\n                pos = input.value.length;\n            }\n            if (input.setSelectionRange) {\n                input.focus();\n                input.setSelectionRange(pos, pos);\n            } else if (input.createTextRange) {\n                var range = input.createTextRange();\n                range.collapse(true);\n                range.moveEnd(\"character\", pos);\n                range.moveStart(\"character\", pos);\n                range.select();\n            } else if (input.selectionStart) {\n                input.focus();\n                input.selectionStart = pos;\n                input.selectionEnd = pos;\n            }\n        };\n\n        /**\n         * @class ax5formatter\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * $('#idInputTime').attr('data-ax5formatter', 'time').ax5formatter();\n         * $('#idInputMoney').attr('data-ax5formatter', 'money').ax5formatter();\n         * $('#idInputPhone').attr('data-ax5formatter', 'phone').ax5formatter();\n         * $('#idInputDate').attr('data-ax5formatter', 'date').ax5formatter();\n         *\n         * $('#ax5formatter-custom').ax5formatter({\n         *     pattern: \"custom\",\n         *     getEnterableKeyCodes: function(){\n         *         return {\n         *             '65':'a',\n         *             '66':'b',\n         *             '67':'c',\n         *             '68':'d',\n         *             '69':'e',\n         *             '70':'f'\n         *         };\n         *     },\n         *     getPatternValue: function(obj){\n         *         return obj.value.replace(/./g, \"*\");\n         *     }\n         * });\n         * ```\n         */\n        return function () {\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                animateTime: 250\n            };\n\n            this.queue = [];\n            this.openTimer = null;\n            this.closeTimer = null;\n\n            cfg = this.config;\n\n            var formatterEvent = {\n                focus: function focus(opts, optIdx, e) {\n                    if (!opts.$input.data(\"__originValue__\")) opts.$input.data(\"__originValue__\", opts.$input.val());\n                },\n                /* 키 다운 이벤트에서 입력할 수 없는 키 입력을 방어 */\n                keydown: function keydown(opts, optIdx, e) {\n                    var isStop = false;\n                    if (!opts.enterableKeyCodes) {} else if (e.which && opts.enterableKeyCodes[e.which]) {} else if (!e.metaKey && !e.ctrlKey && !e.shiftKey) {\n                        //console.log(e.which, opts.enterableKeyCodes);\n                        isStop = true;\n                    }\n                    if (isStop) ax5.util.stopEvent(e);\n                },\n                /* 키 업 이벤트에서 패턴을 적용 */\n                keyup: function keyup(opts, optIdx, e) {\n                    var elem = opts.$input.get(0),\n                        elemFocusPosition,\n                        beforeValue,\n                        newValue,\n                        selection,\n                        selectionLength;\n\n                    if (\"selectionStart\" in elem) {\n                        // Standard-compliant browsers\n                        elemFocusPosition = elem.selectionStart;\n                    } else if (document.selection) {\n                        // IE\n                        //elem.focus();\n                        selection = document.selection.createRange();\n                        selectionLength = document.selection.createRange().text.length;\n                        selection.moveStart(\"character\", -elem.value.length);\n                        elemFocusPosition = selection.text.length - selectionLength;\n                    }\n\n                    beforeValue = elem.value;\n                    if (opts.pattern in FORMATTER.formatter) {\n                        newValue = FORMATTER.formatter[opts.pattern].getPatternValue.call(this, opts, optIdx, e, elem.value);\n                    } else {\n                        newValue = beforeValue;\n                    }\n\n                    if (newValue != beforeValue) {\n                        opts.$input.val(newValue).trigger(\"change\");\n                        setSelectionRange(elem, elemFocusPosition + newValue.length - beforeValue.length);\n                    }\n                },\n                blur: function blur(opts, optIdx, e, _force) {\n                    var elem = opts.$input.get(0),\n                        beforeValue,\n                        newValue;\n\n                    opts.$input.removeData(\"__originValue__\");\n\n                    beforeValue = elem.value;\n                    if (opts.pattern in FORMATTER.formatter) {\n                        newValue = FORMATTER.formatter[opts.pattern].getPatternValue.call(this, opts, optIdx, e, elem.value, \"blur\");\n                    } else {\n                        newValue = beforeValue;\n                    }\n\n                    if (_force) {\n                        opts.$input.val(newValue);\n                    } else {\n                        if (newValue != beforeValue) {\n                            opts.$input.val(newValue).trigger(\"change\");\n                        }\n                    }\n                }\n            };\n\n            var bindFormatterTarget = function bindFormatterTarget(opts, optIdx) {\n                if (!opts.pattern) {\n                    if (opts.$target.get(0).tagName == \"INPUT\") {\n                        opts.pattern = opts.$target.attr(\"data-ax5formatter\");\n                    } else {\n                        opts.pattern = opts.$target.find('input[type=\"text\"]').attr(\"data-ax5formatter\");\n                    }\n                    if (!opts.pattern) {\n                        console.log(ax5.info.getError(\"ax5formatter\", \"501\", \"bind\"));\n                        console.log(opts.target);\n                        return this;\n                    }\n                }\n\n                var re = /[^\\(^\\))]+/gi,\n                    matched = opts.pattern.match(re);\n\n                opts.pattern = matched[0];\n                opts.patternArgument = matched[1] || \"\";\n\n                // 함수타입\n                if (opts.pattern in FORMATTER.formatter) {\n                    opts.enterableKeyCodes = FORMATTER.formatter[opts.pattern].getEnterableKeyCodes.call(this, opts, optIdx);\n                }\n\n                opts.$input.unbind(\"focus.ax5formatter\").bind(\"focus.ax5formatter\", formatterEvent.focus.bind(this, this.queue[optIdx], optIdx));\n\n                opts.$input.unbind(\"keydown.ax5formatter\").bind(\"keydown.ax5formatter\", formatterEvent.keydown.bind(this, this.queue[optIdx], optIdx));\n\n                opts.$input.unbind(\"keyup.ax5formatter\").bind(\"keyup.ax5formatter\", formatterEvent.keyup.bind(this, this.queue[optIdx], optIdx));\n\n                opts.$input.unbind(\"blur.ax5formatter\").bind(\"blur.ax5formatter\", formatterEvent.blur.bind(this, this.queue[optIdx], optIdx));\n\n                formatterEvent.blur.call(this, this.queue[optIdx], optIdx);\n\n                return this;\n            };\n\n            var getQueIdx = function getQueIdx(boundID) {\n                if (!U.isString(boundID)) {\n                    boundID = jQuery(boundID).data(\"data-formatter\");\n                }\n                /*\n                           if (!U.isString(boundID)) {\n                           console.log(ax5.info.getError(\"ax5formatter\", \"402\", \"getQueIdx\"));\n                           return;\n                           }\n                           */\n                return U.search(this.queue, function () {\n                    return this.id == boundID;\n                });\n            };\n\n            /**\n             * Preferences of formatter UI\n             * @method ax5formatter.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5.ui.formatter}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {};\n\n            this.bind = function (opts) {\n                var formatterConfig = {},\n                    optIdx = void 0;\n\n                jQuery.extend(true, formatterConfig, cfg);\n                if (opts) jQuery.extend(true, formatterConfig, opts);\n                opts = formatterConfig;\n\n                if (!opts.target) {\n                    console.log(ax5.info.getError(\"ax5formatter\", \"401\", \"bind\"));\n                    return this;\n                }\n                opts.$target = jQuery(opts.target);\n\n                if (opts.$target.get(0).tagName == \"INPUT\") {\n                    opts.$input = opts.$target;\n                } else {\n                    opts.$input = opts.$target.find('input[type=\"text\"]');\n                    if (opts.$input.length > 1) {\n                        opts.$input.each(function () {\n                            opts.target = this;\n                            self.bind(opts);\n                        });\n                        return this;\n                    }\n                }\n\n                opts.$input = opts.$target.get(0).tagName == \"INPUT\" ? opts.$target : opts.$target.find('input[type=\"text\"]');\n                if (!opts.id) opts.id = opts.$input.data(\"ax5-formatter\");\n\n                if (!opts.id) {\n                    opts.id = \"ax5-formatter-\" + ax5.getGuid();\n                    opts.$input.data(\"ax5-formatter\", opts.id);\n                }\n                optIdx = U.search(this.queue, function () {\n                    return this.id == opts.id;\n                });\n\n                if (optIdx === -1) {\n                    this.queue.push(opts);\n                    bindFormatterTarget.call(this, this.queue[this.queue.length - 1], this.queue.length - 1);\n                } else {\n                    this.queue[optIdx] = opts;\n                    bindFormatterTarget.call(this, this.queue[optIdx], optIdx);\n                }\n\n                return this;\n            };\n\n            /**\n             * formatter value 를 다시 적용합니다.\n             * @method ax5formatter.formatting\n             * @returns {ax5formatter}\n             * @example\n             * ```js\n             * $('[data-ax5formatter=\"time\"]').ax5formatter(\"formatting\"); // 하나만\n             * $('[data-ax5formatter]').ax5formatter(\"formatting\"); // 모두\n             * ```\n             */\n            this.formatting = function (boundID) {\n                var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                if (queIdx === -1) {\n                    var i = this.queue.length;\n                    while (i--) {\n                        formatterEvent.blur.call(this, this.queue[i], i, null, true);\n                    }\n                } else {\n                    formatterEvent.blur.call(this, this.queue[queIdx], queIdx, null, true);\n                }\n                return this;\n            };\n\n            this.unbind = function () {\n                // 구현해야함.\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n    }());\n\n    FORMATTER = ax5.ui.formatter;\n})();\n\n// ax5.ui.formatter.formatter\n(function () {\n    var FORMATTER = ax5.ui.formatter;\n    var U = ax5.util;\n    var TODAY = new Date();\n\n    var ctrlKeys = {\n        \"18\": \"KEY_ALT\",\n        \"8\": \"KEY_BACKSPACE\",\n        \"17\": \"KEY_CONTROL\",\n        \"46\": \"KEY_DELETE\",\n        \"40\": \"KEY_DOWN\",\n        \"35\": \"KEY_END\",\n        \"187\": \"KEY_EQUAL\",\n        \"27\": \"KEY_ESC\",\n        \"36\": \"KEY_HOME\",\n        \"45\": \"KEY_INSERT\",\n        \"37\": \"KEY_LEFT\",\n        \"189\": \"KEY_MINUS\",\n        \"34\": \"KEY_PAGEDOWN\",\n        \"33\": \"KEY_PAGEUP\",\n        // \"190\": \"KEY_PERIOD\",\n        \"13\": \"KEY_RETURN\",\n        \"39\": \"KEY_RIGHT\",\n        \"16\": \"KEY_SHIFT\",\n        // \"32\": \"KEY_SPACE\",\n        \"9\": \"KEY_TAB\",\n        \"38\": \"KEY_UP\",\n        \"91\": \"KEY_WINDOW\"\n        //\"107\" : \"NUMPAD_ADD\",\n        //\"194\" : \"NUMPAD_COMMA\",\n        //\"110\" : \"NUMPAD_DECIMAL\",\n        //\"111\" : \"NUMPAD_DIVIDE\",\n        //\"12\" : \"NUMPAD_EQUAL\",\n        //\"106\" : \"NUMPAD_MULTIPLY\",\n        //\"109\" : \"NUMPAD_SUBTRACT\"\n    };\n    var numKeys = {\n        \"48\": 1,\n        \"49\": 1,\n        \"50\": 1,\n        \"51\": 1,\n        \"52\": 1,\n        \"53\": 1,\n        \"54\": 1,\n        \"55\": 1,\n        \"56\": 1,\n        \"57\": 1,\n        \"96\": 1,\n        \"97\": 1,\n        \"98\": 1,\n        \"99\": 1,\n        \"100\": 1,\n        \"101\": 1,\n        \"102\": 1,\n        \"103\": 1,\n        \"104\": 1,\n        \"105\": 1\n    };\n    var pattern_money = {\n        getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n            var enterableKeyCodes = {\n                \"188\": \",\"\n            };\n            if (_opts.patternArgument == \"int\") {\n                // 소수점 입력 안됨\n            } else {\n                enterableKeyCodes[\"190\"] = \".\"; // 소수점 입력 허용\n            }\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function getPatternValue(_opts, optIdx, e, val, eType) {\n            val = val.replace(/[^0-9^\\.^\\-]/g, \"\");\n            var regExpPattern = new RegExp(\"([0-9])([0-9][0-9][0-9][,.])\"),\n                arrNumber = val.split(\".\"),\n                returnValue;\n\n            arrNumber[0] += \".\";\n\n            do {\n                arrNumber[0] = arrNumber[0].replace(regExpPattern, \"$1,$2\");\n            } while (regExpPattern.test(arrNumber[0]));\n\n            if (arrNumber.length > 1) {\n                if (U.isNumber(_opts.maxRound)) {\n                    returnValue = arrNumber[0] + U.left(arrNumber[1], _opts.maxRound);\n                } else {\n                    returnValue = arrNumber.join(\"\");\n                }\n            } else {\n                returnValue = arrNumber[0].split(\".\")[0];\n            }\n\n            return returnValue;\n        }\n    };\n\n    var pattern_number = {\n        getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n            var enterableKeyCodes = {\n                \"190\": \".\",\n                \"110\": \".\"\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function getPatternValue(_opts, optIdx, e, val, eType) {\n            val = val.replace(/[^0-9^\\.^\\-]/g, \"\");\n            var arrNumber = val.split(\".\"),\n                returnValue;\n\n            arrNumber[0] += \".\";\n\n            if (arrNumber.length > 1) {\n                if (U.isNumber(_opts.maxRound)) {\n                    returnValue = arrNumber[0] + U.left(arrNumber[1], _opts.maxRound);\n                } else {\n                    returnValue = arrNumber.join(\"\");\n                }\n            } else {\n                returnValue = arrNumber[0].split(\".\")[0];\n            }\n\n            return returnValue;\n        }\n    };\n\n    var pattern_date = {\n        getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n            var enterableKeyCodes = {\n                \"189\": \"-\",\n                \"191\": \"/\"\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function getPatternValue(_opts, optIdx, e, val, eType) {\n            val = val.replace(/\\D/g, \"\");\n            if (val == \"\") return val;\n            var regExpPattern = /^([0-9]{4})\\-?([0-9]{1,2})?\\-?([0-9]{1,2})?.*$/;\n\n            if (_opts.patternArgument == \"time\") {\n                regExpPattern = /^([0-9]{4})\\-?([0-9]{1,2})?\\-?([0-9]{1,2})? ?([0-9]{1,2})?:?([0-9]{1,2})?:?([0-9]{1,2})?.*$/;\n            } else if (_opts.patternArgument == \"year\") {\n                regExpPattern = /^([0-9]{0,4})?.*$/;\n            } else if (_opts.patternArgument == \"month\") {\n                regExpPattern = /^([0-9]{4})\\-?([0-9]{1,2})?.*$/;\n            }\n\n            var matchedPattern = val.match(regExpPattern),\n                returnValue = \"\",\n                inspectValue = function inspectValue(val, format, inspect, data) {\n                var _val = {\n                    Y: function Y(v) {\n                        if (typeof v == \"undefined\") v = TODAY.getFullYear();\n                        if (v == \"\" || v == \"0000\") v = TODAY.getFullYear();\n                        return v.length < 4 ? U.setDigit(v, 4) : v;\n                    },\n                    M: function M(v) {\n                        if (typeof v == \"undefined\") v = TODAY.getMonth() + 1;\n                        return v > 12 ? 12 : v == 0 ? \"01\" : U.setDigit(v, 2);\n                    },\n                    D: function D(v) {\n                        if (typeof v == \"undefined\") v = TODAY.getDate() + 1;\n                        var dLen = U.daysOfMonth(data[1], data[2] - 1);\n                        return v > dLen ? dLen : v == 0 ? \"01\" : U.setDigit(v, 2);\n                    },\n                    h: function h(v) {\n                        if (!v) v = 0;\n                        return v > 23 ? 23 : U.setDigit(v, 2);\n                    },\n                    m: function m(v) {\n                        if (!v) v = 0;\n                        return v > 59 ? 59 : U.setDigit(v, 2);\n                    },\n                    s: function s(v) {\n                        if (!v) v = 0;\n                        return v > 59 ? 59 : U.setDigit(v, 2);\n                    }\n                };\n                return inspect ? _val[format](val) : val;\n            };\n\n            returnValue = val.replace(regExpPattern, function (a, b) {\n                var nval = [];\n\n                if (_opts.patternArgument == \"year\") {\n                    nval.push(inspectValue(arguments[1], \"Y\", eType));\n                } else if (_opts.patternArgument == \"month\") {\n                    nval.push(inspectValue(arguments[1], \"Y\", eType));\n                    if (arguments[2] || eType) nval.push(\"-\" + inspectValue(arguments[2], \"M\", eType));\n                } else if (_opts.patternArgument == \"time\") {\n                    nval.push(inspectValue(arguments[1], \"Y\", eType));\n                    if (arguments[2] || eType) nval.push(\"-\" + inspectValue(arguments[2], \"M\", eType));\n                    if (arguments[3] || eType) nval.push(\"-\" + inspectValue(arguments[3], \"D\", eType, arguments));\n                    if (arguments[4] || eType) nval.push(\" \" + inspectValue(arguments[4], \"h\", eType));\n                    if (arguments[5] || eType) nval.push(\":\" + inspectValue(arguments[5], \"m\", eType));\n                    if (arguments[6] || eType) nval.push(\":\" + inspectValue(arguments[6], \"s\", eType));\n                } else {\n                    nval.push(inspectValue(arguments[1], \"Y\", eType));\n                    if (arguments[2] || eType) nval.push(\"-\" + inspectValue(arguments[2], \"M\", eType));\n                    if (arguments[3] || eType) nval.push(\"-\" + inspectValue(arguments[3], \"D\", eType, arguments));\n                }\n                return nval.join(\"\");\n            });\n\n            if (eType == \"blur\" && !matchedPattern) {\n                returnValue = function () {\n                    var nval = [];\n\n                    if (_opts.patternArgument == \"year\") {\n                        nval.push(inspectValue(0, \"Y\", eType));\n                    } else if (_opts.patternArgument == \"month\") {\n                        nval.push(inspectValue(0, \"Y\", eType));\n                        nval.push(\"-\" + inspectValue(0, \"M\", eType));\n                    } else if (_opts.patternArgument == \"time\") {\n                        nval.push(inspectValue(0, \"Y\", eType));\n                        nval.push(\"-\" + inspectValue(0, \"M\", eType));\n                        nval.push(\"-\" + inspectValue(0, \"D\", eType, arguments));\n                        nval.push(\" \" + inspectValue(0, \"h\", eType));\n                        nval.push(\":\" + inspectValue(0, \"m\", eType));\n                        nval.push(\":\" + inspectValue(0, \"s\", eType));\n                    } else {\n                        nval.push(inspectValue(0, \"Y\", eType));\n                        nval.push(\"-\" + inspectValue(0, \"M\", eType));\n                        nval.push(\"-\" + inspectValue(0, \"D\", eType, arguments));\n                    }\n                    return nval.join(\"\");\n                }();\n            } else if (!matchedPattern) returnValue = returnValue.length > 4 ? U.left(returnValue, 4) : returnValue;\n\n            return returnValue;\n        }\n    };\n\n    var pattern_time = {\n        getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n            var enterableKeyCodes = {\n                \"186\": \":\"\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function getPatternValue(_opts, optIdx, e, val, eType) {\n            val = val.replace(/\\D/g, \"\");\n            var regExpPattern = /^([0-9]{1,2})?:?([0-9]{1,2})?:?([0-9]{1,2})?.*$/;\n\n            var matchedPattern = val.match(regExpPattern),\n                returnValue = val.replace(regExpPattern, function (a, b) {\n                var nval = [arguments[1]];\n                if (arguments[2]) nval.push(\":\" + arguments[2]);\n                if (arguments[3]) nval.push(\":\" + arguments[3]);\n                return nval.join(\"\");\n            });\n\n            if (!matchedPattern) returnValue = returnValue.length > 2 ? U.left(returnValue, 2) : returnValue;\n\n            return returnValue;\n        }\n    };\n\n    var pattern_bizno = {\n        getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n            var enterableKeyCodes = {\n                \"189\": \"-\"\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function getPatternValue(_opts, optIdx, e, val, eType) {\n            val = val.replace(/\\D/g, \"\");\n            var regExpPattern = /^([0-9]{3})\\-?([0-9]{1,2})?\\-?([0-9]{1,5})?.*$/,\n                returnValue = val.replace(regExpPattern, function (a, b) {\n                var nval = [arguments[1]];\n                if (arguments[2]) nval.push(arguments[2]);\n                if (arguments[3]) nval.push(arguments[3]);\n                return nval.join(\"-\");\n            });\n\n            return returnValue;\n        }\n    };\n\n    var pattern_phone = {\n        getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n            var enterableKeyCodes = {\n                \"189\": \"-\",\n                \"188\": \",\",\n                \"107\": \"+\",\n                \"187\": \"+\"\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function getPatternValue(_opts, optIdx, e, _val, eType) {\n            var val = _val.replace(/\\D/g, \"\");\n\n            var regExpPattern3 = /^([0-9]{3})\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?/;\n\n            if (_val.substr(0, 1) == \"+\") {\n                val = \"+\" + _val.replace(/\\D/g, \"\");\n                regExpPattern3 = /^\\+?([0-9]{2}) ?([0-9]{3})\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?/;\n            }\n            if (val.substr(0, 2) == \"02\") {\n                regExpPattern3 = /^([0-9]{2})\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?/;\n            }\n\n            var returnValue = val.replace(regExpPattern3, function (a, b) {\n                console.log(a, b);\n\n                var nval = [arguments[1]];\n                if (arguments[2]) nval.push(arguments[2]);\n                if (arguments[3]) nval.push(arguments[3]);\n                if (arguments[4]) nval.push(arguments[4]);\n                if (arguments[5]) nval.push(arguments[5]);\n                return nval.join(\"-\");\n            });\n            return returnValue;\n        }\n    };\n\n    var pattern_credit = {\n        getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n            var enterableKeyCodes = {\n                \"189\": \"-\"\n            };\n            return jQuery.extend(enterableKeyCodes, FORMATTER.formatter.ctrlKeys, FORMATTER.formatter.numKeys);\n        },\n        getPatternValue: function getPatternValue(_opts, optIdx, e, val, eType) {\n            val = val.replace(/\\D/g, \"\").substring(0, 16);\n\n            var regExpPattern3 = /^([0-9]{4})\\-?([0-9]{4})?\\-?([0-9]{4})?\\-?([0-9]{4})?/,\n                returnValue = val.replace(regExpPattern3, function (a, b) {\n                var nval = [arguments[1]];\n                if (arguments[2]) nval.push(arguments[2]);\n                if (arguments[3]) nval.push(arguments[3]);\n                if (arguments[4]) nval.push(arguments[4]);\n                return nval.join(\"-\");\n            });\n            return returnValue;\n        }\n    };\n\n    var pattern_custom = {\n        getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n            if (_opts.getEnterableKeyCodes) {\n                return _opts.getEnterableKeyCodes.call(_opts, { $input: _opts.$input });\n            } else {\n                return null;\n            }\n        },\n        getPatternValue: function getPatternValue(_opts, optIdx, e, val, eType) {\n            if (_opts.getPatternValue) {\n                return _opts.getPatternValue.call(_opts, {\n                    event: e,\n                    $input: _opts.$input,\n                    value: val\n                });\n            }\n        }\n    };\n\n    FORMATTER.formatter = {\n        ctrlKeys: ctrlKeys,\n        numKeys: numKeys,\n        money: pattern_money,\n        number: pattern_number,\n        date: pattern_date,\n        time: pattern_time,\n        bizno: pattern_bizno,\n        phone: pattern_phone,\n        credit: pattern_credit,\n        custom: pattern_custom\n    };\n})();\n\n/*\n * Copyright (c) 2017. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\nax5.ui.formatter_instance = new ax5.ui.formatter();\n\njQuery.fn.ax5formatter = function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"formatting\":\n                    return ax5.ui.formatter_instance.formatting(this);\n                    break;\n\n                case \"unbind\":\n                    return ax5.ui.formatter_instance.unbind(this);\n                    break;\n\n                default:\n                    return this;\n            }\n        } else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.formatter_instance.bind(config);\n            });\n        }\n        return this;\n    };\n}();\n\n// ax5.ui.menu\n(function () {\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MENU;\n\n    UI.addClass({\n        className: \"menu\"\n    }, function () {\n        /**\n         * @class ax5.ui.menu\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var menu = new ax5.ui.menu({\n         *     theme: 'primary',\n         *     iconWidth: 20,\n         *     acceleratorWidth: 100,\n         *     itemClickAndClose: false,\n         *     icons: {\n         *         'arrow': '<i class=\"fa fa-caret-right\"></i>'\n         *     },\n         *     columnKeys: {\n         *         label: 'name',\n         *         items: 'chidren'\n         *     },\n         *     items: [\n         *         {\n         *             icon: '<i class=\"fa fa-archive\"></i>',\n         *             name: \"Menu Parent 0\",\n         *             chidren: [\n         *                 {\n         *                     check: {\n         *                         type: 'checkbox',\n         *                         name: 'A',\n         *                         value: '0',\n         *                         checked: false\n         *                     },\n         *                     name: \"Menu Z\",\n         *                     data: {},\n         *                     role: \"\",\n         *                     accelerator: \"CmdOrCtrl+Z\"\n         *                 },\n         *                 {\n         *                     check: {\n         *                         type: 'checkbox',\n         *                         name: 'A',\n         *                         value: '1',\n         *                         checked: true\n         *                     },\n         *                     name: \"Menu A\",\n         *                     data: {},\n         *                     role: \"\"\n         *                 }\n         *             ],\n         *             filterType: \"A\"\n         *         },\n         *         {\n         *             divide: true,\n         *             filterType: \"A\"\n         *         },\n         *         {\n         *             icon: '<i class=\"fa fa-mixcloud\"></i>',\n         *             name: \"Menu Parent 1\",\n         *             chidren: [\n         *                 {\n         *                     name: \"Menu Z\",\n         *                     data: {},\n         *                     role: \"\",\n         *                     chidren: [\n         *                         {\n         *                             name: \"Menu Z\",\n         *                             data: {},\n         *                             role: \"\"\n         *                         },\n         *                         {\n         *                             name: \"Menu A\",\n         *                             data: {},\n         *                             role: \"\"\n         *                         }\n         *                     ]\n         *                 },\n         *                 {\n         *                     name: \"Menu A\",\n         *                     data: {},\n         *                     role: \"\"\n         *                 }\n         *             ],\n         *             filterType: \"A\"\n         *         },\n         *         {\n         *             check: {\n         *                 type: 'radio',\n         *                 name: 'radioName',\n         *                 value: '1',\n         *                 checked: false\n         *             },\n         *             icon: '<i class=\"fa fa-bluetooth\"></i>',\n         *             name: \"Menu Parent 2\"\n         *         },\n         *         {\n         *             check: {\n         *                 type: 'radio',\n         *                 name: 'radioName',\n         *                 value: '2',\n         *                 checked: false\n         *             },\n         *             name: \"Menu Parent 3\"\n         *         },\n         *         {\n         *             check: {\n         *                 type: 'radio',\n         *                 name: 'radioName',\n         *                 value: '3',\n         *                 checked: false\n         *             },\n         *             name: \"Menu Parent 4\"\n         *         },\n         *         {divide: true},\n         *         {\n         *             html: function () {\n         *                 return '<div style=\"text-align: center;\">' +\n         *                     '<button class=\"btn btn-primary\" data-menu-btn=\"OK\">OK</button> ' +\n         *                     '<button class=\"btn btn-danger\" data-menu-btn=\"CANCEL\">CANCEL</button>' +\n         *                     '</div>';\n         *             }\n         *         }\n         *     ]\n         * });\n         * ```\n         */\n        return function () {\n            var self = this,\n                cfg = void 0;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: \"default\",\n                iconWidth: 22,\n                acceleratorWidth: 100,\n                menuBodyPadding: 5,\n                //direction: \"top\", // top|bottom\n                offset: { left: 0, top: 0 },\n                position: \"fixed\",\n                animateTime: 250,\n                items: [],\n                itemClickAndClose: true,\n                columnKeys: {\n                    label: 'label',\n                    items: 'items'\n                }\n            };\n\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.queue = [];\n            this.menuBar = {};\n            this.state = undefined;\n\n            cfg = this.config;\n\n            var appEventAttach = function appEventAttach(active, opt) {\n                if (active) {\n                    jQuery(document.body).off(\"click.ax5menu-\" + this.instanceId).on(\"click.ax5menu-\" + this.instanceId, clickItem.bind(this, opt));\n\n                    jQuery(window).off(\"keydown.ax5menu-\" + this.instanceId).on(\"keydown.ax5menu-\" + this.instanceId, function (e) {\n                        if (e.which == ax5.info.eventKeys.ESC) {\n                            self.close();\n                        }\n                    });\n\n                    jQuery(window).on(\"resize.ax5menu-\" + this.instanceId).on(\"resize.ax5menu-\" + this.instanceId, function (e) {\n                        self.close();\n                    });\n                } else {\n                    jQuery(document.body).off(\"click.ax5menu-\" + this.instanceId);\n                    jQuery(window).off(\"keydown.ax5menu-\" + this.instanceId);\n                    jQuery(window).off(\"resize.ax5menu-\" + this.instanceId);\n                }\n            };\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                self.state = that.state;\n                opts = null;\n                that = null;\n                return true;\n            };\n\n            var onLoad = function onLoad(that) {\n                if (this.onLoad) {\n                    this.onLoad.call(that, that);\n                }\n\n                that = null;\n                return true;\n            };\n\n            var popup = function popup(opt, items, depth, path) {\n                var data = opt,\n                    activeMenu = void 0,\n                    removed = void 0;\n\n                data.theme = opt.theme || cfg.theme;\n                data.cfg = {\n                    icons: jQuery.extend({}, cfg.icons),\n                    iconWidth: opt.iconWidth || cfg.iconWidth,\n                    acceleratorWidth: opt.acceleratorWidth || cfg.acceleratorWidth\n                };\n\n                items.forEach(function (n) {\n                    if (n.html || n.divide) {\n                        n['@isMenu'] = false;\n                        if (n.html) {\n                            n['@html'] = n.html.call({\n                                item: n,\n                                config: cfg,\n                                opt: opt\n                            });\n                        }\n                    } else {\n                        n['@isMenu'] = true;\n                    }\n                });\n\n                data[cfg.columnKeys.items] = items;\n                data['@depth'] = depth;\n                data['@path'] = path || \"root\";\n                data['@hasChild'] = function () {\n                    return this[cfg.columnKeys.items] && this[cfg.columnKeys.items].length > 0;\n                };\n                activeMenu = jQuery(MENU.tmpl.get.call(this, \"tmpl\", data, cfg.columnKeys));\n                jQuery(document.body).append(activeMenu);\n\n                // remove queue\n\n                removed = this.queue.splice(depth);\n                removed.forEach(function (n) {\n                    n.$target.remove();\n                });\n\n                this.queue.push({\n                    '$target': activeMenu,\n                    'data': jQuery.extend({}, data)\n                });\n\n                activeMenu.find('[data-menu-item-index]').bind(\"mouseover\", function () {\n                    var depth = this.getAttribute(\"data-menu-item-depth\"),\n                        index = this.getAttribute(\"data-menu-item-index\"),\n                        path = this.getAttribute(\"data-menu-item-path\"),\n                        $this = void 0,\n                        offset = void 0,\n                        scrollTop = void 0,\n                        childOpt = void 0,\n                        _items = void 0,\n                        _activeMenu = void 0;\n\n                    if (depth != null && typeof depth != \"undefined\") {\n                        _items = self.queue[depth].data[cfg.columnKeys.items][index][cfg.columnKeys.items];\n                        _activeMenu = self.queue[depth].$target;\n                        _activeMenu.find('[data-menu-item-index]').removeClass(\"hover\");\n                        jQuery(this).addClass(\"hover\");\n\n                        if (_activeMenu.attr(\"data-selected-menu-item-index\") != index) {\n                            _activeMenu.attr(\"data-selected-menu-item-index\", index);\n\n                            if (_items && _items.length > 0) {\n\n                                $this = jQuery(this);\n                                offset = $this.offset();\n                                scrollTop = cfg.position == \"fixed\" ? jQuery(document).scrollTop() : 0;\n                                childOpt = {\n                                    '@parent': {\n                                        left: offset.left,\n                                        top: offset.top,\n                                        width: $this.outerWidth(),\n                                        height: $this.outerHeight()\n                                    },\n                                    left: offset.left + $this.outerWidth() - cfg.menuBodyPadding,\n                                    top: offset.top - cfg.menuBodyPadding - 1 - scrollTop\n                                };\n\n                                childOpt = jQuery.extend(true, opt, childOpt);\n                                popup.call(self, childOpt, _items, Number(depth) + 1, path);\n                            } else {\n                                self.queue.splice(Number(depth) + 1).forEach(function (n) {\n                                    n.$target.remove();\n                                });\n                            }\n                        }\n                    }\n\n                    depth = null;\n                    index = null;\n                    path = null;\n                    $this = null;\n                    offset = null;\n                    scrollTop = null;\n                    childOpt = null;\n                    _items = null;\n                    _activeMenu = null;\n                });\n\n                // mouse out\n                activeMenu.find('[data-menu-item-index]').bind(\"mouseout\", function () {\n                    var depth = this.getAttribute(\"data-menu-item-depth\"),\n                        index = this.getAttribute(\"data-menu-item-index\"),\n                        path = this.getAttribute(\"data-menu-item-path\"),\n                        _items = void 0;\n\n                    if (path) {\n                        _items = self.queue[depth].data[cfg.columnKeys.items][index][cfg.columnKeys.items];\n                    }\n                    if (_items && _items.length > 0) {} else {\n                        jQuery(this).removeClass(\"hover\");\n                    }\n                });\n\n                // is Root\n                if (depth == 0) {\n                    if (data.direction) activeMenu.addClass(\"direction-\" + data.direction);\n                    onStateChanged.call(this, null, {\n                        self: this,\n                        items: items,\n                        parent: function (path) {\n                            if (!path) return false;\n                            var item = null;\n                            try {\n                                item = Function(\"\", \"return this.config.items[\" + path.substring(5).replace(/\\./g, '].items[') + \"];\").call(self);\n                            } catch (e) {}\n                            return item;\n                        }(data['@path']),\n                        state: \"popup\"\n                    });\n                }\n\n                align.call(this, activeMenu, data);\n                onLoad.call(this, {\n                    self: this,\n                    items: items,\n                    element: activeMenu.get(0)\n                });\n\n                data = null;\n                activeMenu = null;\n                removed = null;\n                opt = null;\n                items = null;\n                depth = null;\n                path = null;\n\n                return this;\n            };\n\n            var clickItem = function clickItem(opt, e) {\n                var target = void 0,\n                    item = void 0;\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-menu-item-index\")) {\n                        return true;\n                    }\n                });\n                if (target) {\n                    if (typeof opt === \"undefined\") opt = {};\n                    item = function (path) {\n                        if (!path) return false;\n                        var item = void 0;\n\n                        try {\n                            item = Function(\"\", \"return this[\" + path.substring(5).replace(/\\./g, '].' + cfg.columnKeys.items + '[') + \"];\").call(opt.items || cfg.items);\n                        } catch (e) {\n                            console.log(ax5.info.getError(\"ax5menu\", \"501\", \"menuItemClick\"));\n                        }\n\n                        try {\n                            return item;\n                        } finally {\n                            item = null;\n                        }\n                    }(target.getAttribute(\"data-menu-item-path\"));\n\n                    if (!item) return this;\n\n                    if (item.check) {\n                        (function (items) {\n                            var setValue = {\n                                'checkbox': function checkbox(value) {\n                                    this.checked = !value;\n                                },\n                                'radio': function radio(value) {\n                                    var name = this.name;\n                                    items.forEach(function (n) {\n                                        if (n.check && n.check.type === 'radio' && n.check.name == name) {\n                                            n.check.checked = false;\n                                        }\n                                    });\n                                    this.checked = !value;\n                                }\n                            };\n                            if (setValue[this.type]) setValue[this.type].call(this, this.checked);\n                            setValue = null;\n                        }).call(item.check, cfg.items);\n\n                        if (!cfg.itemClickAndClose) {\n                            self.queue.forEach(function (n) {\n                                n.$target.find('[data-menu-item-index]').each(function () {\n                                    var item = n.data[cfg.columnKeys.items][this.getAttribute(\"data-menu-item-index\")];\n                                    if (item.check) {\n                                        jQuery(this).find(\".item-checkbox-wrap\").attr(\"data-item-checked\", item.check.checked);\n                                    }\n                                });\n                            });\n                        }\n                    }\n\n                    if (self.onClick) {\n                        if (self.onClick.call(item, item, opt.param)) {\n                            self.close();\n                        }\n                    }\n                    if ((!item[cfg.columnKeys.items] || item[cfg.columnKeys.items].length == 0) && cfg.itemClickAndClose) self.close();\n                } else {\n                    self.close();\n                }\n\n                target = null;\n                item = null;\n                return this;\n            };\n\n            var align = function align(activeMenu, data) {\n                var $window = jQuery(window),\n                    $document = jQuery(document),\n                    wh = cfg.position == \"fixed\" ? $window.height() : $document.height(),\n                    ww = $window.width(),\n                    h = activeMenu.outerHeight(),\n                    w = activeMenu.outerWidth(),\n                    l = data.left,\n                    t = data.top,\n                    position = cfg.position || \"fixed\";\n\n                if (l + w > ww) {\n                    if (data['@parent']) {\n                        l = data['@parent'].left - w + cfg.menuBodyPadding;\n                    } else {\n                        l = ww - w;\n                    }\n                }\n\n                if (t + h > wh) {\n                    t = wh - h;\n                }\n\n                activeMenu.css({ left: l, top: t, position: position });\n\n                activeMenu = null;\n                data = null;\n                $window = null;\n                $document = null;\n                wh = null;\n                ww = null;\n                h = null;\n                w = null;\n                l = null;\n                t = null;\n                position = null;\n                return this;\n            };\n\n            /// private end\n\n            this.init = function () {\n                /**\n                 * config에 선언된 이벤트 함수들을 this로 이동시켜 주어 나중에 인스턴스.on... 으로 처리 가능 하도록 변경\n                 */\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.onLoad = cfg.onLoad;\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"init\"\n                });\n            };\n\n            /**\n             * @method ax5.ui.menu.popup\n             * @param {Event|Object} e - Event or Object\n             * @param {Object} [opt]\n             * @param {String} [opt.theme]\n             * @param {Function} [opt.filter]\n             * @returns {ax5.ui.menu} this\n             */\n            this.popup = function () {\n\n                var getOption = {\n                    'event': function event(e, opt) {\n                        //var xOffset = Math.max(document.documentElement.scrollLeft, document.body.scrollLeft);\n                        //var yOffset = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n                        //console.log(e.pageY);\n\n                        e = {\n                            left: e.clientX,\n                            top: cfg.position == \"fixed\" ? e.clientY : e.pageY,\n                            width: cfg.width,\n                            theme: cfg.theme\n                        };\n\n                        e.left -= 5;\n                        e.top -= 5;\n\n                        if (cfg.offset) {\n                            if (cfg.offset.left) e.left += cfg.offset.left;\n                            if (cfg.offset.top) e.top += cfg.offset.top;\n                        }\n                        opt = jQuery.extend(true, e, opt);\n\n                        try {\n                            return opt;\n                        } finally {\n                            e = null;\n                            //opt = null;\n                        }\n                    },\n                    'object': function object(e, opt) {\n                        e = {\n                            left: e.left,\n                            top: e.top,\n                            width: e.width || cfg.width,\n                            theme: e.theme || cfg.theme\n                        };\n\n                        if (cfg.offset) {\n                            if (cfg.offset.left) e.left += cfg.offset.left;\n                            if (cfg.offset.top) e.top += cfg.offset.top;\n                        }\n\n                        opt = jQuery.extend(true, e, opt);\n\n                        try {\n                            return opt;\n                        } finally {\n                            e = null;\n                            //opt = null;\n                        }\n                    }\n                },\n                    updateTheme = function updateTheme(theme) {\n                    if (theme) cfg.theme = theme;\n                };\n\n                return function (e, opt) {\n\n                    if (!e) return this;\n                    opt = getOption[typeof e.clientX == \"undefined\" ? \"object\" : \"event\"].call(this, e, opt);\n                    updateTheme(opt.theme);\n\n                    var items = [].concat(cfg.items),\n                        _filteringItem = void 0;\n                    opt.items = items;\n\n                    if (opt.filter) {\n                        _filteringItem = function filteringItem(_items) {\n                            var arr = [];\n                            _items.forEach(function (n) {\n                                if (n.items && n.items.length > 0) {\n                                    n.items = _filteringItem(n.items);\n                                }\n                                if (opt.filter.call(n)) {\n                                    arr.push(n);\n                                }\n                            });\n                            return arr;\n                        };\n                        opt.items = items = _filteringItem(items);\n                    }\n\n                    if (items.length) {\n                        appEventAttach.call(this, false);\n                        popup.call(this, opt, items, 0); // 0 is seq of queue\n\n                        if (this.popupEventAttachTimer) clearTimeout(this.popupEventAttachTimer);\n                        this.popupEventAttachTimer = setTimeout(function () {\n                            appEventAttach.call(this, true, opt); // 이벤트 연결\n                        }.bind(this), 500);\n                    }\n\n                    e = null;\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5.ui.menu.attach\n             * @param {Element|jQueryObject} el\n             * @returns {ax5.ui.menu} this\n             */\n            this.attach = function () {\n\n                var getOption = {\n                    'object': function object(e, opt) {\n                        e = {\n                            left: e.left,\n                            top: e.top,\n                            width: e.width || cfg.width,\n                            theme: e.theme || cfg.theme,\n                            direction: e.direction || cfg.direction\n                        };\n                        opt = jQuery.extend(true, opt, e);\n\n                        try {\n                            return opt;\n                        } finally {\n                            e = null;\n                            opt = null;\n                        }\n                    }\n                };\n\n                var popUpChildMenu = function popUpChildMenu(target, opt, eType) {\n                    var $target = jQuery(target),\n                        offset = $target.offset(),\n                        height = $target.outerHeight(),\n                        index = Number(target.getAttribute(\"data-menu-item-index\")),\n                        scrollTop = cfg.position == \"fixed\" ? jQuery(document).scrollTop() : 0;\n\n                    if (cfg.items && cfg.items[index][cfg.columnKeys.items] && cfg.items[index][cfg.columnKeys.items].length) {\n\n                        if (self.menuBar.openedIndex == index) {\n                            if (eType == \"click\") self.close();\n                            return false;\n                        }\n\n                        self.menuBar.target.find('[data-menu-item-index]').removeClass(\"hover\");\n                        self.menuBar.opened = true;\n                        self.menuBar.openedIndex = index;\n\n                        $target.attr(\"data-menu-item-opened\", \"true\");\n                        $target.addClass(\"hover\");\n\n                        if (cfg.offset) {\n                            if (cfg.offset.left) offset.left += cfg.offset.left;\n                            if (cfg.offset.top) offset.top += cfg.offset.top;\n                        }\n\n                        opt = getOption[\"object\"].call(this, { left: offset.left, top: offset.top + height - scrollTop }, opt);\n\n                        popup.call(self, opt, cfg.items[index][cfg.columnKeys.items], 0, 'root.' + target.getAttribute(\"data-menu-item-index\")); // 0 is seq of queue\n                        appEventAttach.call(self, true, {}); // 이벤트 연결\n                    }\n\n                    target = null;\n                    opt = null;\n                    $target = null;\n                    offset = null;\n                    height = null;\n                    index = null;\n                    scrollTop = null;\n                };\n                var clickParentMenu = function clickParentMenu(target, opt, eType) {\n                    var $target = jQuery(target),\n                        offset = $target.offset(),\n                        height = $target.outerHeight(),\n                        index = Number(target.getAttribute(\"data-menu-item-index\")),\n                        scrollTop = cfg.position == \"fixed\" ? jQuery(document).scrollTop() : 0;\n                    if (cfg.items && (!cfg.items[index][cfg.columnKeys.items] || cfg.items[index][cfg.columnKeys.items].length == 0)) {\n                        if (self.onClick) {\n                            self.onClick.call(cfg.items[index], cfg.items[index]);\n                        }\n                    }\n                };\n\n                return function (el, opt) {\n                    var data = {},\n                        items = cfg.items,\n                        activeMenu;\n\n                    if (typeof opt === \"undefined\") opt = {};\n\n                    data.theme = opt.theme || cfg.theme;\n                    data.cfg = {\n                        icons: jQuery.extend({}, cfg.icons),\n                        iconWidth: opt.iconWidth || cfg.iconWidth,\n                        acceleratorWidth: opt.acceleratorWidth || cfg.acceleratorWidth\n                    };\n\n                    items.forEach(function (n) {\n                        if (n.html || n.divide) {\n                            n['@isMenu'] = false;\n                            if (n.html) {\n                                n['@html'] = n.html.call({\n                                    item: n,\n                                    config: cfg,\n                                    opt: opt\n                                });\n                            }\n                        } else {\n                            n['@isMenu'] = true;\n                        }\n                    });\n\n                    data[cfg.columnKeys.items] = items;\n\n                    activeMenu = jQuery(MENU.tmpl.get.call(this, \"tmplMenubar\", data, cfg.columnKeys));\n                    self.menuBar = {\n                        target: jQuery(el),\n                        opened: false\n                    };\n                    self.menuBar.target.html(activeMenu);\n\n                    // click, mouseover\n                    self.menuBar.target.bind(\"click\", function (e) {\n                        if (!e) return this;\n                        var target = U.findParentNode(e.target, function (target) {\n                            if (target.getAttribute(\"data-menu-item-index\")) {\n                                return true;\n                            }\n                        });\n                        if (target) {\n                            clickParentMenu(target, opt, \"click\");\n                            popUpChildMenu(target, opt, \"click\");\n                        }\n\n                        target = null;\n                    });\n                    self.menuBar.target.bind(\"mouseover\", function (e) {\n                        if (!self.menuBar.opened) return false;\n                        var target = U.findParentNode(e.target, function (target) {\n                            if (target.getAttribute(\"data-menu-item-index\")) {\n                                return true;\n                            }\n                        });\n                        if (target) popUpChildMenu(target, opt, \"mouseover\");\n\n                        target = null;\n                    });\n\n                    el = null;\n                    opt = null;\n                    data = null;\n                    items = null;\n                    activeMenu = null;\n\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5.ui.menu.close\n             * @returns {ax5.ui.menu} this\n             */\n            this.close = function () {\n\n                if (self.menuBar && self.menuBar.target) {\n                    self.menuBar.target.find('[data-menu-item-index]').removeClass(\"hover\");\n                    self.menuBar.opened = false;\n                    self.menuBar.openedIndex = null;\n                }\n\n                appEventAttach.call(this, false); // 이벤트 제거\n\n                this.queue.forEach(function (n) {\n                    n.$target.remove();\n                });\n                this.queue = [];\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"close\"\n                });\n\n                return this;\n            };\n\n            /**\n             * @method ax5.ui.menu.getCheckValue\n             * @returns {Object} statusCheckItem\n             */\n            this.getCheckValue = function () {\n                var checkItems = {},\n                    _collectItem = function collectItem(items) {\n                    var i = items.length;\n                    while (i--) {\n                        if (items[i].check && items[i].check.checked) {\n                            if (!checkItems[items[i].check.name]) checkItems[items[i].check.name] = items[i].check.value;else {\n                                if (U.isString(checkItems[items[i].check.name])) checkItems[items[i].check.name] = [checkItems[items[i].check.name]];\n                                checkItems[items[i].check.name].push(items[i].check.value);\n                            }\n                        }\n                        if (items[i].items && items[i].items.length > 0) _collectItem(items[i].items);\n                    }\n                };\n\n                _collectItem(cfg.items);\n\n                try {\n                    return checkItems;\n                } finally {\n                    checkItems = null;\n                    _collectItem = null;\n                }\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n\n                UI.menu_instance = UI.menu_instance || [];\n                UI.menu_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n    }());\n\n    MENU = ax5.ui.menu;\n})();\n\n// todo : menu 드랍다운 아이콘 설정 기능 추가\n// ax5.ui.menu.tmpl\n(function () {\n    var MENU = ax5.ui.menu;\n\n    var tmpl = function tmpl(columnKeys) {\n        return '\\n        <div class=\"ax5-ui-menu {{theme}}\" {{#width}}style=\"width:{{width}}px;\"{{/width}}>\\n            <div class=\"ax-menu-body\">\\n                {{#' + columnKeys.items + '}}\\n                    {{^@isMenu}}\\n                        {{#divide}}\\n                        <div class=\"ax-menu-item-divide\" data-menu-item-index=\"{{@i}}\"></div>\\n                        {{/divide}}\\n                        {{#html}}\\n                        <div class=\"ax-menu-item-html\" data-menu-item-index=\"{{@i}}\">{{{@html}}}</div>\\n                        {{/html}}\\n                    {{/@isMenu}}\\n                    {{#@isMenu}}\\n                    <div class=\"ax-menu-item\" data-menu-item-depth=\"{{@depth}}\" data-menu-item-index=\"{{@i}}\" data-menu-item-path=\"{{@path}}.{{@i}}\">\\n                        <span class=\"ax-menu-item-cell ax-menu-item-checkbox\">\\n                            {{#check}}\\n                            <span class=\"item-checkbox-wrap useCheckBox\" {{#checked}}data-item-checked=\"true\"{{/checked}}></span>\\n                            {{/check}}\\n                            {{^check}}\\n                            <span class=\"item-checkbox-wrap\"></span>\\n                            {{/check}}\\n                        </span>\\n                        {{#icon}}\\n                        <span class=\"ax-menu-item-cell ax-menu-item-icon\" style=\"width:{{cfg.iconWidth}}px;\">{{{.}}}</span>\\n                        {{/icon}}\\n                        <span class=\"ax-menu-item-cell ax-menu-item-label\">{{{' + columnKeys.label + '}}}</span>\\n                        {{#accelerator}}\\n                        <span class=\"ax-menu-item-cell ax-menu-item-accelerator\" style=\"width:{{cfg.acceleratorWidth}}px;\"><span class=\"item-wrap\">{{.}}</span></span>\\n                        {{/accelerator}}\\n                        {{#@hasChild}}\\n                        <span class=\"ax-menu-item-cell ax-menu-item-handle\">{{{cfg.icons.arrow}}}</span>\\n                        {{/@hasChild}}\\n                    </div>\\n                    {{/@isMenu}}\\n\\n                {{/' + columnKeys.items + '}}\\n            </div>\\n            <div class=\"ax-menu-arrow\"></div>\\n        </div>\\n        ';\n    };\n    var tmplMenubar = function tmplMenubar(columnKeys) {\n        return '\\n        <div class=\"ax5-ui-menubar {{theme}}\">\\n            <div class=\"ax-menu-body\">\\n                {{#' + columnKeys.items + '}}\\n                    {{^@isMenu}}\\n                        {{#divide}}\\n                        <div class=\"ax-menu-item-divide\" data-menu-item-index=\"{{@i}}\"></div>\\n                        {{/divide}}\\n                        {{#html}}\\n                        <div class=\"ax-menu-item-html\" data-menu-item-index=\"{{@i}}\">{{{@html}}}</div>\\n                        {{/html}}\\n                    {{/@isMenu}}\\n                    {{#@isMenu}}\\n                    <div class=\"ax-menu-item\" data-menu-item-index=\"{{@i}}\">\\n                        {{#icon}}\\n                        <span class=\"ax-menu-item-cell ax-menu-item-icon\" style=\"width:{{cfg.iconWidth}}px;\">{{{.}}}</span>\\n                        {{/icon}}\\n                        <span class=\"ax-menu-item-cell ax-menu-item-label\">{{{' + columnKeys.label + '}}}</span>\\n                    </div>\\n                    {{/@isMenu}}\\n                {{/' + columnKeys.items + '}}\\n            </div>\\n        </div>\\n        ';\n    };\n\n    MENU.tmpl = {\n        \"tmpl\": tmpl,\n        \"tmplMenubar\": tmplMenubar,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(MENU.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.select\n(function () {\n\n    var UI = ax5.ui,\n        U = ax5.util,\n        SELECT = void 0;\n\n    UI.addClass({\n        className: \"select\"\n    }, function () {\n        /**\n         * @class ax5select\n         * @classdesc\n         * @author tom@axisj.com\n         */\n        var ax5select = function ax5select() {\n            var self = this,\n                cfg = void 0;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 100,\n                lang: {\n                    noSelected: '',\n                    noOptions: 'no options',\n                    loading: 'now loading..',\n                    multipleLabel: '\"{{label}}\"외 {{length}}건'\n                },\n                columnKeys: {\n                    optionValue: 'value',\n                    optionText: 'text',\n                    optionSelected: 'selected'\n                }\n            };\n            this.queue = [];\n            this.activeSelectOptionGroup = null;\n            this.activeSelectQueueIndex = -1;\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.waitOptionsCallback = null;\n            this.keyUpTimer = null;\n            this.xvar = {};\n\n            cfg = this.config;\n\n            var $window = jQuery(window),\n                ctrlKeys = {\n                \"18\": \"KEY_ALT\",\n                \"8\": \"KEY_BACKSPACE\",\n                \"17\": \"KEY_CONTROL\",\n                \"46\": \"KEY_DELETE\",\n                \"40\": \"KEY_DOWN\",\n                \"35\": \"KEY_END\",\n                \"187\": \"KEY_EQUAL\",\n                \"27\": \"KEY_ESC\",\n                \"36\": \"KEY_HOME\",\n                \"45\": \"KEY_INSERT\",\n                \"37\": \"KEY_LEFT\",\n                \"189\": \"KEY_MINUS\",\n                \"34\": \"KEY_PAGEDOWN\",\n                \"33\": \"KEY_PAGEUP\",\n                // \"190\": \"KEY_PERIOD\",\n                \"13\": \"KEY_RETURN\",\n                \"39\": \"KEY_RIGHT\",\n                \"16\": \"KEY_SHIFT\",\n                // \"32\": \"KEY_SPACE\",\n                \"9\": \"KEY_TAB\",\n                \"38\": \"KEY_UP\",\n                \"91\": \"KEY_WINDOW\"\n                //\"107\" : \"NUMPAD_ADD\",\n                //\"194\" : \"NUMPAD_COMMA\",\n                //\"110\" : \"NUMPAD_DECIMAL\",\n                //\"111\" : \"NUMPAD_DIVIDE\",\n                //\"12\" : \"NUMPAD_EQUAL\",\n                //\"106\" : \"NUMPAD_MULTIPLY\",\n                //\"109\" : \"NUMPAD_SUBTRACT\"\n            },\n                onStateChanged = function onStateChanged(item, that) {\n                if (item && item.onStateChanged) {\n                    item.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                if (that.state == \"changeValue\") {\n                    if (item && item.onChange) {\n                        item.onChange.call(that, that);\n                    } else if (this.onChange) {\n                        this.onChange.call(that, that);\n                    }\n                }\n\n                item = null;\n                that = null;\n                return true;\n            },\n                alignSelectDisplay = function alignSelectDisplay() {\n                var i = this.queue.length,\n                    w = void 0;\n                while (i--) {\n                    if (this.queue[i].$display) {\n                        w = Math.max(this.queue[i].$select.outerWidth(), U.number(this.queue[i].minWidth));\n                        this.queue[i].$display.css({\n                            \"min-width\": w\n                        });\n                        if (this.queue[i].reset) {\n                            this.queue[i].$display.find(\".addon-icon-reset\").css({\n                                \"line-height\": this.queue[i].$display.height() + \"px\"\n                            });\n                        }\n                    }\n                }\n\n                i = null;\n                w = null;\n                return this;\n            },\n                alignSelectOptionGroup = function alignSelectOptionGroup(append) {\n                if (!this.activeSelectOptionGroup) return this;\n\n                var item = this.queue[this.activeSelectQueueIndex],\n                    pos = {},\n                    positionMargin = 0,\n                    dim = {},\n                    pickerDim = {},\n                    pickerDirection = void 0;\n\n                if (append) jQuery(document.body).append(this.activeSelectOptionGroup);\n\n                pos = item.$target.offset();\n                dim = {\n                    width: item.$target.outerWidth(),\n                    height: item.$target.outerHeight()\n                };\n                pickerDim = {\n                    winWidth: Math.max($window.width(), jQuery(document.body).width()),\n                    winHeight: Math.max($window.height(), jQuery(document.body).height()),\n                    width: this.activeSelectOptionGroup.outerWidth(),\n                    height: this.activeSelectOptionGroup.outerHeight()\n                };\n\n                // picker css(width, left, top) & direction 결정\n                if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n                    // set direction\n                    pickerDirection = \"top\";\n\n                    if (pos.top - pickerDim.height - positionMargin < 0) {\n                        pickerDirection = \"top\";\n                    } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                        pickerDirection = \"bottom\";\n                    }\n                } else {\n                    pickerDirection = item.direction;\n                }\n                // todo : 표현할 공간이 없다면..\n                if (append) {\n                    this.activeSelectOptionGroup.addClass(\"direction-\" + pickerDirection);\n                }\n                this.activeSelectOptionGroup.css(function () {\n                    if (pickerDirection == \"top\") {\n                        if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n\n                            var newTop = pos.top + dim.height / 2 - pickerDim.height / 2;\n                            if (newTop + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                                newTop = 0;\n                            }\n                            if (newTop < 0) {\n                                newTop = 0;\n                            }\n\n                            return {\n                                left: pos.left,\n                                top: newTop,\n                                width: dim.width\n                            };\n                        }\n                        return {\n                            left: pos.left,\n                            top: pos.top + dim.height + 1,\n                            width: dim.width\n                        };\n                    } else if (pickerDirection == \"bottom\") {\n                        return {\n                            left: pos.left,\n                            top: pos.top - pickerDim.height - 1,\n                            width: dim.width\n                        };\n                    }\n                }.call(this));\n            },\n                onBodyClick = function onBodyClick(e, target) {\n                if (!this.activeSelectOptionGroup) return this;\n\n                var item = this.queue[this.activeSelectQueueIndex],\n                    clickEl = \"display\";\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-option-value\") || target.getAttribute(\"data-option-value\") == \"\") {\n                        clickEl = \"optionItem\";\n                        return true;\n                    } else if (item.$target.get(0) == target) {\n                        clickEl = \"display\";\n                        return true;\n                    }\n                });\n\n                if (!target) {\n                    this.close();\n                    return this;\n                } else if (clickEl === \"optionItem\") {\n                    this.val(item.id, {\n                        index: {\n                            gindex: target.getAttribute(\"data-option-group-index\"),\n                            index: target.getAttribute(\"data-option-index\")\n                        }\n                    }, undefined, \"internal\");\n                    item.$select.trigger(\"change\");\n                    item.$display.focus();\n                    if (!item.multiple) this.close();\n                } else {\n                    //open and display click\n                    //console.log(this.instanceId);\n                }\n\n                return this;\n            },\n                onBodyKeyup = function onBodyKeyup(e) {\n                if (e.keyCode == ax5.info.eventKeys.ESC) {\n                    this.close();\n                } else if (e.which == ax5.info.eventKeys.RETURN) {\n                    if (this.queue[this.activeSelectQueueIndex].optionFocusIndex > -1) {\n                        // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                        var $option = this.activeSelectOptionGroup.find('[data-option-focus-index=\"' + this.queue[this.activeSelectQueueIndex].optionFocusIndex + '\"]');\n                        this.val(this.queue[this.activeSelectQueueIndex].id, {\n                            index: {\n                                gindex: $option.attr(\"data-option-group-index\"),\n                                index: $option.attr(\"data-option-index\")\n                            }\n                        }, undefined, \"internal\");\n                        this.queue[this.activeSelectQueueIndex].$select.trigger(\"change\");\n                        if (!this.queue[this.activeSelectQueueIndex].multiple) this.close();\n                    } else {\n                        this.close();\n                    }\n                }\n            },\n                getLabel = function getLabel(queIdx) {\n                var item = this.queue[queIdx],\n                    labels = [];\n\n                if (U.isArray(item.selected) && item.selected.length > 0) {\n                    item.selected.forEach(function (n) {\n                        if (n.selected) labels.push(n[item.columnKeys.optionText]);\n                    });\n                } else {\n                    if (!item.multiple && item.options && item.options[0]) {\n                        if (item.options[0].optgroup) {\n                            labels[0] = item.options[0].options[0][item.columnKeys.optionText];\n                        } else {\n                            labels[0] = item.options[0][item.columnKeys.optionText];\n                        }\n                    } else {\n                        labels[0] = item.lang.noSelected;\n                    }\n                }\n\n                return function () {\n                    if (item.multiple && labels.length > 1) {\n                        var data = {\n                            label: labels[0],\n                            length: labels.length - 1\n                        };\n                        return ax5.mustache.render(item.lang.multipleLabel, data);\n                    } else {\n                        return labels[0];\n                    }\n                }();\n            },\n                syncLabel = function syncLabel(queIdx) {\n                this.queue[queIdx].$displayLabel.html(getLabel.call(this, queIdx));\n            },\n                focusWord = function focusWord(queIdx, searchWord) {\n                var options = [],\n                    i = -1,\n                    l = this.queue[queIdx].indexedOptions.length - 1,\n                    n = void 0;\n                if (searchWord) {\n                    while (l - i++) {\n                        n = this.queue[queIdx].indexedOptions[i];\n                        if (('' + n.value).toLowerCase() == searchWord.toLowerCase()) {\n                            options = [{ '@findex': n['@findex'], optionsSort: 0 }];\n                            break;\n                        } else {\n                            var sort = ('' + n.value).toLowerCase().search(searchWord.toLowerCase());\n                            if (sort > -1) {\n                                options.push({ '@findex': n['@findex'], optionsSort: sort });\n                                if (options.length > 2) break;\n                            }\n                            sort = null;\n                        }\n                    }\n                    options.sort(function (a, b) {\n                        return a.optionsSort - b.optionsSort;\n                    });\n                }\n                if (options && options.length > 0) {\n                    focusMove.call(this, queIdx, undefined, options[0]['@findex']);\n                }\n\n                try {\n                    return options;\n                } finally {\n                    options = null;\n                    i = null;\n                    l = null;\n                    n = null;\n                }\n            },\n                focusMove = function focusMove(queIdx, direction, findex) {\n                var _focusIndex = void 0,\n                    _prevFocusIndex = void 0,\n                    focusOptionEl = void 0,\n                    optionGroupScrollContainer = void 0;\n\n                if (this.activeSelectOptionGroup && this.queue[queIdx].options && this.queue[queIdx].options.length > 0) {\n\n                    if (typeof findex !== \"undefined\") {\n                        _focusIndex = findex;\n                    } else {\n                        _prevFocusIndex = this.queue[queIdx].optionFocusIndex == -1 ? this.queue[queIdx].optionSelectedIndex || -1 : this.queue[queIdx].optionFocusIndex;\n                        if (_prevFocusIndex == -1) {\n                            _focusIndex = direction > 0 ? 0 : this.queue[queIdx].optionItemLength - 1;\n                        } else {\n                            _focusIndex = _prevFocusIndex + direction;\n                            if (_focusIndex < 0) _focusIndex = 0;else if (_focusIndex > this.queue[queIdx].optionItemLength - 1) _focusIndex = this.queue[queIdx].optionItemLength - 1;\n                        }\n                    }\n\n                    this.queue[queIdx].optionFocusIndex = _focusIndex;\n\n                    this.activeSelectOptionGroup.find('[data-option-focus-index]').removeClass(\"hover\");\n\n                    focusOptionEl = this.activeSelectOptionGroup.find('[data-option-focus-index=\"' + _focusIndex + '\"]').addClass(\"hover\");\n\n                    optionGroupScrollContainer = this.activeSelectOptionGroup.find('[data-els=\"content\"]');\n\n                    var focusOptionElHeight = focusOptionEl.outerHeight(),\n                        optionGroupScrollContainerHeight = optionGroupScrollContainer.innerHeight(),\n                        optionGroupScrollContainerScrollTop = optionGroupScrollContainer.scrollTop(),\n                        focusOptionElTop = focusOptionEl.position().top + optionGroupScrollContainer.scrollTop();\n\n                    if (optionGroupScrollContainerHeight + optionGroupScrollContainerScrollTop < focusOptionElTop + focusOptionElHeight) {\n                        optionGroupScrollContainer.scrollTop(focusOptionElTop + focusOptionElHeight - optionGroupScrollContainerHeight);\n                    } else if (optionGroupScrollContainerScrollTop > focusOptionElTop) {\n                        optionGroupScrollContainer.scrollTop(focusOptionElTop);\n                    }\n                    // optionGroup scroll check\n                }\n            },\n                bindSelectTarget = function () {\n                var focusWordCall = U.debounce(function (searchWord, queIdx) {\n                    focusWord.call(self, queIdx, searchWord);\n                    self.queue[queIdx].$displayInput.val('');\n                }, 300);\n\n                var selectEvent = {\n                    'click': function click(queIdx, e) {\n                        var target = U.findParentNode(e.target, function (target) {\n                            if (target.getAttribute(\"data-selected-clear\")) {\n                                //clickEl = \"clear\";\n                                return true;\n                            }\n                        });\n\n                        if (target) {\n                            this.val(queIdx, { clear: true });\n                        } else {\n                            if (self.activeSelectQueueIndex == queIdx) {\n                                if (this.queue[queIdx].optionFocusIndex == -1) {\n                                    // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                                    self.close();\n                                }\n                            } else {\n                                self.open(queIdx);\n                                U.stopEvent(e);\n                            }\n                        }\n                    },\n                    'keyUp': function keyUp(queIdx, e) {\n                        if (e.which == ax5.info.eventKeys.SPACE) {\n                            selectEvent.click.call(this, queIdx, e);\n                        } else if (!ctrlKeys[e.which]) {\n                            // 사용자 입력이 뜸해지면 찾고 검색 값 제거...\n                            focusWordCall(this.queue[queIdx].$displayInput.val(), queIdx);\n                        }\n                    },\n                    'keyDown': function keyDown(queIdx, e) {\n                        if (e.which == ax5.info.eventKeys.DOWN) {\n                            focusMove.call(this, queIdx, 1);\n                            U.stopEvent(e);\n                        } else if (e.which == ax5.info.eventKeys.UP) {\n                            focusMove.call(this, queIdx, -1);\n                            U.stopEvent(e);\n                        }\n                    },\n                    'blur': function blur(queIdx, e) {},\n                    'selectChange': function selectChange(queIdx, e) {\n                        this.val(queIdx, this.queue[queIdx].$select.val(), true);\n                    }\n                };\n                return function (queIdx) {\n                    var item = this.queue[queIdx],\n                        data = {};\n\n                    // find selected\n                    item.selected = [];\n                    if (!item.options) item.options = [];\n                    item.options.forEach(function (n) {\n                        if (n[cfg.columnKeys.optionSelected]) item.selected.push(jQuery.extend({}, n));\n                    });\n\n                    if (!item.$display) {\n                        /// 템플릿에 전달할 오브젝트 선언\n                        data.instanceId = this.instanceId;\n                        data.id = item.id;\n                        data.name = item.name;\n                        data.theme = item.theme;\n                        data.tabIndex = item.tabIndex;\n                        data.multiple = item.multiple;\n                        data.reset = item.reset;\n\n                        data.label = getLabel.call(this, queIdx);\n                        data.formSize = function () {\n                            return item.size ? \"input-\" + item.size : \"\";\n                        }();\n\n                        item.$display = SELECT.tmpl.get.call(this, \"tmpl\", data);\n                        item.$displayLabel = item.$display.find('[data-ax5select-display=\"label\"]');\n\n                        if (item.$target.find(\"select\").get(0)) {\n                            item.$select = item.$target.find(\"select\");\n                            // select 속성만 변경\n                            item.$select.attr(\"tabindex\", \"-1\").attr(\"class\", \"form-control \" + data.formSize);\n                            if (data.name) {\n                                item.$select.attr(\"name\", \"name\");\n                            }\n                            if (data.multiple) {\n                                item.$select.attr(\"multiple\", \"multiple\");\n                            }\n                        } else {\n                            item.$select = SELECT.tmpl.get.call(this, \"selectTmpl\", data);\n                            item.$target.append(item.$select);\n                            // select append\n                        }\n\n                        item.$target.append(item.$display);\n                        item.$displayInput = item.$display.find('[data-ax5select-display=\"input\"]'); // 사용자 입력값을 받기위한 숨음 입력필드\n                        item.options = syncSelectOptions.call(this, queIdx, item.options);\n\n                        alignSelectDisplay.call(this);\n\n                        item.$displayInput.unbind(\"blur.ax5select\").bind(\"blur.ax5select\", selectEvent.blur.bind(this, queIdx)).unbind('keyup.ax5select').bind('keyup.ax5select', selectEvent.keyUp.bind(this, queIdx)).unbind(\"keydown.ax5select\").bind(\"keydown.ax5select\", selectEvent.keyDown.bind(this, queIdx));\n                    } else {\n                        item.$displayLabel.html(getLabel.call(this, queIdx));\n                        item.options = syncSelectOptions.call(this, queIdx, item.options);\n\n                        alignSelectDisplay.call(this);\n                    }\n\n                    item.$display.unbind('click.ax5select').bind('click.ax5select', selectEvent.click.bind(this, queIdx)).unbind('keyup.ax5select').bind('keyup.ax5select', selectEvent.keyUp.bind(this, queIdx));\n\n                    // select 태그에 대한 change 이벤트 감시\n                    item.$select.unbind('change.ax5select').bind('change.ax5select', selectEvent.selectChange.bind(this, queIdx));\n\n                    data = null;\n                    item = null;\n                    queIdx = null;\n                    return this;\n                };\n            }(),\n                syncSelectOptions = function () {\n                var setSelected = function setSelected(queIdx, O) {\n                    if (!O) {\n                        this.queue[queIdx].selected = [];\n                    } else {\n                        if (this.queue[queIdx].multiple) this.queue[queIdx].selected.push(jQuery.extend({}, O));else this.queue[queIdx].selected[0] = jQuery.extend({}, O);\n                    }\n                };\n\n                return function (queIdx, options) {\n                    var item = this.queue[queIdx],\n                        po = void 0,\n                        elementOptions = void 0,\n                        newOptions = void 0,\n                        focusIndex = 0;\n\n                    setSelected.call(this, queIdx, false); // item.selected 초기화\n\n                    if (options) {\n                        item.options = options;\n                        item.indexedOptions = [];\n\n                        // select options 태그 생성\n                        po = [];\n                        item.options.forEach(function (O, OIndex) {\n                            if (O.optgroup) {\n\n                                O['@gindex'] = OIndex;\n                                O.options.forEach(function (OO, OOIndex) {\n                                    OO['@index'] = OOIndex;\n                                    OO['@findex'] = focusIndex;\n                                    po.push('<option value=\"' + OO[item.columnKeys.optionValue] + '\" ' + (OO[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : '') + '>' + OO[item.columnKeys.optionText] + '</option>');\n                                    if (OO[item.columnKeys.optionSelected]) {\n                                        setSelected.call(self, queIdx, OO);\n                                    }\n\n                                    item.indexedOptions.push({\n                                        '@findex': focusIndex, value: OO[item.columnKeys.optionValue], text: OO[item.columnKeys.optionText]\n                                    });\n                                    focusIndex++;\n                                });\n                            } else {\n                                O['@index'] = OIndex;\n                                O['@findex'] = focusIndex;\n                                po.push('<option value=\"' + O[item.columnKeys.optionValue] + '\" ' + (O[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : '') + '>' + O[item.columnKeys.optionText] + '</option>');\n                                if (O[item.columnKeys.optionSelected]) {\n                                    setSelected.call(self, queIdx, O);\n                                }\n\n                                item.indexedOptions.push({\n                                    '@findex': focusIndex, value: O[item.columnKeys.optionValue], text: O[item.columnKeys.optionText]\n                                });\n                                focusIndex++;\n                            }\n                        });\n                        item.optionItemLength = focusIndex;\n                        item.$select.html(po.join(''));\n                    } else {\n                        /// select > options 태그로 스크립트 options를 만들어주는 역할\n                        elementOptions = U.toArray(item.$select.get(0).options);\n                        // select option 스크립트 생성\n                        newOptions = [];\n                        elementOptions.forEach(function (O, OIndex) {\n                            var option = {};\n                            //if (O.value != \"\") {\n                            option[item.columnKeys.optionValue] = O.value;\n                            option[item.columnKeys.optionText] = O.text;\n                            option[item.columnKeys.optionSelected] = O.selected;\n                            option['@index'] = OIndex;\n                            option['@findex'] = OIndex;\n                            if (O.selected) setSelected.call(self, queIdx, option);\n                            newOptions.push(option);\n                            //}\n                            option = null;\n                        });\n                        item.options = newOptions;\n                        item.indexedOptions = newOptions;\n                    }\n\n                    if (!item.multiple && item.selected.length == 0 && item.options && item.options[0]) {\n                        if (item.options[0].optgroup) {\n                            item.options[0].options[0][item.columnKeys.optionSelected] = true;\n                            item.selected.push(jQuery.extend({}, item.options[0].options[0]));\n                        } else {\n                            item.options[0][item.columnKeys.optionSelected] = true;\n                            item.selected.push(jQuery.extend({}, item.options[0]));\n                        }\n                    }\n\n                    po = null;\n                    elementOptions = null;\n                    newOptions = null;\n                    return item.options;\n                };\n            }(),\n                getQueIdx = function getQueIdx(boundID) {\n                if (!U.isString(boundID)) {\n                    boundID = jQuery(boundID).data(\"data-ax5select-id\");\n                }\n                if (!U.isString(boundID)) {\n                    console.log(ax5.info.getError(\"ax5select\", \"402\", \"getQueIdx\"));\n                    return;\n                }\n                return U.search(this.queue, function () {\n                    return this.id == boundID;\n                });\n            };\n            /// private end\n\n            /**\n             * Preferences of select UI\n             * @method ax5select.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5select}\n             * @example\n             * ```js\n             * var options = [];\n             * for (var i = 0; i < 20; i++) {\n            *     options.push({value: i, text: \"optionText\" + i});\n            * }\n              * var mySelect = new ax5.ui.select({\n            *     theme: \"danger\"\n            * });\n              * mySelect.bind({\n            *     theme: \"primary\",\n            *     target: $('[data-ax5select=\"select1\"]'),\n            *     options: options,\n            *     onChange: function () {\n            *         console.log(this);\n            *     },\n            *     onClose: function () {\n            *         console.log(this);\n            *     },\n            *     onStateChanged: function () {\n            *         console.log(this);\n            *     }\n            * });\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onChange = cfg.onChange;\n\n                jQuery(window).bind(\"resize.ax5select-display-\" + this.instanceId, function () {\n                    alignSelectDisplay.call(this);\n                }.bind(this));\n            };\n\n            /**\n             * bind select\n             * @method ax5select.bind\n             * @param {Object} item\n             * @param {String} [item.id]\n             * @param {String} [item.theme]\n             * @param {Boolean} [item.multiple]\n             * @param {Element} item.target\n             * @param {Object[]} item.options\n             * @returns {ax5select}\n             * @example\n             * ```js\n             * var mySelect = new ax5.ui.select();\n             * mySelect.bind({\n             *  columnKeys: {\n             *      optionValue: \"value\",\n             *      optionText: \"text\"\n             *  },\n             *  target: $('[data-ax5select=\"select1\"]'),\n             *  options: [\n             *      {value: \"\", text: \"\"}\n             *  ],\n             *  onChange: function(){\n             *\n             *  },\n             *  onClose: function(){\n             *\n             *  },\n             *  onStateChanged: function(){\n             *\n             *  }\n             * });\n             * ```\n             */\n            this.bind = function (item) {\n                var selectConfig = {},\n                    queIdx = void 0;\n\n                item = jQuery.extend(true, selectConfig, cfg, item);\n\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5select\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                item.$target = jQuery(item.target);\n\n                if (!item.id) item.id = item.$target.data(\"data-ax5select-id\");\n                if (!item.id) {\n                    item.id = 'ax5select-' + ax5.getGuid();\n                    item.$target.data(\"data-ax5select-id\", item.id);\n                }\n                item.name = item.$target.attr(\"data-ax5select\");\n\n                if (item.options) {\n                    item.options = JSON.parse(JSON.stringify(item.options));\n                }\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        item = jQuery.extend(true, item, data);\n                    }\n                })(U.parseJson(item.$target.attr(\"data-ax5select-config\"), true));\n\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindSelectTarget.call(this, this.queue.length - 1);\n                } else {\n                    this.queue[queIdx].selected = [];\n                    this.queue[queIdx].options = item.options;\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindSelectTarget.call(this, queIdx);\n                }\n\n                selectConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * open the optionBox of select\n             * @method ax5select.open\n             * @param {(String|Number|Element)} boundID\n             * @param {Number} [tryCount]\n             * @returns {ax5select}\n             */\n            this.open = function () {\n\n                var onExpand = function onExpand(item) {\n                    item.onExpand.call({\n                        self: this,\n                        item: item\n                    }, function (O) {\n                        if (this.waitOptionsCallback) {\n                            var data = {};\n                            var item = this.queue[this.activeSelectQueueIndex];\n\n                            /// 현재 selected 검증후 처리\n                            (function (item, O) {\n                                var optionsMap = {};\n                                O.options.forEach(function (_O, _OIndex) {\n                                    _O[\"@index\"] = _OIndex;\n                                    optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                                });\n                                if (U.isArray(item.selected)) {\n                                    item.selected.forEach(function (_O) {\n                                        if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                            O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                        }\n                                    });\n                                }\n                            })(item, O);\n\n                            item.$displayLabel.html(getLabel.call(this, this.activeSelectQueueIndex));\n                            item.options = syncSelectOptions.call(this, this.activeSelectQueueIndex, O.options);\n\n                            alignSelectDisplay.call(this);\n\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.id = item.id;\n                            data.theme = item.theme;\n                            data.size = \"ax5select-option-group-\" + item.size;\n                            data.multiple = item.multiple;\n                            data.lang = item.lang;\n                            data.options = item.options;\n                            this.activeSelectOptionGroup.find('[data-els=\"content\"]').html(SELECT.tmpl.get.call(this, \"optionsTmpl\", data, item.columnKeys));\n                        }\n                    }.bind(this));\n                };\n\n                return function (boundID, tryCount) {\n                    this.waitOptionsCallback = null;\n\n                    /**\n                     * open select from the outside\n                     */\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID),\n                        item = this.queue[queIdx],\n                        data = {},\n                        focusTop = void 0,\n                        selectedOptionEl = void 0;\n\n                    if (item.$display.attr(\"disabled\")) return this;\n\n                    if (this.openTimer) clearTimeout(this.openTimer);\n                    if (this.activeSelectOptionGroup) {\n                        if (this.activeSelectQueueIndex == queIdx) {\n                            return this;\n                        }\n\n                        if (tryCount > 2) return this;\n                        this.close();\n                        this.openTimer = setTimeout(function () {\n                            this.open(queIdx, (tryCount || 0) + 1);\n                        }.bind(this), cfg.animateTime);\n\n                        return this;\n                    }\n\n                    item.optionFocusIndex = -1; // optionGroup이 열리면 포커스 인덱스 초기화 -1로\n                    if (item.selected && item.selected.length > 0) {\n                        item.optionSelectedIndex = item.selected[0][\"@findex\"];\n                    }\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5select-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n\n                    data.lang = item.lang;\n                    item.$display.attr(\"data-select-option-group-opened\", \"true\");\n                    //console.log(data.lang);\n\n                    if (item.onExpand) {\n                        // onExpand 인 경우 UI 대기모드 추가\n                        data.waitOptions = true;\n                    }\n\n                    data.options = item.options;\n                    this.activeSelectOptionGroup = SELECT.tmpl.get.call(this, \"optionGroupTmpl\", data);\n                    this.activeSelectOptionGroup.find('[data-els=\"content\"]').html(SELECT.tmpl.get.call(this, \"optionsTmpl\", data, item.columnKeys));\n                    this.activeSelectQueueIndex = queIdx;\n\n                    alignSelectOptionGroup.call(this, \"append\"); // alignSelectOptionGroup 에서 body append\n                    jQuery(window).bind(\"resize.ax5select-\" + this.instanceId, function () {\n                        alignSelectOptionGroup.call(this);\n                    }.bind(this));\n\n                    if (item.selected && item.selected.length > 0) {\n                        selectedOptionEl = this.activeSelectOptionGroup.find('[data-option-index=\"' + item.selected[0][\"@index\"] + '\"]');\n\n                        if (selectedOptionEl.get(0)) {\n                            focusTop = selectedOptionEl.position().top - this.activeSelectOptionGroup.height() / 3;\n                            this.activeSelectOptionGroup.find('[data-els=\"content\"]').stop().animate({ scrollTop: focusTop }, item.animateTime, 'swing', function () {});\n                        }\n                    }\n\n                    /// 사용자 입력으로 옵션을 검색하기 위한 시나리오\n                    // 옵션그룹이 활성화 되면 사용자 입력을 받기위한 input 값 초기화 및 포커스 다른 select가 닫히면서 display focus 이벤트와 충돌하는 문제가 있으므로\n                    // 1밀리세컨 지연후 포커스 처리. input에 포커스가 되므로 input value로 options를 검색 할 수 있게 됩니다.\n                    item.$displayInput.val('');\n\n                    setTimeout(function () {\n                        item.$displayInput.trigger(\"focus\");\n\n                        jQuery(window).bind(\"keyup.ax5select-\" + this.instanceId, function (e) {\n                            e = e || window.event;\n                            onBodyKeyup.call(this, e);\n                            U.stopEvent(e);\n                        }.bind(this));\n\n                        jQuery(window).bind(\"click.ax5select-\" + this.instanceId, function (e) {\n                            e = e || window.event;\n                            onBodyClick.call(this, e);\n                            U.stopEvent(e);\n                        }.bind(this));\n                    }.bind(this), 300);\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"open\",\n                        item: item\n                    });\n\n                    // waitOption timer\n                    if (item.onExpand) {\n                        this.waitOptionsCallback = true;\n                        onExpand.call(this, item);\n                    }\n\n                    data = null;\n                    focusTop = null;\n                    selectedOptionEl = null;\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5select.update\n             * @param {(Object|String)} item\n             * @returns {ax5select}\n             */\n            this.update = function (_item) {\n                this.bind(_item);\n                return this;\n            };\n\n            /**\n             * @method ax5select.setOptions\n             * @param boundID\n             * @param options\n             * @returns {ax5select}\n             */\n            this.setOptions = function (boundID, options) {\n                var queIdx = getQueIdx.call(this, boundID);\n                this.queue[queIdx].selected = [];\n                this.queue[queIdx].options = options;\n                bindSelectTarget.call(this, queIdx);\n                return this;\n            };\n\n            /**\n             * @method ax5select.val\n             * @param {(String|Number|Element)} boundID\n             * @param {(String|Object|Array)} [value]\n             * @param {Boolean} [selected]\n             * @returns {ax5select}\n             */\n            this.val = function () {\n\n                // todo : val 함수 리팩토링 필요\n                var getSelected = function getSelected(_item, o, selected) {\n                    if (typeof selected === \"undefined\") {\n                        return _item.multiple ? !o : true;\n                    } else {\n                        return selected;\n                    }\n                },\n                    clearSelected = function clearSelected(queIdx) {\n                    this.queue[queIdx].options.forEach(function (n) {\n                        if (n.optgroup) {\n                            n.options.forEach(function (nn) {\n                                nn.selected = false;\n                            });\n                        } else {\n                            n.selected = false;\n                        }\n                    });\n                },\n                    processor = {\n                    'index': function index(queIdx, value, selected) {\n                        // 클래스 내부에서 호출된 형태, 그런 이유로 옵션그룹에 대한 상태를 변경 하고 있다.\n                        var item = this.queue[queIdx];\n\n                        /*\n                         if (U.isArray(value.index)) {\n                         value.index.forEach(function (n) {\n                         item.options[n][item.columnKeys.optionSelected] = getSelected(item, item.options[n][item.columnKeys.optionSelected], selected);\n                         self.activeSelectOptionGroup\n                         .find('[data-option-index=\"' + n + '\"]')\n                         .attr(\"data-option-selected\", item.options[n][item.columnKeys.optionSelected].toString());\n                         });\n                         }\n                         else {\n                         }\n                         */\n                        if (U.isString(value.index.gindex)) {\n                            item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected] = getSelected(item, item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected], selected);\n                            self.activeSelectOptionGroup.find('[data-option-group-index=\"' + value.index.gindex + '\"][data-option-index=\"' + value.index.index + '\"]').attr(\"data-option-selected\", item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected].toString());\n                        } else {\n                            item.options[value.index.index][item.columnKeys.optionSelected] = getSelected(item, item.options[value.index.index][item.columnKeys.optionSelected], selected);\n                            self.activeSelectOptionGroup.find('[data-option-index=\"' + value.index.index + '\"]').attr(\"data-option-selected\", item.options[value.index.index][item.columnKeys.optionSelected].toString());\n                        }\n\n                        syncSelectOptions.call(this, queIdx, item.options);\n                        syncLabel.call(this, queIdx);\n                        alignSelectOptionGroup.call(this);\n                    },\n                    'arr': function arr(queIdx, values, selected) {\n                        values.forEach(function (value) {\n                            if (U.isString(value) || U.isNumber(value)) {\n                                processor.value.call(self, queIdx, value, selected);\n                            } else {\n                                for (var key in processor) {\n                                    if (value[key]) {\n                                        processor[key].call(self, queIdx, value, selected);\n                                        break;\n                                    }\n                                }\n                            }\n                        });\n                    },\n                    'value': function value(queIdx, _value2, selected) {\n                        var item = this.queue[queIdx],\n                            optionIndex = U.search(item.options, function () {\n                            return this[item.columnKeys.optionValue] == _value2;\n                        });\n                        if (optionIndex > -1) {\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                        } else {\n                            console.log(ax5.info.getError(\"ax5select\", \"501\", \"val\"));\n                            return;\n                        }\n\n                        syncSelectOptions.call(this, queIdx, item.options);\n                        syncLabel.call(this, queIdx);\n                    },\n                    'text': function text(queIdx, value, selected) {\n                        var item = this.queue[queIdx],\n                            optionIndex = U.search(item.options, function () {\n                            return this[item.columnKeys.optionText] == value;\n                        });\n                        if (optionIndex > -1) {\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                        } else {\n                            console.log(ax5.info.getError(\"ax5select\", \"501\", \"val\"));\n                            return;\n                        }\n\n                        syncSelectOptions.call(this, queIdx, item.options);\n                        syncLabel.call(this, queIdx);\n                    },\n                    'clear': function clear(queIdx) {\n                        clearSelected.call(this, queIdx);\n                        syncSelectOptions.call(this, queIdx, this.queue[queIdx].options);\n                        syncLabel.call(this, queIdx);\n\n                        if (this.activeSelectOptionGroup) {\n                            this.activeSelectOptionGroup.find('[data-option-index]').attr(\"data-option-selected\", \"false\");\n                        }\n                    }\n                };\n\n                return function (boundID, value, selected, internal) {\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    if (!this.queue[queIdx]) {\n                        return this;\n                    }\n                    if (typeof value !== \"undefined\" && !this.queue[queIdx].multiple) {\n                        clearSelected.call(this, queIdx);\n                    }\n\n                    if (typeof value == \"undefined\") {\n                        return this.queue[queIdx].selected;\n                    } else if (U.isArray(value)) {\n                        processor.arr.call(this, queIdx, value, selected);\n                    } else if (U.isString(value) || U.isNumber(value)) {\n                        processor.value.call(this, queIdx, value, selected);\n                    } else {\n                        if (value === null) {\n                            processor.clear.call(this, queIdx);\n                        } else {\n                            for (var key in processor) {\n                                if (value[key]) {\n                                    processor[key].call(this, queIdx, value, selected);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n\n                    if (typeof value !== \"undefined\") {\n                        onStateChanged.call(this, this.queue[queIdx], {\n                            self: this,\n                            item: this.queue[queIdx],\n                            state: internal ? \"changeValue\" : \"setValue\",\n                            value: this.queue[queIdx].selected,\n                            internal: internal\n                        });\n                    }\n\n                    boundID = null;\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5select.close\n             * @returns {ax5select}\n             */\n            this.close = function (item) {\n                if (this.closeTimer) clearTimeout(this.closeTimer);\n                if (!this.activeSelectOptionGroup) return this;\n\n                item = this.queue[this.activeSelectQueueIndex];\n                item.optionFocusIndex = -1;\n\n                item.$displayInput.val('').trigger(\"blur\");\n                item.$display.removeAttr(\"data-select-option-group-opened\").trigger(\"focus\");\n\n                this.activeSelectOptionGroup.addClass(\"destroy\");\n\n                jQuery(window).unbind(\"resize.ax5select-\" + this.instanceId).unbind(\"click.ax5select-\" + this.instanceId).unbind(\"keyup.ax5select-\" + this.instanceId);\n\n                this.closeTimer = setTimeout(function () {\n                    if (this.activeSelectOptionGroup) this.activeSelectOptionGroup.remove();\n                    this.activeSelectOptionGroup = null;\n                    this.activeSelectQueueIndex = -1;\n\n                    var that = {\n                        self: this,\n                        item: item,\n                        value: item.selected,\n                        state: \"close\"\n                    };\n\n                    onStateChanged.call(this, item, that);\n\n                    // waitOption timer\n                    if (item.onClose) {\n                        item.onClose.call(that);\n                    }\n                }.bind(this), cfg.animateTime);\n                this.waitOptionsCallback = null;\n                return this;\n            };\n\n            this.enable = function (boundID) {\n                var queIdx = getQueIdx.call(this, boundID);\n                this.queue[queIdx].$display.removeAttr(\"disabled\");\n                this.queue[queIdx].$select.removeAttr(\"disabled\");\n\n                onStateChanged.call(this, this.queue[queIdx], {\n                    self: this,\n                    state: \"enable\"\n                });\n\n                return this;\n            };\n\n            this.disable = function (boundID) {\n                var queIdx = getQueIdx.call(this, boundID);\n                this.queue[queIdx].$display.attr(\"disabled\", \"disabled\");\n                this.queue[queIdx].$select.attr(\"disabled\", \"disabled\");\n\n                onStateChanged.call(this, this.queue[queIdx], {\n                    self: this,\n                    state: \"disable\"\n                });\n\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                } else {\n                    this.init();\n                }\n            }.apply(this, arguments);\n        };\n        return ax5select;\n    }());\n    SELECT = ax5.ui.select;\n})();\n\nax5.ui.select_instance = new ax5.ui.select();\njQuery.fn.ax5select = function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"open\":\n                    return ax5.ui.select_instance.open(this);\n                    break;\n                case \"close\":\n                    return ax5.ui.select_instance.close(this);\n                    break;\n                case \"setValue\":\n                    return ax5.ui.select_instance.val(this, arguments[1], arguments[2]);\n                    break;\n                case \"getValue\":\n                    return ax5.ui.select_instance.val(this);\n                    break;\n                case \"enable\":\n                    return ax5.ui.select_instance.enable(this);\n                    break;\n                case \"disable\":\n                    return ax5.ui.select_instance.disable(this);\n                    break;\n                case \"setOptions\":\n                    return ax5.ui.select_instance.setOptions(this, arguments[1]);\n                    break;\n                default:\n                    return this;\n            }\n        } else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.select_instance.bind(config);\n            });\n        }\n        return this;\n    };\n}();\n\n// muliple 속성이 없는 select의 기본 선택 해제 방법.. 결정 필요..\n// onExpand 가 있으면..?\n// ax5.ui.select.tmpl\n(function () {\n\n    var SELECT = ax5.ui.select;\n\n    var optionGroupTmpl = function optionGroupTmpl(columnKeys) {\n        return '\\n<div class=\"ax5select-option-group {{theme}} {{size}}\" data-ax5select-option-group=\"{{id}}\">\\n    <div class=\"ax-select-body\">\\n        <div class=\"ax-select-option-group-content\" data-els=\"content\"></div>\\n    </div>\\n    <div class=\"ax-select-arrow\"></div> \\n</div>\\n';\n    };\n    var tmpl = function tmpl(columnKeys) {\n        return '\\n<a {{^tabIndex}}href=\"#ax5select-{{id}}\" {{/tabIndex}}{{#tabIndex}}tabindex=\"{{tabIndex}}\" {{/tabIndex}}class=\"form-control {{formSize}} ax5select-display {{theme}}\" \\ndata-ax5select-display=\"{{id}}\" data-ax5select-instance=\"{{instanceId}}\">\\n    <div class=\"ax5select-display-table\" data-els=\"display-table\">\\n        <div data-ax5select-display=\"label\">{{label}}</div>\\n        <div data-ax5select-display=\"addon\"> \\n            {{#multiple}}{{#reset}}\\n            <span class=\"addon-icon-reset\" data-selected-clear=\"true\">{{{.}}}</span>\\n            {{/reset}}{{/multiple}}\\n            {{#icons}}\\n            <span class=\"addon-icon-closed\">{{clesed}}</span>\\n            <span class=\"addon-icon-opened\">{{opened}}</span>\\n            {{/icons}}\\n            {{^icons}}\\n            <span class=\"addon-icon-closed\"><span class=\"addon-icon-arrow\"></span></span>\\n            <span class=\"addon-icon-opened\"><span class=\"addon-icon-arrow\"></span></span>\\n            {{/icons}}\\n        </div>\\n    </div>\\n    <input type=\"text\" tabindex=\"-1\" data-ax5select-display=\"input\" \\n    style=\"position:absolute;z-index:0;left:0px;top:0px;font-size:1px;opacity: 0;width:1px;border: 0px none;color : transparent;text-indent: -9999em;\" />\\n</a>\\n';\n    };\n    var selectTmpl = function selectTmpl(columnKeys) {\n        return '\\n<select tabindex=\"-1\" class=\"form-control {{formSize}}\" name=\"{{name}}\" {{#multiple}}multiple=\"multiple\"{{/multiple}}></select>\\n';\n    };\n    var optionsTmpl = function optionsTmpl(columnKeys) {\n        return '\\n{{#waitOptions}}\\n    <div class=\"ax-select-option-item\">\\n            <div class=\"ax-select-option-item-holder\">\\n                <span class=\"ax-select-option-item-cell ax-select-option-item-label\">\\n                    {{{lang.loading}}}\\n                </span>\\n            </div>\\n        </div>\\n{{/waitOptions}}\\n{{^waitOptions}}\\n    {{#options}}\\n        {{#optgroup}}\\n            <div class=\"ax-select-option-group\">\\n                <div class=\"ax-select-option-item-holder\">\\n                    <span class=\"ax-select-option-group-label\">\\n                        {{{.}}}\\n                    </span>\\n                </div>\\n                {{#options}}\\n                <div class=\"ax-select-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-group-index=\"{{@gindex}}\" data-option-index=\"{{@index}}\" \\n                data-option-value=\"{{' + columnKeys.optionValue + '}}\" \\n                {{#' + columnKeys.optionSelected + '}}data-option-selected=\"true\"{{/' + columnKeys.optionSelected + '}}>\\n                    <div class=\"ax-select-option-item-holder\">\\n                        {{#multiple}}\\n                        <span class=\"ax-select-option-item-cell ax-select-option-item-checkbox\">\\n                            <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\\n                        </span>\\n                        {{/multiple}}\\n                        <span class=\"ax-select-option-item-cell ax-select-option-item-label\">{{{' + columnKeys.optionText + '}}}</span>\\n                    </div>\\n                </div>\\n                {{/options}}\\n            </div>                            \\n        {{/optgroup}}\\n        {{^optgroup}}\\n        <div class=\"ax-select-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-index=\"{{@index}}\" data-option-value=\"{{' + columnKeys.optionValue + '}}\" {{#' + columnKeys.optionSelected + '}}data-option-selected=\"true\"{{/' + columnKeys.optionSelected + '}}>\\n            <div class=\"ax-select-option-item-holder\">\\n                {{#multiple}}\\n                <span class=\"ax-select-option-item-cell ax-select-option-item-checkbox\">\\n                    <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\\n                </span>\\n                {{/multiple}}\\n                <span class=\"ax-select-option-item-cell ax-select-option-item-label\">{{{' + columnKeys.optionText + '}}}</span>\\n            </div>\\n        </div>\\n        {{/optgroup}}\\n    {{/options}}\\n    {{^options}}\\n        <div class=\"ax-select-option-item\">\\n            <div class=\"ax-select-option-item-holder\">\\n                <span class=\"ax-select-option-item-cell ax-select-option-item-label\">\\n                    {{{lang.noOptions}}}\\n                </span>\\n            </div>\\n        </div>\\n    {{/options}}\\n{{/waitOptions}}\\n';\n    };\n\n    SELECT.tmpl = {\n        \"optionGroupTmpl\": optionGroupTmpl,\n        \"tmpl\": tmpl,\n        \"selectTmpl\": selectTmpl,\n        \"optionsTmpl\": optionsTmpl,\n\n        get: function get(tmplName, data, columnKeys) {\n            return jQuery(ax5.mustache.render(SELECT.tmpl[tmplName].call(this, columnKeys), data));\n        }\n    };\n})();\n/*\n * Copyright (c) 2016. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n// ax5.ui.grid\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var GRID = void 0;\n\n    UI.addClass({\n        className: \"grid\"\n    }, function () {\n        /**\n         * @class ax5grid\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```\n         * var myGrid = new ax5.ui.grid();\n         * ```\n         */\n        return function () {\n            var self = this,\n                cfg = void 0,\n                ctrlKeys = {\n                \"33\": \"KEY_PAGEUP\",\n                \"34\": \"KEY_PAGEDOWN\",\n                \"35\": \"KEY_END\",\n                \"36\": \"KEY_HOME\",\n                \"37\": \"KEY_LEFT\",\n                \"38\": \"KEY_UP\",\n                \"39\": \"KEY_RIGHT\",\n                \"40\": \"KEY_DOWN\"\n            };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                debounceTime: 250,\n                appendDebouncer: null,\n                appendDebounceTimes: 0,\n                appendProgressIcon: '...',\n                appendProgress: false,\n\n                // 틀고정 속성\n                frozenColumnIndex: 0,\n                frozenRowIndex: 0,\n                showLineNumber: false,\n                showRowSelector: false,\n                multipleSelect: true,\n                virtualScrollY: true,\n                virtualScrollX: true,\n                headerSelect: true,\n\n                // 스크롤될 때 body 페인팅 딜레이를 주어 성능이 좋은 않은 브라우저에서 반응을 빠르게 할 때 사용하는 옵션들\n                virtualScrollYCountMargin: 0,\n                virtualScrollAccelerated: true,\n                virtualScrollAcceleratedDelayTime: 10,\n\n                height: 0,\n                columnMinWidth: 100,\n                lineNumberColumnWidth: 30,\n                rowSelectorColumnWidth: 26,\n                sortable: undefined,\n                remoteSort: false,\n\n                header: {\n                    display: true,\n                    align: false,\n                    columnHeight: 26,\n                    columnPadding: 3,\n                    columnBorderWidth: 1,\n                    selector: true\n                },\n                body: {\n                    align: false,\n                    columnHeight: 26,\n                    columnPadding: 3,\n                    columnBorderWidth: 1,\n                    grouping: false,\n                    mergeCells: false\n                },\n                rightSum: false,\n                footSum: false,\n                page: {\n                    height: 25,\n                    display: true,\n                    statusDisplay: true,\n                    navigationItemCount: 5\n                },\n                scroller: {\n                    size: 15,\n                    barMinSize: 15,\n                    trackPadding: 4\n                },\n                columnKeys: {\n                    selected: '__selected__',\n                    modified: '__modified__',\n                    deleted: '__deleted__',\n                    disableSelection: '__disable_selection__'\n                },\n                tree: {\n                    use: false,\n                    hashDigit: 8,\n                    indentWidth: 10,\n                    arrowWidth: 15,\n                    iconWidth: 18,\n                    icons: {\n                        openedArrow: '▾',\n                        collapsedArrow: '▸',\n                        groupIcon: '⊚',\n                        collapsedGroupIcon: '⊚',\n                        itemIcon: '⊙'\n                    },\n                    columnKeys: {\n                        parentKey: \"pid\",\n                        selfKey: \"id\",\n                        collapse: \"collapse\",\n                        hidden: \"hidden\",\n                        parentHash: \"__hp__\",\n                        selfHash: \"__hs__\",\n                        children: \"__children__\",\n                        depth: \"__depth__\"\n                    }\n                }\n            };\n            this.xvar = {\n                bodyTrHeight: 0, // 한줄의 높이\n                scrollContentWidth: 0, // 스크롤 될 내용물의 너비 (스크롤 될 내용물 : panel['body-scroll'] 안에 컬럼이 있는)\n                scrollContentHeight: 0, // 스크롤 된 내용물의 높이\n                scrollTimer: null\n            };\n\n            // 그리드 데이터셋\n            this.columns = []; // config.columns에서 복제된 오브젝트\n            this.colGroup = []; // columns를 table태그로 출력하기 좋게 변환한 오브젝트\n            this.footSumColumns = [];\n            this.bodyGrouping = {};\n\n            this.list = []; // 그리드의 데이터\n            this.proxyList = null; // 그리드 데이터의 대리자\n            this.page = null; // 그리드의 페이지 정보\n            this.selectedDataIndexs = [];\n            this.deletedList = [];\n            this.sortInfo = {}; // 그리드의 헤더 정렬 정보\n            this.focusedColumn = {}; // 그리드 바디의 포커스된 셀 정보\n            this.selectedColumn = {}; // 그리드 바디의 선택된 셀 정보\n            this.isInlineEditing = false;\n            this.inlineEditing = {};\n            this.listIndexMap = {}; // tree데이터 사용시 데이터 인덱싱 맵\n            this.contextMenu = null; // contentMenu 의 인스턴스\n\n            // header\n            this.headerTable = {};\n            this.leftHeaderData = {};\n            this.headerData = {};\n            this.rightHeaderData = {};\n\n            // body\n            this.bodyRowTable = {};\n            this.leftBodyRowData = {};\n            this.bodyRowData = {};\n            this.rightBodyRowData = {};\n            this.bodyRowMap = {};\n\n            this.bodyGroupingTable = {};\n            this.leftBodyGroupingData = {};\n            this.bodyGroupingData = {};\n            this.rightBodyGroupingData = {};\n            this.bodyGroupingMap = {};\n\n            // footSum\n            this.footSumTable = {}; // footSum의 출력레이아웃\n            this.leftFootSumData = {}; // frozenColumnIndex 를 기준으로 나누어진 출력 레이아웃 왼쪽\n            this.footSumData = {}; // frozenColumnIndex 를 기준으로 나누어진 출력 레이아웃 오른쪽\n            this.needToPaintSum = true; // 데이터 셋이 변경되어 summary 변경 필요여부\n\n            cfg = this.config;\n\n            var initGrid = function initGrid() {\n                // 그리드 템플릿에 전달하고자 하는 데이터를 정리합시다.\n\n                var data = {\n                    instanceId: this.id\n                };\n\n                this.$target.html(GRID.tmpl.get(\"main\", data));\n\n                // 그리드 패널 프레임의 각 엘리먼트를 캐쉬합시다.\n                this.$ = {\n                    \"container\": {\n                        \"hidden\": this.$target.find('[data-ax5grid-container=\"hidden\"]'),\n                        \"root\": this.$target.find('[data-ax5grid-container=\"root\"]'),\n                        \"header\": this.$target.find('[data-ax5grid-container=\"header\"]'),\n                        \"body\": this.$target.find('[data-ax5grid-container=\"body\"]'),\n                        \"page\": this.$target.find('[data-ax5grid-container=\"page\"]'),\n                        \"scroller\": this.$target.find('[data-ax5grid-container=\"scroller\"]')\n                    },\n                    \"panel\": {\n                        \"aside-header\": this.$target.find('[data-ax5grid-panel=\"aside-header\"]'),\n                        \"left-header\": this.$target.find('[data-ax5grid-panel=\"left-header\"]'),\n                        \"header\": this.$target.find('[data-ax5grid-panel=\"header\"]'),\n                        \"header-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"header\"]'),\n                        \"right-header\": this.$target.find('[data-ax5grid-panel=\"right-header\"]'),\n                        \"top-aside-body\": this.$target.find('[data-ax5grid-panel=\"top-aside-body\"]'),\n                        \"top-left-body\": this.$target.find('[data-ax5grid-panel=\"top-left-body\"]'),\n                        \"top-body\": this.$target.find('[data-ax5grid-panel=\"top-body\"]'),\n                        \"top-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"top-body\"]'),\n                        \"top-right-body\": this.$target.find('[data-ax5grid-panel=\"top-right-body\"]'),\n                        \"aside-body\": this.$target.find('[data-ax5grid-panel=\"aside-body\"]'),\n                        \"aside-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"aside-body\"]'),\n                        \"left-body\": this.$target.find('[data-ax5grid-panel=\"left-body\"]'),\n                        \"left-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"left-body\"]'),\n                        \"body\": this.$target.find('[data-ax5grid-panel=\"body\"]'),\n                        \"body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"body\"]'),\n                        \"right-body\": this.$target.find('[data-ax5grid-panel=\"right-body\"]'),\n                        \"right-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"right-body\"]'),\n                        \"bottom-aside-body\": this.$target.find('[data-ax5grid-panel=\"bottom-aside-body\"]'),\n                        \"bottom-left-body\": this.$target.find('[data-ax5grid-panel=\"bottom-left-body\"]'),\n                        \"bottom-body\": this.$target.find('[data-ax5grid-panel=\"bottom-body\"]'),\n                        \"bottom-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"bottom-body\"]'),\n                        \"bottom-right-body\": this.$target.find('[data-ax5grid-panel=\"bottom-right-body\"]')\n                    },\n                    \"livePanelKeys\": [], // 현재 사용중인 패널들 (grid-body repaint에서 수집하여 처리)\n                    \"scroller\": {\n                        \"vertical\": this.$target.find('[data-ax5grid-scroller=\"vertical\"]'),\n                        \"vertical-bar\": this.$target.find('[data-ax5grid-scroller=\"vertical-bar\"]'),\n                        \"horizontal\": this.$target.find('[data-ax5grid-scroller=\"horizontal\"]'),\n                        \"horizontal-bar\": this.$target.find('[data-ax5grid-scroller=\"horizontal-bar\"]'),\n                        \"corner\": this.$target.find('[data-ax5grid-scroller=\"corner\"]')\n                    },\n                    \"page\": {\n                        \"navigation\": this.$target.find('[data-ax5grid-page=\"navigation\"]'),\n                        \"status\": this.$target.find('[data-ax5grid-page=\"status\"]')\n                    },\n                    \"form\": {\n                        \"clipboard\": this.$target.find('[data-ax5grid-form=\"clipboard\"]')\n                    },\n                    \"resizer\": {\n                        \"vertical\": this.$target.find('[data-ax5grid-resizer=\"vertical\"]'),\n                        \"horizontal\": this.$target.find('[data-ax5grid-resizer=\"horizontal\"]')\n                    }\n                };\n\n                this.$[\"container\"][\"root\"].css({ height: this.config.height || this.config._height });\n\n                return this;\n            };\n            var initColumns = function initColumns(_columns) {\n                if (!U.isArray(_columns)) _columns = [];\n                this.columns = U.deepCopy(_columns);\n\n                this.headerTable = GRID.util.makeHeaderTable.call(this, this.columns);\n                this.xvar.frozenColumnIndex = cfg.frozenColumnIndex || 0;\n\n                this.bodyRowTable = GRID.util.makeBodyRowTable.call(this, this.columns);\n                this.bodyRowMap = GRID.util.makeBodyRowMap.call(this, this.bodyRowTable);\n                // 바디에 표현될 한줄의 높이를 계산합니다.\n                this.xvar.bodyTrHeight = this.bodyRowTable.rows.length * this.config.body.columnHeight;\n\n                var colGroupMap = {};\n                for (var r = 0, rl = this.headerTable.rows.length; r < rl; r++) {\n                    var row = this.headerTable.rows[r];\n                    for (var c = 0, cl = row.cols.length; c < cl; c++) {\n                        colGroupMap[row.cols[c].colIndex] = jQuery.extend({}, row.cols[c]);\n                    }\n                }\n\n                this.colGroup = [];\n                for (var k in colGroupMap) {\n                    this.colGroup.push(colGroupMap[k]);\n                }\n\n                return this;\n            };\n            var onResetColumns = function onResetColumns() {\n                initColumns.call(this, this.config.columns);\n                resetColGroupWidth.call(this);\n                if (this.config.footSum) {\n                    initFootSum.call(this, this.config.footSum);\n                    this.needToPaintSum = true;\n                }\n                if (this.config.body.grouping) initBodyGroup.call(this, this.config.body.grouping);\n                alignGrid.call(this, true);\n                GRID.header.repaint.call(this, true);\n                GRID.body.repaint.call(this, true);\n                GRID.scroller.resize.call(this);\n            };\n            var resetColGroupWidth = function resetColGroupWidth() {\n                /// !! 그리드 target의 크기가 변경되면 이 함수를 호출하려 this.colGroup의 _width 값을 재 계산 하여야 함. [tom]\n                var CT_WIDTH = this.$[\"container\"][\"root\"].width() - function () {\n                    var width = 0;\n                    if (cfg.showLineNumber) width += cfg.lineNumberColumnWidth;\n                    if (cfg.showRowSelector) width += cfg.rowSelectorColumnWidth;\n                    width += cfg.scroller.size;\n                    return width;\n                }(),\n                    totalWidth = 0,\n                    computedWidth = void 0,\n                    autoWidthColgroupIndexs = [],\n                    colGroup = this.colGroup,\n                    i = void 0,\n                    l = void 0;\n\n                for (i = 0, l = colGroup.length; i < l; i++) {\n                    if (U.isNumber(colGroup[i].width)) {\n                        totalWidth += colGroup[i]._width = colGroup[i].width;\n                    } else if (colGroup[i].width === \"*\") {\n                        autoWidthColgroupIndexs.push(i);\n                    } else if (U.right(colGroup[i].width, 1) === \"%\") {\n                        totalWidth += colGroup[i]._width = CT_WIDTH * U.left(colGroup[i].width, \"%\") / 100;\n                    }\n                }\n                if (autoWidthColgroupIndexs.length > 0) {\n                    computedWidth = (CT_WIDTH - totalWidth) / autoWidthColgroupIndexs.length;\n                    for (i = 0, l = autoWidthColgroupIndexs.length; i < l; i++) {\n                        colGroup[autoWidthColgroupIndexs[i]]._width = computedWidth;\n                    }\n                }\n            };\n            var initFootSum = function initFootSum(_footSum) {\n                if (U.isArray(_footSum)) {\n                    this.footSumTable = GRID.util.makeFootSumTable.call(this, this.footSumColumns = _footSum);\n                } else {\n                    this.footSumColumns = [];\n                    this.footSumTable = {};\n                }\n            };\n            var initBodyGroup = function initBodyGroup(_grouping) {\n                var grouping = jQuery.extend({}, _grouping);\n                if (\"by\" in grouping && \"columns\" in grouping) {\n                    this.bodyGrouping = {\n                        by: grouping.by,\n                        columns: grouping.columns\n                    };\n                    this.bodyGroupingTable = GRID.util.makeBodyGroupingTable.call(this, this.bodyGrouping.columns);\n                    this.sortInfo = function () {\n                        var sortInfo = {};\n                        for (var k = 0, kl = this.bodyGrouping.by.length; k < kl; k++) {\n                            sortInfo[this.bodyGrouping.by[k]] = {\n                                orderBy: \"asc\",\n                                seq: k,\n                                fixed: true\n                            };\n                            for (var c = 0, cl = this.colGroup.length; c < cl; c++) {\n                                if (this.colGroup[c].key === this.bodyGrouping.by[k]) {\n                                    this.colGroup[c].sort = \"asc\";\n                                    this.colGroup[c].sortFixed = true;\n                                }\n                            }\n                        }\n                        return sortInfo;\n                    }.call(this);\n                } else {\n                    cfg.body.grouping = false;\n                }\n            };\n            var alignGrid = function alignGrid(_isFirst) {\n                var list = this.proxyList ? this.proxyList : this.list;\n                // 대상이 크기가 컬럼의 최소 크기 보다 작업 금지\n                if (Math.min(this.$target.innerWidth(), this.$target.innerHeight()) < 5) {\n                    return false;\n                }\n\n                if (!this.config.height) {\n                    this.$[\"container\"][\"root\"].css({ height: this.config._height = this.$target.height() });\n                }\n\n                var CT_WIDTH = this.$[\"container\"][\"root\"].width(),\n                    CT_HEIGHT = this.$[\"container\"][\"root\"].height(),\n                    CT_INNER_WIDTH = CT_WIDTH,\n                    CT_INNER_HEIGHT = CT_HEIGHT,\n                    asidePanelWidth = cfg.asidePanelWidth = function () {\n                    var width = 0;\n                    if (cfg.showLineNumber) width += cfg.lineNumberColumnWidth;\n                    if (cfg.showRowSelector) width += cfg.rowSelectorColumnWidth;\n                    return width;\n                }(),\n                    frozenPanelWidth = cfg.frozenPanelWidth = function (colGroup, endIndex) {\n                    var width = 0;\n                    for (var i = 0, l = endIndex; i < l; i++) {\n                        width += colGroup[i]._width;\n                    }\n                    return width;\n                }(this.colGroup, cfg.frozenColumnIndex),\n                    verticalScrollerWidth = void 0,\n                    horizontalScrollerHeight = void 0,\n                    bodyHeight = void 0;\n\n                // todo : 우측 함계컬럼 너비 계산\n                var rightPanelWidth = 0,\n                    frozenRowHeight = function (bodyTrHeight) {\n                    return cfg.frozenRowIndex * bodyTrHeight;\n                }(this.xvar.bodyTrHeight),\n                    footSumHeight = function (bodyTrHeight) {\n                    return this.footSumColumns.length * bodyTrHeight;\n                }.call(this, this.xvar.bodyTrHeight),\n                    headerHeight = cfg.header.display ? this.headerTable.rows.length * cfg.header.columnHeight : 0,\n                    pageHeight = cfg.page.display ? cfg.page.height : 0;\n\n                (function () {\n                    verticalScrollerWidth = CT_HEIGHT - headerHeight - pageHeight - footSumHeight < list.length * this.xvar.bodyTrHeight ? this.config.scroller.size : 0;\n                    // 남은 너비가 colGroup의 너비보다 넓을때. 수평 스크롤 활성화.\n                    horizontalScrollerHeight = function () {\n                        var totalColGroupWidth = 0;\n                        // aside 빼고 너비\n                        // 수직 스크롤이 있으면 또 빼고 비교\n                        var bodyWidth = CT_WIDTH - asidePanelWidth - verticalScrollerWidth;\n                        for (var i = 0, l = this.colGroup.length; i < l; i++) {\n                            totalColGroupWidth += this.colGroup[i]._width;\n                        }\n                        return totalColGroupWidth > bodyWidth ? this.config.scroller.size : 0;\n                    }.call(this);\n\n                    if (horizontalScrollerHeight > 0) {\n                        verticalScrollerWidth = CT_HEIGHT - headerHeight - pageHeight - footSumHeight - horizontalScrollerHeight < list.length * this.xvar.bodyTrHeight ? this.config.scroller.size : 0;\n                    }\n                }).call(this);\n\n                // 수평 너비 결정\n                CT_INNER_WIDTH = CT_WIDTH - verticalScrollerWidth;\n                // 수직 스크롤러의 높이 결정.\n                CT_INNER_HEIGHT = CT_HEIGHT - pageHeight - horizontalScrollerHeight;\n\n                bodyHeight = CT_INNER_HEIGHT - headerHeight;\n\n                var panelDisplayProcess = function panelDisplayProcess(panel, vPosition, hPosition, containerType) {\n                    var css = {},\n                        isHide = false;\n\n                    switch (hPosition) {\n                        case \"aside\":\n                            if (asidePanelWidth === 0) {\n                                isHide = true;\n                            } else {\n                                css[\"left\"] = 0;\n                                css[\"width\"] = asidePanelWidth;\n                            }\n                            break;\n                        case \"left\":\n                            if (cfg.frozenColumnIndex === 0) {\n                                isHide = true;\n                            } else {\n                                css[\"left\"] = asidePanelWidth;\n                                css[\"width\"] = frozenPanelWidth;\n                            }\n                            break;\n                        case \"right\":\n                            if (!cfg.rightSum) {\n                                isHide = true;\n                            } else {}\n                            break;\n                        default:\n                            if (containerType !== \"page\") {\n                                if (cfg.frozenColumnIndex === 0) {\n                                    css[\"left\"] = asidePanelWidth;\n                                } else {\n                                    css[\"left\"] = frozenPanelWidth + asidePanelWidth;\n                                }\n                                css[\"width\"] = CT_INNER_WIDTH - asidePanelWidth - frozenPanelWidth - rightPanelWidth;\n                            }\n                            break;\n                    }\n\n                    if (isHide) {\n                        panel.hide();\n                        // 프로세스 중지\n                        return this;\n                    }\n\n                    if (containerType === \"body\") {\n                        switch (vPosition) {\n                            case \"top\":\n                                if (cfg.frozenRowIndex == 0) {\n                                    isHide = true;\n                                } else {\n                                    css[\"top\"] = 0;\n                                    css[\"height\"] = frozenRowHeight;\n                                }\n                                break;\n                            case \"bottom\":\n                                if (!cfg.footSum) {\n                                    isHide = true;\n                                } else {\n                                    css[\"top\"] = bodyHeight - footSumHeight;\n                                    css[\"height\"] = footSumHeight; // footSum height\n                                }\n                                break;\n                            default:\n                                css[\"top\"] = frozenRowHeight;\n                                css[\"height\"] = bodyHeight - frozenRowHeight - footSumHeight;\n\n                                break;\n                        }\n                    } else if (containerType === \"header\") {\n                        css[\"height\"] = headerHeight;\n                    } else if (containerType === \"page\") {\n                        if (pageHeight == 0) {\n                            isHide = true;\n                        } else {\n                            css[\"height\"] = pageHeight;\n                        }\n                    }\n\n                    if (isHide) {\n                        panel.hide();\n                        // 프로세스 중지\n                        return this;\n                    }\n\n                    panel.show().css(css);\n                    return this;\n                };\n                var scrollerDisplayProcess = function scrollerDisplayProcess(panel, scrollerWidth, scrollerHeight, containerType) {\n                    var css = {},\n                        isHide = false;\n\n                    switch (containerType) {\n                        case \"vertical\":\n                            if (scrollerWidth > 0) {\n                                css[\"width\"] = scrollerWidth;\n                                css[\"height\"] = CT_INNER_HEIGHT;\n                                css[\"bottom\"] = scrollerHeight + pageHeight;\n                            } else {\n                                isHide = true;\n                            }\n                            break;\n                        case \"horizontal\":\n                            if (scrollerHeight > 0) {\n                                css[\"width\"] = CT_INNER_WIDTH;\n                                css[\"height\"] = scrollerHeight;\n                                css[\"right\"] = scrollerWidth;\n                                css[\"bottom\"] = pageHeight;\n                            } else {\n                                isHide = true;\n                            }\n                            break;\n                        case \"corner\":\n                            if (scrollerWidth > 0 && scrollerHeight > 0) {\n                                css[\"width\"] = scrollerWidth;\n                                css[\"height\"] = scrollerHeight;\n                                css[\"bottom\"] = pageHeight;\n                            } else {\n                                isHide = true;\n                            }\n                            break;\n                    }\n\n                    if (isHide) {\n                        panel.hide();\n                        // 프로세스 중지\n                        return this;\n                    }\n\n                    panel.show().css(css);\n                };\n\n                this.$[\"container\"][\"header\"].css({ height: headerHeight });\n                this.$[\"container\"][\"body\"].css({ height: bodyHeight });\n\n                // 각 패널들의 크기 표시여부를 결정합니다\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"aside-header\"], \"\", \"aside\", \"header\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"left-header\"], \"\", \"left\", \"header\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"header\"], \"\", \"\", \"header\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"right-header\"], \"\", \"right\", \"header\");\n\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"top-aside-body\"], \"top\", \"aside\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"top-left-body\"], \"top\", \"left\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"top-body\"], \"top\", \"\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"top-right-body\"], \"top\", \"right\", \"body\");\n\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"aside-body\"], \"\", \"aside\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"left-body\"], \"\", \"left\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"body\"], \"\", \"\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"right-body\"], \"\", \"right\", \"body\");\n\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-aside-body\"], \"bottom\", \"aside\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-left-body\"], \"bottom\", \"left\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-body\"], \"bottom\", \"\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-right-body\"], \"bottom\", \"right\", \"body\");\n\n                scrollerDisplayProcess.call(this, this.$[\"scroller\"][\"vertical\"], verticalScrollerWidth, horizontalScrollerHeight, \"vertical\");\n                scrollerDisplayProcess.call(this, this.$[\"scroller\"][\"horizontal\"], verticalScrollerWidth, horizontalScrollerHeight, \"horizontal\");\n                scrollerDisplayProcess.call(this, this.$[\"scroller\"][\"corner\"], verticalScrollerWidth, horizontalScrollerHeight, \"corner\");\n\n                panelDisplayProcess.call(this, this.$[\"container\"][\"page\"], \"\", \"\", \"page\");\n\n                // 각 패널의 사이즈 결정\n                /// 다른 패널의 사이즈 정보가 필요한 경우 여기서 정의해주고 사용함.\n                this.xvar.bodyHeight = this.$.panel[\"body\"].height();\n                this.xvar.bodyWidth = this.$.panel[\"body\"].width();\n                // scrollContentWidth 는 grid-header repaint에서 결정합니다. 까먹지 맙시다. > this.xvar.scrollContentWidth\n\n                return true;\n            };\n            var sortColumns = function sortColumns(_sortInfo) {\n                GRID.header.repaint.call(this);\n\n                if (U.isFunction(this.config.remoteSort)) {\n                    var that = { sortInfo: [] };\n                    for (var k in _sortInfo) {\n                        that.sortInfo.push({\n                            key: k,\n                            orderBy: _sortInfo[k].orderBy,\n                            seq: _sortInfo[k].seq\n                        });\n                    }\n                    that.sortInfo.sort(function (a, b) {\n                        return a.seq > b.seq;\n                    });\n                    this.config.remoteSort.call(that, that);\n                } else {\n                    if (this.config.body.grouping) {\n                        this.list = GRID.data.initData.call(this, GRID.data.sort.call(this, _sortInfo, GRID.data.clearGroupingData.call(this, this.list)));\n                    } else {\n                        this.list = GRID.data.sort.call(this, _sortInfo, GRID.data.clearGroupingData.call(this, this.list), { resetLineNumber: true });\n                    }\n                    GRID.body.repaint.call(this, true);\n                    GRID.scroller.resize.call(this);\n                }\n            };\n            /// private end\n\n            /**\n            /**\n             * Preferences of grid UI\n             * @method ax5grid.setConfig\n             * @param {Object} _config - 클래스 속성값\n             * @param {Element} _config.target\n             * @param {Number} [_config.frozenColumnIndex=0]\n             * @param {Number} [_config.frozenRowIndex=0]\n             * @param {Boolean} [_config.showLineNumber=false]\n             * @param {Boolean} [_config.showRowSelector=false]\n             * @param {Boolean} [_config.multipleSelect=true]\n             * @param {Number} [_config.columnMinWidth=100]\n             * @param {Number} [_config.lineNumberColumnWidth=30]\n             * @param {Number} [_config.rowSelectorColumnWidth=25]\n             * @param {Boolean} [_config.sortable=false]\n             * @param {Boolean} [_config.multiSort=false]\n             * @param {Function} [_config.remoteSort=false]\n             * @param {Boolean} [_config.virtualScrollY=true] - 세로축 가상스크롤 처리여부\n             * @param {Boolean} [_config.virtualScrollX=true] - 가로축 가상스크롤 처리여부\n             * @param {Object} [_config.header]\n             * @param {Object} [_config.header.selector=true] - 헤더 checkbox 표시여부\n             * @param {String} [_config.header.align]\n             * @param {Number} [_config.header.columnHeight=25]\n             * @param {Number} [_config.header.columnPadding=3]\n             * @param {Number} [_config.header.columnBorderWidth=1]\n             * @param {Object} [_config.body]\n             * @param {Function} [_config.body.onClick]\n             * @param {Function} [_config.body.onDBLClick]\n             * @param {Function} [_config.body.onDataChanged]\n             * @param {String|Array} [_config.body.mergeCells=false] -\n             * @param {String} [_config.body.align]\n             * @param {Number} [_config.body.columnHeight=25]\n             * @param {Number} [_config.body.columnPadding=3]\n             * @param {Number} [_config.body.columnBorderWidth=1]\n             * @param {Object} [_config.body.grouping]\n             * @param {Array} [_config.body.grouping.by] - list grouping keys\n             * @param {Array} [_config.body.grouping.columns] - list grouping columns\n             * @param {(String|Function)} [_config.body.trStyleClass]\n             *\n             * @param {Object} [_config.page]\n             * @param {Number} [_config.page.height=25]\n             * @param {Boolean} [_config.page.display=true] - grid page display\n             * @param {Boolean} [_config.page.statusDisplay=true] - grid status display\n             * @param {Number} [_config.page.navigationItemCount=5]\n             * @param {Object} [_config.scroller]\n             * @param {Number} [_config.scroller.size=15]\n             * @param {Number} [_config.scroller.barMinSize=15]\n             * @param {Number} [_config.scroller.trackPadding=4]\n             * @param {Object} [_config.columnKeys]\n             * @param {String} [_config.columnKeys.selected=\"_SELECTED\"]\n             * @param {Object[]} _config.columns\n             * @param {String} _config.columns[].key\n             * @param {String} _config.columns[].label\n             * @param {Number} _config.columns[].width\n             * @param {(String|Function)} _config.columns[].styleClass\n             * @param {(String|Function)} _config.columns[].headerStyleClass\n             * @param {Boolean} _config.columns[].enableFilter\n             * @param {Boolean} _config.columns[].sortable\n             * @param {String} _config.columns[].align\n             * @param {(String|Function)} _config.columns[].formatter\n             * @param {Object} _config.columns[].editor\n             * @param {String} _config.columns[].editor.type - text,number,money,date\n             * @param {Object} _config.columns[].editor.config\n             * @param {Array} _config.columns[].editor.updateWith\n             * @param {Function} _config.columns[].editor.disabled - disable editor\n             * @param {Boolean} [_config.columns[].multiLine=false]\n             * @param {Object} [_config.tree]\n             * @param {Boolean} [_config.tree.use=false] - Whether tree-type data is used\n             * @param {Number} [_config.tree.hashDigit=8]\n             * @param {Number} [_config.tree.indentWidth=10]\n             * @param {Number} [_config.tree.arrowWidth=15]\n             * @param {Number} [_config.tree.iconWidth=18]\n             * @param {Object} [_config.tree.icons]\n             * @param {String} [_config.tree.icons.openedArrow='▾']\n             * @param {String} [_config.tree.icons.collapsedArrow='▸']\n             * @param {String} [_config.tree.icons.groupIcon='⊚']\n             * @param {String} [_config.tree.icons.collapsedGroupIcon='⊚']\n             * @param {String} [_config.tree.icons.itemIcon='⊙']\n             * @param {Object} [_config.tree.columnKeys]\n             * @param {String} [_config.tree.columnKeys.parentKey=\"pid\"]\n             * @param {String} [_config.tree.columnKeys.selfKey=\"id\"]\n             * @param {String} [_config.tree.columnKeys.collapse=\"collapse\"]\n             * @param {String} [_config.tree.columnKeys.hidden=\"hidden\"]\n             * @param {String} [_config.tree.columnKeys.parentHash=\"__hp__\"]\n             * @param {String} [_config.tree.columnKeys.selfHash=\"__hs__\"]\n             * @param {String} [_config.tree.columnKeys.children=\"__children__\"]\n             * @param {String} [_config.tree.columnKeys.depth=\"__depth__\"]\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * var firstGrid = new ax5.ui.grid();\n             *\n             * ax5.ui.grid.formatter[\"myType\"] = function () {\n             *     return \"myType\" + (this.value || \"\");\n             * };\n             * ax5.ui.grid.formatter[\"capital\"] = function(){\n             *     return (''+this.value).toUpperCase();\n             * };\n             *\n             * ax5.ui.grid.collector[\"myType\"] = function () {\n             *     return \"myType\" + (this.value || \"\");\n             * };\n             *\n             * var sampleData = [\n             *     {a: \"A\", b: \"A01\", price: 1000, amount: 12, cost: 12000, saleDt: \"2016-08-29\", customer: \"장기영\", saleType: \"A\"},\n             *     {companyJson: {\"대표자명\":\"abcd\"}, a: \"A\", b: \"B01\", price: 1100, amount: 11, cost: 12100, saleDt: \"2016-08-28\", customer: \"장서우\", saleType: \"B\"},\n             *     {companyJson: {\"대표자명\":\"abcd\"}, a: \"A\", b: \"C01\", price: 1200, amount: 10, cost: 12000, saleDt: \"2016-08-27\", customer: \"이영희\", saleType: \"A\"},\n             *     {companyJson: {\"대표자명\":\"위세라\"}, a: \"A\", b: \"A01\", price: 1300, amount: 8, cost: 10400, saleDt: \"2016-08-25\", customer: \"황인서\", saleType: \"C\"},\n             *     {companyJson: {\"대표자명\":\"abcd\"}, a: \"A\", b: \"B01\", price: 1400, amount: 5, cost: 7000, saleDt: \"2016-08-29\", customer: \"황세진\", saleType: \"D\"},\n             *     {companyJson: {\"대표자명\":\"abcd\"}, a: \"A\", b: \"A01\", price: 1500, amount: 2, cost: 3000, saleDt: \"2016-08-26\", customer: \"이서연\", saleType: \"A\"}\n             * ];\n             *\n             * var gridView = {\n             *     initView: function () {\n             *         firstGrid.setConfig({\n             *             target: $('[data-ax5grid=\"first-grid\"]'),\n             *             columns: [\n             *                 {\n             *                     key: \"companyJson['대표자명']\",\n             *                     label: \"필드A\",\n             *                     width: 80,\n             *                     styleClass: function () {\n             *                         return \"ABC\";\n             *                     },\n             *                     enableFilter: true,\n             *                     align: \"center\",\n             *                     editor: {type:\"text\"}\n             *                 },\n             *                 {key: \"b\", label: \"필드B\", align: \"center\"},\n             *                 {\n             *                     key: undefined, label: \"필드C\", columns: [\n             *                         {key: \"price\", label: \"단가\", formatter: \"money\", align: \"right\"},\n             *                         {key: \"amount\", label: \"수량\", formatter: \"money\", align: \"right\"},\n             *                         {key: \"cost\", label: \"금액\", align: \"right\", formatter: \"money\"}\n             *                     ]\n             *                 },\n             *                 {key: \"saleDt\", label: \"판매일자\", align: \"center\"},\n             *                 {key: \"customer\", label: \"고객명\"},\n             *                 {key: \"saleType\", label: \"판매타입\"}\n             *             ]\n             *         });\n             *         return this;\n             *     },\n             *     setData: function (_pageNo) {\n             *         firstGrid.setData(sampleData);\n             *         return this;\n             *     }\n             * };\n             *\n             * // onClick, onDBLClick, onDataChanged\n             * firstGrid.setConfig({\n             *      target: $('[data-ax5grid=\"first-grid\"]'),\n             *      columns: [...],\n             *      body: {\n             *          onClick: function(){\n             *              console.log(this);\n             *          },\n             *          onDBLClick: function(){\n             *              console.log(this);\n             *              // If the column does not have an editor attribute, an event is raised.\n             *          },\n             *          onDataChanged: function(){\n             *              console.log(this);\n             *              // If change Data\n             *          }\n             *      }\n             * });\n             * ```\n             */\n            this.init = function (_config) {\n                cfg = jQuery.extend(true, {}, cfg, _config);\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5grid\", \"401\", \"init\"));\n                    return this;\n                }\n\n                // 그리드의 이벤트 정의 구간\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                //this.onDblClick = cfg.onDblClick;\n                this.onLoad = cfg.onLoad;\n                this.onDataChanged = cfg.body.onDataChanged;\n                // todo event에 대한 추가 정의 필요\n\n                this.$target = jQuery(cfg.target);\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        cfg = jQuery.extend(true, cfg, data);\n                    }\n                }).call(this, U.parseJson(this.$target.attr(\"data-ax5grid-config\"), true));\n\n                var grid = this.config = cfg;\n\n                if (!this.config.height) {\n                    this.config._height = this.$target.height();\n                }\n\n                if (!this.id) this.id = this.$target.data(\"data-ax5grid-id\");\n                if (!this.id) {\n                    //this.id = 'ax5grid-' + ax5.getGuid();\n                    this.id = 'ax5grid-' + this.instanceId;\n                    this.$target.data(\"data-ax5grid-id\", grid.id);\n                }\n\n                GRID.data.init.call(this);\n\n                if (this.config.tree.use) {\n                    // 트리라면\n                    this.sortInfo = {};\n                    this.sortInfo[this.config.tree.columnKeys.selfHash] = { orderBy: \"asc\", seq: 0, fixed: true };\n                }\n\n                ///========\n                // 그리드를 그리기 위한 가장 기초적인 작업 뼈대와 틀을 준비합니다. 이 메소드는 초기화 시 한번만 호출 되게 됩니다.\n                initGrid.call(this);\n\n                // columns데이터를 분석하여 미리 처리해야하는 데이터를 정리합니다.\n                initColumns.call(this, grid.columns);\n                resetColGroupWidth.call(this);\n\n                // footSum 데이터를 분석하여 미리 처리해야 하는 데이터를 정리\n                if (grid.footSum) initFootSum.call(this, grid.footSum);\n\n                // bodyGrouping 데이터를 분석하여 미리 처리해야 하는 데이터를 정리\n                if (grid.body.grouping) initBodyGroup.call(this, grid.body.grouping);\n\n                // 그리드의 각 요소의 크기를 맞춤니다.\n                alignGrid.call(this, true);\n\n                // columns의 데이터로 header데이터를 만들고\n                GRID.header.init.call(this);\n                // header를 출력합니다.\n                GRID.header.repaint.call(this);\n\n                // columns의 데이터로 body데이터를 만들고\n                GRID.body.init.call(this);\n                // body를 출력합니다.\n                GRID.body.repaint.call(this);\n\n                // scroller\n                GRID.scroller.init.call(this);\n                GRID.scroller.resize.call(this);\n\n                jQuery(window).bind(\"resize.ax5grid-\" + this.id, function () {\n                    alignGrid.call(self);\n                    GRID.scroller.resize.call(self);\n                    GRID.body.repaint.call(self); // window resize시 repaint 함수 호출\n                });\n\n                jQuery(document.body).on(\"click.ax5grid-\" + this.id, function (e) {\n                    var isPickerClick = false,\n                        target = U.findParentNode(e.target, function (_target) {\n                        if (isPickerClick = _target.getAttribute(\"data-ax5grid-inline-edit-picker\")) {\n                            return true;\n                        }\n                        return _target.getAttribute(\"data-ax5grid-container\") === \"root\";\n                    });\n\n                    if (target && target.getAttribute(\"data-ax5grid-instance\") === this.id) {\n                        self.focused = true;\n                    } else {\n                        self.focused = false;\n                        GRID.body.blur.call(this);\n                    }\n                }.bind(this));\n\n                jQuery(window).on(\"keydown.ax5grid-\" + this.instanceId, function (e) {\n                    if (self.focused) {\n                        if (self.isInlineEditing) {\n\n                            if (e.which == ax5.info.eventKeys.ESC) {\n                                self.keyDown(\"ESC\", e.originalEvent);\n                            } else if (e.which == ax5.info.eventKeys.RETURN) {\n                                self.keyDown(\"RETURN\", e.originalEvent);\n                            } else if (e.which == ax5.info.eventKeys.TAB) {\n                                self.keyDown(\"TAB\", e.originalEvent);\n                                U.stopEvent(e);\n                            } else if (e.which == ax5.info.eventKeys.UP) {\n                                self.keyDown(\"RETURN\", { shiftKey: true });\n                            } else if (e.which == ax5.info.eventKeys.DOWN) {\n                                self.keyDown(\"RETURN\", {});\n                            }\n                        } else {\n\n                            if (e.metaKey || e.ctrlKey) {\n                                if (e.which == 67) {\n                                    // c\n                                    self.copySelect();\n                                }\n                            } else {\n                                if (ctrlKeys[e.which]) {\n                                    self.keyDown(ctrlKeys[e.which], e.originalEvent); // 키다운 이벤트 호출\n                                    U.stopEvent(e);\n                                } else if (e.which == ax5.info.eventKeys.ESC) {\n                                    if (self.focused) {\n                                        GRID.body.blur.call(self);\n                                    }\n                                } else if (e.which == ax5.info.eventKeys.RETURN || e.which == ax5.info.eventKeys.SPACE) {\n                                    self.keyDown(\"RETURN\", e.originalEvent);\n                                } else if (e.which == ax5.info.eventKeys.TAB) {\n                                    //self.keyDown(\"RETURN\", e.originalEvent);\n                                    U.stopEvent(e);\n                                } else if (Object.keys(self.focusedColumn).length) {\n                                    /*\n                                    self.keyDown(\"INLINE_EDIT\", e.originalEvent);\n                                    */\n                                }\n                            }\n                        }\n                    }\n                });\n\n                jQuery(window).on(\"keyup.ax5grid-\" + this.instanceId, function (e) {\n                    if (self.focused) {\n                        if (self.isInlineEditing) {} else {\n                            if (e.metaKey || e.ctrlKey) {} else {\n                                if (ctrlKeys[e.which]) {} else if (e.which == ax5.info.eventKeys.ESC) {} else if (e.which == ax5.info.eventKeys.RETURN || e.which == ax5.info.eventKeys.SPACE) {} else if (e.which == ax5.info.eventKeys.TAB) {} else if (Object.keys(self.focusedColumn).length) {\n                                    self.keyDown(\"INLINE_EDIT\", e.originalEvent);\n                                }\n                            }\n                        }\n                    }\n                });\n\n                // 그리드 레이아웃이 모든 준비를 마친시점에 onLoad존재 여부를 확인하고 호출하여 줍니다.\n                setTimeout(function () {\n                    if (this.onLoad) {\n                        this.onLoad.call({\n                            self: this\n                        });\n                    }\n                }.bind(this));\n                return this;\n            };\n\n            /**\n             * align grid size\n             * @method ax5grid.align\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.repaint();\n             * ```\n             */\n            this.align = function () {\n                if (alignGrid.call(this)) {\n                    GRID.body.repaint.call(this);\n                    GRID.scroller.resize.call(this);\n                }\n                return this;\n            };\n\n            /**\n             * repaint grid\n             * @method ax5grid.repaint\n             * @return {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.repaint();\n             * ```\n             */\n            this.repaint = function () {\n                GRID.header.repaint.call(this);\n                GRID.body.repaint.call(this, true); // 강제로 다시 그리기\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.keyDown\n             * @param {String} _keyName\n             * @param {Event|Object} _data\n             * @return {ax5grid}\n             */\n            this.keyDown = function () {\n                var processor = {\n                    \"KEY_UP\": function KEY_UP() {\n                        GRID.body.moveFocus.call(this, \"UP\");\n                    },\n                    \"KEY_DOWN\": function KEY_DOWN() {\n                        GRID.body.moveFocus.call(this, \"DOWN\");\n                    },\n                    \"KEY_LEFT\": function KEY_LEFT() {\n                        GRID.body.moveFocus.call(this, \"LEFT\");\n                    },\n                    \"KEY_RIGHT\": function KEY_RIGHT() {\n                        GRID.body.moveFocus.call(this, \"RIGHT\");\n                    },\n                    \"KEY_HOME\": function KEY_HOME() {\n                        GRID.body.moveFocus.call(this, \"HOME\");\n                    },\n                    \"KEY_END\": function KEY_END() {\n                        GRID.body.moveFocus.call(this, \"END\");\n                    },\n                    \"INLINE_EDIT\": function INLINE_EDIT(_e) {\n                        GRID.body.inlineEdit.active.call(this, this.focusedColumn, _e);\n                        if (!/[0-9a-zA-Z]/.test(_e.key)) {\n                            U.stopEvent(_e);\n                        }\n                    },\n                    \"ESC\": function ESC(_e) {\n                        GRID.body.inlineEdit.keydown.call(this, \"ESC\");\n                    },\n                    \"RETURN\": function RETURN(_e) {\n                        var activeEditLength = 0;\n                        for (var columnKey in this.inlineEditing) {\n                            activeEditLength++;\n\n                            if (!GRID.body.inlineEdit.keydown.call(this, \"RETURN\", columnKey)) {\n                                return false;\n                                U.stopEvent(_e);\n                            }\n                            // next focus\n                            if (activeEditLength == 1) {\n                                if (GRID.body.moveFocus.call(this, _e.shiftKey ? \"UP\" : \"DOWN\")) {\n                                    GRID.body.inlineEdit.keydown.call(this, \"RETURN\");\n                                }\n                            }\n                        }\n                        if (activeEditLength == 0) {\n                            GRID.body.inlineEdit.keydown.call(this, \"RETURN\");\n                            U.stopEvent(_e);\n                        } else {}\n                    },\n                    \"TAB\": function TAB(_e) {\n\n                        var activeEditLength = 0;\n                        for (var columnKey in this.inlineEditing) {\n                            activeEditLength++;\n\n                            GRID.body.inlineEdit.keydown.call(this, \"RETURN\", columnKey, { moveFocus: true });\n                            // next focus\n                            if (activeEditLength == 1) {\n                                if (GRID.body.moveFocus.call(this, _e.shiftKey ? \"LEFT\" : \"RIGHT\")) {\n                                    GRID.body.inlineEdit.keydown.call(this, \"RETURN\", undefined, { moveFocus: true });\n                                }\n                            }\n                        }\n                    }\n                };\n                return function (_act, _data) {\n                    if (_act in processor) processor[_act].call(this, _data);\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5grid.copySelect\n             * @returns {Boolean} copysuccess\n             */\n            this.copySelect = function () {\n                var copysuccess = void 0,\n                    $clipBoard = this.$[\"form\"][\"clipboard\"],\n                    copyTextArray = [],\n                    copyText = \"\",\n                    _rowIndex = void 0,\n                    _colIndex = void 0,\n                    _dindex = void 0,\n                    _di = 0;\n\n                for (var c in this.selectedColumn) {\n                    var _column = this.selectedColumn[c];\n\n                    if (_column) {\n                        if (typeof _dindex === \"undefined\") {\n                            _dindex = _column.dindex;\n                            _rowIndex = _column.rowIndex;\n                            _colIndex = _column.rowIndex;\n                        }\n\n                        if (_dindex != _column.dindex || _rowIndex != _column.rowIndex) {\n                            _di++;\n                        }\n\n                        if (!copyTextArray[_di]) {\n                            copyTextArray[_di] = [];\n                        }\n                        var originalColumn = this.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex];\n                        if (originalColumn) {\n                            if (this.list[_column.dindex].__isGrouping) {\n                                copyTextArray[_di].push(this.list[_column.dindex][_column.colIndex]);\n                            } else {\n                                copyTextArray[_di].push(this.list[_column.dindex][originalColumn.key]);\n                            }\n                        } else {\n                            copyTextArray[_di].push(\"\");\n                        }\n\n                        _dindex = _column.dindex;\n                        _rowIndex = _column.rowIndex;\n                    }\n                }\n\n                copyTextArray.forEach(function (r) {\n                    copyText += r.join('\\t') + \"\\n\";\n                });\n\n                $clipBoard.get(0).value = copyText;\n                $clipBoard.select();\n\n                try {\n                    copysuccess = document.execCommand(\"copy\");\n                } catch (e) {\n                    copysuccess = false;\n                }\n                return copysuccess;\n            };\n\n            /**\n             * @method ax5grid.setData\n             * @param {Array} _data\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.setData({\n             *  list: [],\n             *  page: {\n             *      currentPage: 0,\n             *      pageSize: 50,\n             *      totalElements: 500,\n             *      totalPages: 100\n             *  }\n             * });\n             *\n             * // onlyList\n             * ax5Grid.setData([]);\n             * ```\n             */\n            this.setData = function (_data) {\n                var isFirstPaint = typeof this.xvar.paintStartRowIndex === \"undefined\";\n\n                GRID.data.set.call(this, _data);\n                GRID.body.repaint.call(this);\n                if (!isFirstPaint) GRID.body.scrollTo.call(this, { top: 0 });\n\n                // 가로/세로 스크롤바 show/hide 처리\n                alignGrid.call(this);\n                // 가로세로 스크롤바의 크기 재 계산.\n                GRID.scroller.resize.call(this);\n                GRID.page.navigationUpdate.call(this);\n\n                isFirstPaint = null;\n                return this;\n            };\n\n            /**\n             * @method ax5grid.getList\n             * @param {String} _type - selected|modified|deleted\n             * @returns {Array}\n             * @example\n             * ```js\n             * ax5Grid.getList();\n             * ax5Grid.getList(\"selected\");\n             * ax5Grid.getList(\"modified\");\n             * ax5Grid.getList(\"deleted\");\n             * ```\n             */\n            this.getList = function (_type) {\n                return GRID.data.getList.call(this, _type);\n            };\n\n            /**\n             * @method ax5grid.setHeight\n             * @param {Number} _height\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.setHeight(height);\n             * ```\n             */\n            this.setHeight = function (_height) {\n                //console.log(this.$target);\n                if (_height == \"100%\") {\n                    _height = this.$target.offsetParent().innerHeight();\n                }\n                this.$target.css({ height: _height });\n                this.$[\"container\"][\"root\"].css({ height: _height });\n                alignGrid.call(this);\n                GRID.body.repaint.call(this, \"reset\");\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.addRow\n             * @param {Object} _row\n             * @param {Number|String} [_dindex=last]\n             * @param {Object} [_options] - options of addRow\n             * @param {Boolean} [_options.sort] - sortData\n             * @param {Number|String} [_options.focus] - HOME|END|[dindex]\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.addRow($.extend({}, {...}), \"first\");\n             * ax5Grid.addRow($.extend({}, {...}), \"last\", {focus: \"END\"});\n             * ax5Grid.addRow($.extend({}, {...}), \"last\", {focus: \"HOME\"});\n             * ax5Grid.addRow($.extend({}, {...}), \"last\", {focus: 10});\n             * ```\n             */\n            this.addRow = function (_row, _dindex, _options) {\n                var _this2 = this;\n\n                GRID.data.add.call(this, _row, _dindex, _options);\n                alignGrid.call(this);\n                GRID.body.repaint.call(this, \"reset\");\n\n                if (_options && _options.focus) {\n                    //GRID.body.moveFocus.call(this, (this.config.body.grouping) ? \"START\" : \"END\");\n                    setTimeout(function () {\n                        GRID.body.moveFocus.call(_this2, _options.focus);\n                    }, 1);\n                } else {\n                    GRID.scroller.resize.call(this);\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5grid.appendToList\n             * @param _list\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.appendToList([{},{},{}]);\n             * ax5Grid.appendToList([{},{},{}]);\n             * ```\n             */\n            this.appendToList = function (_list) {\n                GRID.data.append.call(this, _list, function () {\n                    alignGrid.call(this);\n                    GRID.body.repaint.call(this);\n                    GRID.scroller.resize.call(this);\n                }.bind(this));\n                return this;\n            };\n\n            /**\n             * @method ax5grid.removeRow\n             * @param {Number|String} [_dindex=last]\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.removeRow();\n             * ax5Grid.removeRow(\"first\");\n             * ax5Grid.removeRow(\"last\");\n             * ax5Grid.removeRow(1);\n             * ax5Grid.removeRow(\"selected\");\n             * ```\n             */\n            this.removeRow = function (_dindex) {\n                GRID.data.remove.call(this, _dindex);\n                alignGrid.call(this);\n                GRID.body.repaint.call(this, \"reset\");\n                GRID.body.moveFocus.call(this, this.config.body.grouping ? \"START\" : \"END\");\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.updateRow\n             * @param {Object} _row\n             * @param {Number} _dindex\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.updateRow({price: 100, amount: 100, cost: 10000}, 1);\n             * ```\n             */\n            this.updateRow = function (_row, _dindex) {\n                GRID.data.update.call(this, _row, _dindex);\n                // todo : mergeCells 옵션에 따라 예외처리\n\n                GRID.body.repaintRow.call(this, _dindex);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.updateChildRows\n             * @param {Number} _dindex\n             * @param {Object} _updateData\n             * @param {Object} [_options]\n             * @param {Function} [_options.filter]\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * onDataChanged: function () {\n             *      this.self.updateChildRows(this.dindex, {isChecked: this.item.isChecked});\n             * }\n             *\n             * onDataChanged: function () {\n             *      this.self.updateChildRows(this.dindex, {isChecked: this.item.isChecked}, {filter: function(){\n             *          return this.item.type == \"A\";\n             *      });\n             * }\n             * ```\n             */\n            this.updateChildRows = function (_dindex, _updateData, _options) {\n                GRID.data.updateChild.call(this, _dindex, _updateData, _options);\n                this.xvar.paintStartRowIndex = undefined;\n                this.xvar.paintStartColumnIndex = undefined;\n                GRID.body.repaint.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.deleteRow\n             * @param {Number|String} _dindex\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.deleteRow(\"first\");\n             * ax5Grid.deleteRow(\"last\");\n             * ax5Grid.deleteRow(1);\n             * ax5Grid.deleteRow(\"selected\");\n             * ```\n             */\n            this.deleteRow = function (_dindex) {\n                GRID.data.deleteRow.call(this, _dindex);\n                alignGrid.call(this);\n                GRID.body.repaint.call(this, \"reset\");\n                // 삭제시엔 포커스 ?\n                // GRID.body.moveFocus.call(this, (this.config.body.grouping) ? \"START\" : \"END\");\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.setValue\n             * @param _dindex\n             * @param _key\n             * @param _value\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.setValue(0, \"price\", 100);\n             * ```\n             */\n            this.setValue = function (_dindex, _key, _value) {\n                // getPanelname;\n                // let doindex = (typeof _doindex === \"undefined\") ? _dindex : _doindex;\n                // setValue를 doindex로 처리하는 상황이 아직 발생전으므로 선언만 하고 넘어감\n                var doindex = void 0;\n\n                if (GRID.data.setValue.call(this, _dindex, doindex, _key, _value)) {\n                    var repaintCell = function repaintCell(_panelName, _rows, __dindex, __doindex, __key, __value) {\n                        for (var r = 0, rl = _rows.length; r < rl; r++) {\n                            for (var c = 0, cl = _rows[r].cols.length; c < cl; c++) {\n                                if (_rows[r].cols[c].key == __key) {\n                                    if (this.xvar.frozenRowIndex > __dindex) {\n                                        GRID.body.repaintCell.call(this, \"top-\" + _panelName, __dindex, __doindex, r, c, __value);\n                                    } else {\n                                        GRID.body.repaintCell.call(this, _panelName + \"-scroll\", __dindex, __doindex, r, c, __value);\n                                    }\n                                }\n                            }\n                        }\n                    };\n\n                    repaintCell.call(this, \"left-body\", this.leftBodyRowData.rows, _dindex, doindex, _key, _value);\n                    repaintCell.call(this, \"body\", this.bodyRowData.rows, _dindex, doindex, _key, _value);\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5grid.addColumn\n             * @param {Object} _column\n             * @param {Number|String} [_cindex=last]\n             * @returns {ax5grid}\n             */\n            this.addColumn = function () {\n                var processor = {\n                    \"first\": function first(_column) {\n                        this.config.columns = [].concat(_column).concat(this.config.columns);\n                    },\n                    \"last\": function last(_column) {\n                        this.config.columns = this.config.columns.concat([].concat(_column));\n                    }\n                };\n\n                return function (_column, _cindex) {\n                    if (typeof _column === \"undefined\") throw '_column must not be null';\n                    if (typeof _cindex === \"undefined\") _cindex = \"last\";\n                    if (_cindex in processor) {\n                        processor[_cindex].call(this, _column);\n                    } else {\n                        if (!U.isNumber(_cindex)) {\n                            throw 'invalid argument _cindex';\n                        }\n                        if (U.isArray(_column)) {\n                            for (var _i = 0, _l = _column.length; _i < _l; _i++) {\n                                this.config.columns.splice(_cindex + _i, 0, _column[_i]);\n                            }\n                        } else {\n                            this.config.columns.splice(_cindex, 0, _column);\n                        }\n                    }\n                    onResetColumns.call(this); // 컬럼이 변경되었을 때.\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5grid.removeColumn\n             * @param {Number|String} [_cindex=last]\n             * @returns {ax5grid}\n             */\n            this.removeColumn = function () {\n                var processor = {\n                    \"first\": function first(_cindex) {\n                        this.config.columns.splice(_cindex, 1);\n                    },\n                    \"last\": function last() {\n                        this.config.columns.splice(this.config.columns.length - 1, 1);\n                    }\n                };\n                return function (_cindex) {\n                    if (typeof _cindex === \"undefined\") _cindex = \"last\";\n                    if (_cindex in processor) {\n                        processor[_cindex].call(this, _cindex);\n                    } else {\n                        if (!U.isNumber(_cindex)) {\n                            throw 'invalid argument _cindex';\n                        }\n                        //\n                        this.config.columns.splice(_cindex, 1);\n                    }\n                    onResetColumns.call(this); // 컬럼이 변경되었을 때.\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5grid.updateColumn\n             * @param {Object} _column\n             * @param {Number} _cindex\n             * @returns {ax5grid}\n             */\n            this.updateColumn = function (_column, _cindex) {\n                if (!U.isNumber(_cindex)) {\n                    throw 'invalid argument _cindex';\n                }\n                //\n                this.config.columns.splice(_cindex, 1, _column);\n                onResetColumns.call(this); // 컬럼이 변경되었을 때.\n                return this;\n            };\n\n            /**\n             * @method ax5grid.setColumnWidth\n             * @param {Number} _width\n             * @param {Number} _cindex\n             * @returns {ax5grid}\n             */\n            this.setColumnWidth = function (_width, _cindex) {\n                this.colGroup[this.xvar.columnResizerIndex]._width = _width;\n                this.needToPaintSum = true;\n\n                // 컬럼너비 변경사항 적용.\n                GRID.header.repaint.call(this);\n                GRID.body.repaint.call(this, true);\n                GRID.scroller.resize.call(this);\n\n                alignGrid.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.getColumnSortInfo\n             * @returns {Object} sortInfo\n             */\n            this.getColumnSortInfo = function () {\n                var that = { sortInfo: [] };\n                for (var k in this.sortInfo) {\n                    that.sortInfo.push({\n                        key: k,\n                        orderBy: this.sortInfo[k].orderBy,\n                        seq: this.sortInfo[k].seq\n                    });\n                }\n                that.sortInfo.sort(function (a, b) {\n                    return a.seq > b.seq;\n                });\n                return that.sortInfo;\n            };\n\n            /**\n             * @method ax5grid.setColumnSort\n             * @param {Object} _sortInfo\n             * @param {Object} _sortInfo.key\n             * @param {Number} _sortInfo.key.seq - seq of sortOrder\n             * @param {String} _sortInfo.key.orderBy - \"desc\"|\"asc\"\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5grid.setColumnSort({a:{seq:0, orderBy:\"desc\"}, b:{seq:1, orderBy:\"asc\"}});\n             * ```\n             */\n            this.setColumnSort = function (_sortInfo) {\n                if (typeof _sortInfo !== \"undefined\") {\n                    this.sortInfo = _sortInfo;\n                    GRID.header.applySortStatus.call(this, _sortInfo);\n                }\n\n                sortColumns.call(this, _sortInfo || this.sortInfo);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.select\n             * @param {Number|Object} _selectObject\n             * @param {Number} _selectObject.index - index of row\n             * @param {Number} _selectObject.rowIndex - rowIndex of columns\n             * @param {Number} _selectObject.conIndex - colIndex of columns\n             * @param {Object} _options\n             * @param {Boolean} _options.selectedClear\n             * @param {Boolean} _options.selected\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.select(0);\n             * firstGrid.select(0, {selected: true});\n             * firstGrid.select(0, {selected: false});\n             * firstGrid.select(0, {selectedClear: true});\n             * ```\n             */\n            this.select = function (_selectObject, _options) {\n                if (U.isNumber(_selectObject)) {\n                    var _dindex2 = _selectObject;\n\n                    if (!this.config.multipleSelect) {\n                        this.clearSelect();\n                    } else {\n                        if (_options && _options.selectedClear) {\n                            this.clearSelect();\n                        }\n                    }\n\n                    GRID.data.select.call(this, _dindex2, undefined, _options && _options.selected);\n                    GRID.body.updateRowState.call(this, [\"selected\"], _dindex2, undefined);\n                }\n                return this;\n            };\n\n            /**\n             * @method firstGrid.clickBody\n             * @param {Number} _dindex\n             * @returns {ax5grid}\n             */\n            this.clickBody = function (_dindex) {\n                GRID.body.click.call(this, _dindex);\n                return this;\n            };\n\n            /**\n             * @method firstGrid.DBLClickBody\n             * @param {Number} _dindex\n             * @returns {ax5grid}\n             */\n            this.DBLClickBody = function (_dindex) {\n                GRID.body.dblClick.call(this, _dindex);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.clearSelect\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.clearSelect();\n             * ```\n             */\n            this.clearSelect = function () {\n                GRID.body.updateRowState.call(this, [\"selectedClear\"]);\n                GRID.data.clearSelect.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.selectAll\n             * @param {Object} _options\n             * @param {Boolean} _options.selected\n             * @param {Function} _options.filter\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.selectAll();\n             * firstGrid.selectAll({selected: true});\n             * firstGrid.selectAll({selected: false});\n             * firstGrid.selectAll({filter: function(){\n             *      return this[\"b\"] == \"A01\";\n             * });\n             * firstGrid.selectAll({selected: true, filter: function(){\n             *      return this[\"b\"] == \"A01\";\n             * });\n             * ```\n             */\n            this.selectAll = function (_options) {\n                GRID.data.selectAll.call(this, _options && _options.selected, _options);\n                GRID.body.updateRowStateAll.call(this, [\"selected\"]);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.exportExcel\n             * @param {String} _fileName\n             * @returns {ax5grid|String}\n             * @example\n             * ```js\n             * firstGrid.exportExcel(\"grid-to-excel.xls\");\n             * console.log(firstGrid.exportExcel());\n             * ```\n             */\n            this.exportExcel = function (_fileName) {\n                var table = [];\n                table.push('<table border=\"1\">');\n                table.push(GRID.header.getExcelString.call(this));\n                table.push(GRID.body.getExcelString.call(this));\n                table.push('</table>');\n\n                if (typeof _fileName === \"undefined\") {\n                    return table.join('');\n                } else {\n                    GRID.excel.export.call(this, [table.join('')], _fileName);\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5grid.focus\n             * @param {String|Number} _pos - UP, DOWN, LEFT, RIGHT, HOME, END\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.focus(\"UP\");\n             * firstGrid.focus(\"DOWN\");\n             * firstGrid.focus(\"HOME\");\n             * firstGrid.focus(\"END\");\n             * ```\n             */\n            this.focus = function (_pos) {\n\n                if (GRID.body.moveFocus.call(this, _pos)) {\n                    var focusedColumn = void 0;\n                    for (var c in this.focusedColumn) {\n                        focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n                        break;\n                    }\n                    if (focusedColumn) {\n                        this.select(focusedColumn.dindex, { selectedClear: true });\n                    }\n                } else {\n                    if (typeof this.selectedDataIndexs[0] === \"undefined\") {\n                        this.select(0);\n                    } else {\n                        var selectedIndex = this.selectedDataIndexs[0];\n\n                        var processor = {\n                            \"UP\": function UP() {\n                                if (selectedIndex > 0) {\n                                    this.select(selectedIndex - 1, { selectedClear: true });\n                                    GRID.body.moveFocus.call(this, selectedIndex - 1);\n                                }\n                            },\n                            \"DOWN\": function DOWN() {\n                                if (selectedIndex < this.list.length - 1) {\n                                    this.select(selectedIndex + 1, { selectedClear: true });\n                                    GRID.body.moveFocus.call(this, selectedIndex + 1);\n                                }\n                            },\n                            \"HOME\": function HOME() {\n                                this.select(0, { selectedClear: true });\n                                GRID.body.moveFocus.call(this, 0);\n                            },\n                            \"END\": function END() {\n                                this.select(this.list.length - 1, { selectedClear: true });\n                                GRID.body.moveFocus.call(this, this.list.length - 1);\n                            }\n                        };\n\n                        if (_pos in processor) {\n                            processor[_pos].call(this);\n                        }\n                    }\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5grid.destroy\n             * @returns {null}\n             */\n            this.destroy = function () {\n                var instanceId = this.instanceId;\n                this.$target.empty();\n                this.list = [];\n                UI.grid_instance = ax5.util.filter(UI.grid_instance, function () {\n                    return this.instanceId != instanceId;\n                });\n                return null;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                UI.grid_instance = UI.grid_instance || [];\n                UI.grid_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n    }());\n\n    GRID = ax5.ui.grid;\n})();\n\n// todo : filter\n// todo : column reorder\n// todo : editor 필수값 속성 지정\n// ax5.ui.grid.body\n(function () {\n\n    var GRID = ax5.ui.grid;\n\n    var U = ax5.util;\n\n    var columnSelect = {\n        focusClear: function focusClear() {\n            var self = this,\n                _column = void 0;\n            for (var c in self.focusedColumn) {\n                _column = self.focusedColumn[c];\n                if (_column) {\n                    self.$.panel[_column.panelName].find('[data-ax5grid-tr-data-index=\"' + _column.dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + _column.rowIndex + '\"][data-ax5grid-column-colindex=\"' + _column.colIndex + '\"]').removeAttr('data-ax5grid-column-focused');\n                }\n            }\n            self.focusedColumn = {};\n        },\n        clear: function clear() {\n            var self = this,\n                _column = void 0;\n            for (var c in self.selectedColumn) {\n                _column = self.selectedColumn[c];\n                if (_column) {\n                    self.$.panel[_column.panelName].find('[data-ax5grid-tr-data-index=\"' + _column.dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + _column.rowIndex + '\"][data-ax5grid-column-colindex=\"' + _column.colIndex + '\"]').removeAttr('data-ax5grid-column-selected');\n                }\n            }\n            self.selectedColumn = {};\n        },\n        init: function init(column) {\n            var self = this;\n            if (this.isInlineEditing) {\n                for (var editKey in this.inlineEditing) {\n                    if (editKey == column.dindex + \"_\" + column.colIndex + \"_\" + column.rowIndex) {\n                        return this;\n                    }\n                }\n            }\n\n            // focus\n            columnSelect.focusClear.call(self);\n            self.focusedColumn[column.dindex + \"_\" + column.colIndex + \"_\" + column.rowIndex] = {\n                panelName: column.panelName,\n                dindex: column.dindex,\n                doindex: column.doindex,\n                rowIndex: column.rowIndex,\n                colIndex: column.colIndex,\n                colspan: column.colspan\n            };\n\n            // select\n            columnSelect.clear.call(self);\n            self.xvar.selectedRange = {\n                start: [column.dindex, column.rowIndex, column.colIndex, column.colspan - 1],\n                end: null\n            };\n            self.selectedColumn[column.dindex + \"_\" + column.colIndex + \"_\" + column.rowIndex] = function (data) {\n                if (data) {\n                    return false;\n                } else {\n                    return {\n                        panelName: column.panelName,\n                        dindex: column.dindex,\n                        doindex: column.doindex,\n                        rowIndex: column.rowIndex,\n                        colIndex: column.colIndex,\n                        colspan: column.colspan\n                    };\n                }\n            }(self.selectedColumn[column.dindex + \"_\" + column.colIndex + \"_\" + column.rowIndex]);\n\n            this.$.panel[column.panelName].find('[data-ax5grid-tr-data-index=\"' + column.dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + column.rowIndex + '\"][data-ax5grid-column-colindex=\"' + column.colIndex + '\"]').attr('data-ax5grid-column-focused', \"true\").attr('data-ax5grid-column-selected', \"true\");\n\n            if (this.isInlineEditing) {\n                GRID.body.inlineEdit.deActive.call(this, \"RETURN\");\n            }\n        },\n        update: function update(column) {\n            var self = this;\n            var dindex = void 0,\n                doindex = void 0,\n                colIndex = void 0,\n                rowIndex = void 0,\n                trl = void 0;\n\n            self.xvar.selectedRange[\"end\"] = [column.dindex, column.rowIndex, column.colIndex, column.colspan - 1];\n            columnSelect.clear.call(self);\n\n            var range = {\n                r: {\n                    s: Math.min(self.xvar.selectedRange[\"start\"][0], self.xvar.selectedRange[\"end\"][0]),\n                    e: Math.max(self.xvar.selectedRange[\"start\"][0], self.xvar.selectedRange[\"end\"][0])\n                },\n                c: {\n                    s: Math.min(self.xvar.selectedRange[\"start\"][2], self.xvar.selectedRange[\"end\"][2]),\n                    e: Math.max(self.xvar.selectedRange[\"start\"][2] + self.xvar.selectedRange[\"start\"][3], self.xvar.selectedRange[\"end\"][2] + self.xvar.selectedRange[\"end\"][3])\n                }\n            };\n\n            dindex = range.r.s;\n            for (; dindex <= range.r.e; dindex++) {\n\n                trl = this.bodyRowTable.rows.length;\n                rowIndex = 0;\n                for (; rowIndex < trl; rowIndex++) {\n                    colIndex = range.c.s;\n                    for (; colIndex <= range.c.e; colIndex++) {\n                        var _panels = [],\n                            panelName = \"\";\n\n                        if (self.xvar.frozenRowIndex > dindex) _panels.push(\"top\");\n                        if (self.xvar.frozenColumnIndex > colIndex) _panels.push(\"left\");\n                        _panels.push(\"body\");\n                        if (_panels[0] !== \"top\") _panels.push(\"scroll\");\n                        panelName = _panels.join(\"-\");\n\n                        self.selectedColumn[dindex + \"_\" + colIndex + \"_\" + rowIndex] = {\n                            panelName: panelName,\n                            dindex: dindex,\n                            rowIndex: rowIndex,\n                            colIndex: colIndex,\n                            colspan: column.colspan\n                        };\n\n                        _panels = null;\n                        panelName = null;\n                    }\n                }\n            }\n            dindex = null;\n            doindex = null;\n            colIndex = null;\n            rowIndex = null;\n\n            for (var c in self.selectedColumn) {\n                var _column = self.selectedColumn[c];\n                if (_column) {\n                    self.$.panel[_column.panelName].find('[data-ax5grid-tr-data-index=\"' + _column.dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + _column.rowIndex + '\"][data-ax5grid-column-colindex=\"' + _column.colIndex + '\"]').attr('data-ax5grid-column-selected', 'true');\n                }\n            }\n        }\n    };\n\n    var columnSelector = {\n        \"on\": function on(cell) {\n            var self = this;\n\n            if (this.inlineEditing[cell.dindex + \"_\" + cell.colIndex + \"_\" + cell.rowIndex]) {\n                return;\n            }\n\n            columnSelect.init.call(self, cell);\n\n            this.$[\"container\"][\"body\"].on(\"mousemove.ax5grid-\" + this.instanceId, '[data-ax5grid-column-attr=\"default\"]', function (e) {\n                if (this.getAttribute(\"data-ax5grid-column-rowIndex\")) {\n                    columnSelect.update.call(self, {\n                        panelName: this.getAttribute(\"data-ax5grid-panel-name\"),\n                        dindex: Number(this.getAttribute(\"data-ax5grid-data-index\")),\n                        doindex: Number(this.getAttribute(\"data-ax5grid-data-o-index\")),\n                        rowIndex: Number(this.getAttribute(\"data-ax5grid-column-rowIndex\")),\n                        colIndex: Number(this.getAttribute(\"data-ax5grid-column-colIndex\")),\n                        colspan: Number(this.getAttribute(\"colspan\"))\n                    });\n                    U.stopEvent(e);\n                }\n            }).on(\"mouseup.ax5grid-\" + this.instanceId, function () {\n                columnSelector.off.call(self);\n            }).on(\"mouseleave.ax5grid-\" + this.instanceId, function () {\n                columnSelector.off.call(self);\n            });\n\n            jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n        },\n        \"off\": function off() {\n\n            this.$[\"container\"][\"body\"].off(\"mousemove.ax5grid-\" + this.instanceId).off(\"mouseup.ax5grid-\" + this.instanceId).off(\"mouseleave.ax5grid-\" + this.instanceId);\n\n            jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n        }\n    };\n\n    var updateRowState = function updateRowState(_states, _dindex, _doindex, _data) {\n        var self = this,\n            cfg = this.config,\n            processor = {\n            \"selected\": function selected(_dindex, _doindex) {\n                if (this.list[_doindex]) {\n                    var i = this.$.livePanelKeys.length;\n                    while (i--) {\n                        this.$.panel[this.$.livePanelKeys[i]].find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]').attr(\"data-ax5grid-selected\", this.list[_doindex][cfg.columnKeys.selected]);\n                    }\n                }\n            },\n            \"selectedClear\": function selectedClear() {\n                var di = this.list.length;\n                var pi = void 0;\n\n                if (!this.proxyList) {\n                    while (di--) {\n                        if (this.list[di][cfg.columnKeys.selected]) {\n                            pi = this.$.livePanelKeys.length;\n                            while (pi--) {\n                                this.$.panel[this.$.livePanelKeys[pi]].find('[data-ax5grid-tr-data-index=\"' + di + '\"]').attr(\"data-ax5grid-selected\", false);\n                            }\n                        }\n                        this.list[di][cfg.columnKeys.selected] = false;\n                    }\n                } else {\n                    while (di--) {\n                        this.list[di][cfg.columnKeys.selected] = false;\n                    }\n                    di = this.proxyList.length;\n                    while (di--) {\n                        if (this.list[doi][cfg.columnKeys.selected]) {\n                            pi = this.$.livePanelKeys.length;\n                            while (pi--) {\n                                this.$.panel[this.$.livePanelKeys[pi]].find('[data-ax5grid-tr-data-index=\"' + di + '\"]').attr(\"data-ax5grid-selected\", false);\n                            }\n                        }\n\n                        this.proxyList[di][cfg.columnKeys.selected] = false;\n                        var doi = this.proxyList[di].__original_index__;\n                    }\n                }\n            },\n            \"cellChecked\": function cellChecked(_dindex, _doindex, _data) {\n                var key = _data.key,\n                    rowIndex = _data.rowIndex,\n                    colIndex = _data.colIndex;\n\n                var panelName = function () {\n                    var _panels = [];\n                    if (this.xvar.frozenRowIndex > _dindex) _panels.push(\"top\");\n                    if (this.xvar.frozenColumnIndex > colIndex) _panels.push(\"left\");\n                    _panels.push(\"body\");\n                    if (_panels[0] !== \"top\") _panels.push(\"scroll\");\n                    return _panels.join(\"-\");\n                }.call(this);\n\n                this.$.panel[panelName].find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]').find('[data-ax5grid-column-rowIndex=\"' + rowIndex + '\"][data-ax5grid-column-colIndex=\"' + colIndex + '\"]').find('[data-ax5grid-editor=\"checkbox\"]').attr(\"data-ax5grid-checked\", '' + _data.checked);\n            }\n        };\n\n        if (typeof _doindex === \"undefined\") _doindex = _dindex;\n\n        _states.forEach(function (_state) {\n            if (!processor[_state]) throw 'invaild state name';\n            processor[_state].call(self, _dindex, _doindex, _data);\n        });\n    };\n\n    var updateRowStateAll = function updateRowStateAll(_states, _data) {\n        var self = this,\n            cfg = this.config,\n            processor = {\n            \"selected\": function selected(_dindex) {\n                GRID.body.repaint.call(this, true);\n            }\n        };\n\n        _states.forEach(function (_state) {\n            if (!processor[_state]) throw 'invaild state name';\n            processor[_state].call(self, _data);\n        });\n    };\n\n    var init = function init() {\n        var self = this;\n\n        this.$[\"container\"][\"body\"].on(\"click\", '[data-ax5grid-column-attr]', function (e) {\n            var panelName = void 0,\n                attr = void 0,\n                row = void 0,\n                col = void 0,\n                dindex = void 0,\n                doindex = void 0,\n                rowIndex = void 0,\n                colIndex = void 0,\n                disableSelection = void 0,\n                targetClick = {\n                \"default\": function _default(_column) {\n                    var column = self.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex],\n                        that = {\n                        self: self,\n                        page: self.page,\n                        list: self.list,\n                        item: self.list[_column.doindex],\n                        dindex: _column.dindex,\n                        doindex: _column.doindex,\n                        rowIndex: _column.rowIndex,\n                        colIndex: _column.colIndex,\n                        column: column,\n                        value: self.list[_column.dindex][column.key]\n                    };\n\n                    if (column.editor && column.editor.type === \"checkbox\") {\n                        // todo : GRID.inlineEditor에서 처리 할수 있도록 구문 변경 필요.\n                        var value = GRID.data.getValue.call(self, _column.dindex, _column.doindex, column.key),\n                            checked = void 0,\n                            newValue = void 0;\n\n                        if (column.editor.config && column.editor.config.trueValue) {\n                            if (checked = !(value == column.editor.config.trueValue)) {\n                                newValue = column.editor.config.trueValue;\n                            } else {\n                                newValue = column.editor.config.falseValue;\n                            }\n                        } else {\n                            newValue = checked = value == false || value == \"false\" || value < \"1\" ? \"true\" : \"false\";\n                        }\n\n                        GRID.data.setValue.call(self, _column.dindex, _column.doindex, column.key, newValue);\n\n                        updateRowState.call(self, [\"cellChecked\"], _column.dindex, _column.doindex, {\n                            key: column.key, rowIndex: _column.rowIndex, colIndex: _column.colIndex,\n                            editorConfig: column.editor.config, checked: checked\n                        });\n                    }\n\n                    if (self.config.body.onClick) {\n                        self.config.body.onClick.call(that, that, e);\n                    }\n                },\n                \"rowSelector\": function rowSelector(_column) {\n                    var item = self.list[_column.doindex];\n                    if (item[self.config.columnKeys.disableSelection]) {\n                        return false;\n                    }\n\n                    if (!self.config.multipleSelect && self.selectedDataIndexs[0] !== _column.doindex) {\n                        updateRowState.call(self, [\"selectedClear\"]);\n                        GRID.data.clearSelect.call(self);\n                    }\n\n                    GRID.data.select.call(self, _column.dindex, _column.doindex, undefined, {\n                        internalCall: true\n                    });\n                    updateRowState.call(self, [\"selected\"], _column.dindex, _column.doindex);\n                },\n                \"lineNumber\": function lineNumber(_column) {},\n                \"tree-control\": function treeControl(_column, _el) {\n                    //console.log(_column);\n                    toggleCollapse.call(self, _column.dindex, _column.doindex);\n                }\n            };\n\n            panelName = this.getAttribute(\"data-ax5grid-panel-name\");\n            attr = this.getAttribute(\"data-ax5grid-column-attr\");\n            row = Number(this.getAttribute(\"data-ax5grid-column-row\"));\n            col = Number(this.getAttribute(\"data-ax5grid-column-col\"));\n            rowIndex = Number(this.getAttribute(\"data-ax5grid-column-rowIndex\"));\n            colIndex = Number(this.getAttribute(\"data-ax5grid-column-colIndex\"));\n            dindex = Number(this.getAttribute(\"data-ax5grid-data-index\"));\n            doindex = Number(this.getAttribute(\"data-ax5grid-data-o-index\"));\n\n            if (attr in targetClick) {\n                targetClick[attr]({\n                    panelName: panelName,\n                    attr: attr,\n                    row: row,\n                    col: col,\n                    dindex: dindex,\n                    doindex: doindex,\n                    rowIndex: rowIndex,\n                    colIndex: colIndex\n                }, this);\n            }\n        });\n        this.$[\"container\"][\"body\"].on(\"dblclick\", '[data-ax5grid-column-attr]', function (e) {\n            var panelName = void 0,\n                attr = void 0,\n                row = void 0,\n                col = void 0,\n                dindex = void 0,\n                doindex = void 0,\n                rowIndex = void 0,\n                colIndex = void 0,\n                targetDBLClick = {\n                \"default\": function _default(_column) {\n                    if (self.isInlineEditing) {\n                        for (var columnKey in self.inlineEditing) {\n                            if (columnKey == _column.dindex + \"_\" + _column.colIndex + \"_\" + _column.rowIndex) {\n                                return this;\n                            }\n                        }\n                    }\n\n                    var column = self.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex],\n                        value = \"\";\n                    if (column) {\n                        if (!self.list[dindex].__isGrouping) {\n                            value = GRID.data.getValue.call(self, dindex, doindex, column.key);\n                        }\n                    }\n\n                    var editor = self.colGroup[_column.colIndex].editor;\n                    if (U.isObject(editor)) {\n                        GRID.body.inlineEdit.active.call(self, self.focusedColumn, e, value);\n                    } else {\n                        // 더블클릭 실행\n                        if (self.config.body.onDBLClick) {\n                            var that = {\n                                self: self,\n                                page: self.page,\n                                list: self.list,\n                                item: self.list[_column.dindex],\n                                dindex: _column.dindex,\n                                doindex: _column.doindex,\n                                rowIndex: _column.rowIndex,\n                                colIndex: _column.colIndex,\n                                column: column,\n                                value: self.list[_column.dindex][column.key]\n                            };\n                            self.config.body.onDBLClick.call(that);\n                        }\n                    }\n                },\n                \"rowSelector\": function rowSelector(_column) {},\n                \"lineNumber\": function lineNumber(_column) {}\n            };\n\n            panelName = this.getAttribute(\"data-ax5grid-panel-name\");\n            attr = this.getAttribute(\"data-ax5grid-column-attr\");\n            row = Number(this.getAttribute(\"data-ax5grid-column-row\"));\n            col = Number(this.getAttribute(\"data-ax5grid-column-col\"));\n            rowIndex = Number(this.getAttribute(\"data-ax5grid-column-rowIndex\"));\n            colIndex = Number(this.getAttribute(\"data-ax5grid-column-colIndex\"));\n            dindex = Number(this.getAttribute(\"data-ax5grid-data-index\"));\n            doindex = Number(this.getAttribute(\"data-ax5grid-data-o-index\"));\n\n            if (attr in targetDBLClick) {\n                targetDBLClick[attr]({\n                    panelName: panelName,\n                    attr: attr,\n                    row: row,\n                    col: col,\n                    dindex: dindex,\n                    doindex: doindex,\n                    rowIndex: rowIndex,\n                    colIndex: colIndex\n                });\n            }\n        });\n\n        if (this.config.contextMenu) {\n            this.$[\"container\"][\"body\"].on(\"contextmenu\", function (e) {\n                var target = void 0,\n                    dindex = void 0,\n                    doindex = void 0,\n                    rowIndex = void 0,\n                    colIndex = void 0,\n                    item = void 0,\n                    column = void 0,\n                    param = {};\n\n                target = U.findParentNode(e.target, function (t) {\n                    if (t.getAttribute(\"data-ax5grid-column-attr\")) {\n                        return true;\n                    }\n                });\n\n                if (target) {\n                    // item 찾기\n                    rowIndex = Number(target.getAttribute(\"data-ax5grid-column-rowIndex\"));\n                    colIndex = Number(target.getAttribute(\"data-ax5grid-column-colIndex\"));\n                    dindex = Number(target.getAttribute(\"data-ax5grid-data-index\"));\n                    doindex = Number(target.getAttribute(\"data-ax5grid-data-o-index\"));\n                    column = self.bodyRowMap[rowIndex + \"_\" + colIndex];\n                    item = self.list[dindex];\n                }\n\n                if (!self.contextMenu) {\n                    self.contextMenu = new ax5.ui.menu();\n                }\n\n                self.contextMenu.setConfig(self.config.contextMenu);\n\n                param = {\n                    element: target,\n                    dindex: dindex,\n                    doindex: doindex,\n                    rowIndex: rowIndex,\n                    colIndex: colIndex,\n                    item: item,\n                    column: column,\n                    gridSelf: self\n                };\n\n                self.contextMenu.popup(e, {\n                    filter: function filter() {\n                        return self.config.contextMenu.popupFilter.call(this, this, param);\n                    },\n                    param: param\n                });\n\n                U.stopEvent(e.originalEvent);\n                target = null;\n                dindex = null;\n                doindex = null;\n                rowIndex = null;\n                colIndex = null;\n                item = null;\n                column = null;\n                param = null;\n            });\n        }\n\n        this.$[\"container\"][\"body\"].on(\"mousedown\", '[data-ax5grid-column-attr=\"default\"]', function (e) {\n            if (self.xvar.touchmoved) return false;\n            if (this.getAttribute(\"data-ax5grid-column-rowIndex\")) {\n                columnSelector.on.call(self, {\n                    panelName: this.getAttribute(\"data-ax5grid-panel-name\"),\n                    dindex: Number(this.getAttribute(\"data-ax5grid-data-index\")),\n                    doindex: Number(this.getAttribute(\"data-ax5grid-data-o-index\")),\n                    rowIndex: Number(this.getAttribute(\"data-ax5grid-column-rowIndex\")),\n                    colIndex: Number(this.getAttribute(\"data-ax5grid-column-colIndex\")),\n                    colspan: Number(this.getAttribute(\"colspan\"))\n                });\n            }\n        }).on(\"dragstart\", function (e) {\n            U.stopEvent(e);\n            return false;\n        });\n\n        resetFrozenColumn.call(this);\n\n        // 그리드 바디에 출력할 여유 카운트\n        this.xvar.paintRowCountMargin = this.config.virtualScrollYCountMargin;\n        this.xvar.paintRowCountTopMargin = this.config.virtualScrollYCountMargin - Math.floor(this.config.virtualScrollYCountMargin / 2);\n\n        if (this.config.virtualScrollAccelerated) {\n            this.__throttledScroll = U.throttle(function (css, opts) {\n                if (this.config.virtualScrollY && !opts.noRepaint && \"top\" in css) {\n                    repaint.call(this);\n                } else if (this.config.virtualScrollX && !opts.noRepaint && \"left\" in css) {\n                    repaint.call(this);\n                }\n                if (opts.callback) {\n                    opts.callback();\n                }\n            }, this.config.virtualScrollAcceleratedDelayTime);\n        } else {\n            this.__throttledScroll = false;\n        }\n    };\n\n    var resetFrozenColumn = function resetFrozenColumn() {\n        var cfg = this.config,\n            dividedBodyRowObj = GRID.util.divideTableByFrozenColumnIndex(this.bodyRowTable, this.xvar.frozenColumnIndex);\n\n        this.asideBodyRowData = function (dataTable) {\n            var data = { rows: [] };\n            for (var i = 0, l = dataTable.rows.length; i < l; i++) {\n                data.rows[i] = { cols: [] };\n                if (i === 0) {\n                    var col = {\n                        label: \"\",\n                        colspan: 1,\n                        rowspan: dataTable.rows.length,\n                        colIndex: null\n                    },\n                        _col = {};\n\n                    if (cfg.showLineNumber) {\n                        _col = jQuery.extend({}, col, {\n                            width: cfg.lineNumberColumnWidth,\n                            _width: cfg.lineNumberColumnWidth,\n                            columnAttr: \"lineNumber\",\n                            label: \"&nbsp;\", key: \"__d-index__\"\n                        });\n                        data.rows[i].cols.push(_col);\n                    }\n                    if (cfg.showRowSelector) {\n                        _col = jQuery.extend({}, col, {\n                            width: cfg.rowSelectorColumnWidth,\n                            _width: cfg.rowSelectorColumnWidth,\n                            columnAttr: \"rowSelector\",\n                            label: \"\", key: \"__d-checkbox__\"\n                        });\n                        data.rows[i].cols.push(_col);\n                    }\n                }\n            }\n\n            return data;\n        }.call(this, this.bodyRowTable);\n\n        //console.log(dividedBodyRowObj);\n\n        this.leftBodyRowData = dividedBodyRowObj.leftData;\n        this.bodyRowData = dividedBodyRowObj.rightData;\n\n        if (cfg.body.grouping) {\n            var dividedBodyGroupingObj = GRID.util.divideTableByFrozenColumnIndex(this.bodyGroupingTable, this.xvar.frozenColumnIndex);\n            this.asideBodyGroupingData = function (dataTable) {\n                var data = { rows: [] };\n                for (var i = 0, l = dataTable.rows.length; i < l; i++) {\n                    data.rows[i] = { cols: [] };\n                    if (i === 0) {\n                        var col = {\n                            label: \"\",\n                            colspan: 1,\n                            rowspan: dataTable.rows.length,\n                            colIndex: null\n                        },\n                            _col = {};\n\n                        if (cfg.showLineNumber) {\n                            _col = jQuery.extend({}, col, {\n                                width: cfg.lineNumberColumnWidth,\n                                _width: cfg.lineNumberColumnWidth,\n                                columnAttr: \"lineNumber\",\n                                label: \"&nbsp;\", key: \"__d-index__\"\n                            });\n                            data.rows[i].cols.push(_col);\n                        }\n                        if (cfg.showRowSelector) {\n                            _col = jQuery.extend({}, col, {\n                                width: cfg.rowSelectorColumnWidth,\n                                _width: cfg.rowSelectorColumnWidth,\n                                columnAttr: \"rowSelector\",\n                                label: \"\", key: \"__d-checkbox__\"\n                            });\n                            data.rows[i].cols.push(_col);\n                        }\n                    }\n                }\n\n                return data;\n            }.call(this, this.bodyGroupingTable);\n            this.leftBodyGroupingData = dividedBodyGroupingObj.leftData;\n            this.bodyGroupingData = dividedBodyGroupingObj.rightData;\n\n            this.bodyGroupingMap = GRID.util.makeBodyRowMap.call(this, this.bodyGroupingTable);\n        }\n\n        this.leftFootSumData = {};\n        this.footSumData = {};\n        if (this.config.footSum) {\n            var dividedFootSumObj = GRID.util.divideTableByFrozenColumnIndex(this.footSumTable, this.xvar.frozenColumnIndex);\n            this.leftFootSumData = dividedFootSumObj.leftData;\n            this.footSumData = dividedFootSumObj.rightData;\n        }\n    };\n\n    var getFieldValue = function getFieldValue(_list, _item, _index, _col, _value, _returnPlainText) {\n\n        var _key = _col.key,\n            tagsToReplace = {\n            '<': '&lt;',\n            '>': '&gt;'\n        };\n\n        if (_key === \"__d-index__\") {\n            return typeof _item[\"__index\"] !== \"undefined\" ? _item[\"__index\"] + 1 : \"\";\n        } else if (_key === \"__d-checkbox__\") {\n            return '<div class=\"checkBox\" style=\"max-height: ' + (_col.width - 10) + 'px;min-height: ' + (_col.width - 10) + 'px;\"></div>';\n        } else {\n            if (_col.editor && function (_editor) {\n                if (_editor.type in GRID.inlineEditor) {\n                    return GRID.inlineEditor[_editor.type].editMode == \"inline\";\n                }\n                return false;\n            }(_col.editor)) {\n                // editor가 inline타입이라면\n\n                _value = _value || GRID.data.getValue.call(this, _index, _item.__origin_index__, _key);\n\n                if (U.isFunction(_col.editor.disabled)) {\n                    if (_col.editor.disabled.call({\n                        list: _list,\n                        dindex: _index,\n                        item: _list[_index],\n                        key: _key,\n                        value: _value\n                    })) {\n                        return _value;\n                    }\n                }\n\n                // print editor\n                return _returnPlainText ? _value : GRID.inlineEditor[_col.editor.type].getHtml(this, _col.editor, _value);\n            }\n\n            var valueProcessor = {\n                \"formatter\": function formatter() {\n                    var that = {\n                        key: _key,\n                        value: _value || GRID.data.getValue.call(this, _index, _item.__origin_index__, _key),\n                        dindex: _index,\n                        item: _item,\n                        list: _list\n                    };\n                    if (U.isFunction(_col.formatter)) {\n                        return _col.formatter.call(that);\n                    } else {\n                        return GRID.formatter[_col.formatter].call(that);\n                    }\n                },\n                \"default\": function _default() {\n                    var returnValue = \"\";\n\n                    if (typeof _value !== \"undefined\") {\n                        returnValue = _value;\n                    } else {\n                        if (/[\\.\\[\\]]/.test(_key)) {\n                            _value = GRID.data.getValue.call(this, _index, _item.__origin_index__, _key);\n                        } else {\n                            _value = _item[_key];\n                        }\n\n                        if (_value !== null && typeof _value !== \"undefined\") returnValue = _value;\n                    }\n\n                    // 키값이 Boolean일때 오류 발생하여 수정.\n                    return typeof returnValue !== \"string\" ? returnValue : returnValue.replace(/[<>]/g, function (tag) {\n                        return tagsToReplace[tag] || tag;\n                    });\n                },\n                \"treeControl\": function treeControl(__value) {\n                    var cfg = this.config,\n                        keys = this.config.tree.columnKeys,\n                        indentNodeHtml = '';\n\n                    if (_item[keys.children].length) {\n                        indentNodeHtml += '<a ' + 'data-ax5grid-data-index=\"' + _index + '\" ' + 'data-ax5grid-column-attr=\"tree-control\" ' + 'data-ax5grid-tnode-arrow=\"\" ' + 'style=\"width: ' + cfg.tree.arrowWidth + 'px;padding-left:' + _item[keys.depth] * cfg.tree.indentWidth + 'px;\"' + '>';\n                        indentNodeHtml += _item[keys.collapse] ? cfg.tree.icons.collapsedArrow : cfg.tree.icons.openedArrow;\n                        indentNodeHtml += '</a>';\n                    } else {\n                        indentNodeHtml += '<span ' + 'data-ax5grid-tnode-arrow=\"\" ' + 'style=\"width: ' + cfg.tree.arrowWidth + 'px;padding-left:' + _item[keys.depth] * cfg.tree.indentWidth + 'px;\"' + '>&nbsp;</span>';\n                    }\n\n                    indentNodeHtml += '<span ' + 'data-ax5grid-tnode-item=\"' + (_item[keys.children].length ? 'group' : 'item') + '\" ' + 'style=\"width: ' + cfg.tree.iconWidth + 'px;\"' + '>';\n                    indentNodeHtml += _item[keys.children].length ? _item[keys.collapse] ? cfg.tree.icons.collapsedGroupIcon : cfg.tree.icons.groupIcon : cfg.tree.icons.itemIcon;\n                    indentNodeHtml += '</span>';\n\n                    return indentNodeHtml + __value;\n                }\n            };\n\n            var returnValue = _col.formatter ? valueProcessor.formatter.call(this) : valueProcessor.default.call(this);\n            if (this.config.tree.use && _col.treeControl) {\n                returnValue = valueProcessor.treeControl.call(this, returnValue);\n            }\n\n            return returnValue;\n        }\n    };\n\n    var getGroupingValue = function getGroupingValue(_item, _index, _col) {\n        var value = void 0,\n            that = void 0,\n            _key = _col.key,\n            _label = _col.label;\n\n        if (typeof _key === \"undefined\") {\n            that = {\n                key: _key,\n                list: _item.__groupingList,\n                groupBy: _item.__groupingBy\n            };\n            if (U.isFunction(_label)) {\n                value = _label.call(that);\n            } else {\n                value = _label;\n            }\n            _item[_col.colIndex] = value;\n            return value;\n        } else if (_key === \"__d-index__\") {\n            return '';\n        } else if (_key === \"__d-checkbox__\") {\n            return '';\n        } else {\n            if (_col.collector) {\n                that = {\n                    key: _key,\n                    list: _item.__groupingList\n                };\n                if (U.isFunction(_col.collector)) {\n                    value = _col.collector.call(that);\n                } else {\n                    value = GRID.collector[_col.collector].call(that);\n                }\n                _item[_col.colIndex] = value;\n\n                if (_col.formatter) {\n                    that.value = value;\n                    if (U.isFunction(_col.formatter)) {\n                        return _col.formatter.call(that);\n                    } else {\n                        return GRID.formatter[_col.formatter].call(that);\n                    }\n                } else {\n                    return value;\n                }\n            } else {\n                return \"&nbsp;\";\n            }\n        }\n    };\n\n    var getSumFieldValue = function getSumFieldValue(_list, _col) {\n        var _key = _col.key,\n            _label = _col.label;\n        //, _collector, _formatter\n        if (typeof _key === \"undefined\") {\n            return _label;\n        } else if (_key === \"__d-index__\" || _key === \"__d-checkbox__\") {\n            return '&nbsp;';\n        } else {\n            if (_col.collector) {\n                var that = {\n                    key: _key,\n                    list: _list\n                },\n                    value = void 0;\n\n                if (U.isFunction(_col.collector)) {\n                    value = _col.collector.call(that);\n                } else {\n                    value = GRID.collector[_col.collector].call(that);\n                }\n\n                if (_col.formatter) {\n                    that.value = value;\n                    if (U.isFunction(_col.formatter)) {\n                        return _col.formatter.call(that);\n                    } else {\n                        return GRID.formatter[_col.formatter].call(that);\n                    }\n                } else {\n                    return value;\n                }\n            } else {\n                return \"&nbsp;\";\n            }\n        }\n    };\n\n    var repaint = function repaint(_reset) {\n        // debugger;\n        var cfg = this.config,\n            list = this.proxyList ? this.proxyList : this.list;\n\n        /// repaint reset 타입이면 고정컬럼을 재조정\n        if (_reset) {\n            resetFrozenColumn.call(this);\n            // 틀고정 이 변경되면 출력 시작 인덱스 값을 초기화\n            this.xvar.paintStartRowIndex = undefined;\n            this.xvar.paintStartColumnIndex = undefined;\n        }\n\n        /// 출력시작 인덱스\n        var paintStartRowIndex = void 0,\n            virtualPaintStartRowIndex = void 0;\n\n        if (this.config.virtualScrollY) {\n            virtualPaintStartRowIndex = paintStartRowIndex = Math.floor(-this.$.panel[\"body-scroll\"].position().top / this.xvar.bodyTrHeight) + this.xvar.frozenRowIndex;\n            if (this.xvar.paintRowCountTopMargin < paintStartRowIndex) {\n                paintStartRowIndex -= this.xvar.paintRowCountTopMargin;\n            }\n        } else {\n            paintStartRowIndex = this.xvar.frozenRowIndex;\n        }\n\n        if (isNaN(paintStartRowIndex)) return this;\n\n        var paintStartColumnIndex = 0,\n            paintEndColumnIndex = 0,\n            nopaintLeftColumnsWidth = null,\n            nopaintRightColumnsWidth = null;\n        var bodyScrollLeft = -this.$.panel[\"body-scroll\"].position().left;\n\n        if (this.config.virtualScrollX) {\n            // 페인트 시작컬럼위치와 종료컬럼위치 구하기\n            for (var ci = this.xvar.frozenColumnIndex; ci < this.colGroup.length; ci++) {\n                // bodyScrollLeft\n                this.colGroup[ci]._sx = ci == this.xvar.frozenColumnIndex ? 0 : this.colGroup[ci - 1]._ex;\n                this.colGroup[ci]._ex = this.colGroup[ci]._sx + this.colGroup[ci]._width;\n\n                if (this.colGroup[ci]._sx <= bodyScrollLeft && this.colGroup[ci]._ex >= bodyScrollLeft) {\n                    paintStartColumnIndex = ci;\n                }\n                if (this.colGroup[ci]._sx <= bodyScrollLeft + this.xvar.bodyWidth && this.colGroup[ci]._ex >= bodyScrollLeft + this.xvar.bodyWidth) {\n                    paintEndColumnIndex = ci;\n\n                    if (nopaintLeftColumnsWidth === null) nopaintLeftColumnsWidth = this.colGroup[paintStartColumnIndex]._sx;\n                    if (nopaintRightColumnsWidth === null) nopaintRightColumnsWidth = this.xvar.scrollContentWidth - this.colGroup[ci]._ex;\n                }\n            }\n\n            if (nopaintLeftColumnsWidth === null) nopaintLeftColumnsWidth = 0;\n            if (nopaintRightColumnsWidth === null) nopaintRightColumnsWidth = 0;\n            this.$.panel[\"top-body-scroll\"].css({ \"padding-left\": nopaintLeftColumnsWidth, \"padding-right\": nopaintRightColumnsWidth });\n            this.$.panel[\"body-scroll\"].css({ \"padding-left\": nopaintLeftColumnsWidth, \"padding-right\": nopaintRightColumnsWidth });\n            this.$.panel[\"bottom-body-scroll\"].css({ \"padding-left\": nopaintLeftColumnsWidth, \"padding-right\": nopaintRightColumnsWidth });\n        }\n\n        var isFirstPaint = typeof this.xvar.paintStartRowIndex === \"undefined\",\n            headerColGroup = this.headerColGroup,\n            asideBodyRowData = this.asideBodyRowData,\n            leftBodyRowData = this.leftBodyRowData,\n            bodyRowData = this.bodyRowData,\n            leftFootSumData = this.leftFootSumData,\n            footSumData = this.footSumData,\n            asideBodyGroupingData = this.asideBodyGroupingData,\n            leftBodyGroupingData = this.leftBodyGroupingData,\n            bodyGroupingData = this.bodyGroupingData,\n            bodyAlign = cfg.body.align,\n            paintRowCount = void 0,\n            virtualPaintRowCount = void 0;\n\n        if (!this.config.virtualScrollY) {\n            virtualPaintRowCount = paintRowCount = list.length;\n        } else {\n            virtualPaintRowCount = Math.ceil(this.xvar.bodyHeight / this.xvar.bodyTrHeight);\n            paintRowCount = virtualPaintRowCount + (this.xvar.paintRowCountMargin || 1);\n        }\n\n        // 여유범위 안에 있으면 페인팅 안할수 있게 paintStartRowIndex 변경하지 않음.\n        if (this.xvar.paintRowCountTopMargin < paintStartRowIndex && Math.abs(this.xvar.paintStartRowIndex - paintStartRowIndex) <= this.xvar.paintRowCountTopMargin) {\n            paintStartRowIndex = this.xvar.paintStartRowIndex;\n        }\n\n        if (this.xvar.dataRowCount === list.length && this.xvar.paintStartRowIndex === paintStartRowIndex && this.xvar.paintRowCount === paintRowCount && this.xvar.paintStartColumnIndex === paintStartColumnIndex && this.xvar.paintEndColumnIndex === paintEndColumnIndex) return this; // 스크롤 포지션 변경 여부에 따라 프로세스 진행여부 결정\n\n        // bodyRowData 수정 : 페인트 컬럼 포지션이 달라지므로\n        if (nopaintLeftColumnsWidth || nopaintRightColumnsWidth) {\n            headerColGroup = [].concat(headerColGroup).splice(paintStartColumnIndex - this.xvar.frozenColumnIndex, paintEndColumnIndex - paintStartColumnIndex + 1 + this.xvar.frozenColumnIndex);\n            bodyRowData = GRID.util.getTableByStartEndColumnIndex(bodyRowData, paintStartColumnIndex, paintEndColumnIndex);\n\n            if (cfg.body.grouping) {\n                bodyGroupingData = GRID.util.getTableByStartEndColumnIndex(bodyGroupingData, paintStartColumnIndex, paintEndColumnIndex);\n            }\n            if (cfg.footSum) {\n                footSumData = GRID.util.getTableByStartEndColumnIndex(footSumData, paintStartColumnIndex, paintEndColumnIndex);\n            }\n            if (this.xvar.paintStartColumnIndex !== paintStartColumnIndex || this.xvar.paintEndColumnIndex !== paintEndColumnIndex) {\n                this.needToPaintSum = true;\n            }\n        }\n\n        /// 스크롤 컨텐츠의 높이 : 그리드 스크롤의 실제 크기와는 관계 없이 데이터 갯수에 따라 스크롤 컨텐츠 높이값 구해서 저장해두기.\n        // todo scrollContentHeight\n        this.xvar.scrollContentHeight = this.xvar.bodyTrHeight * (list.length - this.xvar.frozenRowIndex);\n        if (this.xvar.scrollContentHeight < 0) this.xvar.scrollContentHeight = 0;\n\n        /// 사용된 패널들의 키 모음\n        this.$.livePanelKeys = [];\n\n        // 그리드 바디 영역 페인트 함수\n        /**\n         * @param _elTargetKey\n         * @param _colGroup\n         * @param _bodyRow\n         * @param _groupRow\n         * @param _list\n         * @param [_scrollConfig]\n         * @returns {boolean}\n         */\n        var repaintBody = function repaintBody(_elTargetKey, _colGroup, _bodyRow, _groupRow, _list, _scrollConfig) {\n            var _elTarget = this.$.panel[_elTargetKey];\n\n            if (!isFirstPaint && !_scrollConfig) {\n                this.$.livePanelKeys.push(_elTargetKey); // 사용중인 패널키를 모아둠. (뷰의 상태 변경시 사용하려고)\n                return false;\n            }\n\n            var SS = [],\n                cgi = void 0,\n                cgl = void 0,\n                di = void 0,\n                dl = void 0,\n                tri = void 0,\n                trl = void 0,\n                ci = void 0,\n                cl = void 0,\n                col = void 0,\n                cellHeight = void 0,\n                colAlign = void 0,\n                isScrolled = function () {\n                // 스크롤값이 변경되거나 처음 호출되었습니까?\n                if (typeof _scrollConfig === \"undefined\" || typeof _scrollConfig['paintStartRowIndex'] === \"undefined\") {\n                    _scrollConfig = {\n                        paintStartRowIndex: 0,\n                        paintRowCount: _list.length\n                    };\n                    return false;\n                } else {\n                    return true;\n                }\n            }(),\n                stripeString = '#fff 0px, #fff ' + (cfg.body.columnHeight - cfg.body.columnBorderWidth) + 'px, #eee ' + (cfg.body.columnHeight - cfg.body.columnBorderWidth) + 'px, #eee ' + cfg.body.columnHeight + 'px';\n\n            if (isScrolled) {\n                SS.push('<div style=\"background:repeating-linear-gradient(to top, ' + stripeString + ');' + 'font-size:0;' + 'line-height:0;height: ' + (_scrollConfig.paintStartRowIndex - this.xvar.frozenRowIndex) * _scrollConfig.bodyTrHeight + 'px;\"></div>');\n            }\n\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            di = _scrollConfig.paintStartRowIndex;\n\n            for (dl = function () {\n                var len = void 0;\n                len = _list.length;\n                if (_scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex < len) {\n                    len = _scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex;\n                }\n                return len;\n            }(); di < dl; di++) {\n\n                if (_list[di]) {\n                    var isGroupingRow = false,\n                        rowTable = void 0,\n                        odi = typeof _list[di].__origin_index__ !== \"undefined\" ? _list[di].__origin_index__ : di;\n                    if (_groupRow && \"__isGrouping\" in _list[di]) {\n                        rowTable = _groupRow;\n                        isGroupingRow = true;\n                    } else {\n                        rowTable = _bodyRow;\n                    }\n\n                    for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n\n                        SS.push('<tr class=\"tr-' + di % 4 + '', cfg.body.trStyleClass ? U.isFunction(cfg.body.trStyleClass) ? ' ' + cfg.body.trStyleClass.call({\n                            item: _list[di],\n                            index: di\n                        }, _list[di], di) : ' ' + cfg.body.trStyleClass : '', '\"', isGroupingRow ? ' data-ax5grid-grouping-tr=\"true\"' : '', ' data-ax5grid-tr-data-index=\"' + di + '\"', ' data-ax5grid-tr-data-o-index=\"' + odi + '\"', ' data-ax5grid-selected=\"' + (_list[di][cfg.columnKeys.selected] || \"false\") + '\"', ' data-ax5grid-disable-selection=\"' + (_list[di][cfg.columnKeys.disableSelection] || \"false\") + '\"', '>');\n\n                        for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                            col = rowTable.rows[tri].cols[ci];\n                            cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                            colAlign = col.align || bodyAlign;\n\n                            SS.push('<td ', 'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ', 'data-ax5grid-data-index=\"' + di + '\" ', 'data-ax5grid-data-o-index=\"' + odi + '\" ', 'data-ax5grid-column-row=\"' + tri + '\" ', 'data-ax5grid-column-col=\"' + ci + '\" ', 'data-ax5grid-column-rowIndex=\"' + col.rowIndex + '\" ', 'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ', 'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ', function (_focusedColumn, _selectedColumn) {\n                                var attrs = \"\";\n                                if (_focusedColumn) {\n                                    attrs += 'data-ax5grid-column-focused=\"true\" ';\n                                }\n                                if (_selectedColumn) {\n                                    attrs += 'data-ax5grid-column-selected=\"true\" ';\n                                }\n                                return attrs;\n                            }(this.focusedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex], this.selectedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex]), 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', 'class=\"' + function (_col) {\n                                var tdCSS_class = \"\";\n                                if (_col.styleClass) {\n                                    if (U.isFunction(_col.styleClass)) {\n                                        tdCSS_class += _col.styleClass.call({\n                                            column: _col,\n                                            key: _col.key,\n                                            item: _list[di],\n                                            index: di\n                                        }) + \" \";\n                                    } else {\n                                        tdCSS_class += _col.styleClass + \" \";\n                                    }\n                                }\n                                if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                                if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                                return tdCSS_class;\n                            }.call(this, col) + '\" ', 'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                            SS.push(function (_cellHeight) {\n                                // let lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2);\n                                // if (!col.multiLine) {\n                                //     _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                                // }\n                                return '<span data-ax5grid-cellHolder=\"' + (col.multiLine ? 'multiLine' : '') + '\" ' + (colAlign ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') + '\" >';\n                            }(cellHeight), isGroupingRow ? getGroupingValue.call(this, _list[di], di, col) : getFieldValue.call(this, _list, _list[di], di, col), '</span>');\n\n                            SS.push('</td>');\n                        }\n                        SS.push('<td ', 'data-ax5grid-column-row=\"null\" ', 'data-ax5grid-column-col=\"null\" ', 'data-ax5grid-data-index=\"' + di + '\" ', 'data-ax5grid-data-o-index=\"' + odi + '\" ', 'data-ax5grid-column-attr=\"' + \"default\" + '\" ', 'style=\"height: ' + cfg.body.columnHeight + 'px;min-height: 1px;\" ', '></td>');\n                        SS.push('</tr>');\n                    }\n                }\n            }\n            SS.push('</table>');\n\n            if (isScrolled && _list.length) {\n                SS.push('<div style=\"background:repeating-linear-gradient(to bottom, ' + stripeString + ');' + 'font-size:0;' + 'line-height:0;height: ' + (_list.length - di) * _scrollConfig.bodyTrHeight + 'px;\"></div>');\n            }\n\n            _elTarget.empty();\n            SS = SS.join('');\n\n            _elTarget.get(0).innerHTML = SS;\n\n            this.$.livePanelKeys.push(_elTargetKey); // 사용중인 패널키를 모아둠. (뷰의 상태 변경시 사용하려고)\n            return true;\n        };\n\n        /**\n         * @param _elTargetKey\n         * @param _colGroup\n         * @param _bodyRow\n         * @param _list\n         * @param [_scrollConfig]\n         * @returns {boolean}\n         */\n        var repaintSum = function repaintSum(_elTargetKey, _colGroup, _bodyRow, _list, _scrollConfig) {\n            var _elTarget = this.$.panel[_elTargetKey];\n\n            if (!isFirstPaint && !_scrollConfig) {\n                this.$.livePanelKeys.push(_elTargetKey); // 사용중인 패널키를 모아둠. (뷰의 상태 변경시 사용하려고)\n                return false;\n            }\n\n            var SS = [],\n                cgi = void 0,\n                cgl = void 0,\n                tri = void 0,\n                trl = void 0,\n                ci = void 0,\n                cl = void 0,\n                col = void 0,\n                cellHeight = void 0,\n                colAlign = void 0;\n\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('<tr class=\"tr-sum\">');\n                for (ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    col = _bodyRow.rows[tri].cols[ci];\n                    cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                    colAlign = col.align || bodyAlign;\n\n                    SS.push('<td ', 'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ', 'data-ax5grid-column-row=\"' + tri + '\" ', 'data-ax5grid-column-col=\"' + ci + '\" ', 'data-ax5grid-column-rowIndex=\"' + tri + '\" ', 'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ', 'data-ax5grid-column-attr=\"' + (col.columnAttr || \"sum\") + '\" ', function (_focusedColumn, _selectedColumn) {\n                        var attrs = \"\";\n                        if (_focusedColumn) {\n                            attrs += 'data-ax5grid-column-focused=\"true\" ';\n                        }\n                        if (_selectedColumn) {\n                            attrs += 'data-ax5grid-column-selected=\"true\" ';\n                        }\n                        return attrs;\n                    }(this.focusedColumn[\"sum_\" + col.colIndex + \"_\" + tri], this.selectedColumn[\"sum_\" + col.colIndex + \"_\" + tri]), 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', 'class=\"' + function (_col) {\n                        var tdCSS_class = \"\";\n                        if (_col.styleClass) {\n                            if (U.isFunction(_col.styleClass)) {\n                                tdCSS_class += _col.styleClass.call({\n                                    column: _col,\n                                    key: _col.key,\n                                    isFootSum: true\n                                }) + \" \";\n                            } else {\n                                tdCSS_class += _col.styleClass + \" \";\n                            }\n                        }\n                        if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                        if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                        return tdCSS_class;\n                    }.call(this, col) + '\" ', 'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push(function (_cellHeight) {\n                        // let lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                        // if (!col.multiLine) {\n                        //     _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                        // }\n                        return '<span data-ax5grid-cellHolder=\"' + (col.multiLine ? 'multiLine' : '') + '\" ' + (colAlign ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') + '\" >';\n                    }(cellHeight), getSumFieldValue.call(this, _list, col), '</span>');\n\n                    SS.push('</td>');\n                }\n                SS.push('<td ', 'data-ax5grid-column-row=\"null\" ', 'data-ax5grid-column-col=\"null\" ', 'data-ax5grid-column-attr=\"' + \"sum\" + '\" ', 'style=\"height: ' + cfg.body.columnHeight + 'px;min-height: 1px;\" ', '></td>');\n                SS.push('</tr>');\n            }\n\n            SS.push('</table>');\n\n            _elTarget.empty();\n            SS = SS.join('');\n\n            _elTarget.get(0).innerHTML = SS;\n\n            this.$.livePanelKeys.push(_elTargetKey); // 사용중인 패널키를 모아둠. (뷰의 상태 변경시 사용하려고)\n            return true;\n        };\n\n        /**\n         * @param _elTargetKey\n         * @param _colGroup\n         * @param _bodyRow\n         * @param _list\n         * @param [_scrollConfig]\n         * @returns {boolean}\n         */\n        var mergeCellsBody = function mergeCellsBody(_elTargetKey, _colGroup, _bodyRow, _list, _scrollConfig) {\n            var tblRowMaps = [];\n            var _elTarget = this.$.panel[_elTargetKey];\n            var token = {},\n                hasMergeTd = void 0;\n\n            // 테이블의 td들을 수잡하여 저장해두고 스크립트로 반복하여 정리.\n            var tableTrs = _elTarget.find(\"tr\");\n            for (var ri = 0, rl = tableTrs.length; ri < rl; ri++) {\n                var tableTrTds = void 0,\n                    trMaps = void 0;\n                tableTrTds = tableTrs[ri].childNodes;\n                trMaps = [];\n\n                for (var _ci = 0, cl = tableTrTds.length; _ci < cl; _ci++) {\n                    var tdObj = {\n                        \"$\": jQuery(tableTrTds[_ci])\n                    };\n\n                    if (tdObj[\"$\"].attr(\"data-ax5grid-column-col\") != \"null\") {\n                        tdObj.dindex = tdObj[\"$\"].attr(\"data-ax5grid-data-index\");\n                        tdObj.tri = tdObj[\"$\"].attr(\"data-ax5grid-column-row\");\n                        tdObj.ci = tdObj[\"$\"].attr(\"data-ax5grid-column-col\");\n                        tdObj.rowIndex = tdObj[\"$\"].attr(\"data-ax5grid-column-rowIndex\");\n                        tdObj.colIndex = tdObj[\"$\"].attr(\"data-ax5grid-column-colIndex\");\n                        tdObj.rowspan = tdObj[\"$\"].attr(\"rowspan\");\n                        tdObj.text = tdObj[\"$\"].text();\n                        trMaps.push(tdObj);\n                    }\n\n                    tdObj = null;\n                }\n                tblRowMaps.push(trMaps);\n            }\n\n            // 두줄이상 일 때 의미가 있으니.\n            if (tblRowMaps.length > 1) {\n                hasMergeTd = false;\n\n                var _loop = function _loop(_ri, _rl) {\n                    var prevTokenColIndexs = [];\n\n                    var _loop2 = function _loop2(_ci3, _cl2) {\n                        // 적용 하려는 컬럼에 editor 속성이 없다면 머지 대상입니다.\n\n                        if (!_colGroup[_ci3].editor && function () {\n                            if (U.isArray(cfg.body.mergeCells)) {\n                                return ax5.util.search(cfg.body.mergeCells, _colGroup[_ci3].key) > -1;\n                            } else {\n                                return true;\n                            }\n                        }()) {\n\n                            // 앞줄과 값이 같다면.\n                            if (token[_ci3] && function () {\n                                if (prevTokenColIndexs.length > 0) {\n                                    var hasFalse = true;\n                                    prevTokenColIndexs.forEach(function (ti) {\n                                        if (tblRowMaps[_ri - 1][ti].text != tblRowMaps[_ri][ti].text) {\n                                            hasFalse = false;\n                                        }\n                                    });\n                                    return hasFalse;\n                                } else {\n                                    return true;\n                                }\n                            }() && token[_ci3].text == tblRowMaps[_ri][_ci3].text) {\n                                tblRowMaps[_ri][_ci3].rowspan = 0;\n                                tblRowMaps[token[_ci3].ri][_ci3].rowspan++;\n                                hasMergeTd = true;\n                            } else {\n                                token[_ci3] = {\n                                    ri: _ri,\n                                    ci: _ci3,\n                                    text: tblRowMaps[_ri][_ci3].text\n                                };\n                            }\n\n                            prevTokenColIndexs.push(_ci3);\n                        }\n                    };\n\n                    for (var _ci3 = 0, _cl2 = tblRowMaps[_ri].length; _ci3 < _cl2; _ci3++) {\n                        _loop2(_ci3, _cl2);\n                    }\n                };\n\n                for (var _ri = 0, _rl = tblRowMaps.length; _ri < _rl; _ri++) {\n                    _loop(_ri, _rl);\n                }\n\n                // rowspan을 다 구했으면 적용합니다.\n                if (hasMergeTd) {\n                    for (var _ri2 = 0, _rl2 = tblRowMaps.length; _ri2 < _rl2; _ri2++) {\n                        for (var _ci2 = 0, _cl = tblRowMaps[_ri2].length; _ci2 < _cl; _ci2++) {\n                            if (tblRowMaps[_ri2][_ci2].rowspan == 0) {\n                                tblRowMaps[_ri2][_ci2][\"$\"].remove();\n                            } else if (tblRowMaps[_ri2][_ci2].rowspan > 1) {\n                                tblRowMaps[_ri2][_ci2][\"$\"].attr(\"rowspan\", tblRowMaps[_ri2][_ci2].rowspan).addClass(\"merged\");\n                            }\n                        }\n                    }\n                }\n            }\n        };\n\n        var scrollConfig = {\n            paintStartRowIndex: paintStartRowIndex,\n            paintRowCount: paintRowCount,\n            paintStartColumnIndex: paintStartColumnIndex,\n            paintEndColumnIndex: paintEndColumnIndex,\n            nopaintLeftColumnsWidth: nopaintLeftColumnsWidth,\n            nopaintRightColumnsWidth: nopaintRightColumnsWidth,\n            bodyTrHeight: this.xvar.bodyTrHeight,\n            virtualScrollX: this.config.virtualScrollX,\n            virtualScrollY: this.config.virtualScrollY\n        };\n        var frozenScrollConfig = jQuery.extend({}, scrollConfig, {\n            paintStartRowIndex: 0,\n            paintRowCount: this.xvar.frozenRowIndex\n        });\n\n        // aside\n        if (cfg.asidePanelWidth > 0) {\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                repaintBody.call(this, \"top-aside-body\", this.asideColGroup, asideBodyRowData, asideBodyGroupingData, list.slice(0, this.xvar.frozenRowIndex), frozenScrollConfig);\n            }\n\n            repaintBody.call(this, \"aside-body-scroll\", this.asideColGroup, asideBodyRowData, asideBodyGroupingData, list, scrollConfig);\n\n            if (cfg.footSum) {\n                // 바닥 요약 (footSum에 대한 aside 사용안함)\n                repaintSum.call(this, \"bottom-aside-body\", this.asideColGroup, asideBodyRowData, null, this.list);\n            }\n        }\n\n        // left\n        if (this.xvar.frozenColumnIndex > 0) {\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                repaintBody.call(this, \"top-left-body\", this.leftHeaderColGroup, leftBodyRowData, leftBodyGroupingData, list.slice(0, this.xvar.frozenRowIndex), frozenScrollConfig);\n            }\n\n            repaintBody.call(this, \"left-body-scroll\", this.leftHeaderColGroup, leftBodyRowData, leftBodyGroupingData, list, scrollConfig);\n\n            if (cfg.footSum && this.needToPaintSum) {\n                // 바닥 요약\n                repaintSum.call(this, \"bottom-left-body\", this.leftHeaderColGroup, leftFootSumData, this.list);\n            }\n        }\n\n        // body\n        if (this.xvar.frozenRowIndex > 0) {\n            // 상단 행고정\n            repaintBody.call(this, \"top-body-scroll\", headerColGroup, bodyRowData, bodyGroupingData, list.slice(0, this.xvar.frozenRowIndex), frozenScrollConfig);\n        }\n        repaintBody.call(this, \"body-scroll\", headerColGroup, bodyRowData, bodyGroupingData, list, scrollConfig);\n\n        // 바닥 요약\n        if (cfg.footSum && this.needToPaintSum) {\n            repaintSum.call(this, \"bottom-body-scroll\", headerColGroup, footSumData, this.list, scrollConfig);\n        }\n        // right\n        if (cfg.rightSum) {}\n        // todo : right 표현 정리\n\n\n        /// mergeCells\n        if (cfg.body.mergeCells && list.length) {\n            // left\n            if (this.xvar.frozenColumnIndex > 0) {\n                if (this.xvar.frozenRowIndex > 0) {\n                    // 상단 행고정\n                    // console.log(this.leftHeaderColGroup, leftBodyRowData);\n                    mergeCellsBody.call(this, \"top-left-body\", this.leftHeaderColGroup, leftBodyRowData, list.slice(0, this.xvar.frozenRowIndex));\n                }\n                mergeCellsBody.call(this, \"left-body-scroll\", this.leftHeaderColGroup, leftBodyRowData, list, scrollConfig);\n            }\n\n            // body\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                mergeCellsBody.call(this, \"top-body-scroll\", this.headerColGroup, bodyRowData, list.slice(0, this.xvar.frozenRowIndex));\n            }\n            mergeCellsBody.call(this, \"body-scroll\", this.headerColGroup, bodyRowData, list, scrollConfig);\n        }\n\n        this.xvar.virtualPaintStartRowIndex = virtualPaintStartRowIndex;\n        this.xvar.paintStartRowIndex = paintStartRowIndex;\n        this.xvar.paintRowCount = paintRowCount;\n        this.xvar.virtualPaintRowCount = virtualPaintRowCount;\n        this.xvar.paintStartColumnIndex = paintStartColumnIndex;\n        this.xvar.paintEndColumnIndex = paintEndColumnIndex;\n        this.xvar.nopaintLeftColumnsWidth = nopaintLeftColumnsWidth;\n        this.xvar.nopaintRightColumnsWidth = nopaintRightColumnsWidth;\n        this.xvar.dataRowCount = list.length;\n        this.needToPaintSum = false;\n\n        GRID.page.statusUpdate.call(this);\n    };\n\n    var repaintCell = function repaintCell(_panelName, _dindex, _doindex, _rowIndex, _colIndex, _newValue) {\n        var self = this,\n            cfg = this.config,\n            list = this.list;\n\n        var updateCell = this.$[\"panel\"][_panelName].find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + _rowIndex + '\"][data-ax5grid-column-colindex=\"' + _colIndex + '\"]').find('[data-ax5grid-cellholder]'),\n            colGroup = this.colGroup,\n            col = colGroup[_colIndex];\n\n        updateCell.html(getFieldValue.call(this, list, list[_dindex], _dindex, col));\n\n        if (col.editor && col.editor.updateWith) {\n            col.editor.updateWith.forEach(function (updateColumnKey) {\n                colGroup.forEach(function (col) {\n                    if (col.key == updateColumnKey) {\n                        var rowIndex = col.rowIndex,\n                            colIndex = col.colIndex,\n                            panelName = GRID.util.findPanelByColumnIndex.call(self, _dindex, colIndex, rowIndex).panelName,\n                            updateWithCell = self.$[\"panel\"][panelName].find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + rowIndex + '\"][data-ax5grid-column-colindex=\"' + colIndex + '\"]').find('[data-ax5grid-cellholder]');\n\n                        updateWithCell.html(getFieldValue.call(self, list, list[_dindex], _dindex, col));\n                    }\n                });\n            });\n        }\n\n        /// ~~~~~~\n\n        var paintStartRowIndex = Math.floor(Math.abs(this.$.panel[\"body-scroll\"].position().top) / this.xvar.bodyTrHeight) + this.xvar.frozenRowIndex,\n            headerColGroup = this.headerColGroup,\n            leftFootSumData = this.leftFootSumData,\n            footSumData = this.footSumData,\n            leftBodyGroupingData = this.leftBodyGroupingData,\n            bodyGroupingData = this.bodyGroupingData,\n            bodyAlign = cfg.body.align,\n            paintRowCount = Math.ceil(this.$.panel[\"body\"].height() / this.xvar.bodyTrHeight) + 1,\n            scrollConfig = {\n            paintStartRowIndex: paintStartRowIndex,\n            paintRowCount: paintRowCount,\n            bodyTrHeight: this.xvar.bodyTrHeight\n        };\n\n        if (this.xvar.nopaintLeftColumnsWidth || this.xvar.nopaintRightColumnsWidth) {\n            headerColGroup = [].concat(headerColGroup).splice(this.xvar.paintStartColumnIndex, this.xvar.paintEndColumnIndex - this.xvar.paintStartColumnIndex + 1);\n            if (cfg.body.grouping) {\n                bodyGroupingData = GRID.util.getTableByStartEndColumnIndex(bodyGroupingData, this.xvar.paintStartColumnIndex, this.xvar.paintEndColumnIndex);\n            }\n            if (cfg.footSum) {\n                footSumData = GRID.util.getTableByStartEndColumnIndex(footSumData, this.xvar.paintStartColumnIndex, this.xvar.paintEndColumnIndex);\n            }\n        }\n\n        var repaintSum = function repaintSum(_elTargetKey, _colGroup, _bodyRow, _list, _scrollConfig) {\n            var _elTarget = this.$.panel[_elTargetKey],\n                SS = [],\n                cgi = void 0,\n                cgl = void 0,\n                tri = void 0,\n                trl = void 0,\n                ci = void 0,\n                cl = void 0,\n                col = void 0,\n                cellHeight = void 0,\n                colAlign = void 0;\n\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('<tr class=\"tr-sum\">');\n                for (ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    col = _bodyRow.rows[tri].cols[ci];\n                    cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                    colAlign = col.align || bodyAlign;\n\n                    SS.push('<td ', 'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ', 'data-ax5grid-column-row=\"' + tri + '\" ', 'data-ax5grid-column-col=\"' + ci + '\" ', 'data-ax5grid-column-rowIndex=\"' + tri + '\" ', 'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ', 'data-ax5grid-column-attr=\"' + (col.columnAttr || \"sum\") + '\" ', function (_focusedColumn, _selectedColumn) {\n                        var attrs = \"\";\n                        if (_focusedColumn) {\n                            attrs += 'data-ax5grid-column-focused=\"true\" ';\n                        }\n                        if (_selectedColumn) {\n                            attrs += 'data-ax5grid-column-selected=\"true\" ';\n                        }\n                        return attrs;\n                    }(this.focusedColumn[\"sum_\" + col.colIndex + \"_\" + tri], this.selectedColumn[\"sum_\" + col.colIndex + \"_\" + tri]), 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', 'class=\"' + function (_col) {\n                        var tdCSS_class = \"\";\n                        if (_col.styleClass) {\n                            if (U.isFunction(_col.styleClass)) {\n                                tdCSS_class += _col.styleClass.call({\n                                    column: _col,\n                                    key: _col.key,\n                                    isFootSum: true\n                                }) + \" \";\n                            } else {\n                                tdCSS_class += _col.styleClass + \" \";\n                            }\n                        }\n                        if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                        if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                        return tdCSS_class;\n                    }.call(this, col) + '\" ', 'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push(function (_cellHeight) {\n                        // let lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                        // if (!col.multiLine) {\n                        //     _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                        // }\n\n                        return '<span data-ax5grid-cellHolder=\"' + (col.multiLine ? 'multiLine' : '') + '\" ' + (colAlign ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') + '\" >';\n                    }(cellHeight), getSumFieldValue.call(this, _list, col), '</span>');\n\n                    SS.push('</td>');\n                }\n                SS.push('<td ', 'data-ax5grid-column-row=\"null\" ', 'data-ax5grid-column-col=\"null\" ', 'data-ax5grid-column-attr=\"' + \"sum\" + '\" ', 'style=\"height: ' + cfg.body.columnHeight + 'px;min-height: 1px;\" ', '></td>');\n                SS.push('</tr>');\n            }\n\n            SS.push('</table>');\n\n            _elTarget.empty().get(0).innerHTML = SS.join('');\n            return true;\n        };\n        var replaceGroupTr = function replaceGroupTr(_elTargetKey, _colGroup, _groupRow, _list, _scrollConfig) {\n            var _elTarget = this.$.panel[_elTargetKey],\n                SS = [],\n                di = void 0,\n                dl = void 0,\n                tri = void 0,\n                trl = void 0,\n                ci = void 0,\n                cl = void 0,\n                col = void 0,\n                cellHeight = void 0,\n                colAlign = void 0;\n\n            for (di = _scrollConfig.paintStartRowIndex, dl = function () {\n                var len = void 0;\n                len = _list.length;\n                if (_scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex < len) {\n                    len = _scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex;\n                }\n                return len;\n            }(); di < dl; di++) {\n                if (_list[di] && _groupRow && \"__isGrouping\" in _list[di]) {\n                    var rowTable = _groupRow;\n                    SS = [];\n                    for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n                        for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                            col = rowTable.rows[tri].cols[ci];\n                            cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                            colAlign = col.align || bodyAlign;\n\n                            SS.push('<td ', 'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ', 'data-ax5grid-data-index=\"' + di + '\" ', 'data-ax5grid-column-row=\"' + tri + '\" ', 'data-ax5grid-column-col=\"' + ci + '\" ', 'data-ax5grid-column-rowIndex=\"' + col.rowIndex + '\" ', 'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ', 'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ', function (_focusedColumn, _selectedColumn) {\n                                var attrs = \"\";\n                                if (_focusedColumn) {\n                                    attrs += 'data-ax5grid-column-focused=\"true\" ';\n                                }\n                                if (_selectedColumn) {\n                                    attrs += 'data-ax5grid-column-selected=\"true\" ';\n                                }\n                                return attrs;\n                            }(this.focusedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex], this.selectedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex]), 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', 'class=\"' + function (_col) {\n                                var tdCSS_class = \"\";\n                                if (_col.styleClass) {\n                                    if (U.isFunction(_col.styleClass)) {\n                                        tdCSS_class += _col.styleClass.call({\n                                            column: _col,\n                                            key: _col.key,\n                                            item: _list[di],\n                                            index: di\n                                        }) + \" \";\n                                    } else {\n                                        tdCSS_class += _col.styleClass + \" \";\n                                    }\n                                }\n                                if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                                if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                                return tdCSS_class;\n                            }.call(this, col) + '\" ', 'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                            SS.push(function (_cellHeight) {\n                                // let lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                                // if (!col.multiLine) {\n                                //     _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                                // }\n\n                                return '<span data-ax5grid-cellHolder=\"' + (col.multiLine ? 'multiLine' : '') + '\" ' + (colAlign ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') + '\" >';\n                            }(cellHeight), getGroupingValue.call(this, _list[di], di, col), '</span>');\n\n                            SS.push('</td>');\n                        }\n                        SS.push('<td ', 'data-ax5grid-column-row=\"null\" ', 'data-ax5grid-column-col=\"null\" ', 'data-ax5grid-data-index=\"' + di + '\" ', 'data-ax5grid-column-attr=\"' + \"default\" + '\" ', 'style=\"height: ' + cfg.body.columnHeight + 'px;min-height: 1px;\" ', '></td>');\n                    }\n                    _elTarget.find('tr[data-ax5grid-tr-data-index=\"' + di + '\"]').empty().get(0).innerHTML = SS.join('');\n                }\n            }\n        };\n\n        // body.grouping tr 다시 그리기..\n        if (cfg.body.grouping) {\n            // left\n            if (this.xvar.frozenColumnIndex > 0) {\n                if (this.xvar.frozenRowIndex > 0) {\n                    // 상단 행고정\n                    replaceGroupTr.call(this, \"top-left-body\", headerColGroup, leftBodyGroupingData, list.slice(0, this.xvar.frozenRowIndex), {\n                        paintStartRowIndex: 0,\n                        paintRowCount: this.xvar.frozenRowIndex,\n                        bodyTrHeight: this.xvar.bodyTrHeight\n                    });\n                }\n                replaceGroupTr.call(this, \"left-body-scroll\", headerColGroup, leftBodyGroupingData, list, scrollConfig);\n            }\n\n            // body\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                replaceGroupTr.call(this, \"top-body-scroll\", headerColGroup, bodyGroupingData, list.slice(0, this.xvar.frozenRowIndex), {\n                    paintStartRowIndex: 0,\n                    paintRowCount: this.xvar.frozenRowIndex,\n                    bodyTrHeight: this.xvar.bodyTrHeight\n                });\n            }\n\n            replaceGroupTr.call(this, \"body-scroll\", headerColGroup, bodyGroupingData, list, scrollConfig);\n        }\n\n        if (this.xvar.frozenColumnIndex > 0) {\n            if (cfg.footSum && this.needToPaintSum) {\n                // 바닥 요약\n                repaintSum.call(this, \"bottom-left-body\", headerColGroup, leftFootSumData, list);\n            }\n        }\n\n        if (cfg.footSum && this.needToPaintSum) {\n            // 바닥 요약\n            repaintSum.call(this, \"bottom-body-scroll\", headerColGroup, footSumData, list, scrollConfig);\n        }\n    };\n\n    var repaintRow = function repaintRow(_dindex) {\n        var self = this,\n            cfg = this.config,\n            list = this.list;\n        /// ~~~~~~\n\n        var paintStartRowIndex = Math.floor(Math.abs(this.$.panel[\"body-scroll\"].position().top) / this.xvar.bodyTrHeight) + this.xvar.frozenRowIndex,\n            asideBodyRowData = this.asideBodyRowData,\n            leftBodyRowData = this.leftBodyRowData,\n            bodyRowData = this.bodyRowData,\n            leftFootSumData = this.leftFootSumData,\n            footSumData = this.footSumData,\n            asideBodyGroupingData = this.asideBodyGroupingData,\n            leftBodyGroupingData = this.leftBodyGroupingData,\n            bodyGroupingData = this.bodyGroupingData,\n            bodyAlign = cfg.body.align,\n            paintRowCount = Math.ceil(this.$.panel[\"body\"].height() / this.xvar.bodyTrHeight) + 1,\n            scrollConfig = {\n            paintStartRowIndex: paintStartRowIndex,\n            paintRowCount: paintRowCount,\n            bodyTrHeight: this.xvar.bodyTrHeight\n        };\n\n        var repaintSum = function repaintSum(_elTargetKey, _colGroup, _bodyRow, _list) {\n            var _elTarget = this.$.panel[_elTargetKey],\n                SS = [],\n                cgi = void 0,\n                cgl = void 0,\n                tri = void 0,\n                trl = void 0,\n                ci = void 0,\n                cl = void 0,\n                col = void 0,\n                cellHeight = void 0,\n                colAlign = void 0;\n\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('<tr class=\"tr-sum\">');\n                for (ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    col = _bodyRow.rows[tri].cols[ci];\n                    cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                    colAlign = col.align || bodyAlign;\n\n                    SS.push('<td ', 'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ', 'data-ax5grid-column-row=\"' + tri + '\" ', 'data-ax5grid-column-col=\"' + ci + '\" ', 'data-ax5grid-column-rowIndex=\"' + tri + '\" ', 'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ', 'data-ax5grid-column-attr=\"' + (col.columnAttr || \"sum\") + '\" ', function (_focusedColumn, _selectedColumn) {\n                        var attrs = \"\";\n                        if (_focusedColumn) {\n                            attrs += 'data-ax5grid-column-focused=\"true\" ';\n                        }\n                        if (_selectedColumn) {\n                            attrs += 'data-ax5grid-column-selected=\"true\" ';\n                        }\n                        return attrs;\n                    }(this.focusedColumn[\"sum_\" + col.colIndex + \"_\" + tri], this.selectedColumn[\"sum_\" + col.colIndex + \"_\" + tri]), 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', 'class=\"' + function (_col) {\n                        var tdCSS_class = \"\";\n                        if (_col.styleClass) {\n                            if (U.isFunction(_col.styleClass)) {\n                                tdCSS_class += _col.styleClass.call({\n                                    column: _col,\n                                    key: _col.key,\n                                    isFootSum: true\n                                }) + \" \";\n                            } else {\n                                tdCSS_class += _col.styleClass + \" \";\n                            }\n                        }\n                        if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                        if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                        return tdCSS_class;\n                    }.call(this, col) + '\" ', 'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push(function (_cellHeight) {\n                        // var lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                        // if (!col.multiLine) {\n                        //     _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                        // }\n\n                        return '<span data-ax5grid-cellHolder=\"' + (col.multiLine ? 'multiLine' : '') + '\" ' + (colAlign ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') + '\" >';\n                    }(cellHeight), getSumFieldValue.call(this, _list, col), '</span>');\n\n                    SS.push('</td>');\n                }\n                SS.push('<td ', 'data-ax5grid-column-row=\"null\" ', 'data-ax5grid-column-col=\"null\" ', 'data-ax5grid-column-attr=\"' + \"sum\" + '\" ', 'style=\"height: ' + cfg.body.columnHeight + 'px;min-height: 1px;\" ', '></td>');\n                SS.push('</tr>');\n            }\n\n            SS.push('</table>');\n\n            _elTarget.empty().get(0).innerHTML = SS.join('');\n            return true;\n        };\n        var replaceGroupTr = function replaceGroupTr(_elTargetKey, _colGroup, _groupRow, _list, _scrollConfig) {\n            var _elTarget = this.$.panel[_elTargetKey],\n                SS = [],\n                di = void 0,\n                dl = void 0,\n                tri = void 0,\n                trl = void 0,\n                ci = void 0,\n                cl = void 0,\n                col = void 0,\n                cellHeight = void 0,\n                colAlign = void 0;\n\n            if (typeof _scrollConfig === \"undefined\" || typeof _scrollConfig['paintStartRowIndex'] === \"undefined\") {\n                _scrollConfig = {\n                    paintStartRowIndex: 0,\n                    paintRowCount: _list.length\n                };\n            }\n\n            for (di = _scrollConfig.paintStartRowIndex, dl = function () {\n                var len = void 0;\n                len = _list.length;\n                if (_scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex < len) {\n                    len = _scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex;\n                }\n                return len;\n            }(); di < dl; di++) {\n                if (_list[di] && _groupRow && \"__isGrouping\" in _list[di]) {\n                    var rowTable = _groupRow;\n                    SS = [];\n                    for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n                        for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                            col = rowTable.rows[tri].cols[ci];\n                            cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                            colAlign = col.align || bodyAlign;\n\n                            SS.push('<td ', 'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ', 'data-ax5grid-data-index=\"' + di + '\" ', 'data-ax5grid-column-row=\"' + tri + '\" ', 'data-ax5grid-column-col=\"' + ci + '\" ', 'data-ax5grid-column-rowIndex=\"' + col.rowIndex + '\" ', 'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ', 'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ', function (_focusedColumn, _selectedColumn) {\n                                var attrs = \"\";\n                                if (_focusedColumn) {\n                                    attrs += 'data-ax5grid-column-focused=\"true\" ';\n                                }\n                                if (_selectedColumn) {\n                                    attrs += 'data-ax5grid-column-selected=\"true\" ';\n                                }\n                                return attrs;\n                            }(this.focusedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex], this.selectedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex]), 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', 'class=\"' + function (_col) {\n                                var tdCSS_class = \"\";\n                                if (_col.styleClass) {\n                                    if (U.isFunction(_col.styleClass)) {\n                                        tdCSS_class += _col.styleClass.call({\n                                            column: _col,\n                                            key: _col.key,\n                                            item: _list[di],\n                                            index: di\n                                        }) + \" \";\n                                    } else {\n                                        tdCSS_class += _col.styleClass + \" \";\n                                    }\n                                }\n                                if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                                if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                                return tdCSS_class;\n                            }.call(this, col) + '\" ', 'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                            SS.push(function (_cellHeight) {\n                                // let lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                                // if (!col.multiLine) {\n                                //     _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                                // }\n\n                                return '<span data-ax5grid-cellHolder=\"' + (col.multiLine ? 'multiLine' : '') + '\" ' + (colAlign ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') + '\" >';\n                            }(cellHeight), getGroupingValue.call(this, _list[di], di, col), '</span>');\n\n                            SS.push('</td>');\n                        }\n                        SS.push('<td ', 'data-ax5grid-column-row=\"null\" ', 'data-ax5grid-column-col=\"null\" ', 'data-ax5grid-data-index=\"' + di + '\" ', 'data-ax5grid-column-attr=\"' + \"default\" + '\" ', 'style=\"height: ' + cfg.body.columnHeight + 'px;min-height: 1px;\" ', '></td>');\n                    }\n                    _elTarget.find('tr[data-ax5grid-tr-data-index=\"' + di + '\"]').empty().get(0).innerHTML = SS.join('');\n                }\n            }\n        };\n        var replaceTr = function replaceTr(_elTargetKey, _colGroup, _bodyRow, _list, di) {\n            var _elTarget = this.$.panel[_elTargetKey],\n                SS = [],\n                tri = void 0,\n                trl = void 0,\n                ci = void 0,\n                cl = void 0,\n                col = void 0,\n                cellHeight = void 0,\n                colAlign = void 0,\n                rowTable = _bodyRow,\n                odi = typeof _list[di].__origin_index__ !== \"undefined\" ? _list[di].__origin_index__ : di;\n\n            var tr_element = _elTarget.find('tr[data-ax5grid-tr-data-index=\"' + di + '\"]').empty().get(0);\n            if (tr_element) {\n                for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n                    for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                        col = rowTable.rows[tri].cols[ci];\n                        cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                        colAlign = col.align || bodyAlign;\n\n                        SS.push('<td ', 'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ', 'data-ax5grid-data-index=\"' + di + '\" ', 'data-ax5grid-data-o-index=\"' + odi + '\" ', 'data-ax5grid-column-row=\"' + tri + '\" ', 'data-ax5grid-column-col=\"' + ci + '\" ', 'data-ax5grid-column-rowIndex=\"' + col.rowIndex + '\" ', 'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ', 'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ', function (_focusedColumn, _selectedColumn) {\n                            var attrs = \"\";\n                            if (_focusedColumn) {\n                                attrs += 'data-ax5grid-column-focused=\"true\" ';\n                            }\n                            if (_selectedColumn) {\n                                attrs += 'data-ax5grid-column-selected=\"true\" ';\n                            }\n                            return attrs;\n                        }(this.focusedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex], this.selectedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex]), 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', 'class=\"' + function (_col) {\n                            var tdCSS_class = \"\";\n                            if (_col.styleClass) {\n                                if (U.isFunction(_col.styleClass)) {\n                                    tdCSS_class += _col.styleClass.call({\n                                        column: _col,\n                                        key: _col.key,\n                                        item: _list[di],\n                                        index: di\n                                    }) + \" \";\n                                } else {\n                                    tdCSS_class += _col.styleClass + \" \";\n                                }\n                            }\n                            if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                            if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                            return tdCSS_class;\n                        }.call(this, col) + '\" ', 'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                        SS.push(function (_cellHeight) {\n                            // let lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                            // if (!col.multiLine) {\n                            //     _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                            // }\n                            return '<span data-ax5grid-cellHolder=\"' + (col.multiLine ? 'multiLine' : '') + '\" ' + (colAlign ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') + '\" >';\n                        }(cellHeight), getFieldValue.call(this, _list, _list[di], di, col), '</span>');\n                        SS.push('</td>');\n                    }\n                    SS.push('<td ', 'data-ax5grid-column-row=\"null\" ', 'data-ax5grid-column-col=\"null\" ', 'data-ax5grid-data-index=\"' + di + '\" ', 'data-ax5grid-column-attr=\"' + \"default\" + '\" ', 'style=\"height: ' + cfg.body.columnHeight + 'px;min-height: 1px;\" ', '></td>');\n                }\n                tr_element.innerHTML = SS.join('');\n            }\n        };\n\n        // left\n        if (this.xvar.frozenColumnIndex > 0) {\n            if (this.xvar.frozenRowIndex > _dindex) {\n                // 상단 행고정\n                replaceTr.call(this, \"top-left-body\", this.leftHeaderColGroup, leftBodyRowData, list.slice(0, this.xvar.frozenRowIndex), _dindex);\n            } else {\n                replaceTr.call(this, \"left-body-scroll\", this.leftHeaderColGroup, leftBodyRowData, list, _dindex);\n            }\n        }\n\n        // body\n        if (this.xvar.frozenRowIndex > _dindex) {\n            // 상단 행고정\n            replaceTr.call(this, \"top-body-scroll\", this.headerColGroup, bodyRowData, list.slice(0, this.xvar.frozenRowIndex), _dindex);\n        } else {\n            replaceTr.call(this, \"body-scroll\", this.headerColGroup, bodyRowData, list, _dindex);\n        }\n\n        // body.grouping tr 다시 그리기..\n        if (cfg.body.grouping) {\n            // left\n            if (this.xvar.frozenColumnIndex > 0) {\n                if (this.xvar.frozenRowIndex > _dindex) {\n                    // 상단 행고정\n                    replaceGroupTr.call(this, \"top-left-body\", this.leftHeaderColGroup, leftBodyGroupingData, list.slice(0, this.xvar.frozenRowIndex));\n                } else {\n                    replaceGroupTr.call(this, \"left-body-scroll\", this.leftHeaderColGroup, leftBodyGroupingData, list, scrollConfig);\n                }\n            }\n\n            // body\n            if (this.xvar.frozenRowIndex > _dindex) {\n                // 상단 행고정\n                replaceGroupTr.call(this, \"top-body-scroll\", this.headerColGroup, bodyGroupingData, list.slice(0, this.xvar.frozenRowIndex));\n            } else {\n                replaceGroupTr.call(this, \"body-scroll\", this.headerColGroup, bodyGroupingData, list, scrollConfig);\n            }\n        }\n\n        if (this.xvar.frozenColumnIndex > 0) {\n            if (cfg.footSum && this.needToPaintSum) {\n                // 바닥 요약\n                repaintSum.call(this, \"bottom-left-body\", this.leftHeaderColGroup, leftFootSumData, list);\n            }\n        }\n\n        if (cfg.footSum && this.needToPaintSum) {\n            // 바닥 요약\n            repaintSum.call(this, \"bottom-body-scroll\", this.headerColGroup, footSumData, list, scrollConfig);\n        }\n    };\n\n    var scrollTo = function scrollTo(css, opts) {\n        if (typeof opts === \"undefined\") opts = { timeoutUnUse: false };\n        if (this.isInlineEditing) {\n            for (var key in this.inlineEditing) {\n                //if(this.inlineEditing[key].editor.type === \"select\") {}\n                // 인라인 에디팅 인데 스크롤 이벤트가 발생하면 디액티브 처리\n                GRID.body.inlineEdit.deActive.call(this, \"ESC\", key);\n            }\n        }\n\n        if (this.config.asidePanelWidth > 0 && \"top\" in css) {\n            this.$.panel[\"aside-body-scroll\"].css({ top: css.top });\n        }\n        if (this.xvar.frozenColumnIndex > 0 && \"top\" in css) {\n            this.$.panel[\"left-body-scroll\"].css({ top: css.top });\n        }\n        if (this.xvar.frozenRowIndex > 0 && \"left\" in css) {\n            this.$.panel[\"top-body-scroll\"].css({ left: css.left });\n        }\n\n        this.$.panel[\"body-scroll\"].css(css);\n\n        if (this.config.footSum && \"left\" in css) {\n            this.$.panel[\"bottom-body-scroll\"].css({ left: css.left });\n        }\n\n        // 바디 리페인팅 this.__throttledScroll 은 body init 에서 초기화\n        if (this.__throttledScroll) {\n            this.__throttledScroll(css, opts);\n        } else {\n            if (this.config.virtualScrollY && !opts.noRepaint && \"top\" in css) {\n                repaint.call(this);\n            } else if (this.config.virtualScrollX && !opts.noRepaint && \"left\" in css) {\n                repaint.call(this);\n            }\n            if (opts.callback) {\n                opts.callback();\n            }\n        }\n    };\n\n    var blur = function blur() {\n        columnSelect.focusClear.call(this);\n        columnSelect.clear.call(this);\n        if (this.isInlineEditing) {\n            inlineEdit.deActive.call(this);\n        }\n    };\n\n    var moveFocus = function moveFocus(_position) {\n        var focus = {\n            \"UD\": function UD(_dy) {\n                var moveResult = true,\n                    focusedColumn = void 0,\n                    originalColumn = void 0,\n                    while_i = void 0,\n                    nPanelInfo = void 0;\n\n                for (var c in this.focusedColumn) {\n                    focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n                    break;\n                }\n\n                if (!focusedColumn) return false;\n\n                originalColumn = this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex];\n                columnSelect.focusClear.call(this);\n                columnSelect.clear.call(this);\n\n                if (_dy > 0) {\n                    // 아래로\n                    if (focusedColumn.rowIndex + (originalColumn.rowspan - 1) + _dy > this.bodyRowTable.rows.length - 1) {\n                        focusedColumn.dindex = focusedColumn.dindex + _dy;\n                        focusedColumn.doindex = focusedColumn.doindex + _dy;\n                        focusedColumn.rowIndex = 0;\n                        if (focusedColumn.dindex > this.list.length - 1) {\n                            focusedColumn.dindex = focusedColumn.doindex = this.list.length - 1;\n                            moveResult = false;\n                        }\n                    } else {\n                        focusedColumn.rowIndex = focusedColumn.rowIndex + _dy;\n                    }\n                } else {\n                    // 위로\n                    if (focusedColumn.rowIndex + _dy < 0) {\n                        focusedColumn.dindex = focusedColumn.dindex + _dy;\n                        focusedColumn.doindex = focusedColumn.doindex + _dy;\n                        focusedColumn.rowIndex = this.bodyRowTable.rows.length - 1;\n                        if (focusedColumn.dindex < 0) {\n                            focusedColumn.dindex = focusedColumn.doindex = 0;\n                            moveResult = false;\n                        }\n                    } else {\n                        focusedColumn.rowIndex = focusedColumn.rowIndex + _dy;\n                    }\n                }\n\n                while_i = 0;\n                while (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                    if (focusedColumn.rowIndex == 0 || while_i % 2 == (_dy > 0 ? 0 : 1)) {\n                        focusedColumn.colIndex--;\n                    } else {\n                        focusedColumn.rowIndex--;\n                    }\n\n                    if (focusedColumn.rowIndex <= 0 && focusedColumn.colIndex <= 0) {\n                        // find fail\n                        moveResult = false;\n                        break;\n                    }\n                    while_i++;\n                }\n\n                nPanelInfo = GRID.util.findPanelByColumnIndex.call(this, focusedColumn.dindex, focusedColumn.colIndex);\n\n                // if mergeCells\n                if (this.config.body.mergeCells && this.list.length) {\n                    while (!this.$.panel[nPanelInfo.panelName].find('[data-ax5grid-tr-data-index=\"' + focusedColumn.dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + focusedColumn.rowIndex + '\"][data-ax5grid-column-colindex=\"' + focusedColumn.colIndex + '\"]').get(0)) {\n\n                        if (_dy > 0) {\n                            focusedColumn.dindex++;\n                        } else {\n                            focusedColumn.dindex--;\n                        }\n\n                        if (focusedColumn.dindex < 0 || focusedColumn.dindex > this.list.length - 1) {\n                            break;\n                        }\n                    }\n                    nPanelInfo = GRID.util.findPanelByColumnIndex.call(this, focusedColumn.dindex, focusedColumn.colIndex);\n                }\n\n                focusedColumn.panelName = nPanelInfo.panelName;\n\n                // 포커스 컬럼의 위치에 따라 스크롤 처리.ㅊㅇ\n\n                if (focusedColumn.dindex + 1 > this.xvar.frozenRowIndex) {\n                    if (focusedColumn.dindex <= this.xvar.virtualPaintStartRowIndex) {\n                        var newTop = (focusedColumn.dindex - this.xvar.frozenRowIndex - 1) * this.xvar.bodyTrHeight;\n                        if (newTop < 0) newTop = 0;\n                        scrollTo.call(this, { top: -newTop, timeoutUnUse: false });\n                        GRID.scroller.resize.call(this);\n                    } else if (focusedColumn.dindex + 1 > this.xvar.virtualPaintStartRowIndex + (this.xvar.virtualPaintRowCount - 2)) {\n                        scrollTo.call(this, { top: (this.xvar.virtualPaintRowCount - 2 - focusedColumn.dindex) * this.xvar.bodyTrHeight, timeoutUnUse: false });\n                        GRID.scroller.resize.call(this);\n                    }\n                }\n\n                this.focusedColumn[focusedColumn.dindex + \"_\" + focusedColumn.colIndex + \"_\" + focusedColumn.rowIndex] = focusedColumn;\n                this.$.panel[focusedColumn.panelName].find('[data-ax5grid-tr-data-index=\"' + focusedColumn.dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + focusedColumn.rowIndex + '\"][data-ax5grid-column-colindex=\"' + focusedColumn.colIndex + '\"]').attr('data-ax5grid-column-focused', \"true\");\n\n                return moveResult;\n            },\n            \"LR\": function LR(_dx) {\n                var moveResult = true,\n                    focusedColumn = void 0,\n                    originalColumn = void 0,\n                    while_i = 0,\n                    isScrollPanel = false,\n                    containerPanelName = \"\",\n                    nPanelInfo = void 0;\n\n                for (var c in this.focusedColumn) {\n                    focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n                    break;\n                }\n                if (!focusedColumn) return false;\n\n                originalColumn = this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex];\n\n                columnSelect.focusClear.call(this);\n                columnSelect.clear.call(this);\n\n                if (_dx < 0) {\n                    focusedColumn.colIndex = focusedColumn.colIndex + _dx;\n                    if (focusedColumn.colIndex < 0) {\n                        focusedColumn.colIndex = 0;\n                        moveResult = false;\n                    }\n                } else {\n                    focusedColumn.colIndex = focusedColumn.colIndex + _dx;\n                    if (focusedColumn.colIndex > this.colGroup.length - 1) {\n                        focusedColumn.colIndex = this.colGroup.length - 1;\n                        moveResult = false;\n                    }\n                }\n\n                if (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                    focusedColumn.rowIndex = 0;\n                }\n\n                if (this.list[focusedColumn.dindex] && this.list[focusedColumn.dindex].__isGrouping) {\n                    if (_dx < 0) {\n                        while (typeof this.bodyGroupingMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                            focusedColumn.colIndex--;\n                            if (focusedColumn.colIndex <= 0) {\n                                // find fail\n                                moveResult = false;\n                                break;\n                            }\n                        }\n                    } else {\n                        while (typeof this.bodyGroupingMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                            focusedColumn.colIndex++;\n                            if (focusedColumn.colIndex >= this.colGroup.length) {\n                                // find fail\n                                moveResult = false;\n                                break;\n                            }\n                        }\n                    }\n                } else {\n                    if (_dx < 0) {\n                        while (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                            focusedColumn.colIndex--;\n                            if (focusedColumn.colIndex <= 0) {\n                                // find fail\n                                moveResult = false;\n                                break;\n                            }\n                        }\n                    } else {\n                        while (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                            focusedColumn.colIndex++;\n                            if (focusedColumn.colIndex >= this.colGroup.length) {\n                                // find fail\n                                moveResult = false;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                nPanelInfo = GRID.util.findPanelByColumnIndex.call(this, focusedColumn.dindex, focusedColumn.colIndex);\n\n                // if mergeCells\n                if (this.config.body.mergeCells && this.list.length && focusedColumn.dindex >= 1) {\n                    while (!this.$.panel[nPanelInfo.panelName].find('[data-ax5grid-tr-data-index=\"' + focusedColumn.dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + focusedColumn.rowIndex + '\"][data-ax5grid-column-colindex=\"' + focusedColumn.colIndex + '\"]').get(0)) {\n\n                        focusedColumn.dindex--;\n\n                        if (focusedColumn.dindex < 0 || focusedColumn.dindex > this.list.length - 1) {\n                            break;\n                        }\n                    }\n                    nPanelInfo = GRID.util.findPanelByColumnIndex.call(this, focusedColumn.dindex, focusedColumn.colIndex);\n                }\n\n                focusedColumn.panelName = nPanelInfo.panelName;\n\n                // 포커스 컬럼의 위치에 따라 스크롤 처리\n                var isScrollTo = function () {\n                    if (!this.config.virtualScrollX) return false;\n                    var scrollLeft = 0;\n                    if (focusedColumn.colIndex + 1 > this.xvar.frozenColumnIndex) {\n                        if (focusedColumn.colIndex <= this.xvar.paintStartColumnIndex && this.colGroup[focusedColumn.colIndex]) {\n                            scrollLeft = -this.colGroup[Number(focusedColumn.colIndex)]._sx;\n                            scrollTo.call(this, { left: scrollLeft });\n                            GRID.header.scrollTo.call(this, { left: scrollLeft });\n                            GRID.scroller.resize.call(this);\n                            return true;\n                        } else if (focusedColumn.colIndex >= this.xvar.paintEndColumnIndex && this.colGroup[Number(focusedColumn.colIndex)]) {\n                            if (this.colGroup[Number(focusedColumn.colIndex)]._ex > this.xvar.bodyWidth) {\n                                scrollLeft = this.colGroup[Number(focusedColumn.colIndex)]._ex - this.xvar.bodyWidth;\n                                scrollTo.call(this, { left: -scrollLeft });\n                                GRID.header.scrollTo.call(this, { left: -scrollLeft });\n                                GRID.scroller.resize.call(this);\n                            }\n                            return true;\n                        }\n                    }\n                    scrollLeft = null;\n                    return false;\n                }.call(this);\n\n                containerPanelName = nPanelInfo.containerPanelName;\n                isScrollPanel = nPanelInfo.isScrollPanel;\n\n                this.focusedColumn[focusedColumn.dindex + \"_\" + focusedColumn.colIndex + \"_\" + focusedColumn.rowIndex] = focusedColumn;\n\n                var $column = this.$.panel[focusedColumn.panelName].find('[data-ax5grid-tr-data-index=\"' + focusedColumn.dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + focusedColumn.rowIndex + '\"][data-ax5grid-column-colindex=\"' + focusedColumn.colIndex + '\"]').attr('data-ax5grid-column-focused', \"true\");\n\n                if (!isScrollTo && $column && isScrollPanel) {\n                    // 스크롤 패널 이라면~\n                    // todo : 컬럼이동할 때에도 scrollTo 체크\n                    var newLeft = function () {\n                        if ($column.position().left + $column.outerWidth() > Math.abs(this.$.panel[focusedColumn.panelName].position().left) + this.$.panel[containerPanelName].width()) {\n                            return $column.position().left + $column.outerWidth() - this.$.panel[containerPanelName].width();\n                        } else if (Math.abs(this.$.panel[focusedColumn.panelName].position().left) > $column.position().left) {\n                            return $column.position().left;\n                        } else {\n                            return;\n                        }\n                    }.call(this);\n\n                    if (typeof newLeft !== \"undefined\") {\n                        GRID.header.scrollTo.call(this, { left: -newLeft });\n                        scrollTo.call(this, { left: -newLeft });\n                        GRID.scroller.resize.call(this);\n                    }\n                }\n\n                return moveResult;\n            },\n            \"INDEX\": function INDEX(_dindex) {\n                var moveResult = true,\n                    focusedColumn = void 0,\n                    originalColumn = void 0,\n                    while_i = void 0;\n\n                for (var c in this.focusedColumn) {\n                    focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n                    break;\n                }\n                if (!focusedColumn) {\n                    focusedColumn = {\n                        rowIndex: 0,\n                        colIndex: 0\n                    };\n                }\n                originalColumn = this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex];\n\n                columnSelect.focusClear.call(this);\n                columnSelect.clear.call(this);\n\n                if (_dindex == \"end\") {\n                    _dindex = this.list.length - 1;\n                }\n\n                focusedColumn.dindex = _dindex;\n                focusedColumn.rowIndex = 0;\n\n                while_i = 0;\n                while (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                    if (focusedColumn.rowIndex == 0 || while_i % 2 == (_dy > 0 ? 0 : 1)) {\n                        focusedColumn.colIndex--;\n                    } else {\n                        focusedColumn.rowIndex--;\n                    }\n\n                    if (focusedColumn.rowIndex <= 0 && focusedColumn.colIndex <= 0) {\n                        // find fail\n                        break;\n                    }\n                    while_i++;\n                }\n\n                var nPanelInfo = GRID.util.findPanelByColumnIndex.call(this, focusedColumn.dindex, focusedColumn.colIndex);\n                focusedColumn.panelName = nPanelInfo.panelName;\n\n                // 포커스 컬럼의 위치에 따라 스크롤 처리.\n                {\n                    if (focusedColumn.dindex + 1 > this.xvar.frozenRowIndex) {\n                        var virtualPaintStartRowIndex = this.xvar.virtualPaintStartRowIndex || 0;\n\n                        if (focusedColumn.dindex < virtualPaintStartRowIndex) {\n                            scrollTo.call(this, { top: -(focusedColumn.dindex - this.xvar.frozenRowIndex) * this.xvar.bodyTrHeight });\n                            GRID.scroller.resize.call(this);\n                        } else if (focusedColumn.dindex + 1 > virtualPaintStartRowIndex + (this.xvar.virtualPaintRowCount - 2)) {\n                            //debugger;\n                            //console.log((focusedColumn.dindex - this.xvar.frozenRowIndex - this.xvar.virtualPaintRowCount + 3));\n                            var scrollTopValue = !this.config.virtualScrollY ? focusedColumn.dindex - this.xvar.frozenRowIndex : focusedColumn.dindex - this.xvar.frozenRowIndex - this.xvar.virtualPaintRowCount + 3;\n                            scrollTo.call(this, { top: -scrollTopValue * this.xvar.bodyTrHeight });\n                            GRID.scroller.resize.call(this);\n                        }\n                    }\n                }\n\n                this.focusedColumn[focusedColumn.dindex + \"_\" + focusedColumn.colIndex + \"_\" + focusedColumn.rowIndex] = focusedColumn;\n                this.$.panel[focusedColumn.panelName].find('[data-ax5grid-tr-data-index=\"' + focusedColumn.dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + focusedColumn.rowIndex + '\"][data-ax5grid-column-colindex=\"' + focusedColumn.colIndex + '\"]').attr('data-ax5grid-column-focused', \"true\");\n\n                return moveResult;\n            }\n        };\n\n        var processor = {\n            \"UP\": function UP() {\n                return focus[\"UD\"].call(this, -1);\n            },\n            \"DOWN\": function DOWN() {\n                return focus[\"UD\"].call(this, 1);\n            },\n            \"LEFT\": function LEFT() {\n                return focus[\"LR\"].call(this, -1);\n            },\n            \"RIGHT\": function RIGHT() {\n                return focus[\"LR\"].call(this, 1);\n            },\n            \"HOME\": function HOME() {\n                return focus[\"INDEX\"].call(this, 0);\n            },\n            \"END\": function END() {\n                return focus[\"INDEX\"].call(this, \"end\");\n            },\n            \"position\": function position(_position) {\n                return focus[\"INDEX\"].call(this, _position);\n            }\n        };\n\n        if (_position in processor) {\n            return processor[_position].call(this);\n        } else {\n            return processor[\"position\"].call(this, _position);\n        }\n    };\n\n    var inlineEdit = {\n        active: function active(_focusedColumn, _e, _initValue) {\n            var self = this,\n                dindex = void 0,\n                doindex = void 0,\n                colIndex = void 0,\n                rowIndex = void 0,\n                panelName = void 0,\n                colspan = void 0,\n                col = void 0,\n                editor = void 0;\n\n            for (var key in _focusedColumn) {\n                panelName = _focusedColumn[key].panelName;\n                dindex = _focusedColumn[key].dindex;\n                doindex = _focusedColumn[key].doindex;\n                colIndex = _focusedColumn[key].colIndex;\n                rowIndex = _focusedColumn[key].rowIndex;\n                colspan = _focusedColumn[key].colspan;\n\n                // 인라인 에디팅을 멈춰야 하는 경우 조건\n                col = this.colGroup[colIndex];\n                if (!(editor = col.editor)) return this;\n\n                // editor disabled 체크\n                if (U.isFunction(editor.disabled)) {\n                    if (editor.disabled.call({\n                        list: this.list,\n                        dindex: dindex,\n                        item: this.list[dindex],\n                        key: col.key,\n                        value: _initValue\n                    })) {\n                        return this;\n                    }\n                }\n\n                // 조건에 맞지 않는 에디팅 타입이면 반응 없음.\n                if (!function (_editor, _type) {\n                    if (_editor.type in GRID.inlineEditor) {\n                        return GRID.inlineEditor[_editor.type].editMode == \"popup\";\n                    }\n                }(editor)) {\n                    // 체크 박스 타입이면 값 변경 시도\n                    if (editor.type == \"checkbox\") {\n                        var checked = void 0,\n                            newValue = void 0;\n                        if (editor.config && editor.config.trueValue) {\n                            if (checked = !(_initValue == editor.config.trueValue)) {\n                                newValue = editor.config.trueValue;\n                            } else {\n                                newValue = editor.config.falseValue;\n                            }\n                        } else {\n                            newValue = checked = _initValue == false || _initValue == \"false\" || _initValue < \"1\" ? \"true\" : \"false\";\n                        }\n\n                        GRID.data.setValue.call(self, dindex, doindex, col.key, newValue);\n                        updateRowState.call(self, [\"cellChecked\"], dindex, doindex, {\n                            key: col.key, rowIndex: rowIndex, colIndex: colIndex,\n                            editorConfig: col.editor.config, checked: checked\n                        });\n                    }\n                    return this;\n                }\n\n                if (this.list[dindex].__isGrouping) {\n                    return false;\n                }\n                if (key in this.inlineEditing) {\n                    return false;\n                }\n\n                this.inlineEditing[key] = {\n                    editor: editor,\n                    panelName: panelName,\n                    columnKey: key,\n                    column: _focusedColumn[key],\n                    useReturnToSave: GRID.inlineEditor[editor.type].useReturnToSave\n                };\n                this.isInlineEditing = true;\n            }\n            if (this.isInlineEditing) {\n\n                var originalValue = GRID.data.getValue.call(self, dindex, doindex, col.key),\n                    initValue = function (__value, __editor) {\n                    if (U.isNothing(__value)) {\n                        __value = U.isNothing(originalValue) ? \"\" : originalValue;\n                    }\n\n                    if (__editor.type == \"money\") {\n                        return U.number(__value, { \"money\": true });\n                    } else {\n                        return __value;\n                    }\n                }.call(this, _initValue, editor);\n\n                this.inlineEditing[key].$inlineEditorCell = this.$[\"panel\"][panelName].find('[data-ax5grid-tr-data-index=\"' + dindex + '\"]').find('[data-ax5grid-column-rowindex=\"' + rowIndex + '\"][data-ax5grid-column-colindex=\"' + colIndex + '\"]').find('[data-ax5grid-cellholder]');\n\n                this.inlineEditing[key].$inlineEditor = GRID.inlineEditor[editor.type].init(this, key, editor, this.inlineEditing[key].$inlineEditorCell, initValue);\n\n                return true;\n            }\n        },\n        deActive: function deActive(_msg, _key, _value) {\n            // console.log(this.inlineEditing.column.dindex, this.inlineEditing.$inlineEditor.val());\n            if (!this.inlineEditing[_key]) return this;\n\n            var panelName = this.inlineEditing[_key].panelName,\n                dindex = this.inlineEditing[_key].column.dindex,\n                doindex = this.inlineEditing[_key].column.doindex,\n                rowIndex = this.inlineEditing[_key].column.rowIndex,\n                colIndex = this.inlineEditing[_key].column.colIndex,\n                column = this.bodyRowMap[this.inlineEditing[_key].column.rowIndex + \"_\" + this.inlineEditing[_key].column.colIndex],\n                editorValue = function ($inlineEditor) {\n                if (typeof _value === \"undefined\") {\n                    if ($inlineEditor.get(0).tagName == \"SELECT\" || $inlineEditor.get(0).tagName == \"INPUT\" || $inlineEditor.get(0).tagName == \"TEXTAREA\") {\n                        return $inlineEditor.val();\n                    } else {\n                        _msg = \"CANCEL\";\n                        return false;\n                    }\n                } else {\n                    return _value;\n                }\n            }(this.inlineEditing[_key].$inlineEditor),\n                newValue = function (__value, __editor) {\n                if (__editor.type == \"money\") {\n                    return U.number(__value);\n                } else {\n                    return __value;\n                }\n            }.call(this, editorValue, column.editor);\n\n            var action = {\n                \"CANCEL\": function CANCEL(_dindex, _column, _newValue) {\n                    action[\"__clear\"].call(this);\n                },\n                \"RETURN\": function RETURN(_dindex, _doindex, _column, _newValue) {\n                    if (GRID.data.setValue.call(this, _dindex, _doindex, _column.key, _newValue)) {\n                        action[\"__clear\"].call(this);\n                        GRID.body.repaintCell.call(this, panelName, _dindex, _doindex, rowIndex, colIndex, _newValue);\n                    } else {\n                        action[\"__clear\"].call(this);\n                    }\n                },\n                \"__clear\": function __clear() {\n                    this.isInlineEditing = false;\n\n                    if (this.inlineEditing[_key] && this.inlineEditing[_key].$inlineEditor) {\n                        var bindedAx5ui = this.inlineEditing[_key].$inlineEditor.data(\"binded-ax5ui\");\n                        if (bindedAx5ui == \"ax5picker\") {\n                            this.inlineEditing[_key].$inlineEditor.ax5picker(\"close\");\n                        } else if (bindedAx5ui == \"ax5select\") {\n                            this.inlineEditing[_key].$inlineEditor.ax5select(\"close\");\n                        }\n                        this.inlineEditing[_key].$inlineEditor.remove();\n                        this.inlineEditing[_key].$inlineEditor = null;\n                        this.inlineEditing[_key].$inlineEditorCell = null;\n                    }\n\n                    this.inlineEditing[_key] = undefined;\n                    delete this.inlineEditing[_key]; // delete 지원안하는 브라우저 테스트..\n                }\n            };\n\n            if (_msg in action) {\n                action[_msg || \"RETURN\"].call(this, dindex, doindex, column, newValue);\n            } else {\n                action[\"__clear\"].call(this);\n            }\n        },\n        keydown: function keydown(key, columnKey, _options) {\n            var processor = {\n                \"ESC\": function ESC() {\n                    for (var columnKey in this.inlineEditing) {\n                        inlineEdit.deActive.call(this, \"CANCEL\", columnKey);\n                    }\n                },\n                \"RETURN\": function RETURN() {\n                    if (this.isInlineEditing) {\n                        if (this.inlineEditing[columnKey] && this.inlineEditing[columnKey].useReturnToSave) {\n                            // todo : 네이밍 검증 할 필요있음.\n                            inlineEdit.deActive.call(this, \"RETURN\", columnKey);\n                        } else {\n                            return false;\n                        }\n                    } else {\n\n                        for (var k in this.focusedColumn) {\n                            var _column = this.focusedColumn[k],\n                                column = this.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex],\n                                _dindex3 = _column.dindex,\n                                doindex = _column.doindex,\n                                value = \"\",\n                                col = this.colGroup[_column.colIndex];\n\n                            if (column) {\n                                if (!this.list[_dindex3].__isGrouping) {\n                                    value = GRID.data.getValue.call(this, _dindex3, doindex, column.key);\n                                }\n                            }\n\n                            if (col.editor && GRID.inlineEditor[col.editor.type].editMode === \"inline\") {\n                                if (_options && _options.moveFocus) {} else {\n                                    if (column.editor && column.editor.type == \"checkbox\") {\n                                        value = GRID.data.getValue.call(this, _dindex3, doindex, column.key);\n\n                                        var checked = void 0,\n                                            newValue = void 0;\n                                        if (column.editor.config && column.editor.config.trueValue) {\n                                            // console.log(value, column.editor.config.trueValue);\n\n                                            if (value != column.editor.config.trueValue) {\n                                                newValue = column.editor.config.trueValue;\n                                                checked = true;\n                                            } else {\n                                                newValue = column.editor.config.falseValue;\n                                                checked = false;\n                                            }\n                                        } else {\n                                            newValue = checked = value == false || value == \"false\" || value < \"1\" ? \"true\" : \"false\";\n                                        }\n\n                                        GRID.data.setValue.call(this, _dindex3, doindex, column.key, newValue);\n                                        updateRowState.call(this, [\"cellChecked\"], _dindex3, doindex, {\n                                            key: column.key, rowIndex: _column.rowIndex, colIndex: _column.colIndex,\n                                            editorConfig: column.editor.config, checked: checked\n                                        });\n                                    }\n                                }\n                            } else {\n                                GRID.body.inlineEdit.active.call(this, this.focusedColumn, null, value);\n                            }\n                        }\n                    }\n                    return true;\n                }\n            };\n\n            if (key in processor) {\n                processor[key].call(this, key, columnKey, _options);\n            }\n        }\n    };\n\n    var getExcelString = function getExcelString() {\n        var cfg = this.config,\n            list = this.list,\n            bodyRowData = this.bodyRowTable,\n            footSumData = this.footSumTable,\n            bodyGroupingData = this.bodyGroupingTable;\n\n        // body-scroll 의 포지션에 의존적이므로..\n        var getBody = function getBody(_colGroup, _bodyRow, _groupRow, _list) {\n            var SS = [],\n                di = void 0,\n                dl = void 0,\n                tri = void 0,\n                trl = void 0,\n                ci = void 0,\n                cl = void 0,\n                col = void 0,\n                val = void 0;\n\n            //SS.push('<table border=\"1\">');\n            for (di = 0, dl = _list.length; di < dl; di++) {\n                var isGroupingRow = false,\n                    rowTable = void 0;\n\n                if (_groupRow && \"__isGrouping\" in _list[di]) {\n                    rowTable = _groupRow;\n                    isGroupingRow = true;\n                } else {\n                    rowTable = _bodyRow;\n                }\n\n                for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n                    SS.push('\\n<tr>');\n                    for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                        col = rowTable.rows[tri].cols[ci];\n                        SS.push('<td ', 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', '>', (isGroupingRow ? getGroupingValue.call(this, _list[di], di, col) : getFieldValue.call(this, _list, _list[di], di, col, val, \"text\")) || '&nbsp;', '</td>');\n                    }\n                    SS.push('\\n</tr>');\n                }\n            }\n            //SS.push('</table>');\n            return SS.join('');\n        };\n        var getSum = function getSum(_colGroup, _bodyRow, _list) {\n            var SS = [],\n                tri = void 0,\n                trl = void 0,\n                ci = void 0,\n                cl = void 0,\n                col = void 0;\n\n            //SS.push('<table border=\"1\">');\n            for (tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('\\n<tr>');\n                for (ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    col = _bodyRow.rows[tri].cols[ci];\n                    SS.push('<td ', 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', '>', getSumFieldValue.call(this, _list, col), '</td>');\n                }\n                SS.push('\\n</tr>');\n            }\n            //SS.push('</table>');\n\n            return SS.join('');\n        };\n\n        var po = [];\n        po.push(getBody.call(this, this.headerColGroup, bodyRowData, bodyGroupingData, list));\n        if (cfg.footSum) {\n            // 바닥 요약\n            po.push(getSum.call(this, this.headerColGroup, footSumData, list));\n        }\n\n        // right\n        if (cfg.rightSum) {\n            // todo : right 표현 정리\n        }\n\n        return po.join('');\n    };\n\n    var toggleCollapse = function toggleCollapse(_dindex, _doindex, _collapse) {\n        if (GRID.data.toggleCollapse.call(this, _dindex, _doindex, _collapse)) {\n            this.proxyList = GRID.data.getProxyList.call(this, this.list);\n            this.align();\n        }\n    };\n\n    // todo : tree에서 dindex만으로 구현 했을 때 오류 발생 해결. (_doindex 이용)\n    var click = function click(_dindex, _doindex) {\n        var that = {\n            self: this,\n            page: this.page,\n            list: this.list,\n            item: this.list[_dindex],\n            dindex: _dindex\n        };\n\n        moveFocus.call(this, _dindex);\n        if (this.config.body.onClick) {\n            this.config.body.onClick.call(that, that);\n        }\n\n        that = null;\n        // console.log(this.$[\"panel\"][\"body-scroll\"].find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]>td:first-child'));\n    };\n\n    var dblClick = function dblClick(_dindex, _doindex) {\n        var that = {\n            self: this,\n            page: this.page,\n            list: this.list,\n            item: this.list[_dindex],\n            dindex: _dindex\n        };\n\n        moveFocus.call(this, _dindex);\n\n        if (this.config.body.onDBLClick) {\n            this.config.body.onDBLClick.call(that);\n        }\n\n        that = null;\n    };\n\n    GRID.body = {\n        init: init,\n        repaint: repaint,\n        repaintCell: repaintCell,\n        repaintRow: repaintRow,\n        updateRowState: updateRowState,\n        updateRowStateAll: updateRowStateAll,\n        scrollTo: scrollTo,\n        blur: blur,\n        moveFocus: moveFocus,\n        inlineEdit: inlineEdit,\n        getExcelString: getExcelString,\n        toggleCollapse: toggleCollapse,\n        click: click,\n        dblClick: dblClick\n    };\n})();\n// ax5.ui.grid.collector\n(function () {\n\n    var GRID = ax5.ui.grid;\n\n    var U = ax5.util;\n\n    var sum = function sum() {\n        var value = 0,\n            i = this.list.length;\n        while (i--) {\n            if (!(\"__groupingList\" in this.list[i])) {\n                value += U.number(this.list[i][this.key]);\n            }\n        }\n        return value;\n    };\n\n    var avg = function avg() {\n        var value = 0,\n            i = this.list.length,\n            listLength = 0;\n        while (i--) {\n            if (!(\"__groupingList\" in this.list[i])) {\n                value += U.number(this.list[i][this.key]);\n                listLength++;\n            }\n        }\n        return U.number(value / (listLength || 1), { \"round\": 2 });\n    };\n\n    GRID.collector = {\n        sum: sum,\n        avg: avg\n    };\n})();\n// ax5.ui.grid.layout\n(function () {\n\n    var GRID = ax5.ui.grid,\n        U = ax5.util;\n\n    var init = function init() {};\n\n    var clearGroupingData = function clearGroupingData(_list) {\n        var i = 0,\n            l = _list.length,\n            returnList = [];\n        for (; i < l; i++) {\n            if (_list[i] && !_list[i][\"__isGrouping\"]) {\n                if (_list[i][this.config.columnKeys.selected]) {\n                    this.selectedDataIndexs.push(i);\n                }\n                returnList.push(jQuery.extend({}, _list[i]));\n            }\n        }\n        return returnList;\n    };\n\n    var initData = function initData(_list) {\n        this.selectedDataIndexs = [];\n        // this.deletedList = [];\n        // todo : deletedList 초기화 시점이 언제로 하는게 좋은가. set 메소드에서 초기화 하는 것으로 수정\n\n        var i = 0,\n            l = _list.length,\n            returnList = [],\n            appendIndex = 0,\n            dataRealRowCount = 0,\n            lineNumber = 0;\n\n        if (this.config.body.grouping) {\n\n            var groupingKeys = U.map(this.bodyGrouping.by, function () {\n                return {\n                    key: this,\n                    compareString: \"\",\n                    grouping: false,\n                    list: []\n                };\n            });\n\n            var gi = 0,\n                gl = groupingKeys.length,\n                compareString = void 0,\n                appendRow = [],\n                ari = void 0;\n            for (; i < l + 1; i++) {\n                gi = 0;\n\n                if (_list[i] && _list[i][this.config.columnKeys.deleted]) {\n                    this.deletedList.push(_list[i]);\n                } else {\n                    compareString = \"\"; // 그룹핑 구문검사용\n                    appendRow = []; // 현재줄 앞에 추가해줘야 하는 줄\n\n                    // 그룹핑 구문검사\n                    for (; gi < gl; gi++) {\n                        if (_list[i]) {\n                            compareString += \"$|$\" + _list[i][groupingKeys[gi].key];\n                        }\n\n                        if (appendIndex > 0 && compareString != groupingKeys[gi].compareString) {\n                            var appendRowItem = { keys: [], labels: [], list: groupingKeys[gi].list };\n                            for (var ki = 0; ki < gi + 1; ki++) {\n                                appendRowItem.keys.push(groupingKeys[ki].key);\n                                appendRowItem.labels.push(_list[i - 1][groupingKeys[ki].key]);\n                            }\n                            appendRow.push(appendRowItem);\n                            groupingKeys[gi].list = [];\n                        }\n\n                        groupingKeys[gi].list.push(_list[i]);\n                        groupingKeys[gi].compareString = compareString;\n                    }\n\n                    // 새로 추가해야할 그룹핑 row\n                    ari = appendRow.length;\n                    while (ari--) {\n                        returnList.push({ __isGrouping: true, __groupingList: appendRow[ari].list, __groupingBy: { keys: appendRow[ari].keys, labels: appendRow[ari].labels } });\n                    }\n                    //~ 그룹핑 구문 검사 완료\n\n                    if (_list[i]) {\n                        if (_list[i][this.config.columnKeys.selected]) {\n                            this.selectedDataIndexs.push(i);\n                        }\n                        // 그룹핑이 적용된 경우 오리지널 인덱스 의미 없음 : 정렬보다 그룹핑이 더 중요하므로.\n                        _list[i][\"__original_index\"] = _list[i][\"__index\"] = lineNumber;\n                        returnList.push(_list[i]);\n\n                        dataRealRowCount++;\n                        appendIndex++;\n                        lineNumber++;\n                    }\n                }\n            }\n        } else {\n            for (; i < l; i++) {\n                if (_list[i]) {\n                    if (_list[i][this.config.columnKeys.deleted]) {\n                        this.deletedList.push(_list[i]);\n                    } else {\n\n                        if (_list[i][this.config.columnKeys.selected]) {\n                            this.selectedDataIndexs.push(i);\n                        }\n\n                        // __original_index 인덱스 키가 없다면 추가.\n                        if (typeof _list[i][\"__original_index\"] === \"undefined\") {\n                            _list[i][\"__original_index\"] = lineNumber;\n                        }\n                        _list[i][\"__index\"] = lineNumber;\n                        dataRealRowCount++;\n                        lineNumber++;\n                        returnList.push(_list[i]);\n                    }\n                }\n            }\n        }\n\n        // 원본 데이터의 갯수\n        // grouping은 제외하고 수집됨.\n        this.xvar.dataRealRowCount = dataRealRowCount;\n        return returnList;\n    };\n\n    var arrangeData4tree = function arrangeData4tree(_list) {\n        this.selectedDataIndexs = [];\n        this.deletedList = [];\n        var i = 0,\n            seq = 0,\n            appendIndex = 0,\n            dataRealRowCount = 0,\n            lineNumber = 0;\n\n        var li = _list.length;\n        var keys = this.config.tree.columnKeys;\n        var hashDigit = this.config.tree.hashDigit;\n        var listIndexMap = {};\n\n        while (li--) {\n            delete _list[li][keys.parentHash];\n            delete _list[li][keys.selfHash];\n            //delete _list[li][keys.childrenLength];\n        }\n\n        /// 루트 아이템 수집\n        i = 0;\n        seq = 0;\n        li = _list.length;\n        for (; i < li; i++) {\n            if (_list[i]) {\n                listIndexMap[_list[i][keys.selfKey]] = i; // 인덱싱\n\n                if (U.isNothing(_list[i][keys.parentKey]) || _list[i][keys.parentKey] === \"top\") {\n                    // 최상위 아이템인 경우\n                    _list[i][keys.parentKey] = \"top\";\n                    _list[i][keys.children] = [];\n                    _list[i][keys.parentHash] = U.setDigit(\"0\", hashDigit);\n                    _list[i][keys.selfHash] = U.setDigit(\"0\", hashDigit) + \".\" + U.setDigit(seq, hashDigit);\n                    _list[i][keys.depth] = 0;\n                    _list[i][keys.hidden] = false;\n\n                    seq++;\n                }\n            }\n        }\n\n        /// 자식 아이템 수집\n        i = 0;\n        lineNumber = 0;\n        for (; i < li; i++) {\n            var _parent = void 0,\n                _parentHash = void 0;\n            if (_list[i] && _list[i][keys.parentKey] !== \"top\" && typeof _list[i][keys.parentHash] === \"undefined\") {\n\n                if (_parent = _list[listIndexMap[_list[i][keys.parentKey]]]) {\n                    _parentHash = _parent[keys.selfHash];\n                    _list[i][keys.children] = [];\n                    _list[i][keys.parentHash] = _parentHash;\n                    _list[i][keys.selfHash] = _parentHash + \".\" + U.setDigit(_parent[keys.children].length, hashDigit);\n                    _list[i][keys.depth] = _parent[keys.depth] + 1;\n                    if (_parent[keys.collapse] || _parent[keys.hidden]) _list[i][keys.hidden] = true;\n                    _parent[keys.children].push(_list[i][keys.selfKey]);\n                } else {\n                    _list[i][keys.parentKey] = \"top\";\n                    _list[i][keys.children] = [];\n                    _list[i][keys.parentHash] = U.setDigit(\"0\", hashDigit);\n                    _list[i][keys.selfHash] = U.setDigit(\"0\", hashDigit) + \".\" + U.setDigit(seq, hashDigit);\n                    _list[i][keys.hidden] = false;\n\n                    seq++;\n                }\n            }\n\n            if (_list[i]) {\n                if (_list[i][this.config.columnKeys.deleted]) {\n                    this.deletedList.push(_list[i]);\n                    _list[i][keys.hidden] = true;\n                } else if (_list[i][this.config.columnKeys.selected]) {\n                    this.selectedDataIndexs.push(i);\n                }\n\n                _list[i][\"__index\"] = lineNumber;\n                dataRealRowCount++;\n                lineNumber++;\n            }\n        }\n\n        this.listIndexMap = listIndexMap;\n        this.xvar.dataRealRowCount = dataRealRowCount;\n\n        return _list;\n    };\n\n    var getProxyList = function getProxyList(_list) {\n        var i = 0,\n            l = _list.length,\n            returnList = [];\n        for (; i < l; i++) {\n\n            if (_list[i] && !_list[i][this.config.tree.columnKeys.hidden]) {\n                _list[i].__origin_index__ = i;\n                returnList.push(_list[i]);\n            }\n        }\n        return returnList;\n    };\n\n    var set = function set(data) {\n\n        var list = void 0;\n        if (U.isArray(data)) {\n            this.page = null;\n            list = data;\n        } else if (\"page\" in data) {\n            this.page = jQuery.extend({}, data.page);\n            list = data.list;\n        }\n\n        // console.log(this.list.length);\n\n        if (this.config.tree.use) {\n            this.list = arrangeData4tree.call(this, list);\n            this.proxyList = getProxyList.call(this, sort.call(this, this.sortInfo, this.list));\n        } else {\n            this.proxyList = null;\n            this.list = initData.call(this, !this.config.remoteSort && Object.keys(this.sortInfo).length ? sort.call(this, this.sortInfo, list) : list);\n        }\n        this.selectedDataIndexs = [];\n        this.deletedList = [];\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = this.config.frozenRowIndex > this.list.length ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        this.xvar.virtualPaintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n\n        if (this.config.body.grouping) {}\n        return this;\n    };\n\n    var get = function get(_type) {\n        return {\n            list: this.list,\n            page: this.page\n        };\n    };\n\n    var getList = function getList(_type) {\n        var returnList = [];\n        //let list = (this.proxyList) ? this.proxyList : this.list;\n        var list = this.list;\n        var i = 0,\n            l = list.length;\n        switch (_type) {\n            case \"modified\":\n                for (; i < l; i++) {\n                    if (list[i] && !list[i][\"__isGrouping\"] && list[i][this.config.columnKeys.modified]) {\n                        returnList.push(jQuery.extend({}, list[i]));\n                    }\n                }\n                break;\n            case \"selected\":\n                for (; i < l; i++) {\n                    if (list[i] && !list[i][\"__isGrouping\"] && list[i][this.config.columnKeys.selected]) {\n                        returnList.push(jQuery.extend({}, list[i]));\n                    }\n                }\n                break;\n            case \"deleted\":\n                //_list = GRID.data.clearGroupingData(this.list);\n                returnList = [].concat(this.deletedList);\n                break;\n            default:\n                returnList = GRID.data.clearGroupingData.call(this, list);\n        }\n        return returnList;\n    };\n\n    var add = function add(_row, _dindex, _options) {\n        var list = this.config.body.grouping ? clearGroupingData.call(this, this.list) : this.list;\n        var processor = {\n            \"first\": function first() {\n                list = [].concat(_row).concat(list);\n            },\n            \"last\": function last() {\n                list = list.concat([].concat(_row));\n            }\n        };\n\n        if (this.config.tree.use) {\n            var _list2 = this.list.concat([].concat(_row));\n\n            this.list = arrangeData4tree.call(this, _list2);\n            this.proxyList = getProxyList.call(this, sort.call(this, this.sortInfo, this.list));\n        } else {\n            if (typeof _dindex === \"undefined\") _dindex = \"last\";\n            if (_dindex in processor) {\n                _row[this.config.columnKeys.modified] = true;\n                processor[_dindex].call(this, _row);\n            } else {\n                if (!U.isNumber(_dindex)) {\n                    throw 'invalid argument _dindex';\n                }\n                if (U.isArray(_row)) {\n                    for (var _i = 0, _l = _row.length; _i < _l; _i++) {\n                        list.splice(_dindex + _i, 0, _row[_i]);\n                    }\n                } else {\n                    list.splice(_dindex, 0, _row);\n                }\n            }\n\n            if (this.config.body.grouping) {\n                list = initData.call(this, sort.call(this, this.sortInfo, list));\n            } else if (_options && _options.sort && Object.keys(this.sortInfo).length) {\n                list = initData.call(this, sort.call(this, this.sortInfo, list));\n            } else {\n                list = initData.call(this, list);\n            }\n\n            this.list = list;\n        }\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = this.config.frozenRowIndex > this.list.length ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        this.xvar.virtualPaintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n        return this;\n    };\n\n    /**\n     * list에서 완전 제거 하는 경우 사용.\n     * ax5grid.data.remove\n     */\n    var remove = function remove(_dindex) {\n        var list = this.config.body.grouping ? clearGroupingData.call(this, this.list) : this.list;\n        var processor = {\n            \"first\": function first() {\n                if (this.config.tree.use) {\n                    processor.tree.call(this, 0);\n                } else {\n                    list.splice(0, 1);\n                }\n            },\n            \"last\": function last() {\n                if (this.config.tree.use) {\n                    processor.tree.call(this, list.length - 1);\n                } else {\n                    list.splice(list.length - 1, 1);\n                }\n            },\n            \"index\": function index(_dindex) {\n                if (this.config.tree.use) {\n                    processor.tree.call(this, _dindex);\n                } else {\n                    list.splice(_dindex, 1);\n                }\n            },\n            \"selected\": function selected() {\n                if (this.config.tree.use) {\n                    processor.tree.call(this, \"selected\");\n                } else {\n                    var __list = [],\n                        i = void 0,\n                        l = void 0;\n\n                    for (i = 0, l = list.length; i < l; i++) {\n                        if (!list[i][this.config.columnKeys.selected]) {\n                            __list.push(list[i]);\n                        }\n                    }\n                    list = __list;\n                    __list = null;\n                    i = null;\n                }\n            },\n            \"tree\": function tree(_dindex) {\n                var treeKeys = this.config.tree.columnKeys,\n                    selfHash = list[_dindex][this.config.tree.columnKeys.selfHash];\n                list = U.filter(list, function () {\n                    return this[treeKeys.selfHash].substr(0, selfHash.length) != selfHash;\n                });\n                treeKeys = null;\n                selfHash = null;\n            }\n        };\n\n        if (typeof _dindex === \"undefined\") _dindex = \"last\";\n        if (_dindex in processor) {\n            processor[_dindex].call(this, _dindex);\n        } else {\n            if (!U.isNumber(_dindex)) {\n                throw 'invalid argument _dindex';\n            }\n            processor[\"index\"].call(this, _dindex);\n        }\n\n        if (this.config.tree.use) {\n            this.list = arrangeData4tree.call(this, list);\n            this.proxyList = getProxyList.call(this, sort.call(this, this.sortInfo, this.list));\n        } else {\n            if (this.config.body.grouping) {\n                list = initData.call(this, sort.call(this, this.sortInfo, list));\n            } else if (Object.keys(this.sortInfo).length) {\n                list = initData.call(this, sort.call(this, this.sortInfo, list));\n            } else {\n                list = initData.call(this, list);\n            }\n            this.list = list;\n        }\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = this.config.frozenRowIndex > this.list.length ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        this.xvar.virtualPaintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n        return this;\n    };\n\n    /**\n     * list에서 deleted 처리 repaint\n     * ax5grid.data.deleteRow\n     */\n    var deleteRow = function deleteRow(_dindex) {\n        var list = this.config.body.grouping ? clearGroupingData.call(this, this.list) : this.list;\n        var processor = {\n            \"first\": function first() {\n                if (this.config.tree.use) {\n                    processor.tree.call(this, 0);\n                } else {\n                    list[0][this.config.columnKeys.deleted] = true;\n                }\n            },\n            \"last\": function last() {\n                if (this.config.tree.use) {\n                    processor.tree.call(this, list.length - 1);\n                } else {\n                    list[list.length - 1][this.config.columnKeys.deleted] = true;\n                }\n            },\n            \"selected\": function selected() {\n                if (this.config.tree.use) {\n                    processor.tree.call(this, \"selected\");\n                } else {\n                    var i = list.length;\n                    while (i--) {\n                        if (list[i][this.config.columnKeys.selected]) {\n                            list[i][this.config.columnKeys.deleted] = true;\n                        }\n                    }\n                    i = null;\n                }\n            },\n            \"tree\": function tree(_dindex) {\n                var keys = this.config.columnKeys,\n                    treeKeys = this.config.tree.columnKeys;\n\n                if (_dindex === \"selected\") {\n\n                    var i = list.length;\n                    while (i--) {\n                        if (list[i][this.config.columnKeys.selected]) {\n                            list[i][this.config.columnKeys.deleted] = true;\n\n                            var selfHash = list[i][treeKeys.selfHash];\n                            var ii = list.length;\n\n                            while (ii--) {\n                                if (list[ii][treeKeys.selfHash].substr(0, selfHash.length) === selfHash) {\n                                    list[ii][keys.deleted] = true;\n                                }\n                            }\n\n                            selfHash = null;\n                            ii = null;\n                        }\n                    }\n                    i = null;\n                } else {\n                    var _selfHash = list[_dindex][treeKeys.selfHash];\n                    var _i2 = list.length;\n                    while (_i2--) {\n                        if (list[_i2][treeKeys.selfHash].substr(0, _selfHash.length) !== _selfHash) {\n                            list[_i2][keys.deleted] = true;\n                        }\n                    }\n                    _selfHash = null;\n                    _i2 = null;\n                }\n\n                keys = null;\n                treeKeys = null;\n            }\n        };\n\n        if (typeof _dindex === \"undefined\") _dindex = \"last\";\n\n        if (_dindex in processor) {\n            processor[_dindex].call(this, _dindex);\n        } else {\n            if (!U.isNumber(_dindex)) {\n                throw 'invalid argument _dindex';\n            }\n            list[_dindex][this.config.columnKeys.deleted] = true;\n        }\n\n        if (this.config.tree.use) {\n            this.list = arrangeData4tree.call(this, list);\n            this.proxyList = getProxyList.call(this, sort.call(this, this.sortInfo, this.list));\n        } else {\n            if (this.config.body.grouping) {\n                list = initData.call(this, sort.call(this, this.sortInfo, list));\n            } else if (Object.keys(this.sortInfo).length) {\n                list = initData.call(this, sort.call(this, this.sortInfo, list));\n            } else {\n                list = initData.call(this, list);\n            }\n\n            this.list = list;\n        }\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = this.config.frozenRowIndex > this.list.length ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        this.xvar.virtualPaintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n        return this;\n    };\n\n    var update = function update(_row, _dindex) {\n        if (!U.isNumber(_dindex)) {\n            throw 'invalid argument _dindex';\n        }\n        //\n        this.needToPaintSum = true;\n        this.list.splice(_dindex, 1, _row);\n\n        if (this.config.body.grouping) {\n            this.list = initData.call(this, clearGroupingData.call(this, this.list));\n        }\n    };\n\n    var updateChild = function updateChild(_dindex, _updateData, _options) {\n        var keys = this.config.tree.columnKeys,\n            selfHash = void 0,\n            originIndex = void 0;\n\n        if (typeof _dindex === \"undefined\") return false;\n        originIndex = this.proxyList[_dindex].__origin_index__;\n\n        if (this.list[originIndex][keys.children]) {\n            this.proxyList = []; // 리셋 프록시\n\n            if (_options && _options.filter) {\n                if (_options.filter.call({ item: this.list[originIndex], dindex: originIndex }, this.list[originIndex])) {\n                    for (var _k in _updateData) {\n                        this.list[originIndex][_k] = _updateData[_k];\n                    }\n                }\n            } else {\n                for (var _k2 in _updateData) {\n                    this.list[originIndex][_k2] = _updateData[_k2];\n                }\n            }\n\n            selfHash = this.list[originIndex][keys.selfHash];\n\n            var i = 0,\n                l = this.list.length;\n            for (; i < l; i++) {\n                if (this.list[i]) {\n                    if (this.list[i][keys.parentHash].substr(0, selfHash.length) === selfHash) {\n\n                        if (_options && _options.filter) {\n                            if (_options.filter.call({ item: this.list[i], dindex: i }, this.list[i])) {\n                                for (var _k3 in _updateData) {\n                                    this.list[i][_k3] = _updateData[_k3];\n                                }\n                            }\n                        } else {\n                            for (var _k4 in _updateData) {\n                                this.list[i][_k4] = _updateData[_k4];\n                            }\n                        }\n                    }\n\n                    if (!this.list[i][keys.hidden]) {\n                        this.proxyList.push(this.list[i]);\n                    }\n                }\n            }\n\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    var setValue = function setValue(_dindex, _doindex, _key, _value) {\n        var originalValue = getValue.call(this, _dindex, _doindex, _key);\n        var list = this.list;\n        var listIndex = typeof _doindex === \"undefined\" ? _dindex : _doindex;\n        this.needToPaintSum = true;\n\n        if (originalValue !== _value) {\n            if (/[\\.\\[\\]]/.test(_key)) {\n                try {\n                    list[listIndex][this.config.columnKeys.modified] = true;\n                    Function(\"val\", \"this\" + GRID.util.getRealPathForDataItem(_key) + \" = val;\").call(list[listIndex], _value);\n                } catch (e) {}\n            } else {\n                list[listIndex][this.config.columnKeys.modified] = true;\n                list[listIndex][_key] = _value;\n            }\n\n            if (this.onDataChanged) {\n                this.onDataChanged.call({\n                    self: this,\n                    list: this.list,\n                    dindex: _dindex,\n                    doindex: _doindex,\n                    item: this.list[_dindex],\n                    key: _key,\n                    value: _value\n                });\n            }\n        }\n\n        return true;\n    };\n\n    var getValue = function getValue(_dindex, _doindex, _key, _value) {\n        var list = this.list;\n        var listIndex = typeof _doindex === \"undefined\" ? _dindex : _doindex;\n\n        if (/[\\.\\[\\]]/.test(_key)) {\n            try {\n                _value = Function(\"\", \"return this\" + GRID.util.getRealPathForDataItem(_key) + \";\").call(list[listIndex]);\n            } catch (e) {}\n        } else {\n            _value = list[listIndex][_key];\n        }\n        return _value;\n    };\n\n    var clearSelect = function clearSelect() {\n        this.selectedDataIndexs = [];\n    };\n\n    var select = function select(_dindex, _doindex, _selected, _options) {\n        var cfg = this.config;\n\n        if (typeof _doindex === \"undefined\") _doindex = _dindex;\n\n        if (!this.list[_doindex]) return false;\n        if (this.list[_doindex].__isGrouping) return false;\n        if (this.list[_doindex][cfg.columnKeys.disableSelection]) return false;\n\n        if (typeof _selected === \"undefined\") {\n            if (this.list[_doindex][cfg.columnKeys.selected] = !this.list[_doindex][cfg.columnKeys.selected]) {\n                this.selectedDataIndexs.push(_doindex);\n            } else {\n                this.selectedDataIndexs.splice(U.search(this.selectedDataIndexs, function () {\n                    return this == _doindex;\n                }), 1);\n            }\n        } else {\n            if (this.list[_doindex][cfg.columnKeys.selected] = _selected) {\n                this.selectedDataIndexs.push(_doindex);\n            } else {\n                this.selectedDataIndexs.splice(U.search(this.selectedDataIndexs, function () {\n                    return this == _doindex;\n                }), 1);\n            }\n        }\n\n        if (this.onDataChanged && _options && _options.internalCall) {\n            this.onDataChanged.call({\n                self: this,\n                list: this.list,\n                dindex: _dindex,\n                doindex: _doindex,\n                item: this.list[_doindex],\n                key: cfg.columnKeys.selected,\n                value: this.list[_doindex][cfg.columnKeys.selected]\n            });\n        }\n\n        return this.list[_doindex][cfg.columnKeys.selected];\n    };\n\n    var selectAll = function selectAll(_selected, _options) {\n        var cfg = this.config,\n            dindex = this.list.length;\n\n        this.selectedDataIndexs = [];\n\n        if (typeof _selected === \"undefined\") {\n            while (dindex--) {\n                if (this.list[dindex].__isGrouping) continue;\n                if (_options && _options.filter) {\n                    if (_options.filter.call(this.list[dindex]) !== true) {\n                        continue;\n                    }\n                }\n                if (this.list[dindex][cfg.columnKeys.disableSelection]) continue;\n\n                if (this.list[dindex][cfg.columnKeys.selected] = !this.list[dindex][cfg.columnKeys.selected]) {\n                    this.selectedDataIndexs.push(dindex);\n                }\n            }\n        } else {\n            while (dindex--) {\n                if (this.list[dindex].__isGrouping) continue;\n                if (_options && _options.filter) {\n                    if (_options.filter.call(this.list[dindex]) !== true) {\n                        continue;\n                    }\n                }\n                if (this.list[dindex][cfg.columnKeys.disableSelection]) continue;\n\n                if (this.list[dindex][cfg.columnKeys.selected] = _selected) {\n                    this.selectedDataIndexs.push(dindex);\n                }\n            }\n        }\n\n        if (this.onDataChanged && _options && _options.internalCall) {\n            this.onDataChanged.call({\n                self: this,\n                list: this.list\n            });\n        }\n\n        return this.list;\n    };\n\n    var sort = function sort(_sortInfo, _list, _options) {\n        var self = this,\n            list = _list || this.list,\n            sortInfoArray = [],\n            lineNumber = 0;\n        var getKeyValue = function getKeyValue(_item, _key, _value) {\n            if (/[\\.\\[\\]]/.test(_key)) {\n                try {\n                    _value = Function(\"\", \"return this\" + GRID.util.getRealPathForDataItem(_key) + \";\").call(_item);\n                } catch (e) {}\n            } else {\n                _value = _item[_key];\n            }\n            return _value;\n        };\n\n        for (var k in _sortInfo) {\n            sortInfoArray[_sortInfo[k].seq] = { key: k, order: _sortInfo[k].orderBy };\n        }\n        sortInfoArray = U.filter(sortInfoArray, function () {\n            return typeof this !== \"undefined\";\n        });\n\n        // 정렬조건이 없으면 original_index값을 이용하여 정렬처리\n        if (_options && _options.resetLineNumber && sortInfoArray.length === 0) {\n            sortInfoArray[0] = { key: '__original_index', order: \"asc\" };\n        }\n\n        var i = 0,\n            l = sortInfoArray.length,\n            _a_val = void 0,\n            _b_val = void 0;\n\n        list.sort(function (_a, _b) {\n            for (i = 0; i < l; i++) {\n                _a_val = getKeyValue(_a, sortInfoArray[i].key);\n                _b_val = getKeyValue(_b, sortInfoArray[i].key);\n\n                if ((typeof _a_val === 'undefined' ? 'undefined' : _typeof(_a_val)) !== (typeof _b_val === 'undefined' ? 'undefined' : _typeof(_b_val))) {\n                    _a_val = '' + _a_val;\n                    _b_val = '' + _b_val;\n                }\n                if (_a_val < _b_val) {\n                    return sortInfoArray[i].order === \"asc\" ? -1 : 1;\n                } else if (_a_val > _b_val) {\n                    return sortInfoArray[i].order === \"asc\" ? 1 : -1;\n                }\n            }\n        });\n\n        if (_options && _options.resetLineNumber) {\n            i = 0, l = list.length, lineNumber = 0;\n            for (; i < l; i++) {\n                if (_list[i] && !_list[i][\"__isGrouping\"]) {\n                    _list[i][\"__index\"] = lineNumber++;\n                }\n            }\n        }\n\n        if (_list) {\n            return list;\n        } else {\n            this.xvar.frozenRowIndex = this.config.frozenRowIndex > this.list.length ? this.list.length : this.config.frozenRowIndex;\n            this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n            this.xvar.virtualPaintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n            GRID.page.navigationUpdate.call(this);\n            return this;\n        }\n    };\n\n    var append = function append(_list, _callback) {\n        var self = this;\n\n        if (this.config.tree.use) {\n            var list = this.list.concat([].concat(_list));\n\n            this.list = arrangeData4tree.call(this, list);\n            this.proxyList = getProxyList.call(this, sort.call(this, this.sortInfo, this.list));\n            list = null;\n        } else {\n            this.list = this.list.concat([].concat(_list));\n        }\n\n        this.appendProgress = true;\n        GRID.page.statusUpdate.call(this);\n\n        if (this.appendDebouncer) {\n            if (self.appendDebounceTimes < this.config.debounceTime / 10) {\n                clearTimeout(this.appendDebouncer);\n                self.appendDebounceTimes++;\n            } else {\n                self.appendDebounceTimes = 0;\n                appendIdle.call(self);\n                _callback();\n                return false;\n            }\n        }\n\n        this.appendDebouncer = setTimeout(function () {\n            self.appendDebounceTimes = 0;\n            appendIdle.call(self);\n            _callback();\n        }, this.config.debounceTime);\n\n        // todo : append bounce animation\n    };\n\n    var appendIdle = function appendIdle() {\n        this.appendProgress = false;\n        if (this.config.body.grouping) {\n            this.list = initData.call(this, sort.call(this, this.sortInfo, this.list));\n        } else {\n            this.list = initData.call(this, this.list);\n        }\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = this.config.frozenRowIndex > this.list.length ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        this.xvar.virtualPaintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n    };\n\n    var toggleCollapse = function toggleCollapse(_dindex, _doindx, _collapse) {\n        var keys = this.config.tree.columnKeys,\n            selfHash = void 0,\n            originIndex = void 0;\n\n        if (typeof _dindex === \"undefined\") return false;\n        originIndex = this.proxyList[_dindex].__origin_index__;\n\n        if (this.list[originIndex][keys.children]) {\n            this.proxyList = []; // 리셋 프록시\n            if (typeof _collapse == \"undefined\") {\n                _collapse = !(this.list[originIndex][keys.collapse] || false);\n            }\n\n            this.list[originIndex][keys.collapse] = _collapse;\n            selfHash = this.list[originIndex][keys.selfHash];\n\n            var i = this.list.length;\n            while (i--) {\n                if (this.list[i]) {\n                    // console.log(this.list[i][keys.parentHash].substr(0, selfHash.length), selfHash);\n                    if (this.list[i][keys.parentHash].substr(0, selfHash.length) === selfHash) {\n                        this.list[i][keys.hidden] = _collapse;\n                    }\n\n                    if (!this.list[i][keys.hidden]) {\n                        this.proxyList.push(this.list[i]);\n                    }\n                }\n            }\n\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    GRID.data = {\n        init: init,\n        set: set,\n        get: get,\n        getList: getList,\n        getProxyList: getProxyList,\n        setValue: setValue,\n        getValue: getValue,\n        clearSelect: clearSelect,\n        select: select,\n        selectAll: selectAll,\n        add: add,\n        remove: remove,\n        deleteRow: deleteRow,\n        update: update,\n        updateChild: updateChild,\n        sort: sort,\n        initData: initData,\n        clearGroupingData: clearGroupingData,\n        append: append,\n        toggleCollapse: toggleCollapse\n    };\n})();\n/*\n * Copyright (c) 2016. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n// ax5.ui.grid.excel\n(function () {\n\n    var GRID = ax5.ui.grid;\n\n    var U = ax5.util;\n\n    var base64 = function base64(s) {\n        return window.btoa(unescape(encodeURIComponent(s)));\n    };\n\n    var uri = \"data:application/vnd.ms-excel;base64,\";\n\n    var getExcelTmpl = function getExcelTmpl() {\n        return '\\uFEFF\\n{{#tables}}{{{body}}}{{/tables}}\\n';\n    };\n\n    var tableToExcel = function tableToExcel(table, fileName) {\n        var link = void 0,\n            a = void 0,\n            output = void 0,\n            tables = [].concat(table);\n\n        output = ax5.mustache.render(getExcelTmpl(), {\n            worksheet: function () {\n                var arr = [];\n                tables.forEach(function (t, ti) {\n                    arr.push({ name: \"Sheet\" + (ti + 1) });\n                });\n                return arr;\n            }(),\n            tables: function () {\n                var arr = [];\n                tables.forEach(function (t, ti) {\n                    arr.push({ body: t });\n                });\n                return arr;\n            }()\n        });\n\n        var isChrome = navigator.userAgent.indexOf(\"Chrome\") > -1,\n            isSafari = !isChrome && navigator.userAgent.indexOf(\"Safari\") > -1,\n            isIE = /*@cc_on!@*/false || !!document.documentMode; // this works with IE10 and IE11 both :)\n\n        var blob1 = void 0,\n            blankWindow = void 0,\n            $iframe = void 0,\n            iframe = void 0,\n            anchor = void 0;\n\n        if (navigator.msSaveOrOpenBlob) {\n            blob1 = new Blob([output], { type: \"text/html\" });\n            window.navigator.msSaveOrOpenBlob(blob1, fileName);\n        } else if (isSafari) {\n            // 사파리는 지원이 안되므로 그냥 테이블을 클립보드에 복사처리\n            //tables\n            blankWindow = window.open('about:blank', this.id + '-excel-export', 'width=600,height=400');\n            blankWindow.document.write(output);\n            blankWindow = null;\n        } else {\n            if (isIE && typeof Blob === \"undefined\") {\n                //otherwise use the iframe and save\n                //requires a blank iframe on page called txtArea1\n                $iframe = jQuery('<iframe id=\"' + this.id + '-excel-export\" style=\"display:none\"></iframe>');\n                jQuery(document.body).append($iframe);\n\n                iframe = window[this.id + '-excel-export'];\n                iframe.document.open(\"text/html\", \"replace\");\n                iframe.document.write(output);\n                iframe.document.close();\n                iframe.focus();\n                iframe.document.execCommand(\"SaveAs\", true, fileName);\n                $iframe.remove();\n            } else {\n                // Attempt to use an alternative method\n                anchor = document.body.appendChild(document.createElement(\"a\"));\n\n                // If the [download] attribute is supported, try to use it\n                if (\"download\" in anchor) {\n                    anchor.download = fileName;\n                    anchor.href = URL.createObjectURL(new Blob([output], { type: 'text/csv' }));\n                    anchor.click();\n                    document.body.removeChild(anchor);\n                }\n            }\n        }\n\n        return true;\n    };\n\n    GRID.excel = {\n        export: tableToExcel\n    };\n})();\n// ax5.ui.grid.formatter\n(function () {\n\n    var GRID = ax5.ui.grid;\n\n    var U = ax5.util;\n\n    var money = function money() {\n        if (typeof this.value !== \"undefined\") {\n            var val = ('' + this.value).replace(/[^0-9^\\.^\\-]/g, \"\"),\n                regExpPattern = new RegExp('([0-9])([0-9][0-9][0-9][,.])'),\n                arrNumber = val.split('.'),\n                returnValue = void 0;\n\n            arrNumber[0] += '.';\n\n            do {\n                arrNumber[0] = arrNumber[0].replace(regExpPattern, '$1,$2');\n            } while (regExpPattern.test(arrNumber[0]));\n\n            return arrNumber.length > 1 ? arrNumber[0] + U.left(arrNumber[1], 2) : arrNumber[0].split('.')[0];\n        } else {\n            return \"\";\n        }\n    };\n\n    GRID.formatter = {\n        money: money\n    };\n})();\n// ax5.ui.grid.header\n(function () {\n\n    var GRID = ax5.ui.grid;\n\n    var U = ax5.util;\n\n    var columnResizerEvent = {\n        \"on\": function on(_columnResizer, _colIndex) {\n            var self = this;\n            var $columnResizer = $(_columnResizer);\n            var columnResizerPositionLeft = $columnResizer.offset().left;\n            var gridTargetOffsetLeft = self.$[\"container\"][\"root\"].offset().left;\n            self.xvar.columnResizerIndex = _colIndex;\n            var resizeRange = {\n                min: -self.colGroup[_colIndex]._width + 2,\n                max: self.$[\"container\"][\"root\"].width() - self.colGroup[_colIndex]._width\n            };\n\n            jQuery(document.body).bind(GRID.util.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                var mouseObj = GRID.util.getMousePosition(e);\n                self.xvar.__da = mouseObj.clientX - self.xvar.mousePosition.clientX;\n\n                if (resizeRange.min > self.xvar.__da) {\n                    self.xvar.__da = resizeRange.min;\n                } else if (resizeRange.max < self.xvar.__da) {\n                    self.xvar.__da = resizeRange.max;\n                }\n\n                if (!self.xvar.columnResizerLived) {\n                    self.$[\"resizer\"][\"horizontal\"].addClass(\"live\");\n                }\n                self.xvar.columnResizerLived = true;\n                self.$[\"resizer\"][\"horizontal\"].css({\n                    left: columnResizerPositionLeft + self.xvar.__da - gridTargetOffsetLeft\n                });\n            }).bind(GRID.util.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                columnResizerEvent.off.call(self);\n                U.stopEvent(e);\n            }).bind(\"mouseleave.ax5grid-\" + this.instanceId, function (e) {\n                columnResizerEvent.off.call(self);\n                U.stopEvent(e);\n            });\n\n            jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n        },\n        \"off\": function off() {\n            this.$[\"resizer\"][\"horizontal\"].removeClass(\"live\");\n            this.xvar.columnResizerLived = false;\n\n            if (typeof this.xvar.__da === \"undefined\") {} else {\n                this.setColumnWidth(this.colGroup[this.xvar.columnResizerIndex]._width + this.xvar.__da, this.xvar.columnResizerIndex);\n            }\n\n            jQuery(document.body).unbind(GRID.util.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId).unbind(GRID.util.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId).unbind(\"mouseleave.ax5grid-\" + this.instanceId);\n\n            jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n        }\n    };\n\n    var init = function init() {\n        // 헤더 초기화\n        var self = this;\n\n        this.$[\"container\"][\"header\"].on(\"click\", '[data-ax5grid-column-attr]', function (e) {\n            var key = this.getAttribute(\"data-ax5grid-column-key\"),\n                colIndex = this.getAttribute(\"data-ax5grid-column-colindex\"),\n\n            //rowIndex = this.getAttribute(\"data-ax5grid-column-rowindex\"),\n            col = self.colGroup[colIndex];\n\n            if (key === \"__checkbox_header__\" && self.config.header.selector) {\n                var selected = this.getAttribute(\"data-ax5grid-selected\");\n                selected = U.isNothing(selected) ? true : selected !== \"true\";\n\n                $(this).attr(\"data-ax5grid-selected\", selected);\n                self.selectAll({ selected: selected });\n\n                selected = null;\n            } else {\n                if (key && col && col.sortable !== false && !col.sortFixed) {\n                    if (col.sortable === true || self.config.sortable === true) {\n                        toggleSort.call(self, col.key);\n                    }\n                }\n            }\n\n            GRID.body.blur.call(self);\n\n            key = null;\n            colIndex = null;\n            col = null;\n        });\n        this.$[\"container\"][\"header\"].on(\"mousedown\", '[data-ax5grid-column-resizer]', function (e) {\n            var colIndex = this.getAttribute(\"data-ax5grid-column-resizer\");\n\n            self.xvar.mousePosition = GRID.util.getMousePosition(e);\n            columnResizerEvent.on.call(self, this, Number(colIndex));\n            U.stopEvent(e);\n\n            colIndex = null;\n        }).on(\"dragstart\", function (e) {\n            U.stopEvent(e);\n            return false;\n        });\n\n        resetFrozenColumn.call(this);\n    };\n\n    var resetFrozenColumn = function resetFrozenColumn() {\n        var cfg = this.config,\n            dividedHeaderObj = GRID.util.divideTableByFrozenColumnIndex(this.headerTable, this.xvar.frozenColumnIndex);\n\n        this.asideHeaderData = function (dataTable) {\n            var colGroup = [];\n            var data = { rows: [] };\n            for (var i = 0, l = dataTable.rows.length; i < l; i++) {\n                data.rows[i] = { cols: [] };\n                if (i === 0) {\n                    var col = {\n                        label: \"\",\n                        colspan: 1,\n                        rowspan: dataTable.rows.length,\n                        colIndex: null\n                    },\n                        _col = {};\n\n                    if (cfg.showLineNumber) {\n                        _col = jQuery.extend({}, col, {\n                            width: cfg.lineNumberColumnWidth,\n                            _width: cfg.lineNumberColumnWidth,\n                            columnAttr: \"lineNumber\",\n                            key: \"__index_header__\", label: \"&nbsp;\"\n                        });\n                        colGroup.push(_col);\n                        data.rows[i].cols.push(_col);\n                    }\n                    if (cfg.showRowSelector) {\n                        _col = jQuery.extend({}, col, {\n                            width: cfg.rowSelectorColumnWidth,\n                            _width: cfg.rowSelectorColumnWidth,\n                            columnAttr: \"rowSelector\",\n                            key: \"__checkbox_header__\", label: \"\"\n                        });\n                        colGroup.push(_col);\n                        data.rows[i].cols.push(_col);\n                    }\n\n                    col = null;\n                }\n            }\n\n            this.asideColGroup = colGroup;\n            return data;\n        }.call(this, this.headerTable);\n\n        this.leftHeaderData = dividedHeaderObj.leftData;\n        this.headerData = dividedHeaderObj.rightData;\n    };\n\n    var getFieldValue = function getFieldValue(_col) {\n        return _col.key === \"__checkbox_header__\" ? this.config.header.selector ? '<div class=\"checkBox\" style=\"max-height: ' + (_col.width - 10) + 'px;min-height: ' + (_col.width - 10) + 'px;\"></div>' : \"&nbsp;\" : _col.label || \"&nbsp;\";\n    };\n\n    var repaint = function repaint(_reset) {\n        var cfg = this.config,\n            colGroup = this.colGroup;\n\n        if (_reset) {\n            resetFrozenColumn.call(this);\n            this.xvar.paintStartRowIndex = undefined;\n            this.xvar.virtualPaintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        }\n        var asideHeaderData = this.asideHeaderData,\n            leftHeaderData = this.leftHeaderData,\n            headerData = this.headerData,\n            headerAlign = cfg.header.align;\n\n        // this.asideColGroup : asideHeaderData에서 처리 함.\n        this.leftHeaderColGroup = colGroup.slice(0, this.config.frozenColumnIndex);\n        this.headerColGroup = colGroup.slice(this.config.frozenColumnIndex);\n\n        var repaintHeader = function repaintHeader(_elTarget, _colGroup, _bodyRow) {\n            var tableWidth = 0,\n                SS = [];\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (var cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n                tableWidth += _colGroup[cgi]._width;\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (var tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                var trCSS_class = \"\";\n                SS.push('<tr class=\"' + trCSS_class + '\">');\n                for (var ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    var col = _bodyRow.rows[tri].cols[ci];\n                    var cellHeight = cfg.header.columnHeight * col.rowspan - cfg.header.columnBorderWidth;\n                    var colAlign = headerAlign || col.align;\n                    SS.push('<td ', 'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ', 'data-ax5grid-column-row=\"' + tri + '\" ', 'data-ax5grid-column-col=\"' + ci + '\" ', function () {\n                        return typeof col.key !== \"undefined\" ? 'data-ax5grid-column-key=\"' + col.key + '\" ' : '';\n                    }(), 'data-ax5grid-column-colindex=\"' + col.colIndex + '\" ', 'data-ax5grid-column-rowindex=\"' + col.rowIndex + '\" ', 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', 'class=\"' + function (_col) {\n                        var tdCSS_class = \"\";\n                        if (_col.headerStyleClass) {\n                            if (U.isFunction(_col.headerStyleClass)) {\n                                tdCSS_class += _col.headerStyleClass.call({\n                                    column: _col,\n                                    key: _col.key\n                                }) + \" \";\n                            } else {\n                                tdCSS_class += _col.headerStyleClass + \" \";\n                            }\n                        }\n                        if (cfg.header.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                        if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                        return tdCSS_class;\n                    }.call(this, col) + '\" ', 'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push(function () {\n                        // var lineHeight = (cfg.header.columnHeight - cfg.header.columnPadding * 2);\n                        return '<span data-ax5grid-cellHolder=\"\" ' + (colAlign ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') + ' >';\n                    }(), function () {\n                        var _SS = \"\";\n\n                        if (!U.isNothing(col.key) && !U.isNothing(col.colIndex) && (cfg.sortable === true || col.sortable === true) && col.sortable !== false) {\n                            _SS += '<span data-ax5grid-column-sort=\"' + col.colIndex + '\" data-ax5grid-column-sort-order=\"' + (colGroup[col.colIndex].sort || \"\") + '\" />';\n                        }\n                        return _SS;\n                    }(), getFieldValue.call(this, col), '</span>');\n\n                    if (!U.isNothing(col.colIndex)) {\n                        if (cfg.enableFilter) {\n                            SS.push('<span data-ax5grid-column-filter=\"' + col.colIndex + '\" data-ax5grid-column-filter-value=\"\"  />');\n                        }\n                    }\n\n                    SS.push('</td>');\n                }\n                SS.push('<td ', 'data-ax5grid-column-row=\"null\" ', 'data-ax5grid-column-col=\"null\" ', 'style=\"height: ' + cfg.header.columnHeight + 'px;min-height: 1px;\" ', '></td>');\n                SS.push('</tr>');\n            }\n            SS.push('</table>');\n            _elTarget.html(SS.join(''));\n\n            /// append column-resizer\n            (function () {\n                var resizerHeight = cfg.header.columnHeight * _bodyRow.rows.length - cfg.header.columnBorderWidth,\n                    resizerLeft = 0,\n                    AS = [];\n\n                for (var cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                    var col = _colGroup[cgi];\n                    if (!U.isNothing(col.colIndex)) {\n                        //_colGroup[cgi]._width\n                        resizerLeft += col._width;\n                        AS.push('<div data-ax5grid-column-resizer=\"' + col.colIndex + '\" style=\"height:' + resizerHeight + 'px;left: ' + (resizerLeft - 4) + 'px;\"  />');\n                    }\n                }\n                _elTarget.append(AS);\n            }).call(this);\n\n            return tableWidth;\n        };\n\n        if (cfg.asidePanelWidth > 0) {\n            repaintHeader.call(this, this.$.panel[\"aside-header\"], this.asideColGroup, asideHeaderData);\n        }\n        if (cfg.frozenColumnIndex > 0) {\n            repaintHeader.call(this, this.$.panel[\"left-header\"], this.leftHeaderColGroup, leftHeaderData);\n        }\n\n        this.xvar.scrollContentWidth = repaintHeader.call(this, this.$.panel[\"header-scroll\"], this.headerColGroup, headerData);\n\n        if (cfg.rightSum) {}\n    };\n\n    var scrollTo = function scrollTo(css) {\n        this.$.panel[\"header-scroll\"].css(css);\n        return this;\n    };\n\n    var toggleSort = function toggleSort(_key) {\n        var sortOrder = \"\",\n            sortInfo = {},\n            seq = 0;\n\n        for (var k in this.sortInfo) {\n            if (this.sortInfo[k].fixed) {\n                sortInfo[k] = this.sortInfo[k];\n                seq++;\n            }\n        }\n\n        for (var i = 0, l = this.colGroup.length; i < l; i++) {\n            if (this.colGroup[i].key == _key) {\n                if (sortOrder == \"\") {\n                    if (typeof this.colGroup[i].sort === \"undefined\") {\n                        sortOrder = \"desc\";\n                    } else if (this.colGroup[i].sort === \"desc\") {\n                        sortOrder = \"asc\";\n                    } else {\n                        sortOrder = undefined;\n                    }\n                }\n                this.colGroup[i].sort = sortOrder;\n            } else if (!this.config.multiSort) {\n                this.colGroup[i].sort = undefined;\n            }\n\n            if (typeof this.colGroup[i].sort !== \"undefined\") {\n                if (!sortInfo[this.colGroup[i].key]) {\n                    sortInfo[this.colGroup[i].key] = {\n                        seq: seq++,\n                        orderBy: this.colGroup[i].sort\n                    };\n                }\n            }\n        }\n\n        this.setColumnSort(sortInfo);\n        return this;\n    };\n\n    var applySortStatus = function applySortStatus(_sortInfo) {\n        for (var i = 0, l = this.colGroup.length; i < l; i++) {\n            for (var _key in _sortInfo) {\n                if (this.colGroup[i].key == _key) {\n                    this.colGroup[i].sort = _sortInfo[_key].orderBy;\n                }\n            }\n        }\n        return this;\n    };\n\n    var select = function select(_options) {\n        GRID.data.select.call(this, dindex, _options && _options.selected);\n        GRID.body.updateRowState.call(this, [\"selected\"], dindex);\n    };\n\n    var getExcelString = function getExcelString() {\n        var cfg = this.config,\n            colGroup = this.colGroup,\n            headerData = this.headerTable,\n            getHeader = function getHeader(_colGroup, _bodyRow) {\n            var SS = [];\n            //SS.push('<table border=\"1\">');\n            for (var tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('<tr>');\n                for (var ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    var col = _bodyRow.rows[tri].cols[ci];\n                    SS.push('<td ', 'colspan=\"' + col.colspan + '\" ', 'rowspan=\"' + col.rowspan + '\" ', '>', getFieldValue.call(this, col), '</td>');\n                }\n                SS.push('</tr>');\n            }\n            //SS.push('</table>');\n\n            return SS.join('');\n        };\n\n        return getHeader.call(this, colGroup, headerData);\n    };\n\n    GRID.header = {\n        init: init,\n        repaint: repaint,\n        scrollTo: scrollTo,\n        toggleSort: toggleSort,\n        applySortStatus: applySortStatus,\n        getExcelString: getExcelString\n    };\n})();\n// ax5.ui.grid.inlineEditor\n(function () {\n\n    var GRID = ax5.ui.grid;\n\n    var edit_text = {\n        useReturnToSave: true,\n        editMode: \"popup\",\n        getHtml: function getHtml(_root, _columnKey, _editor, _value) {\n            if (typeof _editor.attributes !== \"undefined\") {\n                var attributesText = \"\";\n                for (var k in _editor.attributes) {\n                    attributesText += ' ' + k + '=\\'' + _editor.attributes[k] + '\\'';\n                }\n            }\n            return '<input type=\"text\" data-ax5grid-editor=\"text\" value=\"' + _value + '\" ' + attributesText + '>';\n        },\n        init: function init(_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            $el.on(\"blur\", function () {\n                GRID.body.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey);\n            });\n            return $el;\n        },\n        bindUI: function bindUI(_root, _columnKey, _$el, _editor, _$parent, _value) {\n            _$el.focus().select();\n        }\n    };\n\n    var edit_money = {\n        useReturnToSave: true,\n        editMode: \"popup\",\n        getHtml: function getHtml(_root, _columnKey, _editor, _value) {\n            var attributesText = \"\";\n            if (typeof _editor.attributes !== \"undefined\") {\n                for (var k in _editor.attributes) {\n                    attributesText += ' ' + k + '=\\'' + _editor.attributes[k] + '\\'';\n                }\n            }\n            return '<input type=\"text\" data-ax5grid-editor=\"money\" value=\"' + _value + '\" ' + attributesText + '\" />';\n        },\n        init: function init(_root, _columnKey, _editor, _$parent, _value) {\n            var $el = void 0;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            $el.on(\"blur\", function () {\n                GRID.body.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey);\n            });\n            return $el;\n        },\n        bindUI: function bindUI(_root, _columnKey, _$el, _editor, _$parent, _value) {\n            _$el.data(\"binded-ax5ui\", \"ax5formater\");\n            _$el.ax5formatter($.extend(true, {\n                pattern: \"money\"\n            }, _editor.config));\n            _$el.focus().select();\n        }\n    };\n\n    var edit_number = {\n        useReturnToSave: true,\n        editMode: \"popup\",\n        getHtml: function getHtml(_root, _columnKey, _editor, _value) {\n            var attributesText = \"\";\n            if (typeof _editor.attributes !== \"undefined\") {\n                for (var k in _editor.attributes) {\n                    attributesText += ' ' + k + '=\\'' + _editor.attributes[k] + '\\'';\n                }\n            }\n            return '<input type=\"text\" data-ax5grid-editor=\"number\" value=\"' + _value + '\" ' + attributesText + '\" />';\n        },\n        init: function init(_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            $el.on(\"blur\", function () {\n                GRID.body.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey);\n            });\n            return $el;\n        },\n        bindUI: function bindUI(_root, _columnKey, _$el, _editor, _$parent, _value) {\n            _$el.data(\"binded-ax5ui\", \"ax5formater\");\n            _$el.ax5formatter($.extend(true, {\n                pattern: \"number\"\n            }, _editor.config));\n            _$el.focus().select();\n        }\n    };\n\n    var edit_date = {\n        useReturnToSave: true,\n        editMode: \"popup\",\n        getHtml: function getHtml(_root, _columnKey, _editor, _value) {\n            return '<input type=\"text\" data-ax5grid-editor=\"calendar\" value=\"' + _value + '\" >';\n        },\n        init: function init(_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            return $el;\n        },\n        bindUI: function bindUI(_root, _columnKey, _$el, _editor, _$parent, _value) {\n            var self = _root;\n            _$el.data(\"binded-ax5ui\", \"ax5picker\");\n\n            _$el.ax5picker($.extend(true, {\n                direction: \"auto\",\n                content: {\n                    type: 'date',\n                    formatter: {\n                        pattern: 'date'\n                    }\n                },\n                onStateChanged: function onStateChanged() {\n                    if (this.state == \"open\") {\n                        this.self.activePicker.attr(\"data-ax5grid-inline-edit-picker\", \"date\");\n                    } else if (this.state == \"close\") {\n                        GRID.body.inlineEdit.deActive.call(self, \"RETURN\", _columnKey);\n                    }\n                }\n            }, _editor.config));\n\n            _$el.focus().select();\n        }\n    };\n\n    var edit_select = {\n        useReturnToSave: false,\n        editMode: \"popup\",\n        getHtml: function getHtml(_root, _columnKey, _editor, _value) {\n            var po = [];\n            po.push('<div data-ax5select=\"ax5grid-editor\" data-ax5select-config=\"{}\">');\n            po.push('</div>');\n\n            return po.join('');\n        },\n        init: function init(_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            return $el;\n        },\n        bindUI: function bindUI(_root, _columnKey, _$el, _editor, _$parent, _value) {\n            var eConfig = {\n                columnKeys: {\n                    optionValue: \"value\",\n                    optionText: \"text\",\n                    optionSelected: \"selected\"\n                }\n            };\n            jQuery.extend(true, eConfig, _editor.config);\n\n            eConfig.options.forEach(function (n) {\n                if (n[eConfig.columnKeys.optionValue] == _value) n[eConfig.columnKeys.optionSelected] = true;\n            });\n\n            var self = _root;\n            _$el.data(\"binded-ax5ui\", \"ax5select\");\n            _$el.ax5select($.extend(true, {\n                tabIndex: 1,\n                direction: \"auto\",\n                columnKeys: eConfig.columnKeys,\n                options: eConfig.options,\n                onStateChanged: function onStateChanged() {\n                    if (this.state == \"open\") {\n                        this.self.activeSelectOptionGroup.attr(\"data-ax5grid-inline-edit-picker\", \"select\");\n                    } else if (this.state == \"changeValue\") {\n                        GRID.body.inlineEdit.deActive.call(self, \"RETURN\", _columnKey, this.value[0][eConfig.columnKeys.optionValue]);\n                    } else if (this.state == \"close\") {\n                        GRID.body.inlineEdit.deActive.call(self, \"ESC\", _columnKey);\n                    }\n                }\n            }, _editor.config));\n            _$el.ax5select(\"open\");\n            _$el.ax5select(\"setValue\", _value);\n            _$el.find(\"a\").focus();\n        }\n    };\n\n    var edit_checkbox = {\n        editMode: \"inline\",\n        getHtml: function getHtml(_root, _editor, _value) {\n\n            var lineHeight = _root.config.body.columnHeight - _root.config.body.columnPadding * 2 - _root.config.body.columnBorderWidth;\n            var checked;\n            if (_editor.config && _editor.config.trueValue) {\n                checked = _value == _editor.config.trueValue ? \"true\" : \"false\";\n            } else {\n                checked = _value == false || _value == \"false\" || _value < \"1\" ? \"false\" : \"true\";\n            }\n\n            var eConfig = {\n                marginTop: 2,\n                height: lineHeight - 4\n            };\n            jQuery.extend(true, eConfig, _editor.config);\n            eConfig.marginTop = (lineHeight - eConfig.height) / 2;\n\n            return '<div data-ax5grid-editor=\"checkbox\" data-ax5grid-checked=\"' + checked + '\" style=\"height:' + eConfig.height + 'px;width:' + eConfig.height + 'px;\"></div>';\n        }\n    };\n\n    var edit_textarea = {\n        useReturnToSave: false,\n        editMode: \"popup\",\n        _getHtml: function _getHtml(_root, _columnKey, _editor, _value) {\n            // init 에서 사용하게 될 HTML 태그를 만들어 줍니다.\n            return '<div data-ax5grid-editor=\"textarea\"></div>';\n        },\n        _bindUI: function _bindUI(_root, _columnKey, _$el, _editor, _$parent, _value) {\n            // 위치와 크기를 구합니다.\n            var offset = _$el.offset();\n            var box = {\n                width: _$el.width()\n            };\n            var editorHeight = 150;\n            var buttonHeight = 30;\n\n            // 새로운 엘리먼트 생성\n            var $newDiv = jQuery('<div data-ax5grid-popup=\"textarea\" style=\"z-index: 9999;\">\\n    <textarea style=\"width:100%;height:' + (editorHeight - buttonHeight) + 'px;\" class=\"form-control\">' + _value + '</textarea>\\n    <div style=\"height:' + buttonHeight + 'px;padding:5px;text-align: right;\">\\n        <button class=\"btn btn-default\">OK</button>\\n    </div>\\n</div>');\n            var $newTextarea = $newDiv.find(\"textarea\");\n            // 엘리먼트에 CSS 적용\n            $newDiv.css({\n                position: \"absolute\",\n                left: offset.left,\n                top: offset.top,\n                width: box.width,\n                height: editorHeight\n            });\n            $newDiv.find(\"textarea\");\n\n            // 새로운 엘리먼트를 document.body에 append\n            jQuery(document.body).append($newDiv);\n            $newTextarea.focus().select();\n\n            $newTextarea.on(\"blur\", function (e) {\n                GRID.body.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey, this.value);\n                $newDiv.remove();\n                ax5.util.stopEvent(e.originalEvent);\n            });\n            $newTextarea.on(\"keydown\", function (e) {\n                if (e.which == ax5.info.eventKeys.ESC) {\n                    GRID.body.inlineEdit.deActive.call(_root, \"ESC\", _columnKey);\n                    $newDiv.remove();\n                    ax5.util.stopEvent(e.originalEvent);\n                }\n            });\n\n            /// 값 변경\n            /// GRID.body.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey, this.value[0][eConfig.columnKeys.optionValue]);\n            /// 에디팅 취소\n            /// GRID.body.inlineEdit.deActive.call(_root, \"ESC\", _columnKey);\n        },\n\n        init: function init(_root, _columnKey, _editor, _$parent, _value) {\n            // 인라인 에디팅 활성화 시작\n            /**\n             * _root : gridInstance\n             * _columnKey : di + \"_\" + col.colIndex + \"_\" + col.rowIndex\n             * _editor : col.editor\n             * _$parent : 셀\n             * _value : 값\n             */\n            var $el = void 0;\n            _$parent.append($el = jQuery(this._getHtml(_root, _columnKey, _editor, _value)));\n            // 셀에 HTML 컨텐츠 추가\n\n            this._bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            // 이벤트 바인딩\n\n            return $el;\n        }\n    };\n\n    GRID.inlineEditor = {\n        \"text\": edit_text,\n        \"money\": edit_money,\n        \"number\": edit_number,\n        \"date\": edit_date,\n        \"select\": edit_select,\n        \"checkbox\": edit_checkbox,\n        \"textarea\": edit_textarea\n    };\n})();\n// ax5.ui.grid.page\n(function () {\n\n    var GRID = ax5.ui.grid;\n\n    var U = ax5.util;\n\n    var onclickPageMove = function onclickPageMove(_act) {\n        var callback = function callback(_pageNo) {\n            if (this.page.currentPage != _pageNo) {\n                this.page.selectPage = _pageNo;\n                if (this.config.page.onChange) {\n                    this.config.page.onChange.call({\n                        self: this,\n                        page: this.page,\n                        data: this.data\n                    });\n                }\n            }\n        };\n        var processor = {\n            \"first\": function first() {\n                callback.call(this, 0);\n            },\n            \"prev\": function prev() {\n                var pageNo = this.page.currentPage - 1;\n                if (pageNo < 0) pageNo = 0;\n                callback.call(this, pageNo);\n            },\n            \"next\": function next() {\n                var pageNo = this.page.currentPage + 1;\n                if (pageNo > this.page.totalPages - 1) pageNo = this.page.totalPages - 1;\n                callback.call(this, pageNo);\n            },\n            \"last\": function last() {\n                callback.call(this, this.page.totalPages - 1);\n            }\n        };\n\n        if (_act in processor) {\n            processor[_act].call(this);\n        } else {\n            callback.call(this, _act - 1);\n        }\n    };\n\n    var navigationUpdate = function navigationUpdate() {\n        var self = this;\n        if (this.page) {\n            var page = {\n                hasPage: false,\n                currentPage: this.page.currentPage,\n                pageSize: this.page.pageSize,\n                totalElements: this.page.totalElements,\n                totalPages: this.page.totalPages,\n                firstIcon: this.config.page.firstIcon,\n                prevIcon: this.config.page.prevIcon || \"«\",\n                nextIcon: this.config.page.nextIcon || \"»\",\n                lastIcon: this.config.page.lastIcon\n            };\n            var navigationItemCount = this.config.page.navigationItemCount;\n\n            page[\"@paging\"] = function () {\n                var returns = [],\n                    startI = void 0,\n                    endI = void 0;\n\n                startI = page.currentPage - Math.floor(navigationItemCount / 2);\n                if (startI < 0) startI = 0;\n                endI = page.currentPage + navigationItemCount;\n                if (endI > page.totalPages) endI = page.totalPages;\n\n                if (endI - startI > navigationItemCount) {\n                    endI = startI + navigationItemCount;\n                }\n\n                if (endI - startI < navigationItemCount) {\n                    startI = endI - navigationItemCount;\n                }\n                if (startI < 0) startI = 0;\n\n                for (var p = startI, l = endI; p < l; p++) {\n                    returns.push({ 'pageNo': p + 1, 'selected': page.currentPage == p });\n                }\n                return returns;\n            }();\n\n            if (page[\"@paging\"].length > 0) {\n                page.hasPage = true;\n            }\n\n            this.$[\"page\"][\"navigation\"].html(GRID.tmpl.get(\"page_navigation\", page));\n            this.$[\"page\"][\"navigation\"].find(\"[data-ax5grid-page-move]\").on(\"click\", function () {\n                onclickPageMove.call(self, this.getAttribute(\"data-ax5grid-page-move\"));\n            });\n        } else {\n            this.$[\"page\"][\"navigation\"].empty();\n        }\n    };\n\n    var statusUpdate = function statusUpdate() {\n        if (!this.config.page.statusDisplay) {\n            return;\n        }\n\n        var toRowIndex = void 0,\n            rangeCount = Math.min(this.xvar.dataRowCount, this.xvar.virtualPaintRowCount);\n        var data = {};\n\n        toRowIndex = this.xvar.virtualPaintStartRowIndex + rangeCount;\n\n        if (toRowIndex > this.xvar.dataRowCount) {\n            toRowIndex = this.xvar.dataRowCount;\n        }\n\n        data.fromRowIndex = U.number(this.xvar.virtualPaintStartRowIndex + 1, { \"money\": true });\n        data.toRowIndex = U.number(toRowIndex, { \"money\": true });\n        data.totalElements = false;\n        data.dataRealRowCount = this.xvar.dataRowCount !== this.xvar.dataRealRowCount ? U.number(this.xvar.dataRealRowCount, { \"money\": true }) : false;\n        data.dataRowCount = U.number(this.xvar.dataRowCount, { \"money\": true });\n        data.progress = this.appendProgress ? this.config.appendProgressIcon : \"\";\n\n        if (this.page) {\n            data.fromRowIndex_page = U.number(this.xvar.virtualPaintStartRowIndex + this.page.currentPage * this.page.pageSize + 1, { \"money\": true });\n            data.toRowIndex_page = U.number(this.xvar.virtualPaintStartRowIndex + rangeCount + this.page.currentPage * this.page.pageSize, { \"money\": true });\n            data.totalElements = U.number(this.page.totalElements, { \"money\": true });\n\n            if (data.toRowIndex_page > this.page.totalElements) {\n                data.toRowIndex_page = this.page.totalElements;\n            }\n        }\n\n        this.$[\"page\"][\"status\"].html(GRID.tmpl.get(\"page_status\", data));\n    };\n\n    GRID.page = {\n        navigationUpdate: navigationUpdate,\n        statusUpdate: statusUpdate\n    };\n})();\n// ax5.ui.grid.scroller\n(function () {\n\n    var GRID = ax5.ui.grid;\n\n    var U = ax5.util;\n\n    var convertScrollPosition = {\n        \"vertical\": function vertical(css, _var) {\n            var _content_height = _var._content_height - _var._panel_height,\n                _scroller_height = _var._vertical_scroller_height - _var.verticalScrollBarHeight,\n                top = _content_height * css.top / _scroller_height;\n\n            if (top < 0) top = 0;else if (_content_height < top) {\n                top = _content_height;\n            }\n            return {\n                top: -top\n            };\n        },\n        \"horizontal\": function horizontal(css, _var) {\n            var _content_width = _var._content_width - _var._panel_width,\n                _scroller_width = _var._horizontal_scroller_width - _var.horizontalScrollBarWidth,\n                left = _content_width * css.left / _scroller_width;\n\n            if (left < 0) left = 0;else if (_content_width < left) {\n                left = _content_width;\n            }\n            return {\n                left: -left\n            };\n        }\n    };\n\n    var convertScrollBarPosition = {\n        \"vertical\": function vertical(_top, _var) {\n\n            var self = this,\n                type = \"vertical\",\n                _content_height = _var._content_height - _var._panel_height,\n                _scroller_height = _var._vertical_scroller_height - _var.verticalScrollBarHeight,\n                top = _scroller_height * _top / _content_height,\n                scrollPositon = void 0;\n\n            if (-top > _scroller_height) {\n                top = -_scroller_height;\n\n                scrollPositon = convertScrollPosition[type].call(this, { top: -top }, {\n                    _content_width: _var._content_width,\n                    _content_height: _var._content_height,\n                    _panel_width: _var._panel_width,\n                    _panel_height: _var._panel_height,\n                    _horizontal_scroller_width: _var._horizontal_scroller_width,\n                    _vertical_scroller_height: _var._vertical_scroller_height,\n                    verticalScrollBarHeight: _var.verticalScrollBarHeight,\n                    horizontalScrollBarWidth: _var.horizontalScrollBarWidth\n                });\n\n                GRID.body.scrollTo.call(self, scrollPositon);\n            }\n\n            return -top;\n        },\n        \"horizontal\": function horizontal(_left, _var) {\n            var self = this,\n                type = \"horizontal\",\n                _content_width = _var._content_width - _var._panel_width,\n                _scroller_width = _var._horizontal_scroller_width - _var.horizontalScrollBarWidth,\n                left = _scroller_width * _left / _content_width,\n                scrollPositon = void 0;\n\n            if (-left > _scroller_width) {\n                left = -_scroller_width;\n                scrollPositon = convertScrollPosition[type].call(this, { left: -left }, {\n                    _content_width: _var._content_width,\n                    _content_height: _var._content_height,\n                    _panel_width: _var._panel_width,\n                    _panel_height: _var._panel_height,\n                    _horizontal_scroller_width: _var._horizontal_scroller_width,\n                    _vertical_scroller_height: _var._vertical_scroller_height,\n                    verticalScrollBarHeight: _var.verticalScrollBarHeight,\n                    horizontalScrollBarWidth: _var.horizontalScrollBarWidth\n                });\n\n                GRID.header.scrollTo.call(self, scrollPositon);\n                GRID.body.scrollTo.call(self, scrollPositon);\n            }\n\n            return -left;\n        }\n    };\n\n    var scrollBarMover = {\n        \"click\": function click(track, bar, type, e) {\n\n            // 마우스 무브 완료 타임과 클릭타임 차이가 20 보다 작으면 클릭이벤트 막기.\n            if (new Date().getTime() - GRID.scroller.moveout_timer < 20) {\n                return false;\n            }\n\n            var self = this,\n                trackOffset = track.offset(),\n                barBox = {\n                width: bar.outerWidth(), height: bar.outerHeight()\n            },\n                trackBox = {\n                width: track.innerWidth(), height: track.innerHeight()\n            },\n                _vertical_scroller_height = self.$[\"scroller\"][\"vertical\"].innerHeight(),\n                _panel_height = self.$[\"panel\"][\"body\"].height(),\n                _horizontal_scroller_width = self.$[\"scroller\"][\"horizontal\"].innerWidth(),\n                _panel_width = self.$[\"panel\"][\"body\"].width(),\n                _content_height = self.xvar.scrollContentHeight,\n                _content_width = self.xvar.scrollContentWidth,\n                verticalScrollBarHeight = self.$[\"scroller\"][\"vertical-bar\"].outerHeight(),\n                horizontalScrollBarWidth = self.$[\"scroller\"][\"horizontal-bar\"].outerWidth(),\n                getScrollerPosition = {\n                \"vertical\": function vertical(e) {\n                    var mouseObj = GRID.util.getMousePosition(e);\n                    // track을 벗어 나지 안도록 범위 체크\n                    var newTop = mouseObj.clientY - trackOffset.top;\n                    if (newTop < 0) {\n                        newTop = 0;\n                    } else if (newTop + barBox.height > trackBox.height) {\n                        newTop = trackBox.height - barBox.height;\n                    }\n                    return { top: newTop };\n                },\n                \"horizontal\": function horizontal(e) {\n                    var mouseObj = GRID.util.getMousePosition(e);\n                    // track을 벗어 나지 안도록 범위 체크\n                    var newLeft = mouseObj.clientX - trackOffset.left;\n                    if (newLeft < 0) {\n                        newLeft = 0;\n                    } else if (newLeft + barBox.width > trackBox.width) {\n                        newLeft = trackBox.width - barBox.width;\n                    }\n                    return { left: newLeft };\n                }\n            },\n                css = getScrollerPosition[type](e);\n\n            bar.css(css);\n\n            var scrollPositon = convertScrollPosition[type].call(self, css, {\n                _content_width: _content_width,\n                _content_height: _content_height,\n                _panel_width: _panel_width,\n                _panel_height: _panel_height,\n                _horizontal_scroller_width: _horizontal_scroller_width,\n                _vertical_scroller_height: _vertical_scroller_height,\n                verticalScrollBarHeight: verticalScrollBarHeight,\n                horizontalScrollBarWidth: horizontalScrollBarWidth\n            });\n            if (type === \"horizontal\") GRID.header.scrollTo.call(self, scrollPositon);\n            GRID.body.scrollTo.call(self, scrollPositon);\n\n            scrollPositon = null;\n        },\n        \"on\": function on(track, bar, type, e) {\n            var self = this,\n                barOffset = bar.position(),\n                barBox = {\n                width: bar.outerWidth(), height: bar.outerHeight()\n            },\n                trackBox = {\n                width: track.innerWidth(), height: track.innerHeight()\n            },\n                _vertical_scroller_height = self.$[\"scroller\"][\"vertical\"].innerHeight(),\n                _panel_height = self.$[\"panel\"][\"body\"].height(),\n                _horizontal_scroller_width = self.$[\"scroller\"][\"horizontal\"].innerWidth(),\n                _panel_width = self.$[\"panel\"][\"body\"].width(),\n                _content_height = self.xvar.scrollContentHeight,\n                _content_width = self.xvar.scrollContentWidth,\n                verticalScrollBarHeight = self.$[\"scroller\"][\"vertical-bar\"].outerHeight(),\n                horizontalScrollBarWidth = self.$[\"scroller\"][\"horizontal-bar\"].outerWidth(),\n                getScrollerPosition = {\n                \"vertical\": function vertical(e) {\n                    var mouseObj = GRID.util.getMousePosition(e);\n                    self.xvar.__da = mouseObj.clientY - self.xvar.mousePosition.clientY;\n                    // track을 벗어 나지 안도록 범위 체크\n                    var newTop = barOffset.top + self.xvar.__da;\n                    if (newTop < 0) {\n                        newTop = 0;\n                    } else if (newTop + barBox.height > trackBox.height) {\n                        newTop = trackBox.height - barBox.height;\n                    }\n                    return { top: newTop };\n                },\n                \"horizontal\": function horizontal(e) {\n                    var mouseObj = GRID.util.getMousePosition(e);\n                    self.xvar.__da = mouseObj.clientX - self.xvar.mousePosition.clientX;\n                    // track을 벗어 나지 안도록 범위 체크\n                    var newLeft = barOffset.left + self.xvar.__da;\n                    if (newLeft < 0) {\n                        newLeft = 0;\n                    } else if (newLeft + barBox.width > trackBox.width) {\n                        newLeft = trackBox.width - barBox.width;\n                    }\n                    return { left: newLeft };\n                }\n            };\n\n            self.xvar.__da = 0; // 이동량 변수 초기화 (계산이 잘못 될까바)\n\n            jQuery(document.body).bind(GRID.util.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                var css = getScrollerPosition[type](e);\n                bar.css(css);\n\n                var scrollPositon = convertScrollPosition[type].call(self, css, {\n                    _content_width: _content_width,\n                    _content_height: _content_height,\n                    _panel_width: _panel_width,\n                    _panel_height: _panel_height,\n                    _horizontal_scroller_width: _horizontal_scroller_width,\n                    _vertical_scroller_height: _vertical_scroller_height,\n                    verticalScrollBarHeight: verticalScrollBarHeight,\n                    horizontalScrollBarWidth: horizontalScrollBarWidth\n                });\n\n                if (type === \"horizontal\") GRID.header.scrollTo.call(self, scrollPositon);\n\n                GRID.body.scrollTo.call(self, scrollPositon);\n            }).bind(GRID.util.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                scrollBarMover.off.call(self, e);\n            }).bind(\"mouseleave.ax5grid-\" + this.instanceId, function (e) {\n                scrollBarMover.off.call(self, e);\n            });\n\n            jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n        },\n        \"off\": function off(e) {\n            ax5.util.stopEvent(e.originalEvent);\n            GRID.scroller.moveout_timer = new Date().getTime();\n\n            jQuery(document.body).unbind(GRID.util.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId).unbind(GRID.util.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId).unbind(\"mouseleave.ax5grid-\" + this.instanceId);\n\n            jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n        }\n    };\n\n    var scrollContentMover = {\n        \"wheel\": function wheel(delta) {\n            var self = this,\n                _body_scroll_position = self.$[\"panel\"][\"body-scroll\"].position(),\n                _panel_height = self.xvar.body_panel_height,\n                _panel_width = self.xvar.body_panel_width,\n                _content_height = self.xvar.scrollContentHeight,\n                _content_width = self.xvar.scrollContentWidth;\n\n            if (isNaN(_content_height) || isNaN(_content_width)) {\n                return false;\n            }\n\n            var newLeft = void 0,\n                newTop = void 0,\n                _top_is_end = false,\n                _left_is_end = false;\n\n            newLeft = _body_scroll_position.left - delta.x;\n            newTop = _body_scroll_position.top - delta.y;\n\n            // newTop이 범위를 넘었는지 체크\n            if (newTop >= 0) {\n                newTop = 0;\n                _top_is_end = true;\n            } else if (newTop <= _panel_height - _content_height) {\n                newTop = _panel_height - _content_height;\n                if (newTop >= 0) newTop = 0;\n                _top_is_end = true;\n            } else {\n                if (delta.y == 0) _top_is_end = true;\n            }\n\n            // newLeft이 범위를 넘었는지 체크\n            if (newLeft >= 0) {\n                newLeft = 0;\n                _left_is_end = true;\n            } else if (newLeft <= _panel_width - _content_width) {\n                newLeft = _panel_width - _content_width;\n                if (newLeft >= 0) newLeft = 0;\n                _left_is_end = true;\n            } else {\n                if (delta.x == 0) _left_is_end = true;\n            }\n\n            GRID.header.scrollTo.call(self, { left: newLeft });\n            GRID.body.scrollTo.call(self, { left: newLeft, top: newTop }, {\n                callback: function callback() {\n                    resize.call(self);\n                }\n            });\n\n            return !_top_is_end || !_left_is_end;\n        },\n        \"on\": function on() {\n            var self = this,\n                _body_scroll_position = self.$[\"panel\"][\"body-scroll\"].position(),\n                _panel_height = self.xvar.body_panel_height,\n                _panel_width = self.xvar.body_panel_width,\n                _content_height = self.xvar.scrollContentHeight,\n                _content_width = self.xvar.scrollContentWidth,\n                getContentPosition = function getContentPosition(e) {\n                var mouseObj = GRID.util.getMousePosition(e),\n                    newLeft = void 0,\n                    newTop = void 0;\n\n                self.xvar.__x_da = mouseObj.clientX - self.xvar.mousePosition.clientX;\n                self.xvar.__y_da = mouseObj.clientY - self.xvar.mousePosition.clientY;\n\n                newLeft = _body_scroll_position.left + self.xvar.__x_da;\n                newTop = _body_scroll_position.top + self.xvar.__y_da;\n\n                // newTop이 범위를 넘었는지 체크\n                if (newTop >= 0) {\n                    newTop = 0;\n                } else if (newTop <= _panel_height - _content_height) {\n                    newTop = _panel_height - _content_height;\n                    if (newTop >= 0) newTop = 0;\n                }\n\n                // newLeft이 범위를 넘었는지 체크\n                if (newLeft >= 0) {\n                    newLeft = 0;\n                } else if (newLeft <= _panel_width - _content_width) {\n                    newLeft = _panel_width - _content_width;\n                    if (newLeft >= 0) newLeft = 0;\n                }\n\n                return {\n                    left: newLeft, top: newTop\n                };\n            };\n\n            this.xvar.__x_da = 0; // 이동량 변수 초기화\n            this.xvar.__y_da = 0; // 계산이 잘못 될까바\n            this.xvar.touchmoved = false;\n\n            jQuery(document.body).on(\"touchmove\" + \".ax5grid-\" + this.instanceId, function (e) {\n                var css = getContentPosition(e);\n\n                resize.call(self);\n                GRID.header.scrollTo.call(self, { left: css.left });\n                GRID.body.scrollTo.call(self, css, { noRepaint: \"noRepaint\" });\n                U.stopEvent(e.originalEvent);\n                self.xvar.touchmoved = true;\n            }).on(\"touchend\" + \".ax5grid-\" + this.instanceId, function (e) {\n                if (self.xvar.touchmoved) {\n                    var css = getContentPosition(e);\n\n                    resize.call(self);\n                    GRID.header.scrollTo.call(self, { left: css.left });\n                    GRID.body.scrollTo.call(self, css);\n                    U.stopEvent(e.originalEvent);\n                    scrollContentMover.off.call(self);\n                }\n            });\n\n            jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n        },\n        \"off\": function off() {\n\n            jQuery(document.body).off(\"touchmove\" + \".ax5grid-\" + this.instanceId).off(\"touchend\" + \".ax5grid-\" + this.instanceId);\n\n            jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n        }\n    };\n\n    var init = function init() {\n        var self = this,\n            margin = this.config.scroller.trackPadding;\n\n        if (margin == 0) {\n            this.$[\"scroller\"][\"vertical-bar\"].css({ width: this.config.scroller.size, left: -1 });\n            this.$[\"scroller\"][\"horizontal-bar\"].css({ height: this.config.scroller.size, top: -1 });\n        } else {\n            this.$[\"scroller\"][\"vertical-bar\"].css({ width: this.config.scroller.size - (margin + 1), left: margin / 2 });\n            this.$[\"scroller\"][\"horizontal-bar\"].css({ height: this.config.scroller.size - (margin + 1), top: margin / 2 });\n        }\n\n        this.$[\"scroller\"][\"vertical-bar\"].on(GRID.util.ENM[\"mousedown\"], function (e) {\n            this.xvar.mousePosition = GRID.util.getMousePosition(e);\n            scrollBarMover.on.call(this, this.$[\"scroller\"][\"vertical\"], this.$[\"scroller\"][\"vertical-bar\"], \"vertical\", e);\n        }.bind(this)).on(\"dragstart\", function (e) {\n            U.stopEvent(e);\n            return false;\n        });\n\n        this.$[\"scroller\"][\"vertical\"].on(\"click\", function (e) {\n            if (e.target.getAttribute(\"data-ax5grid-scroller\") == \"vertical\") {\n                scrollBarMover.click.call(this, this.$[\"scroller\"][\"vertical\"], this.$[\"scroller\"][\"vertical-bar\"], \"vertical\", e);\n            }\n        }.bind(this));\n\n        this.$[\"scroller\"][\"horizontal-bar\"].on(GRID.util.ENM[\"mousedown\"], function (e) {\n            this.xvar.mousePosition = GRID.util.getMousePosition(e);\n            scrollBarMover.on.call(this, this.$[\"scroller\"][\"horizontal\"], this.$[\"scroller\"][\"horizontal-bar\"], \"horizontal\", e);\n        }.bind(this)).on(\"dragstart\", function (e) {\n            U.stopEvent(e);\n            return false;\n        });\n\n        this.$[\"scroller\"][\"horizontal\"].on(\"click\", function (e) {\n            if (e.target.getAttribute(\"data-ax5grid-scroller\") == \"horizontal\") {\n                scrollBarMover.click.call(this, this.$[\"scroller\"][\"horizontal\"], this.$[\"scroller\"][\"horizontal-bar\"], \"horizontal\", e);\n            }\n        }.bind(this));\n\n        this.$[\"container\"][\"body\"].on('mousewheel DOMMouseScroll', function (e) {\n            var E = e.originalEvent,\n                delta = { x: 0, y: 0 };\n\n            if (E.detail) {\n                delta.y = E.detail * 10;\n            } else {\n                if (typeof E.deltaY === \"undefined\") {\n                    delta.y = -E.wheelDelta;\n                    delta.x = 0;\n                } else {\n                    delta.y = E.deltaY;\n                    delta.x = E.deltaX;\n                }\n            }\n\n            if (scrollContentMover.wheel.call(this, delta)) {\n                U.stopEvent(e);\n            }\n        }.bind(this));\n\n        if (ax5.info.supportTouch) {\n            this.$[\"container\"][\"body\"].on(\"touchstart\", '[data-ax5grid-panel]', function (e) {\n                self.xvar.mousePosition = GRID.util.getMousePosition(e);\n                scrollContentMover.on.call(self);\n            });\n        }\n\n        this.xvar.body_panel_height = this.$[\"panel\"][\"body\"].height();\n        this.xvar.body_panel_width = this.$[\"panel\"][\"body\"].width();\n    };\n\n    var resize = function resize() {\n        var _vertical_scroller_height = this.$[\"scroller\"][\"vertical\"].height(),\n            _horizontal_scroller_width = this.$[\"scroller\"][\"horizontal\"].width(),\n            _panel_height = this.$[\"panel\"][\"body\"].height(),\n            _panel_width = this.$[\"panel\"][\"body\"].width(),\n            _content_height = this.xvar.scrollContentHeight,\n            _content_width = this.xvar.scrollContentWidth,\n            verticalScrollBarHeight = _panel_height * _vertical_scroller_height / _content_height,\n            horizontalScrollBarWidth = _panel_width * _horizontal_scroller_width / _content_width;\n\n        if (verticalScrollBarHeight < this.config.scroller.barMinSize) verticalScrollBarHeight = this.config.scroller.barMinSize;\n        if (horizontalScrollBarWidth < this.config.scroller.barMinSize) horizontalScrollBarWidth = this.config.scroller.barMinSize;\n\n        this.$[\"scroller\"][\"vertical-bar\"].css({\n            top: convertScrollBarPosition.vertical.call(this, this.$.panel[\"body-scroll\"].position().top, {\n                _content_width: _content_width,\n                _content_height: _content_height,\n                _panel_width: _panel_width,\n                _panel_height: _panel_height,\n                _horizontal_scroller_width: _horizontal_scroller_width,\n                _vertical_scroller_height: _vertical_scroller_height,\n                verticalScrollBarHeight: verticalScrollBarHeight,\n                horizontalScrollBarWidth: horizontalScrollBarWidth\n            }),\n            height: verticalScrollBarHeight\n        });\n\n        this.$[\"scroller\"][\"horizontal-bar\"].css({\n            left: convertScrollBarPosition.horizontal.call(this, this.$.panel[\"body-scroll\"].position().left, {\n                _content_width: _content_width,\n                _content_height: _content_height,\n                _panel_width: _panel_width,\n                _panel_height: _panel_height,\n                _horizontal_scroller_width: _horizontal_scroller_width,\n                _vertical_scroller_height: _vertical_scroller_height,\n                verticalScrollBarHeight: verticalScrollBarHeight,\n                horizontalScrollBarWidth: horizontalScrollBarWidth\n            }),\n            width: horizontalScrollBarWidth\n        });\n\n        this.xvar.body_panel_height = _panel_height;\n        this.xvar.body_panel_width = _panel_width;\n\n        _vertical_scroller_height = null;\n        _horizontal_scroller_width = null;\n        _panel_height = null;\n        _panel_width = null;\n        _content_height = null;\n        _content_width = null;\n        verticalScrollBarHeight = null;\n        horizontalScrollBarWidth = null;\n    };\n\n    GRID.scroller = {\n        // 타이머\n        moveout_timer: new Date().getTime(),\n        init: init,\n        resize: resize\n    };\n})();\n// ax5.ui.grid.tmpl\n(function () {\n\n    var GRID = ax5.ui.grid;\n\n    var main = function main() {\n        return '<div data-ax5grid-container=\"root\" data-ax5grid-instance=\"{{instanceId}}\">\\n            <div data-ax5grid-container=\"hidden\">\\n                <textarea data-ax5grid-form=\"clipboard\"></textarea>\\n            </div>\\n            <div data-ax5grid-container=\"header\">\\n                <div data-ax5grid-panel=\"aside-header\"></div>\\n                <div data-ax5grid-panel=\"left-header\"></div>\\n                <div data-ax5grid-panel=\"header\">\\n                    <div data-ax5grid-panel-scroll=\"header\"></div>\\n                </div>\\n                <div data-ax5grid-panel=\"right-header\"></div>\\n            </div>\\n            <div data-ax5grid-container=\"body\">\\n                <div data-ax5grid-panel=\"top-aside-body\"></div>\\n                <div data-ax5grid-panel=\"top-left-body\"></div>\\n                <div data-ax5grid-panel=\"top-body\">\\n                    <div data-ax5grid-panel-scroll=\"top-body\"></div>\\n                </div>\\n                <div data-ax5grid-panel=\"top-right-body\"></div>\\n                <div data-ax5grid-panel=\"aside-body\">\\n                    <div data-ax5grid-panel-scroll=\"aside-body\"></div>\\n                </div>\\n                <div data-ax5grid-panel=\"left-body\">\\n                    <div data-ax5grid-panel-scroll=\"left-body\"></div>\\n                </div>\\n                <div data-ax5grid-panel=\"body\">\\n                    <div data-ax5grid-panel-scroll=\"body\"></div>\\n                </div>\\n                <div data-ax5grid-panel=\"right-body\">\\n                  <div data-ax5grid-panel-scroll=\"right-body\"></div>\\n                </div>\\n                <div data-ax5grid-panel=\"bottom-aside-body\"></div>\\n                <div data-ax5grid-panel=\"bottom-left-body\"></div>\\n                <div data-ax5grid-panel=\"bottom-body\">\\n                    <div data-ax5grid-panel-scroll=\"bottom-body\"></div>\\n                </div>\\n                <div data-ax5grid-panel=\"bottom-right-body\"></div>\\n            </div>\\n            <div data-ax5grid-container=\"page\">\\n                <div data-ax5grid-page=\"holder\">\\n                    <div data-ax5grid-page=\"navigation\"></div>\\n                    <div data-ax5grid-page=\"status\"></div>\\n                </div>\\n            </div>\\n            <div data-ax5grid-container=\"scroller\">\\n                <div data-ax5grid-scroller=\"vertical\">\\n                    <div data-ax5grid-scroller=\"vertical-bar\"></div>    \\n                </div>\\n                <div data-ax5grid-scroller=\"horizontal\">\\n                    <div data-ax5grid-scroller=\"horizontal-bar\"></div>\\n                </div>\\n                <div data-ax5grid-scroller=\"corner\"></div>\\n            </div>\\n            <div data-ax5grid-resizer=\"vertical\"></div>\\n            <div data-ax5grid-resizer=\"horizontal\"></div>\\n        </div>';\n    };\n\n    var page_navigation = function page_navigation() {\n        return '<div data-ax5grid-page-navigation=\"holder\">\\n            {{#hasPage}}\\n            <div data-ax5grid-page-navigation=\"cell\">    \\n                {{#firstIcon}}<button type=\"button\" data-ax5grid-page-move=\"first\">{{{firstIcon}}}</button>{{/firstIcon}}\\n                <button type=\"button\" data-ax5grid-page-move=\"prev\">{{{prevIcon}}}</button>\\n            </div>\\n            <div data-ax5grid-page-navigation=\"cell-paging\">\\n                {{#@paging}}\\n                <button type=\"button\" data-ax5grid-page-move=\"{{pageNo}}\" data-ax5grid-page-selected=\"{{selected}}\">{{pageNo}}</button>\\n                {{/@paging}}\\n            </div>\\n            <div data-ax5grid-page-navigation=\"cell\">\\n                <button type=\"button\" data-ax5grid-page-move=\"next\">{{{nextIcon}}}</button>\\n                {{#lastIcon}}<button type=\"button\" data-ax5grid-page-move=\"last\">{{{lastIcon}}}</button>{{/lastIcon}}\\n            </div>\\n            {{/hasPage}}\\n        </div>';\n    };\n\n    var page_status = function page_status() {\n        return '<span>{{{progress}}} {{fromRowIndex}} - {{toRowIndex}} of {{dataRowCount}} {{#totalElements}}&nbsp; Total {{.}}{{/totalElements}}</span>';\n    };\n\n    GRID.tmpl = {\n        \"main\": main,\n        \"page_navigation\": page_navigation,\n        \"page_status\": page_status,\n\n        get: function get(tmplName, data, columnKeys) {\n            var template = GRID.tmpl[tmplName].call(this, columnKeys);\n            ax5.mustache.parse(template);\n            return ax5.mustache.render(template, data);\n        }\n    };\n})();\n// ax5.ui.grid.util\n(function () {\n\n    var GRID = ax5.ui.grid;\n\n    var U = ax5.util;\n\n    /**\n     * @method ax5grid.util.divideTableByFrozenColumnIndex\n     * @param _table\n     * @param _frozenColumnIndex\n     * @returns {{leftHeaderData: {rows: Array}, headerData: {rows: Array}}}\n     */\n    var divideTableByFrozenColumnIndex = function divideTableByFrozenColumnIndex(_table, _frozenColumnIndex) {\n\n        var tempTable_l = { rows: [] },\n            tempTable_r = { rows: [] };\n\n        for (var r = 0, rl = _table.rows.length; r < rl; r++) {\n            var row = _table.rows[r];\n\n            tempTable_l.rows[r] = { cols: [] };\n            tempTable_r.rows[r] = { cols: [] };\n\n            for (var c = 0, cl = row.cols.length; c < cl; c++) {\n                var col = jQuery.extend({}, row.cols[c]),\n                    colStartIndex = col.colIndex,\n                    colEndIndex = col.colIndex + col.colspan;\n\n                if (colStartIndex < _frozenColumnIndex) {\n                    if (colEndIndex <= _frozenColumnIndex) {\n                        // 좌측편에 변형없이 추가\n                        tempTable_l.rows[r].cols.push(col);\n                    } else {\n                        var leftCol = jQuery.extend({}, col),\n                            rightCol = jQuery.extend({}, leftCol);\n\n                        leftCol.colspan = _frozenColumnIndex - leftCol.colIndex;\n                        rightCol.colIndex = _frozenColumnIndex;\n                        rightCol.colspan = col.colspan - leftCol.colspan;\n\n                        tempTable_l.rows[r].cols.push(leftCol);\n                        if (rightCol.colspan) {\n                            tempTable_r.rows[r].cols.push(rightCol);\n                        }\n                    }\n                } else {\n                    // 오른편\n                    tempTable_r.rows[r].cols.push(col);\n                }\n\n                col = null;\n                colStartIndex = null;\n                colEndIndex = null;\n            }\n\n            row = null;\n        }\n\n        return {\n            leftData: tempTable_l,\n            rightData: tempTable_r\n        };\n    };\n\n    var getTableByStartEndColumnIndex = function getTableByStartEndColumnIndex(_table, _startColumnIndex, _endColumnIndex) {\n\n        var tempTable = { rows: [] };\n        for (var r = 0, rl = _table.rows.length; r < rl; r++) {\n            var row = _table.rows[r];\n\n            tempTable.rows[r] = { cols: [] };\n            for (var c = 0, cl = row.cols.length; c < cl; c++) {\n                var col = jQuery.extend({}, row.cols[c]),\n                    colStartIndex = col.colIndex,\n                    colEndIndex = col.colIndex + col.colspan;\n\n                if (_startColumnIndex <= colStartIndex || colEndIndex <= _endColumnIndex) {\n                    if (_startColumnIndex <= colStartIndex && colEndIndex <= _endColumnIndex) {\n                        // 변형없이 추가\n                        tempTable.rows[r].cols.push(col);\n                    } else if (_startColumnIndex > colStartIndex && colEndIndex > _startColumnIndex) {\n                        // 앞에서 걸친경우\n                        col.colspan = colEndIndex - _startColumnIndex;\n                        tempTable.rows[r].cols.push(col);\n                    } else if (colEndIndex > _endColumnIndex && colStartIndex <= _endColumnIndex) {\n                        tempTable.rows[r].cols.push(col);\n                    }\n                }\n            }\n        }\n\n        return tempTable;\n    };\n\n    var getMousePosition = function getMousePosition(e) {\n        var mouseObj = void 0,\n            originalEvent = e.originalEvent ? e.originalEvent : e;\n\n        mouseObj = 'changedTouches' in originalEvent && originalEvent.changedTouches ? originalEvent.changedTouches[0] : originalEvent;\n        // clientX, Y 쓰면 스크롤에서 문제 발생\n        return {\n            clientX: mouseObj.pageX,\n            clientY: mouseObj.pageY\n        };\n    };\n\n    var ENM = {\n        \"mousedown\": ax5.info.supportTouch ? \"touchstart\" : \"mousedown\",\n        \"mousemove\": ax5.info.supportTouch ? \"touchmove\" : \"mousemove\",\n        \"mouseup\": ax5.info.supportTouch ? \"touchend\" : \"mouseup\"\n    };\n\n    var makeHeaderTable = function makeHeaderTable(_columns) {\n        var columns = _columns,\n            cfg = this.config,\n            table = {\n            rows: []\n        },\n            colIndex = 0,\n            maekRows = function maekRows(_columns, depth, parentField) {\n            var row = { cols: [] };\n            var i = 0,\n                l = _columns.length;\n            var colspan = 1;\n            var subcolspan = 0;\n\n            for (; i < l; i++) {\n                var field = jQuery.extend({}, _columns[i]);\n                colspan = 1;\n\n                if (!field.hidden) {\n                    field.colspan = 1;\n                    field.rowspan = 1;\n\n                    field.rowIndex = depth;\n                    field.colIndex = function () {\n                        if (!parentField || i != 0) {\n                            return colIndex++;\n                        } else {\n                            colIndex = parentField.colIndex + i + 1;\n                            return parentField.colIndex + i;\n                        }\n                    }();\n\n                    row.cols.push(field); // 복제된 필드 삽입\n\n                    if ('columns' in field) {\n                        colspan = maekRows(field.columns, depth + 1, field);\n                    } else {\n                        field.width = 'width' in field ? field.width : cfg.columnMinWidth;\n                    }\n                    field.colspan = colspan;\n                    subcolspan += colspan;\n                } else {}\n            }\n\n            if (row.cols.length > 0) {\n                if (!table.rows[depth]) {\n                    table.rows[depth] = { cols: [] };\n                }\n                table.rows[depth].cols = table.rows[depth].cols.concat(row.cols);\n                return subcolspan;\n            } else {\n                return colspan;\n            }\n        };\n\n        maekRows(columns, 0);\n\n        // set rowspan\n        for (var r = 0, rl = table.rows.length; r < rl; r++) {\n            for (var c = 0, cl = table.rows[r].cols.length; c < cl; c++) {\n                if (!('columns' in table.rows[r].cols[c])) {\n                    table.rows[r].cols[c].rowspan = rl - r;\n                }\n            }\n        }\n\n        return table;\n    };\n\n    var makeBodyRowTable = function makeBodyRowTable(_columns) {\n        var columns = _columns,\n            table = {\n            rows: []\n        },\n            colIndex = 0,\n            maekRows = function maekRows(_columns, depth, parentField) {\n            var row = { cols: [] },\n                i = 0,\n                l = _columns.length,\n                colspan = 1;\n\n            var selfMakeRow = function selfMakeRow(__columns) {\n                var i = 0,\n                    l = __columns.length;\n                for (; i < l; i++) {\n                    var field = jQuery.extend({}, __columns[i]),\n                        _colspan = 1;\n\n                    if (!field.hidden) {\n\n                        if ('key' in field) {\n                            field.colspan = 1;\n                            field.rowspan = 1;\n\n                            field.rowIndex = depth;\n                            field.colIndex = function () {\n                                if (!parentField) {\n                                    return colIndex++;\n                                } else {\n                                    colIndex = parentField.colIndex + i + 1;\n                                    return parentField.colIndex + i;\n                                }\n                            }();\n\n                            row.cols.push(field);\n                            if ('columns' in field) {\n                                _colspan = maekRows(field.columns, depth + 1, field);\n                            }\n                            field.colspan = _colspan;\n                        } else {\n                            if ('columns' in field) {\n                                selfMakeRow(field.columns, depth);\n                            }\n                        }\n                    } else {}\n                }\n            };\n\n            for (; i < l; i++) {\n                var field = jQuery.extend({}, _columns[i]);\n                colspan = 1;\n\n                if (!field.hidden) {\n\n                    if ('key' in field) {\n                        field.colspan = 1;\n                        field.rowspan = 1;\n\n                        field.rowIndex = depth;\n                        field.colIndex = function () {\n                            if (!parentField) {\n                                return colIndex++;\n                            } else {\n                                colIndex = parentField.colIndex + i + 1;\n                                return parentField.colIndex + i;\n                            }\n                        }();\n\n                        row.cols.push(field);\n                        if ('columns' in field) {\n                            colspan = maekRows(field.columns, depth + 1, field);\n                        }\n                        field.colspan = colspan;\n                    } else {\n                        if ('columns' in field) {\n                            selfMakeRow(field.columns, depth);\n                        }\n                    }\n                } else {}\n\n                field = null;\n            }\n\n            if (row.cols.length > 0) {\n                if (!table.rows[depth]) {\n                    table.rows[depth] = { cols: [] };\n                }\n                table.rows[depth].cols = table.rows[depth].cols.concat(row.cols);\n                return row.cols.length - 1 + colspan;\n            } else {\n                return colspan;\n            }\n        };\n\n        maekRows(columns, 0);\n\n        (function (table) {\n            // set rowspan\n            for (var r = 0, rl = table.rows.length; r < rl; r++) {\n                var row = table.rows[r];\n                for (var c = 0, cl = row.cols.length; c < cl; c++) {\n                    var col = row.cols[c];\n                    if (!('columns' in col)) {\n                        col.rowspan = rl - r;\n                    }\n                    col = null;\n                }\n                row = null;\n            }\n        })(table);\n\n        return table;\n    };\n\n    var makeBodyRowMap = function makeBodyRowMap(_table) {\n        var map = {};\n        _table.rows.forEach(function (row) {\n            row.cols.forEach(function (col) {\n                map[col.rowIndex + \"_\" + col.colIndex] = jQuery.extend({}, col);\n            });\n        });\n        return map;\n    };\n\n    var makeFootSumTable = function makeFootSumTable(_footSumColumns) {\n        var table = {\n            rows: []\n        };\n\n        for (var r = 0, rl = _footSumColumns.length; r < rl; r++) {\n            var footSumRow = _footSumColumns[r],\n                addC = 0;\n\n            table.rows[r] = { cols: [] };\n\n            for (var c = 0, cl = footSumRow.length; c < cl; c++) {\n                if (addC > this.colGroup.length) break;\n                var colspan = footSumRow[c].colspan || 1;\n                if (footSumRow[c].label || footSumRow[c].key) {\n                    table.rows[r].cols.push({\n                        colspan: colspan,\n                        rowspan: 1,\n                        colIndex: addC,\n                        columnAttr: \"sum\",\n                        align: footSumRow[c].align,\n                        label: footSumRow[c].label,\n                        key: footSumRow[c].key,\n                        collector: footSumRow[c].collector,\n                        formatter: footSumRow[c].formatter\n                    });\n                } else {\n                    table.rows[r].cols.push({\n                        colIndex: addC,\n                        colspan: colspan,\n                        rowspan: 1,\n                        label: \"&nbsp;\"\n                    });\n                }\n                addC += colspan;\n                colspan = null;\n            }\n\n            if (addC < this.colGroup.length) {\n                for (var _c = addC; _c < this.colGroup.length; _c++) {\n                    table.rows[r].cols.push({\n                        colIndex: _c,\n                        colspan: 1,\n                        rowspan: 1,\n                        label: \"&nbsp;\"\n                    });\n                }\n            }\n            footSumRow = null;\n            addC = null;\n        }\n\n        return table;\n    };\n\n    var makeBodyGroupingTable = function makeBodyGroupingTable(_bodyGroupingColumns) {\n        var table = {\n            rows: []\n        },\n            r = 0,\n            addC = 0;\n\n        table.rows[r] = { cols: [] };\n        for (var _c2 = 0, cl = _bodyGroupingColumns.length; _c2 < cl; _c2++) {\n            if (addC > this.colGroup.length) break;\n\n            var colspan = _bodyGroupingColumns[_c2].colspan || 1;\n            if (_bodyGroupingColumns[_c2].label || _bodyGroupingColumns[_c2].key) {\n                table.rows[r].cols.push({\n                    colspan: colspan,\n                    rowspan: 1,\n                    rowIndex: 0,\n                    colIndex: addC,\n                    columnAttr: \"default\",\n                    align: _bodyGroupingColumns[_c2].align,\n                    label: _bodyGroupingColumns[_c2].label,\n                    key: _bodyGroupingColumns[_c2].key,\n                    collector: _bodyGroupingColumns[_c2].collector,\n                    formatter: _bodyGroupingColumns[_c2].formatter\n                });\n            } else {\n                table.rows[r].cols.push({\n                    rowIndex: 0,\n                    colIndex: addC,\n                    colspan: colspan,\n                    rowspan: 1,\n                    label: \"&nbsp;\"\n                });\n            }\n            addC += colspan;\n        }\n\n        if (addC < this.colGroup.length) {\n            for (var c = addC; c < this.colGroup.length; c++) {\n                table.rows[r].cols.push({\n                    rowIndex: 0,\n                    colIndex: c,\n                    colspan: 1,\n                    rowspan: 1,\n                    label: \"&nbsp;\"\n                });\n            }\n        }\n\n        return table;\n    };\n\n    var findPanelByColumnIndex = function findPanelByColumnIndex(_dindex, _colIndex, _rowIndex) {\n        var _containerPanelName = void 0,\n            _isScrollPanel = false,\n            _panels = [];\n\n        if (this.xvar.frozenRowIndex > _dindex) _panels.push(\"top\");\n        if (this.xvar.frozenColumnIndex > _colIndex) _panels.push(\"left\");\n        _panels.push(\"body\");\n\n        if (this.xvar.frozenColumnIndex <= _colIndex || this.xvar.frozenRowIndex <= _dindex) {\n            _containerPanelName = _panels.join(\"-\");\n            _panels.push(\"scroll\");\n            _isScrollPanel = true;\n        }\n\n        return {\n            panelName: _panels.join(\"-\"),\n            containerPanelName: _containerPanelName,\n            isScrollPanel: _isScrollPanel\n        };\n    };\n\n    var getRealPathForDataItem = function getRealPathForDataItem(_dataPath) {\n        var path = [],\n            _path = [].concat(_dataPath.split(/[\\.\\[\\]]/g));\n\n        _path.forEach(function (n) {\n            if (n !== \"\") path.push(\"[\\\"\" + n.replace(/['\\\"]/g, \"\") + \"\\\"]\");\n        });\n        _path = null;\n        return path.join(\"\");\n    };\n\n    GRID.util = {\n        divideTableByFrozenColumnIndex: divideTableByFrozenColumnIndex,\n        getTableByStartEndColumnIndex: getTableByStartEndColumnIndex,\n        getMousePosition: getMousePosition,\n        ENM: ENM,\n        makeHeaderTable: makeHeaderTable,\n        makeBodyRowTable: makeBodyRowTable,\n        makeBodyRowMap: makeBodyRowMap,\n        makeFootSumTable: makeFootSumTable,\n        makeBodyGroupingTable: makeBodyGroupingTable,\n        findPanelByColumnIndex: findPanelByColumnIndex,\n        getRealPathForDataItem: getRealPathForDataItem\n    };\n})();\n// ax5.ui.mediaViewer\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MEDIAVIEWER;\n\n    UI.addClass({\n        className: \"mediaViewer\"\n    }, function () {\n        /**\n         * @class ax5mediaViewer\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var myViewer = new ax5.ui.mediaViewer({\n         *     theme: \"danger\",\n         *     target: $(\"#media-viewer-target-0\"),\n         *     loading: {\n         *         icon: '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw margin-bottom\" aria-hidden=\"true\"></i>',\n         *         text: '<div>Now Loading</div>'\n         *     },\n         *     media: {\n         *         width: '11%', height: '11%',\n         *         prevHandle: '<i class=\"fa fa-chevron-left\"></i>',\n         *         nextHandle: '<i class=\"fa fa-chevron-right\"></i>',\n         *         poster: '<i class=\"fa fa-youtube-play\" style=\"font-size: 20px;\"></i>',\n         *         list: [\n         *             {\n         *                 video: {\n         *                     html: '<iframe src=\"https://player.vimeo.com/video/121840700?color=fcfcfc&badge=0\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>',\n         *                     poster: ''\n         *                 }\n         *             },\n         *             {\n         *                 video: {\n         *                     html: '<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/w9Uh2oP88JI\" frameborder=\"0\" allowfullscreen></iframe>',\n         *                     poster: ''\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'https://www.twilio.com/blog/wp-content/uploads/2013/11/Screen-Shot-2013-11-06-at-12.05.36-PM.png',\n         *                     poster: 'https://www.twilio.com/blog/wp-content/uploads/2013/11/Screen-Shot-2013-11-06-at-12.05.36-PM.png'\n         *                 }\n         *             }\n         *         ]\n         *     },\n         *     onClick: function () {\n         *         console.log(this);\n         *     }\n         * });\n         * ```\n         */\n        var ax5mediaViewer = function ax5mediaViewer() {\n            var self = this,\n                cfg,\n                ENM = {\n                \"mousedown\": ax5.info.supportTouch ? \"touchstart\" : \"mousedown\",\n                \"mousemove\": ax5.info.supportTouch ? \"touchmove\" : \"mousemove\",\n                \"mouseup\": ax5.info.supportTouch ? \"touchend\" : \"mouseup\"\n            },\n                getMousePosition = function getMousePosition(e) {\n                var mouseObj = 'changedTouches' in e.originalEvent && e.changedTouches ? e.originalEvent.changedTouches[0] : e;\n\n                return {\n                    clientX: mouseObj.clientX,\n                    clientY: mouseObj.clientY,\n                    time: new Date().getTime()\n                };\n            };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n                theme: 'default',\n                animateTime: 500,\n\n                columnKeys: {\n                    src: 'src',\n                    poster: 'poster',\n                    html: 'html'\n                },\n                loading: {\n                    icon: '',\n                    text: 'Now Loading'\n                },\n                viewer: {\n                    prevHandle: false,\n                    nextHandle: false,\n                    ratio: 16 / 9\n                },\n                hideMediaList: false,\n                media: {\n                    prevHandle: '<',\n                    nextHandle: '>',\n                    width: 36, height: 36,\n                    list: []\n                }\n            };\n            this.queue = [];\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.selectedIndex = 0;\n            this.mousePosition = {};\n\n            cfg = this.config;\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n                return true;\n            },\n                getFrame = function getFrame() {\n                var data = jQuery.extend(true, { id: this.id }, cfg);\n\n                try {\n                    return MEDIAVIEWER.tmpl.get.call(this, \"frame\", data, cfg.columnKeys);\n                } finally {\n                    data = null;\n                }\n            },\n                onClick = function onClick(e, target) {\n                var result,\n                    elementType = \"\",\n                    processor = {\n                    'thumbnail': function thumbnail(target) {\n                        this.select(target.getAttribute(\"data-media-thumbnail\"));\n                    },\n                    'prev': function prev(target) {\n                        if (this.selectedIndex > 0) {\n                            this.select(this.selectedIndex - 1);\n                        } else {\n                            this.select(cfg.media.list.length - 1);\n                        }\n                    },\n                    'next': function next(target) {\n                        if (this.selectedIndex < cfg.media.list.length - 1) {\n                            this.select(this.selectedIndex + 1);\n                        } else {\n                            this.select(0);\n                        }\n                    },\n                    'viewer': function viewer(target) {\n                        if (self.onClick) {\n                            self.onClick.call({\n                                media: cfg.media.list[this.selectedIndex]\n                            });\n                        }\n                    }\n                };\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-media-thumbnail\")) {\n                        elementType = \"thumbnail\";\n                        return true;\n                    } else if (target.getAttribute(\"data-media-viewer-els\") == \"media-list-prev-handle\") {\n                        elementType = \"prev\";\n                        return true;\n                    } else if (target.getAttribute(\"data-media-viewer-els\") == \"media-list-next-handle\") {\n                        elementType = \"next\";\n                        return true;\n                    } else if (target.getAttribute(\"data-media-viewer-els\") == \"viewer\") {\n                        elementType = \"viewer\";\n                        return true;\n                    } else if (self.target.get(0) == target) {\n                        return true;\n                    }\n                });\n\n                if (target) {\n                    for (var key in processor) {\n                        if (key == elementType) {\n                            result = processor[key].call(this, target);\n                            break;\n                        }\n                    }\n                    return this;\n                }\n                return this;\n            },\n                getSelectedIndex = function getSelectedIndex() {\n                if (cfg.media && cfg.media.list && cfg.media.list.length > 0) {\n                    var i = cfg.media.list.length,\n                        selecteIndex = 0;\n                    while (i--) {\n                        if (cfg.media.list[i].selected) {\n                            selecteIndex = i;\n                            break;\n                        }\n                    }\n\n                    if (selecteIndex == 0) {\n                        cfg.media.list[0].selected = true;\n                    }\n                    try {\n                        return selecteIndex;\n                    } finally {\n                        i = null;\n                        selecteIndex = null;\n                    }\n                } else {\n                    return;\n                }\n            },\n                alignMediaList = function alignMediaList() {\n                var thumbnail = this.$[\"list\"].find('[data-media-thumbnail=' + this.selectedIndex + ']'),\n                    pos = thumbnail.position(),\n                    thumbnailWidth = thumbnail.outerWidth(),\n                    containerWidth = this.$[\"list\"].outerWidth(),\n                    parentLeft = this.$[\"list-table\"].position().left,\n                    parentWidth = this.$[\"list-table\"].outerWidth(),\n                    newLeft = 0;\n\n                if (pos.left + thumbnailWidth + parentLeft > containerWidth) {\n                    newLeft = containerWidth - (pos.left + thumbnailWidth);\n                    if (parentLeft != newLeft) this.$[\"list-table\"].css({ left: parentLeft = newLeft });\n                } else if (pos.left + parentLeft < 0) {\n                    newLeft = pos.left;\n                    if (newLeft > 0) newLeft = 0;\n                    if (parentLeft != newLeft) this.$[\"list-table\"].css({ left: parentLeft = newLeft });\n                }\n\n                if (parentLeft != newLeft) {\n                    if (parentLeft + parentWidth < containerWidth) {\n                        newLeft = containerWidth - parentWidth;\n                        if (newLeft > 0) newLeft = 0;\n                        this.$[\"list-table\"].css({ left: newLeft });\n                    }\n                }\n\n                thumbnail = null;\n                pos = null;\n                thumbnailWidth = null;\n                containerWidth = null;\n                parentLeft = null;\n                newLeft = null;\n            },\n                swipeMedia = {\n                \"on\": function on(mousePosition) {\n                    // console.log(mousePosition);\n                    var getSwipePosition = function getSwipePosition(e) {\n                        var mouseObj = e;\n                        if ('changedTouches' in e.originalEvent && e.changedTouches) {\n                            mouseObj = e.originalEvent.changedTouches[0];\n                        }\n\n                        mousePosition.__dx = mouseObj.clientX - mousePosition.clientX;\n                        mousePosition.__dy = mouseObj.clientY - mousePosition.clientY;\n                        mousePosition.__time = new Date().getTime();\n\n                        if (Math.abs(mousePosition.__dx) > Math.abs(mousePosition.__dy)) {\n                            return { left: mousePosition.__dx };\n                        } else {\n                            return { top: mousePosition.__dy };\n                        }\n                    };\n                    var viewerWidth = this.$[\"viewer\"].width();\n\n                    jQuery(document.body).bind(ENM[\"mousemove\"] + \".ax5media-viewer-\" + this.instanceId, function (e) {\n                        var position = getSwipePosition(e);\n\n                        if ('left' in position) {\n                            self.$[\"viewer-holder\"].css(position);\n                            if (Math.abs(self.mousePosition.__dx) > viewerWidth / 3) {\n                                //console.log(self.mousePosition);\n                                // trigger nextMedia\n\n                                var nextIndex = 0;\n\n                                if (self.mousePosition.__dx > 0) {\n                                    if (self.selectedIndex > 0) {\n                                        nextIndex = self.selectedIndex - 1;\n                                    } else {\n                                        nextIndex = cfg.media.list.length - 1;\n                                    }\n                                } else {\n                                    if (self.selectedIndex < cfg.media.list.length - 1) {\n                                        nextIndex = self.selectedIndex + 1;\n                                    }\n                                }\n\n                                self.select(nextIndex);\n                                swipeMedia.off.call(self);\n                            }\n\n                            U.stopEvent(e);\n                        }\n                    }).bind(ENM[\"mouseup\"] + \".ax5media-viewer-\" + this.instanceId, function (e) {\n                        swipeMedia.off.call(self);\n                    }).bind(\"mouseleave.ax5media-viewer-\" + this.instanceId, function (e) {\n                        swipeMedia.off.call(self);\n                    });\n\n                    jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n                },\n                \"off\": function off() {\n                    self.$[\"viewer-holder\"].css({ left: 0 });\n                    jQuery(document.body).unbind(ENM[\"mousemove\"] + \".ax5media-viewer-\" + this.instanceId).unbind(ENM[\"mouseup\"] + \".ax5media-viewer-\" + this.instanceId).unbind(\"mouseleave.ax5media-viewer-\" + this.instanceId);\n\n                    jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n                }\n            };\n            /// private end\n\n            /**\n             * Preferences of mediaViewer UI\n             * @method ax5mediaViewer.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5mediaViewer}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.id = 'ax5-media-viewer-' + ax5.getGuid();\n                if (cfg.target && cfg.media && cfg.media.list && cfg.media.list.length > 0) {\n                    this.attach(cfg.target);\n                }\n            };\n\n            /**\n             * @method ax5mediaViewer.attach\n             * @param target\n             * @param options\n             * @returns {ax5mediaViewer}\n             */\n            this.attach = function (target, options) {\n                if (!target) {\n                    console.log(ax5.info.getError(\"ax5mediaViewer\", \"401\", \"setConfig\"));\n                }\n                if (typeof options != \"undefined\") {\n                    this.setConfig(options, false);\n                }\n                this.target = jQuery(target);\n                this.target.html(getFrame.call(this));\n\n                // 파트수집\n                this.$ = {\n                    \"root\": this.target.find('[data-ax5-ui-media-viewer]'),\n                    \"viewer-holder\": this.target.find('[data-media-viewer-els=\"viewer-holder\"]'),\n                    \"viewer\": this.target.find('[data-media-viewer-els=\"viewer\"]'),\n                    \"viewer-prev\": this.target.find('[data-media-viewer-els=\"viewer-prev\"]'),\n                    \"viewer-loading\": this.target.find('[data-media-viewer-els=\"viewer-loading\"]'),\n                    \"list-holder\": this.target.find('[data-media-viewer-els=\"media-list-holder\"]'),\n                    \"list-prev-handle\": this.target.find('[data-media-viewer-els=\"media-list-prev-handle\"]'),\n                    \"list\": this.target.find('[data-media-viewer-els=\"media-list\"]'),\n                    \"list-table\": this.target.find('[data-media-viewer-els=\"media-list-table\"]'),\n                    \"list-next-handle\": this.target.find('[data-media-viewer-els=\"media-list-next-handle\"]')\n                };\n\n                this.align();\n\n                jQuery(window).unbind(\"resize.ax5media-viewer-\" + this.id).bind(\"resize.ax5media-viewer-\" + this.id, function () {\n                    this.align();\n                    alignMediaList.call(this);\n                }.bind(this));\n\n                this.target.unbind(\"click\").bind(\"click\", function (e) {\n                    e = e || window.event;\n                    onClick.call(this, e);\n                    U.stopEvent(e);\n                }.bind(this));\n\n                this.$.viewer.unbind(ENM[\"mousedown\"]).bind(ENM[\"mousedown\"], function (e) {\n                    this.mousePosition = getMousePosition(e);\n                    swipeMedia.on.call(this, this.mousePosition);\n                }.bind(this)).unbind(\"dragstart\").bind(\"dragstart\", function (e) {\n                    U.stopEvent(e);\n                    return false;\n                });\n\n                this.select(getSelectedIndex.call(this));\n                return this;\n            };\n\n            /**\n             * @method ax5mediaViewer.align\n             * @returns {ax5mediaViewer}\n             */\n            this.align = function () {\n                // viewer width, height\n                this.$[\"viewer-holder\"].css({ height: this.$[\"viewer\"].width() / cfg.viewer.ratio });\n                this.$[\"viewer\"].css({ height: this.$[\"viewer\"].width() / cfg.viewer.ratio });\n\n                if (this.$[\"viewer\"].data(\"media-type\") == \"image\") {\n                    var $img = this.$[\"viewer\"].find(\"img\");\n                    $img.css({\n                        width: this.$[\"viewer\"].height() * this.$[\"viewer\"].data(\"img-ratio\"), height: this.$[\"viewer\"].height()\n                    });\n                    setTimeout(function (_img) {\n                        _img.css({ left: (this.$[\"viewer\"].width() - _img.width()) / 2 });\n                    }.bind(this, $img), 1);\n                } else if (this.$[\"viewer\"].data(\"media-type\") == \"video\") {\n                    this.$[\"viewer\"].find(\"iframe\").css({ width: this.$[\"viewer\"].height() * this.$[\"viewer\"].data(\"img-ratio\"), height: this.$[\"viewer\"].height() });\n                }\n                this.$[\"viewer-loading\"].css({ height: this.$[\"viewer\"].height() });\n\n                var mediaThumbnailWidth = U.right(cfg.media.width, 1) == '%' ? U.number(cfg.media.width) / 100 * this.$[\"viewer\"].width() : U.number(cfg.media.width),\n                    mediaThumbnailHeight = U.right(cfg.media.height, 1) == '%' ? U.number(cfg.media.height) / 100 * this.$[\"viewer\"].width() : U.number(cfg.media.height);\n\n                mediaThumbnailWidth = Math.floor(mediaThumbnailWidth);\n                mediaThumbnailHeight = Math.floor(mediaThumbnailHeight);\n\n                this.$[\"list-prev-handle\"].css({ width: mediaThumbnailWidth * 1.5 });\n                this.$[\"list-next-handle\"].css({ width: mediaThumbnailWidth * 1.5 });\n                this.$[\"list\"].css({ height: mediaThumbnailHeight });\n                this.$[\"list-table\"].find('[data-media-thumbnail]').css({ width: mediaThumbnailWidth, height: mediaThumbnailHeight });\n                this.$[\"list-table\"].find('[data-media-thumbnail-video]').css({ width: mediaThumbnailWidth, height: mediaThumbnailHeight });\n\n                return this;\n            };\n\n            /**\n             * @method ax5mediaViewer.select\n             * @param index\n             * @returns {ax5mediaViewer}\n             */\n            this.select = function () {\n                var mediaView = {\n                    image: function image(obj, callback) {\n\n                        if (cfg.loading) {\n\n                            self.$[\"viewer-loading\"].show();\n                            var dim = [this.$[\"viewer\"].width(), this.$[\"viewer\"].height()];\n                            var img = new Image();\n                            img.src = obj.image[cfg.columnKeys.src];\n                            img.onload = function () {\n                                self.$[\"viewer-loading\"].fadeOut();\n                                var h = dim[1];\n                                var w = h * img.width / img.height;\n                                callback(img, Math.floor(w), h);\n                            };\n                            return img;\n                        } else {\n                            var dim = [this.$[\"viewer\"].width(), this.$[\"viewer\"].height()];\n                            var img = new Image();\n                            img.src = obj.image[cfg.columnKeys.src];\n\n                            if (this.$[\"viewer\"].find(\"img\").get(0)) {\n\n                                self.$[\"viewer-prev\"].html(this.$[\"viewer\"].html()).addClass(\"slide-out\");\n\n                                img.onload = function () {\n\n                                    var h = dim[1];\n                                    var w = h * img.width / img.height;\n                                    callback(img, Math.floor(w), h);\n\n                                    setTimeout(function () {\n                                        self.$[\"viewer-prev\"].removeClass(\"slide-out\");\n                                    }, cfg.animateTime);\n                                };\n                                return img;\n                            } else {\n                                img.onload = function () {\n                                    var h = dim[1];\n                                    var w = h * img.width / img.height;\n                                    callback(img, Math.floor(w), h);\n                                };\n                                return img;\n                            }\n                        }\n                    },\n                    video: function video(obj, callback) {\n                        self.$[\"viewer-loading\"].show();\n                        var dim = [this.$[\"viewer\"].width(), this.$[\"viewer\"].height()];\n                        var html = jQuery(obj.video[cfg.columnKeys.html]);\n                        callback(html, dim[0], dim[1]);\n                        self.$[\"viewer-loading\"].fadeOut();\n                    }\n                };\n                var onLoad = {\n                    image: function image(img, w, h) {\n                        img.width = w;\n                        img.height = h;\n\n                        var $img = $(img);\n                        this.$[\"viewer\"].html($img);\n                        $img.css({ left: (this.$[\"viewer\"].width() - w) / 2 });\n\n                        this.$[\"viewer\"].data(\"media-type\", \"image\");\n                        this.$[\"viewer\"].data(\"img-ratio\", w / h);\n                    },\n                    video: function video(html, w, h) {\n                        html.css({ width: w, height: h });\n                        this.$[\"viewer\"].html(html);\n                        this.$[\"viewer\"].data(\"media-type\", \"video\");\n                        this.$[\"viewer\"].data(\"img-ratio\", w / h);\n                    }\n                };\n                var select = function select(index) {\n                    this.$[\"list\"].find('[data-media-thumbnail]').removeClass(\"selected\");\n                    this.$[\"list\"].find('[data-media-thumbnail=' + index + ']').addClass(\"selected\");\n                    alignMediaList.call(this);\n                };\n\n                return function (index) {\n                    if (typeof index === \"undefined\") return this;\n                    this.selectedIndex = Number(index);\n                    var media = cfg.media.list[index];\n                    select.call(this, index);\n\n                    for (var key in mediaView) {\n                        if (media[key]) {\n                            mediaView[key].call(this, media, onLoad[key].bind(this));\n                            break;\n                        }\n                    }\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5mediaViewer.setMediaList\n             * @param list\n             * @returns {ax5mediaViewer}\n             */\n            this.setMediaList = function (list) {\n                cfg.media.list = [].concat(list);\n                this.attach(cfg.target);\n                return this;\n            };\n\n            this.move = function (direction) {\n                var processor = {\n                    'prev': function prev() {\n                        if (this.selectedIndex > 0) {\n                            this.select(this.selectedIndex - 1);\n                        } else {\n                            this.select(cfg.media.list.length - 1);\n                        }\n                    },\n                    'next': function next() {\n                        if (this.selectedIndex < cfg.media.list.length - 1) {\n                            this.select(this.selectedIndex + 1);\n                        } else {\n                            this.select(0);\n                        }\n                    }\n                };\n\n                if (!direction) direction = \"next\";\n\n                if (direction in processor) {\n                    processor[direction].call(this);\n                }\n            };\n\n            this.play = function (_opt) {\n                var opt = jQuery.extend({\n                    interval: 5000\n                }, _opt);\n\n                if (this.playTimer) clearTimeout(this.playTimer);\n                this.playTimer = setTimeout(function () {\n                    self.move(\"next\");\n                    self.play(opt);\n                }, opt.interval);\n            };\n\n            this.stop = function () {\n                if (this.playTimer) clearTimeout(this.playTimer);\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                UI.mediaViewer_instance = UI.mediaViewer_instance || [];\n                UI.mediaViewer_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                } else {\n                    this.init();\n                }\n            }.apply(this, arguments);\n        };\n        return ax5mediaViewer;\n    }());\n\n    MEDIAVIEWER = ax5.ui.mediaViewer;\n})();\n// ax5.ui.mediaViewer.tmpl\n(function () {\n    var MEDIAVIEWER = ax5.ui.mediaViewer;\n\n    var frame = function frame(columnKeys) {\n        return '\\n<div data-ax5-ui-media-viewer=\"{{id}}\" class=\"{{theme}}\">\\n    <div data-media-viewer-els=\"viewer-holder\">\\n        <div data-media-viewer-els=\"viewer\"></div>\\n    </div>\\n    {{#loading}}\\n    <div data-media-viewer-els=\"viewer-loading\">\\n        <div class=\"ax5-ui-media-viewer-loading-holder\">\\n            <div class=\"ax5-ui-media-viewer-loading-cell\">\\n            {{{loading.icon}}}\\n            {{{loading.text}}}\\n            </div>\\n        </div>\\n    </div>\\n    {{/loading}}\\n    {{^loading}}\\n    <div data-media-viewer-els=\"viewer-prev\"></div>\\n    {{/loading}}\\n    \\n    {{#media}}\\n    <div data-media-viewer-els=\"media-list-holder\" {{#hideMediaList}}style=\"display:none;\"{{/hideMediaList}}>\\n        <div data-media-viewer-els=\"media-list-prev-handle\">{{{prevHandle}}}</div>\\n        <div data-media-viewer-els=\"media-list\">\\n            <div data-media-viewer-els=\"media-list-table\">\\n            {{#list}}\\n                <div data-media-viewer-els=\"media-list-table-td\">\\n                {{#image}}\\n                <div data-media-thumbnail=\"{{@i}}\">\\n                <img src=\"{{' + columnKeys.poster + '}}\" data-media-thumbnail-image=\"{{@i}}\" />\\n                </div>\\n                {{/image}}\\n                {{#video}}\\n                <div data-media-thumbnail=\"{{@i}}\">{{#' + columnKeys.poster + '}}<img src=\"{{.}}\" data-media-thumbnail-video=\"{{@i}}\" />>{{/' + columnKeys.poster + '}}{{^' + columnKeys.poster + '}}<a data-media-thumbnail-video=\"{{@i}}\">{{{media.' + columnKeys.poster + '}}}</a>{{/' + columnKeys.poster + '}}</div>\\n                {{/video}}\\n                </div>\\n            {{/list}}\\n            </div>\\n        </div>\\n        <div data-media-viewer-els=\"media-list-next-handle\">{{{nextHandle}}}</div>\\n    </div>\\n    {{/media}}\\n    \\n</div>';\n    };\n\n    MEDIAVIEWER.tmpl = {\n        \"frame\": frame,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(MEDIAVIEWER.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.uploader\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var UPLOADER = void 0;\n\n    UI.addClass({\n        className: \"uploader\"\n    }, function () {\n\n        var ax5uploader = function ax5uploader() {\n            /**\n             * @class ax5uploader\n             * @classdesc\n             * @author tom@axisj.com\n             * @example\n             * ```js\n             *\n             * ```\n             */\n            var self = this,\n                cfg = void 0;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n                theme: 'default', // theme of uploader\n                lang: { // 업로더 버튼 랭귀지 설정\n                    \"upload\": \"Upload\",\n                    \"abort\": \"Abort\"\n                },\n                uploadedBox: {\n                    columnKeys: {\n                        name: \"name\",\n                        type: \"type\",\n                        size: \"size\",\n                        uploadedName: \"uploadedName\",\n                        uploadedPath: \"uploadedPath\",\n                        downloadPath: \"downloadPath\",\n                        previewPath: \"previewPath\",\n                        thumbnail: \"thumbnail\"\n                    }\n                },\n                animateTime: 100,\n                accept: \"*/*\", // 업로드 선택 파일 타입 설정\n                multiple: false, // 다중 파일 업로드\n                manualUpload: false, // 업로딩 시작 수동처리 여부\n                progressBox: true // 업로드 프로그래스 박스 사용여부 false 이면 업로드 진행바를 표시 하지 않습니다. 개발자가 onprogress 함수를 이용하여 직접 구현 해야 합니다.\n            };\n            this.defaultBtns = {\n                \"upload\": { label: this.config.lang[\"upload\"], theme: \"btn-primary\" },\n                \"abort\": { label: this.config.lang[\"abort\"], theme: this.config.theme }\n            };\n\n            /// 업로드된 파일 큐\n            this.uploadedFiles = [];\n            /// 업로더 타겟\n            this.$target = null;\n            /// 업로드된 파일 정보들의 input 태그를 담아두는 컨테이너\n            this.$inputContainer = null;\n            /// input file 태그\n            this.$inputFile = null;\n            this.$inputFileForm = null;\n            /// 파일 선택버튼\n            this.$fileSelector = null;\n            /// 파일 드랍존\n            this.$dropZone = null;\n            /// 파일 목록 표시박스\n            this.$uploadedBox = null;\n\n            this.__uploading = false;\n            this.selectedFiles = [];\n            this.selectedFilesTotal = 0;\n            this.__loaded = 0;\n\n            cfg = this.config;\n\n            /**\n             * UI 상태변경 이벤트 처리자\n             * UI의 상태변경 : open, close, upload 등의 변경사항이 발생되면 onStateChanged 함수를 후출하여 이벤트를 처리\n             */\n            var bound_onStateChanged = function (that) {\n\n                var state = {\n                    \"open\": function open() {},\n                    \"close\": function close() {},\n                    \"upload\": function upload() {}\n                };\n\n                if (cfg.onStateChanged) {\n                    cfg.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                that = null;\n                return true;\n            }.bind(this);\n\n            var bound_onSelectFile = function (_evt) {\n                var files = void 0;\n\n                if (!ax5.info.supportFileApi) {\n                    // file API 지원 안되는 브라우저.\n                    // input file에 multiple 지원 안됨 그러므로 단일 파일 처리만 하면 됨.\n                    files = { path: _evt.target.value };\n                } else if ('dataTransfer' in _evt) {\n                    files = _evt.dataTransfer.files;\n                } else if ('target' in _evt) {\n                    files = _evt.target.files;\n                } else if (_evt) {\n                    files = _evt;\n                }\n\n                if (!files) return false;\n\n                /// selectedFiles에 현재 파일 정보 담아두기\n                if (length in files) {\n                    if (files.length == 1) {\n                        this.selectedFiles = [files[0]];\n                    } else {\n                        this.selectedFiles = U.toArray(files);\n                    }\n                } else {\n                    this.selectedFiles = [files];\n                }\n\n                if (cfg.progressBox) {\n                    bound_openProgressBox();\n                }\n                if (!cfg.manualUpload) {\n                    this.send();\n                }\n\n                if (!ax5.info.supportFileApi) {\n                    bound_alignLayout(false);\n                }\n            }.bind(this);\n\n            var bound_bindEvent = function () {\n                this.$fileSelector.off(\"click.ax5uploader\").on(\"click.ax5uploader\", function () {\n                    this.$inputFile.trigger(\"click\");\n                }.bind(this));\n\n                if (!ax5.info.supportFileApi) {\n                    this.$fileSelector.off(\"mouseover.ax5uploader\").on(\"mouseover.ax5uploader\", function () {\n                        bound_alignLayout(true);\n                    }.bind(this));\n\n                    this.$inputFile.off(\"mouseover.ax5uploader\").on(\"mouseover.ax5uploader\", function () {\n                        this.$fileSelector.addClass(\"active\");\n                    }.bind(this));\n\n                    this.$inputFile.off(\"mouseout.ax5uploader\").on(\"mouseout.ax5uploader\", function () {\n                        this.$fileSelector.removeClass(\"active\");\n\n                        bound_alignLayout(false);\n                    }.bind(this));\n                }\n\n                (function () {\n                    if (!this.$uploadedBox || !this.$uploadedBox.get(0)) return false;\n\n                    this.$uploadedBox.on(\"click\", \"[data-uploaded-item-cell]\", function () {\n                        var $this = jQuery(this),\n                            cellType = $this.attr(\"data-uploaded-item-cell\"),\n                            uploadedItemIndex = Number($this.parents('[data-ax5uploader-uploaded-item]').attr('data-ax5uploader-uploaded-item')),\n                            that = {};\n\n                        if (cfg.uploadedBox && cfg.uploadedBox.onclick) {\n                            that = {\n                                self: self,\n                                cellType: cellType,\n                                uploadedFiles: self.uploadedFiles,\n                                fileIndex: uploadedItemIndex\n                            };\n                            cfg.uploadedBox.onclick.call(that, that);\n                        }\n\n                        $this = null;\n                        cellType = null;\n                        uploadedItemIndex = null;\n                        that = null;\n                    });\n\n                    this.$uploadedBox.on(\"dragstart\", function (e) {\n                        U.stopEvent(e);\n                        return false;\n                    });\n                }).call(this);\n\n                (function () {\n                    // dropZone 설정 방식 변경\n                    if (!ax5.info.supportFileApi) return false;\n                    if (!this.$dropZone || !this.$dropZone.get(0)) return false;\n\n                    var timer = void 0;\n\n                    this.$dropZone.parent().on(\"click\", \"[data-ax5uploader-dropzone]\", function (e) {\n                        var $target = jQuery(e.target);\n                        if ($target.parents('[data-ax5uploader-uploaded-item]').length == 0 && !$target.attr('data-ax5uploader-uploaded-item')) {\n                            if (this == e.target || $.contains(this, e.target)) {\n                                if (U.isFunction(cfg.dropZone.onclick)) {\n                                    cfg.dropZone.onclick.call({\n                                        self: self\n                                    });\n                                } else {\n                                    self.$inputFile.trigger(\"click\");\n                                }\n                            }\n                        }\n                    });\n\n                    this.$dropZone.get(0).addEventListener('dragover', function (e) {\n                        U.stopEvent(e);\n\n                        if (U.isFunction(cfg.dropZone.ondragover)) {\n                            cfg.dropZone.ondragover.call({\n                                self: self\n                            });\n                        } else {\n                            self.$dropZone.addClass(\"dragover\");\n                        }\n                    }, false);\n\n                    this.$dropZone.get(0).addEventListener('dragleave', function (e) {\n                        U.stopEvent(e);\n\n                        if (U.isFunction(cfg.dropZone.ondragover)) {\n                            cfg.dropZone.ondragout.call({\n                                self: self\n                            });\n                        } else {\n                            self.$dropZone.removeClass(\"dragover\");\n                        }\n                    }, false);\n\n                    this.$dropZone.get(0).addEventListener('drop', function (e) {\n                        U.stopEvent(e);\n\n                        if (U.isFunction(cfg.dropZone.ondrop)) {\n                            cfg.dropZone.ondrop.call({\n                                self: self\n                            });\n                        } else {\n                            self.$dropZone.removeClass(\"dragover\");\n                        }\n\n                        bound_onSelectFile(e || window.event);\n                    }, false);\n                }).call(this);\n            }.bind(this);\n\n            var bound_alignLayout = function (_TF) {\n                // 상황이 좋지 않은경우 (만약 버튼 클릭으로 input file click이 되지 않는 다면 z-index값을 높여서 버튼위를 덮는다.)\n                if (_TF) {\n                    if (!ax5.info.supportFileApi) {\n                        // ie9에서 inputFile을 직접 클릭하지 않으면 submit 오류발생함. submit access denied\n                        // 그래서 버튼위에 inputFile을 올려두어야 함. (position값을 이용하면 편하지만..)\n                        // 그런데 form을 안에두면 또 다른 이중폼 문제 발생소지 ㅜㅜ 불가피하게 버튼의 offset 값을 이용.\n                        var box = this.$fileSelector.offset();\n                        box.width = this.$fileSelector.outerWidth();\n                        box.height = this.$fileSelector.outerHeight();\n                        this.$inputFile.css(box);\n                    }\n                } else {\n                    this.$inputFile.css({\n                        left: -1000, top: -1000\n                    });\n                }\n            }.bind(this);\n\n            var bound_alignProgressBox = function (append) {\n                var _alignProgressBox = function _alignProgressBox() {\n                    var $window = jQuery(window),\n                        $body = jQuery(document.body);\n                    var pos = {},\n                        positionMargin = 6,\n                        dim = {},\n                        pickerDim = {},\n                        pickerDirection = void 0;\n\n                    // cfg.viewport.selector\n\n                    pos = this.$progressBox.parent().get(0) == this.$target.get(0) ? this.$fileSelector.position() : this.$fileSelector.offset();\n                    dim = {\n                        width: this.$fileSelector.outerWidth(),\n                        height: this.$fileSelector.outerHeight()\n                    };\n                    pickerDim = {\n                        winWidth: Math.max($window.width(), $body.width()),\n                        winHeight: Math.max($window.height(), $body.height()),\n                        width: this.$progressBox.outerWidth(),\n                        height: this.$progressBox.outerHeight()\n                    };\n\n                    // picker css(width, left, top) & direction 결정\n                    if (!cfg.progressBoxDirection || cfg.progressBoxDirection === \"\" || cfg.progressBoxDirection === \"auto\") {\n                        // set direction\n                        pickerDirection = \"top\";\n                        if (pos.top - pickerDim.height - positionMargin < 0) {\n                            pickerDirection = \"top\";\n                        } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                            pickerDirection = \"bottom\";\n                        }\n                    } else {\n                        pickerDirection = cfg.progressBoxDirection;\n                    }\n\n                    if (append) {\n                        this.$progressBox.addClass(\"direction-\" + pickerDirection);\n                    }\n\n                    var positionCSS = function () {\n                        var css = { left: 0, top: 0 };\n                        switch (pickerDirection) {\n                            case \"top\":\n                                css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n                                css.top = pos.top + dim.height + positionMargin;\n                                break;\n                            case \"bottom\":\n                                css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n                                css.top = pos.top - pickerDim.height - positionMargin;\n                                break;\n                            case \"left\":\n                                css.left = pos.left + dim.width + positionMargin;\n                                css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n                                break;\n                            case \"right\":\n                                css.left = pos.left - pickerDim.width - positionMargin;\n                                css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n                                break;\n                        }\n                        return css;\n                    }();\n\n                    (function () {\n                        if (pickerDirection == \"top\" || pickerDirection == \"bottom\") {\n                            if (positionCSS.left < 0) {\n                                positionCSS.left = positionMargin;\n                                this.$progressBoxArrow.css({ left: pos.left + dim.width / 2 - positionCSS.left });\n                            } else if (positionCSS.left + pickerDim.width > pickerDim.winWidth) {\n                                positionCSS.left = pickerDim.winWidth - pickerDim.width - positionMargin;\n                                this.$progressBoxArrow.css({ left: pos.left + dim.width / 2 - positionCSS.left });\n                            }\n                        }\n                    }).call(this);\n\n                    this.$progressBox.css(positionCSS);\n                };\n\n                this.$progressBox.css({ top: -999 });\n                if (append) {\n                    // progressBox를 append 할 타겟 엘리먼트 펀단 후 결정.\n                    (function () {\n                        if (cfg.viewport) {\n                            return jQuery(cfg.viewport.selector);\n                        } else {\n                            return this.$target;\n                        }\n                    }).call(this).append(this.$progressBox);\n\n                    // progressBox 버튼에 이벤트 연결.\n                    this.$progressBox.off(\"click.ax5uploader\").on(\"click.ax5uploader\", \"button\", function (_evt) {\n                        var act = _evt.target.getAttribute(\"data-pregressbox-btn\");\n                        var processor = {\n                            \"upload\": function upload() {\n                                this.send();\n                            },\n                            \"abort\": function abort() {\n                                this.abort();\n                            }\n                        };\n                        if (processor[act]) processor[act].call(this);\n                    }.bind(this));\n                }\n\n                setTimeout(function () {\n                    _alignProgressBox.call(this);\n                }.bind(this));\n            }.bind(this);\n\n            var bound_openProgressBox = function () {\n                this.$progressBox.removeClass(\"destroy\");\n                this.$progressUpload.removeAttr(\"disabled\");\n                this.$progressAbort.removeAttr(\"disabled\");\n\n                // apend & align progress box\n                bound_alignProgressBox(\"append\");\n\n                // state change\n                bound_onStateChanged({\n                    self: this,\n                    state: \"open\"\n                });\n            }.bind(this);\n\n            var bound_closeProgressBox = function () {\n                this.$progressBox.addClass(\"destroy\");\n                setTimeout(function () {\n                    this.$progressBox.remove();\n                }.bind(this), cfg.animateTime);\n            }.bind(this);\n\n            var bound_startUpload = function () {\n\n                var processor = {\n                    \"html5\": function html5() {\n\n                        var uploadFile = this.selectedFiles.shift();\n                        if (!uploadFile) {\n                            // 업로드 종료\n                            bound_uploadComplete();\n                            return this;\n                        }\n\n                        if (uploadFile[0]) uploadFile = uploadFile[0];\n\n                        var formData = new FormData();\n                        //서버로 전송해야 할 추가 파라미터 정보 설정\n\n                        this.$target.find(\"input\").each(function () {\n                            formData.append(this.name, this.value);\n                        });\n                        // 파일 아이템 추가\n                        formData.append(cfg.form.fileName, uploadFile);\n\n                        this.xhr = new XMLHttpRequest();\n                        this.xhr.open(\"post\", U.isString(cfg.form.action) ? cfg.form.action : cfg.form.action(), true);\n                        this.xhr.onload = function (e) {\n                            var res = e.target.response;\n                            try {\n                                if (typeof res === \"string\") res = U.parseJson(res);\n                            } catch (e) {\n                                return false;\n                            }\n                            if (cfg.debug) console.log(res);\n\n                            if (res.error) {\n                                if (cfg.debug) console.log(res.error);\n                                if (U.isFunction(cfg.onuploaderror)) {\n                                    cfg.onuploaderror.call({\n                                        self: this,\n                                        error: res.error\n                                    }, res);\n                                }\n                                self.send();\n                                return false;\n                            }\n\n                            bound_uploaded(res);\n                            self.send();\n                        };\n                        this.xhr.upload.onprogress = function (e) {\n                            // console.log(e.loaded, e.total);\n                            bound_updateProgressBar(e);\n                            if (U.isFunction(cfg.onprogress)) {\n                                cfg.onprogress.call({\n                                    loaded: e.loaded,\n                                    total: e.total\n                                }, e);\n                            }\n                        };\n\n                        this.xhr.send(formData); // multipart/form-data\n                    },\n                    \"form\": function form() {\n\n                        /// i'm busy\n                        this.__uploading = true;\n\n                        // 폼과 iframe을 만들어 페이지 아래에 삽입 후 업로드\n                        var $iframe = jQuery('<iframe src=\"javascript:false;\" name=\"ax5uploader-' + this.instanceId + '-iframe\" style=\"display:none;\"></iframe>');\n                        jQuery(document.body).append($iframe);\n\n                        // onload 이벤트 핸들러\n                        // action에서 파일을 받아 처리한 결과값을 텍스트로 출력한다고 가정하고 iframe의 내부 데이터를 결과값으로 callback 호출\n                        $iframe.load(function () {\n                            var doc = this.contentWindow ? this.contentWindow.document : this.contentDocument ? this.contentDocument : this.document,\n                                root = doc.documentElement ? doc.documentElement : doc.body,\n                                result = root.textContent ? root.textContent : root.innerText,\n                                res = void 0;\n\n                            try {\n                                res = JSON.parse(result);\n                            } catch (e) {\n                                res = {\n                                    error: \"Syntax error\",\n                                    body: result\n                                };\n                            }\n\n                            if (cfg.debug) console.log(res);\n                            if (res.error) {\n                                console.log(res);\n                            } else {\n                                bound_uploaded(res);\n                                $iframe.remove();\n\n                                setTimeout(function () {\n                                    bound_uploadComplete();\n                                }, 300);\n                            }\n                        });\n\n                        this.$inputFileForm.attr(\"target\", 'ax5uploader-' + this.instanceId + '-iframe').attr(\"action\", cfg.form.action).submit();\n\n                        this.selectedFilesTotal = 1;\n                        bound_updateProgressBar({\n                            loaded: 1,\n                            total: 1\n                        });\n                    }\n                };\n\n                if (this.__uploading === false) {\n                    // 전체 파일 사이즈 구하기\n                    var filesTotal = 0;\n                    this.selectedFiles.forEach(function (n) {\n                        filesTotal += n.size;\n                    });\n                    this.selectedFilesTotal = filesTotal;\n                    this.__loaded = 0;\n\n                    this.__uploading = true; // 업로드 시작 상태 처리\n                    this.$progressUpload.attr(\"disabled\", \"disabled\");\n                    this.$progressAbort.removeAttr(\"disabled\");\n                }\n\n                processor[ax5.info.supportFileApi ? \"html5\" : \"form\"].call(this);\n            }.bind(this);\n\n            var bound_updateProgressBar = function (e) {\n                this.__loaded += e.loaded;\n                this.$progressBar.css({ width: U.number(this.__loaded / this.selectedFilesTotal * 100, { round: 2 }) + '%' });\n                if (e.lengthComputable) {\n                    if (e.loaded >= e.total) {}\n                }\n            }.bind(this);\n\n            var bound_uploaded = function (res) {\n                if (cfg.debug) console.log(res);\n                //this.uploadedFiles.push(res);\n                this.uploadedFiles = this.uploadedFiles.concat(res);\n                bound_repaintUploadedBox(); // 업로드된 파일 출력\n\n                if (U.isFunction(cfg.onuploaded)) {\n                    cfg.onuploaded.call({\n                        self: this\n                    }, res);\n                }\n            }.bind(this);\n\n            var bound_uploadComplete = function () {\n                this.__uploading = false; // 업로드 완료 상태처리\n                this.$progressUpload.removeAttr(\"disabled\");\n                this.$progressAbort.attr(\"disabled\", \"disabled\");\n\n                if (cfg.progressBox) {\n                    bound_closeProgressBox();\n                }\n                if (U.isFunction(cfg.onuploadComplete)) {\n                    cfg.onuploadComplete.call({\n                        self: this\n                    });\n                }\n                // update uploadedFiles display\n\n                /// reset inputFile\n                bound_attachFileTag();\n            }.bind(this);\n\n            var bound_cancelUpload = function () {\n\n                var processor = {\n                    \"html5\": function html5() {\n                        if (this.xhr) {\n                            this.xhr.abort();\n                        }\n                    },\n                    \"form\": function form() {}\n                };\n\n                this.__uploading = false; // 업로드 완료 상태처리\n                this.$progressUpload.removeAttr(\"disabled\");\n                this.$progressAbort.attr(\"disabled\", \"disabled\");\n\n                processor[ax5.info.supportFileApi ? \"html5\" : \"form\"].call(this);\n\n                if (cfg.progressBox) {\n                    bound_closeProgressBox();\n                }\n\n                //this.$inputFile.val(\"\");\n                /// reset inputFile\n                bound_attachFileTag();\n\n                if (cfg.debug) console.log(\"cancelUpload\");\n                // update uploadedFiles display\n            }.bind(this);\n\n            var bound_repaintUploadedBox = function () {\n                // uploadedBox 가 없다면 아무일도 하지 않음.\n                // onuploaded 함수 이벤트를 이용하여 개발자가 직접 업로드디 박스를 구현 한다고 이해 하자.\n                if (this.$uploadedBox === null) return this;\n\n                this.$uploadedBox.html(UPLOADER.tmpl.get(\"upoadedBox\", {\n                    uploadedFiles: this.uploadedFiles,\n                    icon: cfg.uploadedBox.icon,\n                    lang: cfg.uploadedBox.lang,\n                    supportFileApi: !!ax5.info.supportFileApi\n                }, cfg.uploadedBox.columnKeys));\n                this.$uploadedBox.find(\"img\").on(\"error\", function () {\n                    //this.src = \"\";\n                    $(this).parent().addClass(\"no-image\");\n                });\n            }.bind(this);\n\n            var bound_attachFileTag = function () {\n                if (this.$inputFile && this.$inputFile.get(0)) {\n                    this.$inputFile.remove();\n                }\n                if (this.$inputFileForm && this.$inputFileForm.get(0)) {\n                    this.$inputFileForm.remove();\n                }\n\n                this.$inputFile = jQuery(UPLOADER.tmpl.get.call(this, \"inputFile\", {\n                    instanceId: this.instanceId,\n                    multiple: cfg.multiple,\n                    accept: cfg.accept,\n                    name: cfg.form.fileName\n                }));\n\n                if (ax5.info.supportFileApi) {\n                    jQuery(document.body).append(this.$inputFile);\n                } else {\n                    this.$fileSelector.attr(\"tabindex\", -1);\n                    this.$inputFileForm = jQuery(UPLOADER.tmpl.get.call(this, \"inputFileForm\", {\n                        instanceId: this.instanceId\n                    }));\n\n                    this.$inputFileForm.append(this.$inputFile);\n                    jQuery(document.body).append(this.$inputFileForm);\n                }\n\n                this.$inputFile.off(\"change.ax5uploader\").on(\"change.ax5uploader\", function (_evt) {\n                    bound_onSelectFile(_evt);\n                }.bind(this));\n            }.bind(this);\n\n            /**\n             * Preferences of uploader UI\n             * @method ax5uploader.setConfig\n             * @param {Object} _config - 클래스 속성값\n             * @param {Element} _config.target\n             * @param {Object} _config.form\n             * @param {String} _config.form.action - upload URL\n             * @param {String} _config.form.fileName - The name key of the upload file\n             * @param {Boolean} [_config.multiple=false] - Whether multiple files. In a browser where fileApi is not supported (eg IE9), it only works with false.\n             * @param {String} [_config.accept=\"\"] - accept mimeType (http://www.w3schools.com/TAgs/att_input_accept.asp)\n             * @param {Boolean} [_config.manualUpload=false] - Whether to automatically upload when a file is selected.\n             * @param {Boolean} [_config.progressBox=true] - Whether to use progressBox\n             * @param {String} [_config.progressBoxDirection=auto] - ProgressBox display direction\n             * @param {Object} [_config.dropZone]\n             * @param {Element} [_config.dropZone.target]\n             * @param {Function} [_config.dropZone.onclick]\n             * @param {Function} [_config.dropZone.ondragover]\n             * @param {Function} [_config.dropZone.ondragout]\n             * @param {Function} [_config.dropZone.ondrop]\n             * @param {Object} [_config.uploadedBox]\n             * @param {Element} [_config.uploadedBox.target]\n             * @param {Element} [_config.uploadedBox.icon]\n             * @param {Object} [_config.uploadedBox.columnKeys]\n             * @param {String} [_config.uploadedBox.columnKeys.name]\n             * @param {String} [_config.uploadedBox.columnKeys.type]\n             * @param {String} [_config.uploadedBox.columnKeys.size]\n             * @param {String} [_config.uploadedBox.columnKeys.uploadedName]\n             * @param {String} [_config.uploadedBox.columnKeys.downloadPath]\n             * @param {Object} [_config.uploadedBox.lang]\n             * @param {String} [_config.uploadedBox.lang.supportedHTML5_emptyListMsg]\n             * @param {String} [_config.uploadedBox.lang.emptyListMsg]\n             * @param {Function} [_config.uploadedBox.onchange]\n             * @param {Function} [_config.uploadedBox.onclick]\n             * @param {Function} [_config.validateSelectedFiles]\n             * @param {Function} [_config.onprogress] - return loaded, total\n             * @param {Function} [_config.onuploaded] - return self\n             * @param {Function} [_config.onuploaderror] - return self, error\n             * @param {Function} [_config.onuploadComplete] - return self\n             * @returns {ax5uploader}\n             * @example\n             * ```js\n             *\n             * ```\n             */\n            this.init = function (_config) {\n                cfg = jQuery.extend(true, {}, cfg, _config);\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5uploader\", \"401\", \"init\"));\n                    return this;\n                }\n\n                this.$target = jQuery(cfg.target);\n\n                // 파일 드랍존은 옵션 사항.\n                if (cfg.dropZone && cfg.dropZone.target && ax5.info.supportFileApi) {\n                    this.$dropZone = jQuery(cfg.dropZone.target);\n                    this.$dropZone.attr(\"data-ax5uploader-dropzone\", this.instanceId);\n                }\n\n                // uploadedBox 옵션 사항\n                if (cfg.uploadedBox && cfg.uploadedBox.target) {\n                    this.$uploadedBox = jQuery(cfg.uploadedBox.target);\n                }\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        cfg = jQuery.extend(true, cfg, data);\n                    }\n                }).call(this, U.parseJson(this.$target.attr(\"data-ax5uploader-config\"), true));\n\n                // detect element\n                /// fileSelector 수집\n                this.$fileSelector = this.$target.find('[data-ax5uploader-button=\"selector\"]');\n\n                if (this.$fileSelector.length === 0) {\n                    console.log(ax5.info.getError(\"ax5uploader\", \"402\", \"can not find file selector\"));\n                    return this;\n                }\n\n                // input file 추가\n                bound_attachFileTag();\n\n                // btns 확인\n                cfg.btns = jQuery.extend({}, this.defaultBtns, cfg.btns);\n\n                this.$progressBox = jQuery(UPLOADER.tmpl.get.call(this, \"progressBox\", {\n                    instanceId: this.instanceId,\n                    btns: cfg.btns\n                }));\n                this.$progressBar = this.$progressBox.find('[role=\"progressbar\"]');\n                this.$progressBoxArrow = this.$progressBox.find(\".ax-progressbox-arrow\");\n                this.$progressUpload = this.$progressBox.find('[data-pregressbox-btn=\"upload\"]');\n                this.$progressAbort = this.$progressBox.find('[data-pregressbox-btn=\"abort\"]');\n\n                // file API가 지원되지 않는 브라우저는 중지 기능 제공 못함.\n                if (!ax5.info.supportFileApi) {\n                    this.$progressAbort.hide();\n                }\n                // 파일버튼 등에 이벤트 연결.\n                bound_bindEvent();\n\n                bound_repaintUploadedBox();\n                return this;\n            };\n\n            /**\n             * @method ax5uploader.send\n             * @returns {ax5uploader}\n             *\n             */\n            this.send = function () {\n                return function () {\n                    // 업로드 시작\n                    if (this.selectedFiles.length && U.isFunction(cfg.validateSelectedFiles)) {\n                        var that = {\n                            self: this,\n                            uploadedFiles: this.uploadedFiles,\n                            selectedFiles: this.selectedFiles\n                        };\n                        if (!cfg.validateSelectedFiles.call(that, that)) {\n                            bound_cancelUpload();\n                            return false;\n                            // 전송처리 안함.\n                        }\n                    }\n\n                    bound_startUpload();\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5uploader.abort\n             * @returns {ax5uploader}\n             */\n            this.abort = function () {\n                return function () {\n                    if (!ax5.info.supportFileApi) {\n                        alert(\"This browser not supported abort method\");\n                        return this;\n                    }\n                    bound_cancelUpload();\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5uploader.setUploadedFiles\n             * @param {Array} _files - JSON formatting can all be overridden in columnKeys.\n             * @returns {ax5uploader}\n             * @example\n             * ```js\n             * var upload1 = new ax5.ui.uploader();\n             * upload1.setConfig({\n             *  ...\n             * });\n             *\n             *\n             * $.ajax({\n             *     url: \"api/fileListLoad.php\",\n             *     success: function (res) {\n             *         // res JSON format\n             *         // [{\n             *         // \"name\": \"barcode-scan-ani.gif\",\n             *         // \"saveName\": \"barcode-scan-ani.gif\",\n             *         // \"type\": \"file\",\n             *         // \"fileSize\": \"3891664\",\n             *         // \"uploadedPath\": \"/ax5ui-uploader/test/api/files\",\n             *         // \"thumbUrl\": \"\"\n             *         // }]\n             *         upload1.setUploadedFiles(res);\n             *     }\n             * });\n             * ```\n             */\n            this.setUploadedFiles = function (_files) {\n                if (U.isArray(_files)) {\n                    this.uploadedFiles = _files;\n                }\n                if (U.isString(_files)) {\n                    try {\n                        this.uploadedFiles = JSON.parse(_files);\n                    } catch (e) {}\n                }\n\n                bound_repaintUploadedBox();\n                return this;\n            };\n\n            /**\n             * clear uploadedFiles\n             * @method ax5uploader.clear\n             * @returns {ax5uploader}\n             */\n            this.clear = function () {\n                this.setUploadedFiles([]);\n                return this;\n            };\n\n            /**\n             * Removes the object corresponding to the index passed to the argument from uploadedFiles.\n             * @method ax5uploader.removeFile\n             * @param {Number} _index\n             * @returns {ax5uploader}\n             * @example\n             * ```js\n             * // The actual file is not deleted\n             * upload1.removeFile(fileIndex);\n             * ```\n             */\n            this.removeFile = function (_index) {\n                if (!isNaN(Number(_index))) {\n                    this.uploadedFiles.splice(_index, 1);\n                }\n                bound_repaintUploadedBox();\n                return this;\n            };\n\n            /**\n             * Empty uploadedFiles\n             * @method ax5uploader.removeFileAll\n             * @returns {ax5uploader}\n             * @example\n             * ```js\n             *\n             * ```\n             */\n            this.removeFileAll = function () {\n                this.uploadedFiles = [];\n                bound_repaintUploadedBox();\n                return this;\n            };\n\n            /**\n             * @method ax5uploader.selectFile\n             * @returns {Boolean}\n             */\n            this.selectFile = function () {\n                if (ax5.info.supportFileApi) {\n                    this.$inputFile.trigger(\"click\");\n                    return true;\n                }\n                return false;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                UI.uploader_instance = UI.uploader_instance || [];\n                UI.uploader_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                } else {\n                    //this.init();\n                }\n            }.apply(this, arguments);\n        };\n        return ax5uploader;\n    }());\n\n    UPLOADER = ax5.ui.uploader;\n})();\n// ax5.ui.uploader.tmpl\n(function () {\n\n    var UPLOADER = ax5.ui.uploader;\n\n    var uploadProgress = function uploadProgress(columnKeys) {\n        return '\\n        ';\n    };\n\n    var inputFile = function inputFile(columnKeys) {\n        return '<input type=\"file\" data-ax5uploader-input=\"{{instanceId}}\" name=\"{{name}}\" {{#multiple}}multiple{{/multiple}} accept=\"{{accept}}\" />';\n    };\n\n    var inputFileForm = function inputFileForm(columnKeys) {\n        return '<form data-ax5uploader-form=\"{{instanceId}}\" name=\"ax5uploader-{{instanceId}}-form\" method=\"post\" enctype=\"multipart/form-data\"></form>';\n    };\n\n    var progressBox = function progressBox(columnKeys) {\n        return '\\n<div data-ax5uploader-progressbox=\"{{instanceId}}\" class=\"{{theme}}\">\\n    <div class=\"ax-progressbox-body\">\\n        <div class=\"ax-pregressbox-content\">\\n            <div class=\"progress\">\\n              <div class=\"progress-bar progress-bar-striped active\" role=\"progressbar\" style=\"width: 0\">\\n                <span class=\"sr-only\">0% Complete</span>\\n              </div>\\n            </div>\\n        </div>\\n        {{#btns}}\\n            <div class=\"ax-progressbox-buttons\">\\n            {{#btns}}\\n                {{#@each}}\\n                <button data-pregressbox-btn=\"{{@key}}\" class=\"btn btn-default {{@value.theme}}\">{{@value.label}}</button>\\n                {{/@each}}\\n            {{/btns}}\\n            </div>\\n        {{/btns}}\\n    </div>\\n    <div class=\"ax-progressbox-arrow\"></div>\\n</div>\\n';\n    };\n\n    var upoadedBox = function upoadedBox(columnKeys) {\n        return '\\n{{#uploadedFiles}}<div data-ax5uploader-uploaded-item=\"{{@i}}\">\\n    <div class=\"uploaded-item-preview\">\\n        {{#' + columnKeys.thumbnail + '}}<img src=\"' + columnKeys.apiServerUrl + '{{' + columnKeys.thumbnail + '}}\">{{/' + columnKeys.thumbnail + '}}\\n    </div>\\n    <div class=\"uploaded-item-holder\">\\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"download\">{{{icon.download}}}</div>\\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"filename\">{{' + columnKeys.name + '}}</div>\\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"filesize\">({{#@fn_get_byte}}{{' + columnKeys.size + '}}{{/@fn_get_byte}})</div>\\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"delete\">{{{icon.delete}}}</div>\\n    </div>\\n</div>{{/uploadedFiles}}\\n{{^uploadedFiles}}\\n{{#supportFileApi}}{{{lang.supportedHTML5_emptyListMsg}}}{{/supportFileApi}}\\n{{^supportFileApi}}{{{lang.emptyListMsg}}}{{/supportFileApi}}\\n{{/uploadedFiles}}\\n';\n    };\n\n    UPLOADER.tmpl = {\n        \"uploadProgress\": uploadProgress,\n        \"inputFile\": inputFile,\n        \"inputFileForm\": inputFileForm,\n        \"progressBox\": progressBox,\n        \"upoadedBox\": upoadedBox,\n\n        get: function get(tmplName, data, columnKeys) {\n            data[\"@fn_get_byte\"] = function () {\n                return function (text, render) {\n                    return ax5.util.number(render(text), { round: 2, byte: true });\n                };\n            };\n            return ax5.mustache.render(UPLOADER.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n// ax5.ui.combobox\n(function () {\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var COMBOBOX = void 0;\n\n    UI.addClass({\n        className: \"combobox\"\n    }, function () {\n        /**\n         * @class ax5combobox\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var options = [];\n         * options.push({value: \"1\", text: \"string\"});\n         * options.push({value: \"2\", text: \"number\"});\n         * options.push({value: \"3\", text: \"substr\"});\n         * options.push({value: \"4\", text: \"substring\"});\n         * options.push({value: \"search\", text: \"search\"});\n         * options.push({value: \"parseInt\", text: \"parseInt\"});\n         * options.push({value: \"toFixed\", text: \"toFixed\"});\n         * options.push({value: \"min\", text: \"min\"});\n         * options.push({value: \"max\", text: \"max\"});\n         *\n         * var myCombo = new ax5.ui.combobox({\n         *     theme: \"danger\",\n         *     removeIcon: '<i class=\"fa fa-times\" aria-hidden=\"true\"></i>'\n         * });\n         * ```\n         */\n        return function () {\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: \"default\",\n                animateTime: 250,\n                removeIcon: \"X\",\n                lang: {\n                    noSelected: \"\",\n                    noOptions: \"no options\",\n                    loading: \"now loading..\"\n                },\n                columnKeys: {\n                    optionValue: \"value\",\n                    optionText: \"text\",\n                    optionSelected: \"selected\"\n                }\n            };\n\n            this.queue = [];\n            this.activecomboboxOptionGroup = null;\n            this.activecomboboxQueueIndex = -1;\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.waitOptionsCallback = null;\n            this.keyUpTimer = null;\n\n            cfg = this.config;\n\n            var $window = jQuery(window);\n            var ctrlKeys = {\n                \"18\": \"KEY_ALT\",\n                \"8\": \"KEY_BACKSPACE\",\n                \"17\": \"KEY_CONTROL\",\n                \"46\": \"KEY_DELETE\",\n                \"40\": \"KEY_DOWN\",\n                \"35\": \"KEY_END\",\n                \"187\": \"KEY_EQUAL\",\n                \"27\": \"KEY_ESC\",\n                \"36\": \"KEY_HOME\",\n                \"45\": \"KEY_INSERT\",\n                \"37\": \"KEY_LEFT\",\n                \"189\": \"KEY_MINUS\",\n                \"34\": \"KEY_PAGEDOWN\",\n                \"33\": \"KEY_PAGEUP\",\n                // \"190\": \"KEY_PERIOD\",\n                \"13\": \"KEY_RETURN\",\n                \"39\": \"KEY_RIGHT\",\n                \"16\": \"KEY_SHIFT\",\n                // \"32\": \"KEY_SPACE\",\n                \"9\": \"KEY_TAB\",\n                \"38\": \"KEY_UP\",\n                \"91\": \"KEY_WINDOW\"\n                //\"107\" : \"NUMPAD_ADD\",\n                //\"194\" : \"NUMPAD_COMMA\",\n                //\"110\" : \"NUMPAD_DECIMAL\",\n                //\"111\" : \"NUMPAD_DIVIDE\",\n                //\"12\" : \"NUMPAD_EQUAL\",\n                //\"106\" : \"NUMPAD_MULTIPLY\",\n                //\"109\" : \"NUMPAD_SUBTRACT\"\n            },\n                onStateChanged = function onStateChanged(item, that) {\n                if (item && item.onStateChanged) {\n                    item.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                if (that.state == \"changeValue\") {\n                    if (item && item.onChange) {\n                        item.onChange.call(that, that);\n                    } else if (this.onChange) {\n                        this.onChange.call(that, that);\n                    }\n                }\n\n                item = null;\n                that = null;\n                return true;\n            },\n                alignComboboxDisplay = function alignComboboxDisplay() {\n                var i = this.queue.length,\n                    w;\n\n                while (i--) {\n                    var item = this.queue[i];\n                    if (item.$display) {\n                        w = Math.max(item.$select.outerWidth(), U.number(item.minWidth));\n                        item.$display.css({\n                            \"min-width\": w\n                        });\n                        if (item.reset) {\n                            item.$display.find(\".addon-icon-reset\").css({\n                                \"line-height\": this.queue[i].$display.height() + \"px\"\n                            });\n                        }\n\n                        // 높이조절 처리\n                        if (item.multiple) {\n                            var displayTableHeightAdjust = function () {\n                                return U.number(item.$display.css(\"border-top-width\")) + U.number(item.$display.css(\"border-bottom-width\"));\n                            }.call(this);\n                            item.$target.height(\"\");\n                            item.$display.height(\"\");\n\n                            var displayTableHeight = item.$displayTable.outerHeight();\n                            if (Math.abs(displayTableHeight - item.$target.height()) > displayTableHeightAdjust) {\n                                item.$target.css({\n                                    height: displayTableHeight + displayTableHeightAdjust + 4\n                                });\n                                item.$display.css({\n                                    height: displayTableHeight + displayTableHeightAdjust + 4\n                                });\n                            }\n                        }\n                    }\n                }\n\n                i = null;\n                w = null;\n                return this;\n            },\n                alignComboboxOptionGroup = function alignComboboxOptionGroup(append) {\n                if (!this.activecomboboxOptionGroup) return this;\n\n                var item = this.queue[this.activecomboboxQueueIndex],\n                    pos = {},\n                    positionMargin = 0,\n                    dim = {},\n                    pickerDim = {},\n                    pickerDirection;\n\n                if (append) jQuery(document.body).append(this.activecomboboxOptionGroup);\n\n                pos = item.$target.offset();\n                dim = {\n                    width: item.$target.outerWidth(),\n                    height: item.$target.outerHeight()\n                };\n                pickerDim = {\n                    winWidth: Math.max($window.width(), jQuery(document.body).width()),\n                    winHeight: Math.max($window.height(), jQuery(document.body).height()),\n                    width: this.activecomboboxOptionGroup.outerWidth(),\n                    height: this.activecomboboxOptionGroup.outerHeight()\n                };\n\n                // picker css(width, left, top) & direction 결정\n                if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n                    // set direction\n                    pickerDirection = \"top\";\n\n                    if (pos.top - pickerDim.height - positionMargin < 0) {\n                        pickerDirection = \"top\";\n                    } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                        pickerDirection = \"bottom\";\n                    }\n                } else {\n                    pickerDirection = item.direction;\n                }\n\n                if (append) {\n                    this.activecomboboxOptionGroup.addClass(\"direction-\" + pickerDirection);\n                }\n                this.activecomboboxOptionGroup.css(function () {\n                    if (pickerDirection == \"top\") {\n                        if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                            var newTop = pos.top + dim.height / 2 - pickerDim.height / 2;\n                            if (newTop + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                                newTop = 0;\n                            }\n                            if (newTop < 0) {\n                                newTop = 0;\n                            }\n\n                            return {\n                                left: pos.left,\n                                top: newTop,\n                                width: dim.width\n                            };\n                        }\n                        return {\n                            left: pos.left,\n                            top: pos.top + dim.height + 1,\n                            width: dim.width\n                        };\n                    } else if (pickerDirection == \"bottom\") {\n                        return {\n                            left: pos.left,\n                            top: pos.top - pickerDim.height - 1,\n                            width: dim.width\n                        };\n                    }\n                }.call(this));\n            },\n                onBodyClick = function onBodyClick(e, target) {\n                if (!this.activecomboboxOptionGroup) return this;\n\n                var item = this.queue[this.activecomboboxQueueIndex],\n                    clickEl = \"display\";\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-option-value\")) {\n                        clickEl = \"optionItem\";\n                        return true;\n                    } else if (item.$target.get(0) == target) {\n                        clickEl = \"display\";\n                        return true;\n                    }\n                });\n\n                if (!target) {\n                    this.close();\n                    return this;\n                } else if (clickEl === \"optionItem\") {\n                    setOptionSelect.call(this, item.id, {\n                        index: {\n                            gindex: target.getAttribute(\"data-option-group-index\"),\n                            index: target.getAttribute(\"data-option-index\")\n                        }\n                    }, undefined, true);\n\n                    alignComboboxDisplay.call(this);\n                    alignComboboxOptionGroup.call(this);\n\n                    if (!item.multiple) {\n                        this.close();\n                    }\n                } else {}\n\n                return this;\n            },\n                getLabel = function getLabel(queIdx) {\n                var item = this.queue[queIdx];\n\n                // 템플릿에 전달 해야할 데이터 선언\n                var data = {};\n                data.id = item.id;\n                data.theme = item.theme;\n                data.size = \"ax5combobox-option-group-\" + item.size;\n                data.multiple = item.multiple;\n                data.lang = item.lang;\n                data.options = item.options;\n                data.selected = item.selected;\n                data.hasSelected = data.selected && data.selected.length > 0;\n                data.removeIcon = item.removeIcon;\n\n                return COMBOBOX.tmpl.get.call(this, \"label\", data, item.columnKeys);\n            },\n                printLabel = function printLabel(queIdx) {\n                var item = this.queue[queIdx];\n\n                item.$displayLabel.find(\"[data-ax5combobox-selected-label]\").remove();\n                item.$displayLabelInput.before(getLabel.call(this, queIdx));\n            },\n                focusLabel = function focusLabel(queIdx) {\n                if (this.queue[queIdx].disabled) return this;\n\n                this.queue[queIdx].$displayLabel.trigger(\"focus\");\n                this.queue[queIdx].$displayLabelInput.focus();\n            },\n                clearLabel = function clearLabel(queIdx) {\n                this.queue[queIdx].$displayLabelInput.val(\"\");\n            },\n                blurLabel = function blurLabel(queIdx) {\n                this.queue[queIdx].$displayLabel.trigger(\"blur\");\n                this.queue[queIdx].$displayLabelInput.trigger(\"blur\");\n            },\n                onSearch = function onSearch(queIdx, searchWord) {\n                this.queue[queIdx].waitOptions = true;\n\n                this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(COMBOBOX.tmpl.get.call(this, \"option\", this.queue[queIdx], this.queue[queIdx].columnKeys)));\n\n                this.queue[queIdx].onSearch.call({\n                    self: this,\n                    item: this.queue[queIdx],\n                    searchWord: searchWord\n                }, function (O) {\n                    var data = {};\n                    var item = this.queue[this.activecomboboxQueueIndex];\n                    if (!item) return false;\n\n                    /// 현재 selected 검증후 처리\n                    (function (item, O) {\n                        var optionsMap = {};\n                        O.options.forEach(function (_O, _OIndex) {\n                            _O[\"@index\"] = _OIndex;\n                            optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                        });\n                        if (U.isArray(item.selected)) {\n                            item.selected.forEach(function (_O) {\n                                if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                    O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                }\n                            });\n                        }\n                    })(item, O);\n\n                    item.options = syncComboboxOptions.call(this, this.activecomboboxQueueIndex, O.options);\n\n                    alignComboboxDisplay.call(this);\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5combobox-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n                    data.lang = item.lang;\n                    data.options = item.options;\n\n                    this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(COMBOBOX.tmpl.get.call(this, \"options\", data, item.columnKeys)));\n                }.bind(this));\n            },\n                focusWord = function focusWord(queIdx, searchWord) {\n                //console.log(searchWord);\n\n                if (this.activecomboboxQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                var options = [],\n                    i = -1,\n                    l = this.queue[queIdx].indexedOptions.length - 1,\n                    n;\n\n                if (searchWord != \"\") {\n                    var regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n                    searchWord = searchWord.replace(regExp, \"\");\n                    if (this.queue[queIdx].onSearch) {\n                        onSearch.call(this, queIdx, searchWord);\n\n                        try {\n                            return options;\n                        } finally {\n                            options = null;\n                            i = null;\n                            l = null;\n                            n = null;\n                        }\n                        // if there is a \"onSearch\", to end this process\n                    }\n\n                    while (l - i++) {\n                        n = this.queue[queIdx].indexedOptions[i];\n\n                        if ((\"\" + n.text).toLowerCase() == searchWord.toLowerCase()) {\n                            options = [{ \"@findex\": n[\"@findex\"], optionsSort: 0 }];\n                            break;\n                        } else {\n                            var sort = (\"\" + n.text).toLowerCase().search(searchWord.toLowerCase());\n                            if (sort > -1) {\n                                options.push({\n                                    \"@findex\": n[\"@findex\"],\n                                    optionsSort: sort\n                                });\n                                if (options.length > 2) break;\n                            }\n                            sort = null;\n                        }\n                    }\n                    options.sort(function (a, b) {\n                        return a.optionsSort - b.optionsSort;\n                    });\n                }\n\n                if (options && options.length > 0) {\n                    focusMove.call(this, queIdx, undefined, options[0][\"@findex\"]);\n                } else {\n                    focusClear.call(this, queIdx);\n                }\n\n                try {\n                    return options;\n                } finally {\n                    options = null;\n                    i = null;\n                    l = null;\n                    n = null;\n                }\n            },\n                focusClear = function focusClear(queIdx) {\n                if (this.activecomboboxOptionGroup) {\n                    this.activecomboboxOptionGroup.find(\"[data-option-focus-index]\").removeClass(\"hover\").removeAttr(\"data-option-selected\");\n                }\n\n                this.queue[queIdx].optionFocusIndex = -1;\n            },\n                focusMove = function focusMove(queIdx, direction, findex) {\n                var _focusIndex, _prevFocusIndex, focusOptionEl, optionGroupScrollContainer;\n                var item = this.queue[queIdx];\n\n                if (this.activecomboboxOptionGroup && item.options && item.options.length > 0) {\n                    if (typeof findex !== \"undefined\") {\n                        _focusIndex = findex;\n                    } else {\n                        _prevFocusIndex = item.optionFocusIndex == -1 ? item.optionSelectedIndex || -1 : item.optionFocusIndex;\n                        if (_prevFocusIndex == -1) {\n                            _focusIndex = 0;\n                            //_focusIndex = (direction > 0) ? 0 : item.optionItemLength - 1; // 맨 끝으로 보낼것인가 말 것인가.\n                        } else {\n                            _focusIndex = _prevFocusIndex + direction;\n                            if (_focusIndex < 0) _focusIndex = 0;else if (_focusIndex > item.optionItemLength - 1) _focusIndex = item.optionItemLength - 1;\n                        }\n                    }\n\n                    item.optionFocusIndex = _focusIndex;\n\n                    // 포커스 인덱스가 hide아이템을 만나면 hide 아이템이 안나올 때까지 루프를 순회 합니다.\n                    // todo : editable 로 추가된 options가 제거 되지 않으므로. 인덱스 검색을 좀 더 보강 해야함.\n                    if (item.options[_focusIndex] && item.options[_focusIndex].hide) {\n                        // 옵션이 없는 값이 선택된 경우\n                        if (typeof direction === \"undefined\") {\n                            return this;\n                        } else {\n                            var isStrop = false;\n                            while (item.options[_focusIndex].hide) {\n                                _focusIndex = _focusIndex + direction;\n                                if (_focusIndex < 0) {\n                                    _focusIndex = 0;\n                                    break;\n                                } else if (_focusIndex > item.optionItemLength - 1) {\n                                    _focusIndex = item.optionItemLength - 1;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n\n                    if (typeof _focusIndex !== \"undefined\") {\n                        this.activecomboboxOptionGroup.find(\"[data-option-focus-index]\").removeClass(\"hover\");\n\n                        focusOptionEl = this.activecomboboxOptionGroup.find('[data-option-focus-index=\"' + _focusIndex + '\"]').addClass(\"hover\");\n\n                        optionGroupScrollContainer = this.activecomboboxOptionGroup.find('[data-els=\"content\"]');\n\n                        if (focusOptionEl.get(0)) {\n                            var focusOptionElHeight = focusOptionEl.outerHeight(),\n                                optionGroupScrollContainerHeight = optionGroupScrollContainer.innerHeight(),\n                                optionGroupScrollContainerScrollTop = optionGroupScrollContainer.scrollTop(),\n                                focusOptionElTop = focusOptionEl.position().top + optionGroupScrollContainer.scrollTop();\n\n                            if (optionGroupScrollContainerHeight + optionGroupScrollContainerScrollTop < focusOptionElTop + focusOptionElHeight) {\n                                optionGroupScrollContainer.scrollTop(focusOptionElTop + focusOptionElHeight - optionGroupScrollContainerHeight);\n                            } else if (optionGroupScrollContainerScrollTop > focusOptionElTop) {\n                                optionGroupScrollContainer.scrollTop(focusOptionElTop);\n                            }\n                            // optionGroup scroll check\n\n                            if (typeof direction !== \"undefined\") {\n                                item.$displayLabelInput.val(item.options[_focusIndex].text);\n                            }\n                        }\n                    }\n                }\n            },\n                syncComboboxOptions = function () {\n                var setSelected = function setSelected(queIdx, O) {\n                    if (!O) {\n                        this.queue[queIdx].selected = [];\n                    } else {\n                        this.queue[queIdx].selected.push(jQuery.extend({}, O));\n                        /*\n                                     콤보박스는 selected가 없을 때 options의 첫번째 아이템이 selected가 되지 않는다.\n                                     if (this.queue[queIdx].multiple) this.queue[queIdx].selected.push(jQuery.extend({}, O));\n                                     else this.queue[queIdx].selected[0] = jQuery.extend({}, O);\n                                     */\n                    }\n                };\n\n                return function (queIdx, options) {\n                    var item = this.queue[queIdx];\n                    var po,\n                        elementOptions,\n                        newOptions,\n                        focusIndex = 0;\n                    setSelected.call(this, queIdx, false); // item.selected 초기화\n\n                    if (options) {\n                        item.options = options;\n                        item.indexedOptions = [];\n\n                        // combobox options 태그 생성\n                        po = [];\n                        po.push('<option value=\"\"></option>');\n\n                        item.options.forEach(function (O, OIndex) {\n                            /// @gindex : index of optionGroup\n                            /// @index : index of options (if you use optionGroup then the index is not unique)\n                            if (O.optgroup) {\n                                O[\"@gindex\"] = OIndex;\n                                O.options.forEach(function (OO, OOIndex) {\n                                    OO[\"@index\"] = OOIndex;\n                                    OO[\"@findex\"] = focusIndex;\n                                    po.push('<option value=\"' + OO[item.columnKeys.optionValue] + '\" ' + (OO[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : \"\") + \">\" + OO[item.columnKeys.optionText] + \"</option>\");\n                                    if (OO[item.columnKeys.optionSelected]) {\n                                        setSelected.call(self, queIdx, OO);\n                                    }\n\n                                    item.indexedOptions.push({\n                                        \"@gindex\": OIndex,\n                                        \"@index\": OOIndex,\n                                        \"@findex\": focusIndex,\n                                        value: OO[item.columnKeys.optionValue],\n                                        text: OO[item.columnKeys.optionText]\n                                    });\n                                    focusIndex++;\n                                });\n                            } else {\n                                O[\"@index\"] = OIndex;\n                                O[\"@findex\"] = focusIndex;\n                                po.push('<option value=\"' + O[item.columnKeys.optionValue] + '\" ' + (O[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : \"\") + \">\" + O[item.columnKeys.optionText] + \"</option>\");\n                                if (O[item.columnKeys.optionSelected]) {\n                                    setSelected.call(self, queIdx, O);\n                                }\n\n                                item.indexedOptions.push({\n                                    \"@index\": OIndex,\n                                    \"@findex\": focusIndex,\n                                    value: O[item.columnKeys.optionValue],\n                                    text: O[item.columnKeys.optionText]\n                                });\n                                focusIndex++;\n                            }\n                        });\n                        item.optionItemLength = focusIndex;\n                        item.$select.html(po.join(\"\"));\n                    } else {\n                        /// select > options 태그로 스크립트 options를 만들어주는 역할\n                        if (item.$select.get(0).options && item.$select.get(0).options.length) item.$select.get(0).options[0].selected = false;\n                        elementOptions = U.toArray(item.$select.get(0).options);\n\n                        // select option 스크립트 생성\n                        newOptions = [];\n                        elementOptions.forEach(function (O, OIndex) {\n                            var option = {};\n                            option[item.columnKeys.optionValue] = O.value;\n                            option[item.columnKeys.optionText] = O.text;\n                            option[item.columnKeys.optionSelected] = O.selected;\n                            option[\"@index\"] = OIndex;\n                            option[\"@findex\"] = focusIndex;\n                            if (O.selected) setSelected.call(self, queIdx, option);\n                            newOptions.push(option);\n                            focusIndex++;\n\n                            option = null;\n                        });\n                        item.options = newOptions;\n                        item.indexedOptions = newOptions;\n\n                        item.$select.prepend('<option value=\"\"></option>');\n                        item.$select.get(0).options[0].selected = true;\n                    }\n\n                    po = null;\n                    elementOptions = null;\n                    newOptions = null;\n                    return item.options;\n                };\n            }(),\n                getQueIdx = function getQueIdx(boundID) {\n                if (boundID instanceof jQuery) {\n                    boundID = boundID.data(\"data-ax5combobox-id\");\n                } else if (!U.isString(boundID)) {\n                    boundID = jQuery(boundID).data(\"data-ax5combobox-id\");\n                }\n                if (!U.isString(boundID)) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"getQueIdx\"));\n                    return;\n                }\n                return U.search(this.queue, function () {\n                    return this.id == boundID;\n                });\n            },\n                getSelected = function getSelected(_item, o, selected) {\n                if (typeof selected === \"undefined\") {\n                    return _item.multiple ? !o : true;\n                } else {\n                    return selected;\n                }\n            },\n                clearSelected = function clearSelected(queIdx) {\n                this.queue[queIdx].options.forEach(function (n) {\n                    if (n.optgroup) {\n                        n.options.forEach(function (nn) {\n                            nn.selected = false;\n                        });\n                    } else {\n                        n.selected = false;\n                    }\n                });\n            },\n                setOptionSelect = function () {\n                var processor = {\n                    index: function index(queIdx, value, selected, setValueType) {\n                        // 클래스 내부에서 호출된 형태, 그런 이유로 옵션그룹에 대한 상태를 변경 하고 있다.\n                        var item = this.queue[queIdx];\n\n                        if (U.isString(value.index.gindex)) {\n                            if (typeof item.options[value.index.gindex] !== \"undefined\") {\n                                item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected] = getSelected(item, item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected], selected);\n\n                                if (self.activecomboboxOptionGroup) {\n                                    self.activecomboboxOptionGroup.find('[data-option-group-index=\"' + value.index.gindex + '\"][data-option-index=\"' + value.index.index + '\"]').attr(\"data-option-Selected\", item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected].toString());\n                                }\n                            }\n                        } else {\n                            if (typeof item.options[value.index.index] !== \"undefined\") {\n                                item.options[value.index.index][item.columnKeys.optionSelected] = getSelected(item, item.options[value.index.index][item.columnKeys.optionSelected], selected);\n\n                                if (self.activecomboboxOptionGroup) {\n                                    self.activecomboboxOptionGroup.find('[data-option-index=\"' + value.index.index + '\"]').attr(\"data-option-Selected\", item.options[value.index.index][item.columnKeys.optionSelected].toString());\n                                }\n                            }\n                        }\n\n                        if (typeof setValueType === \"undefined\" || setValueType !== \"justSetValue\") {\n                            syncComboboxOptions.call(this, queIdx, item.options);\n                            alignComboboxOptionGroup.call(this);\n                        }\n                    },\n                    arr: function arr(queIdx, values, selected, setValueType) {\n                        values.forEach(function (value) {\n                            if (U.isString(value) || U.isNumber(value)) {\n                                processor.text.call(self, queIdx, value, selected, \"justSetValue\");\n                            } else {\n                                for (var key in processor) {\n                                    if (value[key]) {\n                                        processor[key].call(self, queIdx, value, selected, \"justSetValue\");\n                                        break;\n                                    }\n                                }\n                            }\n                        });\n\n                        syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                        alignComboboxOptionGroup.call(this);\n                    },\n                    value: function value(queIdx, _value3, selected, setValueType) {\n                        var item = this.queue[queIdx];\n                        var addOptions;\n                        var optionIndex = U.search(item.options, function () {\n                            return this[item.columnKeys.optionValue] == _value3[item.columnKeys.optionValue];\n                        });\n\n                        if (optionIndex > -1) {\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                        } else {\n                            // 새로운 값 추가\n                            optionIndex = item.options.length;\n                            addOptions = {\n                                \"@index\": optionIndex,\n                                hide: true,\n                                addedOption: true\n                            };\n                            addOptions[item.columnKeys.optionValue] = _value3;\n                            addOptions[item.columnKeys.optionText] = _value3;\n                            item.options.push(addOptions);\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                        }\n                        if (typeof setValueType === \"undefined\" || setValueType !== \"justSetValue\") {\n                            syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                            alignComboboxOptionGroup.call(this);\n                        }\n                    },\n                    text: function text(queIdx, value, selected, setValueType) {\n                        var item = this.queue[queIdx];\n                        var addOptions;\n                        var optionIndex = U.search(item.options, function () {\n                            return this[item.columnKeys.optionText] == value;\n                        });\n\n                        if (optionIndex > -1) {\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                        } else {\n                            // 새로운 값 추가\n                            optionIndex = item.options.length;\n                            addOptions = {\n                                \"@index\": optionIndex,\n                                hide: true,\n                                addedOption: true\n                            };\n                            addOptions[item.columnKeys.optionValue] = value;\n                            addOptions[item.columnKeys.optionText] = value;\n                            item.options.push(addOptions);\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                        }\n                        if (typeof setValueType === \"undefined\" || setValueType !== \"justSetValue\") {\n                            syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                            alignComboboxOptionGroup.call(this);\n                        }\n                    },\n                    clear: function clear(queIdx) {\n                        clearSelected.call(this, queIdx);\n                        syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                        //focusLabel.call(this, queIdx);\n                        focusClear.call(this, queIdx);\n\n                        if (this.activecomboboxOptionGroup) {\n                            this.activecomboboxOptionGroup.find(\"[data-option-index]\").attr(\"data-option-Selected\", \"false\");\n                        }\n                        this.queue[queIdx].optionSelectedIndex = -1;\n                    }\n                };\n                return function (boundID, value, selected, _option) {\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {\n                        console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                        return;\n                    }\n\n                    if (typeof value == \"undefined\") {\n                        throw \"error not found value\";\n                    } else if (U.isArray(value)) {\n                        processor.clear.call(this, queIdx);\n                        processor.arr.call(this, queIdx, this.queue[queIdx].multiple || value.length == 0 ? value : [value[value.length - 1]], selected);\n                    } else if (U.isString(value) || U.isNumber(value)) {\n                        if (typeof value !== \"undefined\" && value !== null && !this.queue[queIdx].multiple) {\n                            clearSelected.call(this, queIdx);\n                        }\n                        processor.text.call(this, queIdx, value, selected, \"justSetValue\");\n                    } else {\n                        if (value === null) {\n                            processor.clear.call(this, queIdx);\n                        } else {\n                            if (!this.queue[queIdx].multiple) {\n                                clearSelected.call(this, queIdx);\n                            }\n                            for (var key in processor) {\n                                if (value[key]) {\n                                    processor[key].call(this, queIdx, value, selected, \"justSetValue\");\n                                    break;\n                                }\n                            }\n                        }\n                    }\n\n                    syncComboboxOptions.call(this, queIdx, this.queue[queIdx].options);\n                    printLabel.call(this, queIdx);\n                    // focusLabel.call(this, queIdx);\n\n                    if (typeof value !== \"undefined\") {\n                        if (_option && !_option.noStateChange) {\n                            onStateChanged.call(this, this.queue[queIdx], {\n                                self: this,\n                                item: this.queue[queIdx],\n                                state: \"changeValue\",\n                                value: this.queue[queIdx].selected\n                            });\n                        }\n                    }\n\n                    boundID = null;\n                    return this;\n                };\n            }();\n\n            /// private end\n\n            /**\n             * Preferences of combobox UI\n             * @method ax5combobox.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5combobox}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onChange = cfg.onChange;\n                jQuery(window).on(\"resize.ax5combobox-display-\" + this.instanceId, function () {\n                    alignComboboxDisplay.call(this);\n                }.bind(this));\n            };\n\n            /**\n             * bind combobox\n             * @method ax5combobox.bind\n             * @param {Object} item\n             * @param {String} [item.id]\n             * @param {String} [item.theme]\n             * @param {Boolean} [item.multiple]\n             * @param {Element} item.target\n             * @param {Object[]} item.options\n             * @returns {ax5combobox}\n             */\n            this.bind = function (item) {\n                var bindComboboxTarget = function () {\n                    var debouncedFocusWord = U.debounce(function (queIdx) {\n                        if (this.activecomboboxQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                        focusWord.call(self, queIdx, this.queue[queIdx].$displayLabelInput.val());\n                    }, 150);\n\n                    var blurLabel = function blurLabel(queIdx) {\n                        clearLabel.call(this, queIdx);\n                    };\n\n                    var comboboxEvent = {\n                        click: function click(queIdx, e) {\n                            var clickEl;\n                            var target = U.findParentNode(e.target, function (target) {\n                                if (target.getAttribute(\"data-ax5combobox-remove\")) {\n                                    clickEl = \"optionItemRemove\";\n                                    return true;\n                                } else if (target.getAttribute(\"data-selected-clear\")) {\n                                    clickEl = \"clear\";\n                                    return true;\n                                }\n                            });\n\n                            if (target) {\n                                if (clickEl === \"optionItemRemove\") {\n                                    var selectedIndex = target.getAttribute(\"data-ax5combobox-remove-index\");\n                                    var option = this.queue[queIdx].selected[selectedIndex];\n                                    setOptionSelect.call(this, queIdx, {\n                                        index: {\n                                            gindex: option[\"@gindex\"],\n                                            index: option[\"@index\"]\n                                        }\n                                    }, false, true);\n                                    alignComboboxDisplay.call(this);\n                                    alignComboboxOptionGroup.call(this);\n                                    focusLabel.call(this, queIdx);\n                                    U.stopEvent(e);\n                                    return this;\n                                } else if (clickEl === \"clear\") {\n                                    setOptionSelect.call(this, queIdx, { clear: true });\n                                    alignComboboxDisplay.call(this);\n                                    alignComboboxOptionGroup.call(this);\n                                    focusLabel.call(this, queIdx);\n                                }\n                            } else {\n                                if (self.activecomboboxQueueIndex == queIdx) {\n                                    if (this.queue[queIdx].optionFocusIndex == -1) {\n                                        // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                                        self.close();\n                                    }\n                                } else {\n                                    self.open(queIdx);\n                                    focusLabel.call(this, queIdx);\n                                }\n                            }\n                        },\n                        keyUp: function keyUp(queIdx, e) {\n                            /// 약속된 키 이벤트가 발생하면 stopEvent를 통해 keyUp 이벤트가 발생되지 않도록 막아주는 센스\n                            if (e.which == ax5.info.eventKeys.ESC && self.activecomboboxQueueIndex === -1) {\n                                // ESC키를 누르고 옵션그룹이 열려있지 않은 경우\n                                U.stopEvent(e);\n                                return this;\n                            }\n                            if (self.activecomboboxQueueIndex != queIdx) {\n                                // 닫힌 상태 인경우\n                                self.open(queIdx);\n                                U.stopEvent(e);\n                            }\n\n                            var disableCtrlKeys = {\n                                \"40\": \"KEY_DOWN\",\n                                \"38\": \"KEY_UP\"\n                            };\n                            if (!disableCtrlKeys[e.which]) {\n                                // backspace 감지 하여 input 값이 없으면 스탑이벤트 처리 할 것\n                                if (e.which == ax5.info.eventKeys.BACKSPACE && this.queue[queIdx].$displayLabelInput.val() == \"\") {\n                                    // 마지막 아이템을 제거.\n                                    if (this.queue[queIdx].selected.length > 0) {\n                                        var option = this.queue[queIdx].selected[this.queue[queIdx].selected.length - 1];\n                                        setOptionSelect.call(this, queIdx, {\n                                            index: {\n                                                gindex: option[\"@gindex\"],\n                                                index: option[\"@index\"]\n                                            }\n                                        }, false, true);\n                                    }\n                                    alignComboboxDisplay.call(this);\n                                    alignComboboxOptionGroup.call(this);\n                                    U.stopEvent(e);\n                                } else {\n                                    debouncedFocusWord.call(this, queIdx);\n                                }\n                            }\n                        },\n                        keyDown: function keyDown(queIdx, e) {\n                            if (e.which == ax5.info.eventKeys.ESC) {\n                                clearLabel.call(this, queIdx);\n                                this.close();\n                                U.stopEvent(e);\n                            } else if (e.which == ax5.info.eventKeys.RETURN) {\n                                setOptionSelect.call(this, item.id, {\n                                    index: {\n                                        gindex: item.indexedOptions[item.optionFocusIndex][\"@gindex\"],\n                                        index: item.indexedOptions[item.optionFocusIndex][\"@index\"]\n                                    }\n                                }, undefined, true);\n                                clearLabel.call(this, queIdx);\n                                alignComboboxDisplay.call(this);\n\n                                this.close();\n                                //alignComboboxOptionGroup.call(this);\n\n                                U.stopEvent(e);\n                            } else if (e.which == ax5.info.eventKeys.DOWN) {\n                                focusMove.call(this, queIdx, 1);\n                                U.stopEvent(e);\n                            } else if (e.which == ax5.info.eventKeys.UP) {\n                                focusMove.call(this, queIdx, -1);\n                                U.stopEvent(e);\n                            }\n                        },\n                        focus: function focus(queIdx, e) {\n                            //console.log(e);\n                        },\n                        blur: function blur(queIdx, e) {\n                            blurLabel.call(this, queIdx);\n                            U.stopEvent(e);\n                        },\n                        selectChange: function selectChange(queIdx, e) {\n                            setOptionSelect.call(this, queIdx, { value: this.queue[queIdx].$select.val() }, true);\n                        }\n                    };\n\n                    return function (queIdx) {\n                        var item = this.queue[queIdx];\n                        var data = {};\n                        // 현재 선택된 값을 담아두는 저장소, syncComboboxOptions를 통해 options와 selected값을 동기화 처리 한다.\n                        item.selected = [];\n\n                        if (!item.$display) {\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.instanceId = this.instanceId;\n                            data.id = item.id;\n                            data.name = item.name;\n                            data.theme = item.theme;\n                            data.tabIndex = item.tabIndex;\n                            data.multiple = item.multiple;\n                            data.reset = item.reset;\n\n                            data.label = getLabel.call(this, queIdx);\n                            data.formSize = function () {\n                                return item.size ? \"input-\" + item.size : \"\";\n                            }();\n\n                            //item.$display = jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"comboboxDisplay\"].call(this, queIdx), data));\n                            item.$display = jQuery(COMBOBOX.tmpl.get.call(this, \"comboboxDisplay\", data, item.columnKeys));\n                            item.$displayTable = item.$display.find('[data-els=\"display-table\"]');\n                            item.$displayLabel = item.$display.find('[data-ax5combobox-display=\"label\"]');\n                            item.$displayLabelInput = item.$display.find('[data-ax5combobox-display=\"input\"]');\n\n                            if (item.$target.find(\"select\").get(0)) {\n                                item.$select = item.$target.find(\"select\");\n                                item.$select.attr(\"tabindex\", \"-1\").attr(\"class\", \"form-control \" + data.formSize);\n                                if (data.name) {\n                                    item.$select.attr(\"name\", \"name\");\n                                }\n                                if (data.multiple) {\n                                    item.$select.attr(\"multiple\", \"multiple\");\n                                }\n                            } else {\n                                //item.$select = jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"formSelect\"].call(this, queIdx), data));\n                                item.$select = jQuery(COMBOBOX.tmpl.get.call(this, \"formSelect\", data, item.columnKeys));\n                                item.$target.append(item.$select);\n                            }\n\n                            item.$target.append(item.$display);\n                            // 라벨에 사용자 입력 필드가 있으므로 displayInput은 필요 없음.\n                            // select.options로 item.options를 만들어내거나 item.options로 select.options를 만들어냄\n                            item.options = syncComboboxOptions.call(this, queIdx, item.options);\n                        } else {\n                            item.$displayLabel.html(getLabel.call(this, queIdx));\n                            item.options = syncComboboxOptions.call(this, queIdx, item.options);\n                        }\n\n                        alignComboboxDisplay.call(this);\n\n                        item.$display.off(\"click.ax5combobox\").on(\"click.ax5combobox\", comboboxEvent.click.bind(this, queIdx));\n\n                        // combobox 태그에 대한 이벤트 감시\n\n                        item.$displayLabelInput.off(\"focus.ax5combobox\").on(\"focus.ax5combobox\", comboboxEvent.focus.bind(this, queIdx)).off(\"blur.ax5combobox\").on(\"blur.ax5combobox\", comboboxEvent.blur.bind(this, queIdx)).off(\"keyup.ax5combobox\").on(\"keyup.ax5combobox\", comboboxEvent.keyUp.bind(this, queIdx)).off(\"keydown.ax5combobox\").on(\"keydown.ax5combobox\", comboboxEvent.keyDown.bind(this, queIdx));\n\n                        // select 태그에 대한 change 이벤트 감시\n\n                        item.$select.off(\"change.ax5combobox\").on(\"change.ax5combobox\", comboboxEvent.selectChange.bind(this, queIdx));\n\n                        data = null;\n                        item = null;\n                        queIdx = null;\n                        return this;\n                    };\n                }();\n\n                var comboboxConfig = {},\n                    queIdx;\n\n                item = jQuery.extend(true, comboboxConfig, cfg, item);\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                item.$target = jQuery(item.target);\n\n                if (!item.id) item.id = item.$target.data(\"data-ax5combobox-id\");\n                if (!item.id) {\n                    item.id = \"ax5combobox-\" + ax5.getGuid();\n                    item.$target.data(\"data-ax5combobox-id\", item.id);\n                }\n                item.name = item.$target.attr(\"data-ax5combobox\");\n                if (item.options) {\n                    item.options = JSON.parse(JSON.stringify(item.options));\n                }\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        item = jQuery.extend(true, item, data);\n                    }\n                })(U.parseJson(item.$target.attr(\"data-ax5combobox-config\"), true));\n\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindComboboxTarget.call(this, this.queue.length - 1);\n                } else {\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindComboboxTarget.call(this, queIdx);\n                }\n\n                comboboxConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * open the optionBox of combobox\n             * @method ax5combobox.open\n             * @param {(String|Number|Element)} boundID\n             * @param {Number} [tryCount]\n             * @returns {ax5combobox}\n             */\n            this.open = function () {\n                var onExpand = function onExpand(item) {\n                    item.onExpand.call({\n                        self: this,\n                        item: item\n                    }, function (O) {\n                        if (this.waitOptionsCallback) {\n                            var data = {};\n                            var item = this.queue[this.activecomboboxQueueIndex];\n\n                            /// 현재 selected 검증후 처리\n                            (function (item, O) {\n                                var optionsMap = {};\n                                O.options.forEach(function (_O, _OIndex) {\n                                    _O[\"@index\"] = _OIndex;\n                                    optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                                });\n                                if (U.isArray(item.selected)) {\n                                    item.selected.forEach(function (_O) {\n                                        if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                            O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                        }\n                                    });\n                                }\n                            })(item, O);\n\n                            item.options = syncComboboxOptions.call(this, this.activecomboboxQueueIndex, O.options);\n                            printLabel.call(this, this.activecomboboxQueueIndex);\n                            alignComboboxDisplay.call(this);\n\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.id = item.id;\n                            data.theme = item.theme;\n                            data.size = \"ax5combobox-option-group-\" + item.size;\n                            data.multiple = item.multiple;\n                            data.lang = item.lang;\n                            data.options = item.options;\n                            /*\n                                       this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(\n                                       ax5.mustache.render(COMBOBOX.tmpl[\"options\"].call(this, item.columnKeys), data)\n                                       ));\n                                       */\n                            this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(COMBOBOX.tmpl.get.call(this, \"options\", data, item.columnKeys)));\n                        }\n                    }.bind(this));\n                };\n                return function (boundID, tryCount) {\n                    this.waitOptionsCallback = null;\n\n                    /**\n                     * open combobox from the outside\n                     */\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    var item = this.queue[queIdx];\n                    var data = {},\n                        focusTop,\n                        selectedOptionEl;\n\n                    if (item.$display.attr(\"disabled\")) return this;\n\n                    if (this.openTimer) clearTimeout(this.openTimer);\n                    if (this.activecomboboxOptionGroup) {\n                        if (this.activecomboboxQueueIndex == queIdx) {\n                            return this;\n                        }\n\n                        if (tryCount > 2) return this;\n                        this.close();\n                        this.openTimer = setTimeout(function () {\n                            this.open(queIdx, (tryCount || 0) + 1);\n                        }.bind(this), cfg.animateTime);\n\n                        return this;\n                    }\n\n                    item.optionFocusIndex = -1; // optionGroup이 열리면 포커스 인덱스 초기화 -1로\n                    if (item.selected && item.selected.length > 0) {\n                        item.optionSelectedIndex = item.selected[0][\"@findex\"];\n                    }\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5combobox-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n\n                    data.lang = item.lang;\n                    item.$display.attr(\"data-combobox-option-group-opened\", \"true\");\n\n                    if (item.onExpand) {\n                        // onExpand 인 경우 UI 대기모드 추가\n                        data.waitOptions = true;\n                    }\n                    data.options = U.filter(item.options, function () {\n                        return !this.hide;\n                    });\n\n                    //this.activecomboboxOptionGroup = jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"optionGroup\"].call(this, item.columnKeys), data));\n                    this.activecomboboxOptionGroup = jQuery(COMBOBOX.tmpl.get.call(this, \"optionGroup\", data, item.columnKeys));\n                    //this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"options\"].call(this, item.columnKeys), data)));\n                    this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(COMBOBOX.tmpl.get.call(this, \"options\", data, item.columnKeys)));\n                    this.activecomboboxQueueIndex = queIdx;\n\n                    alignComboboxOptionGroup.call(this, \"append\"); // alignComboboxOptionGroup 에서 body append\n                    jQuery(window).on(\"resize.ax5combobox-\" + this.instanceId, function () {\n                        alignComboboxOptionGroup.call(this);\n                    }.bind(this));\n\n                    if (item.selected && item.selected.length > 0) {\n                        selectedOptionEl = this.activecomboboxOptionGroup.find('[data-option-index=\"' + item.selected[0][\"@index\"] + '\"]');\n                        if (selectedOptionEl.get(0)) {\n                            focusTop = selectedOptionEl.position().top - this.activecomboboxOptionGroup.height() / 3;\n                            this.activecomboboxOptionGroup.find('[data-els=\"content\"]').stop().animate({ scrollTop: focusTop }, item.animateTime, \"swing\", function () {});\n                        }\n                    }\n\n                    jQuery(window).on(\"click.ax5combobox-\" + this.instanceId, function (e) {\n                        e = e || window.event;\n                        onBodyClick.call(this, e);\n                        U.stopEvent(e);\n                    }.bind(this));\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"open\",\n                        item: item\n                    });\n\n                    // waitOption timer\n                    if (item.onExpand) {\n                        this.waitOptionsCallback = true;\n                        onExpand.call(this, item);\n                    }\n\n                    data = null;\n                    focusTop = null;\n                    selectedOptionEl = null;\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5combobox.update\n             * @param {(Object|String)} item\n             * @returns {ax5combobox}\n             */\n            this.update = function (_item) {\n                this.bind(_item);\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.setValue\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @param {(String|Array)} _value\n             * @param {Boolean} [_selected]\n             * @return {ax5combobox}\n             * @example\n             * ```js\n             * myCombo.setValue($('[data-ax5combobox=\"combo1\"]'), \"1\");\n             * myCombo.setValue($('[data-ax5combobox=\"combo1\"]'), [\"1\", \"2\"]);\n             * ```\n             */\n            this.setValue = function (_boundID, _value, _selected) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                    return;\n                }\n\n                clearSelected.call(this, queIdx);\n\n                if (U.isArray(_value)) {\n                    var _values = U.map(_value, function () {\n                        return { value: this };\n                    });\n                    setOptionSelect.call(this, queIdx, _values, _selected || true, {\n                        noStateChange: true\n                    });\n                } else if (U.isString(_value) || U.isNumber(_value)) {\n                    setOptionSelect.call(this, queIdx, { value: _value }, _selected || true, { noStateChange: true });\n                } else {\n                    printLabel.call(this, queIdx);\n                }\n\n                blurLabel.call(this, queIdx);\n                alignComboboxDisplay.call(this);\n\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.setText\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @param {(String|Array)} _text\n             * @param {Boolean} [_selected]\n             * @returns {ax5combobox}\n             * @example\n             * ```js\n             * myCombo.setText($('[data-ax5combobox=\"combo1\"]'), \"string\");\n             * myCombo.setText($('[data-ax5combobox=\"combo1\"]'), [\"substring\", \"search\"]);\n             * ```\n             */\n            this.setText = function (_boundID, _text, _selected) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                    return;\n                }\n                clearSelected.call(this, queIdx);\n                setOptionSelect.call(this, queIdx, _text, true, {\n                    noStateChange: true\n                });\n                blurLabel.call(this, queIdx);\n                alignComboboxDisplay.call(this);\n\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.getSelectedOption\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {Array}\n             */\n            this.getSelectedOption = function (_boundID) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                    return;\n                }\n                return U.deepCopy(this.queue[queIdx].selected);\n            };\n\n            /**\n             * @method ax5combobox.close\n             * @returns {ax5combobox}\n             */\n            this.close = function (item) {\n                if (this.closeTimer) clearTimeout(this.closeTimer);\n                if (!this.activecomboboxOptionGroup) return this;\n\n                item = this.queue[this.activecomboboxQueueIndex];\n                item.optionFocusIndex = -1;\n                item.$display.removeAttr(\"data-combobox-option-group-opened\").trigger(\"focus\");\n                item.$displayLabel.attr(\"contentEditable\", \"false\");\n\n                this.activecomboboxOptionGroup.addClass(\"destroy\");\n\n                jQuery(window).off(\"resize.ax5combobox-\" + this.instanceId).off(\"click.ax5combobox-\" + this.instanceId).off(\"keyup.ax5combobox-\" + this.instanceId);\n\n                this.closeTimer = setTimeout(function () {\n                    if (this.activecomboboxOptionGroup) this.activecomboboxOptionGroup.remove();\n                    this.activecomboboxOptionGroup = null;\n                    this.activecomboboxQueueIndex = -1;\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"close\"\n                    });\n                }.bind(this), cfg.animateTime);\n                this.waitOptionsCallback = null;\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.blur\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5combobox}\n             */\n            this.blur = function (_boundID) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                    return;\n                }\n\n                blurLabel.call(this, queIdx);\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.enable\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5combobox}\n             */\n            this.enable = function (_boundID) {\n                var queIdx = getQueIdx.call(this, _boundID);\n\n                if (typeof queIdx !== \"undefined\") {\n                    this.queue[queIdx].disabled = false;\n                    if (this.queue[queIdx].$display[0]) {\n                        this.queue[queIdx].$display.removeAttr(\"disabled\");\n                        this.queue[queIdx].$displayLabelInput.removeAttr(\"disabled\");\n                    }\n                    if (this.queue[queIdx].$select[0]) {\n                        this.queue[queIdx].$select.removeAttr(\"disabled\");\n                    }\n\n                    onStateChanged.call(this, this.queue[queIdx], {\n                        self: this,\n                        state: \"enable\"\n                    });\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.disable\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5combobox}\n             */\n            this.disable = function (_boundID) {\n                var queIdx = getQueIdx.call(this, _boundID);\n\n                if (typeof queIdx !== \"undefined\") {\n                    this.queue[queIdx].disabled = true;\n                    if (this.queue[queIdx].$display[0]) {\n                        this.queue[queIdx].$display.attr(\"disabled\", \"disabled\");\n                        this.queue[queIdx].$displayLabelInput.attr(\"disabled\", \"disabled\");\n                    }\n                    if (this.queue[queIdx].$select[0]) {\n                        this.queue[queIdx].$select.attr(\"disabled\", \"disabled\");\n                    }\n\n                    onStateChanged.call(this, this.queue[queIdx], {\n                        self: this,\n                        state: \"disable\"\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.align\n             */\n            this.align = function () {\n                alignComboboxDisplay.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5combobox.clear\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5combobox}\n             */\n            this.clear = function (_boundID) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"clear\"));\n                    return;\n                }\n\n                clearSelected.call(this, queIdx);\n                setOptionSelect.call(this, queIdx, [], false, {\n                    noStateChange: false\n                });\n                printLabel.call(this, queIdx);\n                blurLabel.call(this, queIdx);\n                alignComboboxDisplay.call(this);\n\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                } else {\n                    this.init();\n                }\n            }.apply(this, arguments);\n        };\n    }());\n\n    COMBOBOX = ax5.ui.combobox;\n})();\n\n// ax5.ui.combobox.tmpl\n(function () {\n\n    var COMBOBOX = ax5.ui.combobox;\n    var U = ax5.util;\n\n    var optionGroup = function optionGroup(columnKeys) {\n        return '\\n            <div class=\"ax5combobox-option-group {{theme}} {{size}}\" data-ax5combobox-option-group=\"{{id}}\">\\n                <div class=\"ax-combobox-body\">\\n                    <div class=\"ax-combobox-option-group-content\" data-els=\"content\"></div>\\n                </div>\\n                <div class=\"ax-combobox-arrow\"></div> \\n            </div>\\n        ';\n    };\n\n    var comboboxDisplay = function comboboxDisplay(columnKeys) {\n        return '\\n<div class=\"form-control {{formSize}} ax5combobox-display {{theme}}\" \\ndata-ax5combobox-display=\"{{id}}\" data-ax5combobox-instance=\"{{instanceId}}\">\\n    <div class=\"ax5combobox-display-table\" data-els=\"display-table\">\\n        <div data-ax5combobox-display=\"label-holder\"> \\n            <a {{^tabIndex}}{{/tabIndex}}{{#tabIndex}}tabindex=\"{{tabIndex}}\" {{/tabIndex}}\\n            data-ax5combobox-display=\"label\"\\n            spellcheck=\"false\"><input type=\"text\"data-ax5combobox-display=\"input\" style=\"border:0 none;\" /></a>\\n        </div>\\n        <div data-ax5combobox-display=\"addon\"> \\n            {{#multiple}}{{#reset}}\\n            <span class=\"addon-icon-reset\" data-selected-clear=\"true\">{{{.}}}</span>\\n            {{/reset}}{{/multiple}}\\n            {{#icons}}\\n            <span class=\"addon-icon-closed\">{{clesed}}</span>\\n            <span class=\"addon-icon-opened\">{{opened}}</span>\\n            {{/icons}}\\n            {{^icons}}\\n            <span class=\"addon-icon-closed\"><span class=\"addon-icon-arrow\"></span></span>\\n            <span class=\"addon-icon-opened\"><span class=\"addon-icon-arrow\"></span></span>\\n            {{/icons}}\\n        </div>\\n    </div>\\n</div>\\n        ';\n    };\n\n    var formSelect = function formSelect(columnKeys) {\n        return '\\n            <select tabindex=\"-1\" class=\"form-control {{formSize}}\" name=\"{{name}}\" {{#multiple}}multiple=\"multiple\"{{/multiple}}></select>\\n        ';\n    };\n\n    var formSelectOptions = function formSelectOptions(columnKeys) {\n        return '\\n{{#selected}}\\n<option value=\"{{' + columnKeys.optionValue + '}}\" selected=\"true\">{{' + columnKeys.optionText + '}}</option>\\n{{/selected}}\\n';\n    };\n\n    var options = function options(columnKeys) {\n        return '\\n            {{#waitOptions}}\\n                <div class=\"ax-combobox-option-item\">\\n                        <div class=\"ax-combobox-option-item-holder\">\\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">\\n                                {{{lang.loading}}}\\n                            </span>\\n                        </div>\\n                    </div>\\n            {{/waitOptions}}\\n            {{^waitOptions}}\\n                {{#options}}\\n                    {{#optgroup}}\\n                        <div class=\"ax-combobox-option-group\">\\n                            <div class=\"ax-combobox-option-item-holder\">\\n                                <span class=\"ax-combobox-option-group-label\">\\n                                    {{{.}}}\\n                                </span>\\n                            </div>\\n                            {{#options}}\\n                            {{^hide}}\\n                            <div class=\"ax-combobox-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-group-index=\"{{@gindex}}\" data-option-index=\"{{@index}}\" \\n                            data-option-value=\"{{' + columnKeys.optionValue + '}}\" \\n                            {{#' + columnKeys.optionSelected + '}}data-option-selected=\"true\"{{/' + columnKeys.optionSelected + '}}>\\n                                <div class=\"ax-combobox-option-item-holder\">\\n                                    {{#multiple}}\\n                                    <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-checkbox\">\\n                                        <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\\n                                    </span>\\n                                    {{/multiple}}\\n                                    <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">{{' + columnKeys.optionText + '}}</span>\\n                                </div>\\n                            </div>\\n                            {{/hide}}\\n                            {{/options}}\\n                        </div>                            \\n                    {{/optgroup}}\\n                    {{^optgroup}}\\n                    {{^hide}}\\n                    <div class=\"ax-combobox-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-index=\"{{@index}}\" data-option-value=\"{{' + columnKeys.optionValue + '}}\" {{#' + columnKeys.optionSelected + '}}data-option-selected=\"true\"{{/' + columnKeys.optionSelected + '}}>\\n                        <div class=\"ax-combobox-option-item-holder\">\\n                            {{#multiple}}\\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-checkbox\">\\n                                <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\\n                            </span>\\n                            {{/multiple}}\\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">{{' + columnKeys.optionText + '}}</span>\\n                        </div>\\n                    </div>\\n                    {{/hide}}\\n                    {{/optgroup}}\\n                {{/options}}\\n                {{^options}}\\n                    <div class=\"ax-combobox-option-item\">\\n                        <div class=\"ax-combobox-option-item-holder\">\\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">\\n                                {{{lang.noOptions}}}\\n                            </span>\\n                        </div>\\n                    </div>\\n                {{/options}}\\n            {{/waitOptions}}\\n        ';\n    };\n\n    var label = function label(columnKeys) {\n        return '{{#selected}}<div tabindex=\"-1\" data-ax5combobox-selected-label=\"{{@i}}\" data-ax5combobox-selected-text=\"{{text}}\"><div data-ax5combobox-remove=\"true\" \\ndata-ax5combobox-remove-index=\"{{@i}}\">{{{removeIcon}}}</div><span>{{' + columnKeys.optionText + '}}</span></div>{{/selected}}';\n    };\n\n    COMBOBOX.tmpl = {\n        \"comboboxDisplay\": comboboxDisplay,\n        \"formSelect\": formSelect,\n        \"formSelectOptions\": formSelectOptions,\n        \"optionGroup\": optionGroup,\n        \"options\": options,\n        \"label\": label,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(COMBOBOX.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n/*\n * Copyright (c) 2016. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n// ax5.ui.combobox.util\n(function () {\n\n    var COMBOBOX = ax5.ui.combobox;\n    var U = ax5.util;\n\n    var nodeTypeProcessor = {\n        '1': function _(queIdx, node, editable) {\n            var cfg = this.config;\n            var textNode = node;\n\n            if ($(node).find(\"span\").get(0)) {\n                textNode = $(node).find(\"span\").get(0);\n            }\n\n            var text = (textNode.textContent || textNode.innerText).replace(/^[\\s\\r\\n\\t]*|[\\s\\r\\n\\t]*$/g, '');\n            var item = this.queue[queIdx];\n\n            var selectedIndex, option;\n            if (item.selected && item.selected.length > 0 && node.getAttribute(\"data-ax5combobox-selected-text\") == text) {\n                selectedIndex = node.getAttribute(\"data-ax5combobox-selected-label\");\n                option = item.selected[selectedIndex];\n                return {\n                    index: {\n                        gindex: option[\"@gindex\"],\n                        index: option[\"@index\"],\n                        value: option[cfg.columnKeys.optionValue]\n                    }\n                };\n            } else if (!node.getAttribute(\"data-ax5combobox-selected-text\")) {\n                if (text != \"\") {\n                    if (editable) {\n                        return text;\n                    } else {\n                        var $option;\n                        if (item.optionFocusIndex > -1) $option = this.activecomboboxOptionGroup.find('[data-option-focus-index=\"' + item.optionFocusIndex + '\"]');\n                        if (item.optionFocusIndex > -1 && $option.get(0) && $option.attr(\"data-option-value\")) {\n                            return {\n                                index: {\n                                    gindex: $option.attr(\"data-option-group-index\"),\n                                    index: $option.attr(\"data-option-index\")\n                                }\n                            };\n                        } else {\n                            return item.editable ? text : undefined;\n                        }\n                    }\n                } else {\n                    return undefined;\n                }\n            } else {\n                return text;\n            }\n        },\n        '3': function _(queIdx, node, editable) {\n            var cfg = this.config;\n            var text = (node.textContent || node.innerText).replace(/^[\\s\\r\\n\\t]*|[\\s\\r\\n\\t]*$/g, '');\n            var item = this.queue[queIdx];\n\n            if (text != \"\") {\n                if (editable) {\n                    return text;\n                } else {\n                    var $option;\n                    if (item.optionFocusIndex > -1) $option = this.activecomboboxOptionGroup.find('[data-option-focus-index=\"' + item.optionFocusIndex + '\"]');\n                    if (item.optionFocusIndex > -1 && $option.get(0) && $option.attr(\"data-option-value\")) {\n                        return {\n                            index: {\n                                gindex: $option.attr(\"data-option-group-index\"),\n                                index: $option.attr(\"data-option-index\")\n                            }\n                        };\n                    } else {\n                        return item.editable ? text : undefined;\n                    }\n                }\n            } else {\n                return undefined;\n            }\n        }\n    };\n\n    COMBOBOX.util = {\n        nodeTypeProcessor: nodeTypeProcessor\n    };\n})();\n\n/*\n * Copyright (c) 2017. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n/**\n * ax5combobox jquery extends\n * @namespace jQueryExtends\n */\n\n/**\n * @method jQueryExtends.ax5combobox\n * @param {String} methodName\n * @param [arguments]\n * @param [arguments]\n * @example\n * ```html\n * <div data-ax5combobox=\"ax1\" data-ax5combobox-config='{\n *  multiple: true,\n *  editable: true,\n *  size: \"\",\n *  theme:\"\"\n *  }'></div>\n * <script>\n * jQuery('[data-ax5combobox=\"ax1\"]').ax5combobox();\n * $('[data-ax5combobox=\"ax1\"]').ax5combobox(\"getSelectedOption\");\n * $('[data-ax5combobox=\"ax1\"]').ax5combobox(\"setValue\", [\"string\", \"number\"]);\n * $('[data-ax5combobox=\"ax1\"]').ax5combobox(\"enable\");\n * $('[data-ax5combobox=\"ax1\"]').ax5combobox(\"disable\");\n * </script>\n * ```\n */\n\nax5.ui.combobox_instance = new ax5.ui.combobox();\njQuery.fn.ax5combobox = function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"open\":\n                    return ax5.ui.combobox_instance.open(this);\n                    break;\n                case \"close\":\n                    return ax5.ui.combobox_instance.close(this);\n                    break;\n                case \"setValue\":\n                    return ax5.ui.combobox_instance.setValue(this, arguments[1], arguments[2], arguments[3], arguments[4] || \"justSetValue\");\n                    break;\n                case \"setText\":\n                    return ax5.ui.combobox_instance.setText(this, arguments[1], arguments[2], arguments[3], arguments[4] || \"justSetValue\");\n                    break;\n                case \"getSelectedOption\":\n                    return ax5.ui.combobox_instance.getSelectedOption(this);\n                    break;\n                case \"enable\":\n                    return ax5.ui.combobox_instance.enable(this);\n                    break;\n                case \"disable\":\n                    return ax5.ui.combobox_instance.disable(this);\n                    break;\n                case \"blur\":\n                    return ax5.ui.combobox_instance.blur(this);\n                case \"clear\":\n                    return ax5.ui.combobox_instance.clear(this);\n                default:\n                    return this;\n            }\n        } else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.combobox_instance.bind(config);\n            });\n        }\n        return this;\n    };\n}();\n// ax5.ui.layout\n(function () {\n    var UI = ax5.ui;\n    var U = ax5.util;\n\n    UI.addClass({\n        className: \"layout\"\n    }, function () {\n        /**\n         * @class ax5layout\n         * @alias ax5.ui.layout\n         * @author tom@axisj.com\n         */\n\n        var ax5layout = function ax5layout() {\n            var self = this,\n                cfg,\n                ENM = {\n                \"mousedown\": ax5.info.supportTouch ? \"touchstart\" : \"mousedown\",\n                \"mousemove\": ax5.info.supportTouch ? \"touchmove\" : \"mousemove\",\n                \"mouseup\": ax5.info.supportTouch ? \"touchend\" : \"mouseup\"\n            },\n                getMousePosition = function getMousePosition(e) {\n                var mouseObj = 'changedTouches' in e.originalEvent && e.changedTouches ? e.originalEvent.changedTouches[0] : e;\n                return {\n                    clientX: mouseObj.clientX,\n                    clientY: mouseObj.clientY\n                };\n            };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                splitter: {\n                    size: 1\n                },\n                autoResize: true\n            };\n            this.queue = [];\n\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.resizer = null;\n\n            cfg = this.config;\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n                return true;\n            },\n                alignLayoutAll = function alignLayoutAll() {\n                var i = this.queue.length;\n                while (i--) {\n                    if (typeof this.queue[i].parentQueIdx === \"undefined\" && this.queue[i].autoResize) {\n                        alignLayout.call(this, i, null, \"windowResize\");\n                    }\n                }\n            },\n                getDockPanelOuterSize = {\n                \"width\": function width(item, panel) {\n                    return panel ? panel.__width + (panel.split ? item.splitter.size : 0) : 0;\n                },\n                \"height\": function height(item, panel) {\n                    return panel ? panel.__height + (panel.split ? item.splitter.size : 0) : 0;\n                }\n            },\n                getPixel = function getPixel(size, parentSize) {\n                if (size == \"*\") {\n                    return;\n                } else if (U.right(size, 1) == \"%\") {\n                    return parentSize * U.number(size) / 100;\n                } else {\n                    return Number(size);\n                }\n            },\n                alignLayout = function () {\n\n                var beforeSetCSS = {\n                    \"split\": {\n                        \"horizontal\": function horizontal(item, panel, panelIndex) {\n                            if (panel.splitter) {\n                                panel.__height = item.splitter.size;\n                            } else {\n                                if (panelIndex == item.splitPanel.length - 1) {\n                                    if (item.splitPanel.asteriskLength == 0) {\n                                        panel.height = \"*\";\n                                        panel.__height = undefined;\n                                        item.splitPanel.asteriskLength++;\n                                    } else {\n                                        if (panel.height == \"*\") {\n                                            item.splitPanel.asteriskLength++;\n                                        } else {\n                                            //panel.__height = getPixel(panel.height, item.targetDimension.height);\n                                        }\n                                    }\n                                } else {\n                                    if (panel.height == \"*\") {\n                                        item.splitPanel.asteriskLength++;\n                                    } else {\n                                        //panel.__height = getPixel(panel.height, item.targetDimension.height);\n                                    }\n                                }\n                            }\n                        },\n                        \"vertical\": function vertical(item, panel, panelIndex) {\n                            if (panel.splitter) {\n                                panel.__width = item.splitter.size;\n                            } else {\n                                if (panelIndex == item.splitPanel.length - 1) {\n                                    if (item.splitPanel.asteriskLength == 0) {\n                                        panel.width = \"*\";\n                                        panel.__width = undefined;\n                                        item.splitPanel.asteriskLength++;\n                                    } else {\n                                        if (panel.width == \"*\") {\n                                            item.splitPanel.asteriskLength++;\n                                        }\n                                    }\n                                } else {\n                                    if (panel.width == \"*\") {\n                                        item.splitPanel.asteriskLength++;\n                                    } else {\n                                        //panel.__width = getPixel(panel.width, item.targetDimension.width);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                };\n                var setCSS = {\n                    \"top\": function top(item, panel) {\n                        panel.$target.css({ height: panel.__height || 0 });\n                        if (panel.split) {\n                            panel.$splitter.css({ height: item.splitter.size, top: panel.__height || 0 });\n                        }\n                    },\n                    \"bottom\": function bottom(item, panel) {\n                        panel.$target.css({ height: panel.__height || 0 });\n                        if (panel.split) {\n                            panel.$splitter.css({ height: item.splitter.size, bottom: panel.__height || 0 });\n                        }\n                    },\n                    \"left\": function left(item, panel) {\n                        var css = {\n                            width: panel.__width || 0,\n                            height: item.targetDimension.height\n                        };\n\n                        if (item.dockPanel.top) {\n                            css.height -= item.dockPanel.top.__height;\n                            css.top = item.dockPanel.top.__height;\n                            if (item.dockPanel.top.split) {\n                                css.height -= item.splitter.size;\n                                css.top += item.splitter.size;\n                            }\n                        }\n                        if (item.dockPanel.bottom) {\n                            css.height -= item.dockPanel.bottom.__height;\n                            if (item.dockPanel.bottom.split) {\n                                css.height -= item.splitter.size;\n                            }\n                        }\n\n                        panel.$target.css(css);\n\n                        if (panel.split) {\n                            panel.$splitter.css({ width: item.splitter.size, height: css.height, top: css.top, left: css.width });\n                        }\n                    },\n                    \"right\": function right(item, panel) {\n                        var css = {\n                            width: panel.__width || 0,\n                            height: item.targetDimension.height\n                        };\n\n                        if (item.dockPanel.top) {\n                            css.height -= item.dockPanel.top.__height;\n                            css.top = item.dockPanel.top.__height;\n                            if (item.dockPanel.top.split) {\n                                css.height -= item.splitter.size;\n                                css.top += item.splitter.size;\n                            }\n                        }\n                        if (item.dockPanel.bottom) {\n                            css.height -= item.dockPanel.bottom.__height;\n                            if (item.dockPanel.bottom.split) {\n                                css.height -= item.splitter.size;\n                            }\n                        }\n\n                        panel.$target.css(css);\n\n                        if (panel.split) {\n                            panel.$splitter.css({ width: item.splitter.size, height: css.height, top: css.top, right: css.width });\n                        }\n                    },\n                    \"center\": function center(item, panel) {\n                        var css = {\n                            width: item.targetDimension.width,\n                            height: item.targetDimension.height\n                        };\n\n                        if (item.dockPanel.top) {\n                            css.height -= item.dockPanel.top.__height || 0;\n                            css.top = item.dockPanel.top.__height || 0;\n                            if (item.dockPanel.top.split) {\n                                css.height -= item.splitter.size;\n                                css.top += item.splitter.size;\n                            }\n                        }\n                        if (item.dockPanel.bottom) {\n                            css.height -= item.dockPanel.bottom.__height || 0;\n                            if (item.dockPanel.bottom.split) {\n                                css.height -= item.splitter.size;\n                            }\n                        }\n                        if (item.dockPanel.left) {\n                            css.width -= item.dockPanel.left.__width || 0;\n                            css.left = item.dockPanel.left.__width || 0;\n                            if (item.dockPanel.left.split) {\n                                css.width -= item.splitter.size;\n                                css.left += item.splitter.size;\n                            }\n                        }\n                        if (item.dockPanel.right) {\n                            css.width -= item.dockPanel.right.__width || 0;\n                            if (item.dockPanel.right.split) {\n                                css.width -= item.splitter.size;\n                            }\n                        }\n\n                        var minWidth = panel.minWidth || 0;\n                        var minHeight = panel.minHeight || 0;\n\n                        // 레이아웃의 최소 너비 높이를 주어 레이아웃 덕패널이 겹치는 일이 없게 합니다\n                        if (css.width < minWidth) {\n                            css.width = minWidth;\n                            item.$target.css({ minWidth: minWidth + getDockPanelOuterSize[\"width\"](item.dockPanel.left, item.splitter.size) + getDockPanelOuterSize[\"width\"](item.dockPanel.right, item.splitter.size) });\n                        }\n                        if (css.height < minHeight) {\n                            css.height = minHeight;\n                            item.$target.css({ minHeight: minHeight + getDockPanelOuterSize[\"height\"](item.dockPanel.top, item.splitter.size) + getDockPanelOuterSize[\"height\"](item.dockPanel.bottom, item.splitter.size) });\n                        }\n\n                        panel.$target.css(css);\n                    },\n                    \"split\": {\n                        \"horizontal\": function horizontal(item, panel, panelIndex, withoutAsteriskSize, windowResize) {\n                            var css = {\n                                display: \"block\"\n                            };\n                            var prevPosition = panelIndex ? Number(item.splitPanel[panelIndex - 1].offsetEnd) : 0;\n                            if (panel.splitter) {\n                                css.height = item.splitter.size;\n                            } else {\n                                if (panel.height == \"*\" && (typeof panel.__height === \"undefined\" || windowResize)) {\n                                    // 남은 전체 공간을 사용\n                                    css.height = panel.__height = (item.targetDimension.height - withoutAsteriskSize) / item.splitPanel.asteriskLength;\n                                } else {\n                                    css.height = panel.__height || 0;\n                                }\n                            }\n                            css.top = prevPosition;\n                            panel.offsetStart = prevPosition;\n                            panel.offsetEnd = Number(prevPosition) + Number(css.height);\n                            panel.$target.css(css);\n                        },\n                        \"vertical\": function vertical(item, panel, panelIndex, withoutAsteriskSize, windowResize) {\n                            var css = {\n                                display: \"block\"\n                            };\n                            var prevPosition = panelIndex ? Number(item.splitPanel[panelIndex - 1].offsetEnd) : 0;\n\n                            if (panel.splitter) {\n                                css.width = item.splitter.size;\n                            } else {\n                                if (panel.width == \"*\" && (typeof panel.__width === \"undefined\" || windowResize)) {\n                                    // 남은 전체 공간을 사용\n                                    css.width = panel.__width = (item.targetDimension.width - withoutAsteriskSize) / item.splitPanel.asteriskLength;\n                                } else {\n                                    css.width = panel.__width || 0;\n                                }\n                            }\n                            css.left = prevPosition;\n                            panel.offsetStart = prevPosition;\n                            panel.offsetEnd = Number(prevPosition) + Number(css.width);\n\n                            panel.$target.css(css);\n                        }\n                    }\n                };\n                var layoutProcessor = {\n                    \"dock-panel\": function dockPanel(item) {\n                        for (var panel in item.dockPanel) {\n                            if (item.dockPanel[panel].$target && item.dockPanel[panel].$target.get(0)) {\n                                if (panel in setCSS) {\n                                    setCSS[panel].call(this, item, item.dockPanel[panel]);\n                                }\n                            }\n                        }\n                    },\n                    \"split-panel\": function splitPanel(item, windowResize) {\n                        //console.log(item.splitPanel);\n                        var withoutAsteriskSize;\n                        item.splitPanel.asteriskLength = 0;\n                        item.splitPanel.forEach(function (panel, panelIndex) {\n                            beforeSetCSS[\"split\"][item.orientation].call(this, item, panel, panelIndex);\n                        });\n\n                        if (item.orientation == \"horizontal\") {\n                            withoutAsteriskSize = U.sum(item.splitPanel, function (n) {\n                                if (n.height != \"*\") return U.number(n.__height);\n                            });\n                        } else {\n                            withoutAsteriskSize = U.sum(item.splitPanel, function (n) {\n                                if (n.width != \"*\") return U.number(n.__width);\n                            });\n                        }\n\n                        item.splitPanel.forEach(function (panel, panelIndex) {\n                            setCSS[\"split\"][item.orientation].call(this, item, panel, panelIndex, withoutAsteriskSize, windowResize);\n                        });\n                    }\n                };\n                var childResize = function childResize(item, callback, windowResize) {\n                    var i = item.childQueIdxs.length;\n                    while (i--) {\n                        alignLayout.call(this, item.childQueIdxs[i], callback, windowResize);\n                    }\n                };\n\n                return function (queIdx, callback, windowResize) {\n                    var item = this.queue[queIdx];\n\n                    // 레이아웃 타겟의 CSS속성을 미리 저장해 둡니다. 왜? 패널별로 크기 계산 할 때 쓰려고\n                    item.targetDimension = {\n                        height: item.$target.innerHeight(),\n                        width: item.$target.innerWidth()\n                    };\n\n                    if (item.layout in layoutProcessor) {\n                        layoutProcessor[item.layout].call(this, item, windowResize);\n                    }\n\n                    if (item.childQueIdxs) childResize.call(this, item, callback, windowResize);\n                    if (item.onResize) {\n                        setTimeout(function () {\n                            this.onResize.call(this, this);\n                        }.bind(item), 1);\n                    }\n                    if (callback) {\n                        callback.call(item, item);\n                    }\n                };\n            }(),\n                resizeSplitter = {\n                \"on\": function on(queIdx, panel, $splitter) {\n                    var item = this.queue[queIdx];\n                    var splitterOffset = $splitter.position();\n                    var splitterBox = {\n                        width: $splitter.width(), height: $splitter.height()\n                    };\n                    var getResizerPosition = {\n                        \"left\": function left(e) {\n                            var mouseObj = 'changedTouches' in e.originalEvent && e.changedTouches ? e.originalEvent.changedTouches[0] : e;\n\n                            panel.__da = mouseObj.clientX - panel.mousePosition.clientX;\n                            var minWidth = panel.minWidth || 0;\n                            var maxWidth = panel.maxWidth || item.targetDimension.width - getDockPanelOuterSize[\"width\"](item, item.dockPanel.left) - getDockPanelOuterSize[\"width\"](item, item.dockPanel.right);\n\n                            if (panel.__width + panel.__da < minWidth) {\n                                panel.__da = -panel.__width + minWidth;\n                            } else if (maxWidth < panel.__width + panel.__da) {\n                                panel.__da = maxWidth - panel.__width;\n                            }\n                            return { left: panel.$splitter.position().left + panel.__da };\n                        },\n                        \"right\": function right(e) {\n                            var mouseObj = 'changedTouches' in e.originalEvent && e.changedTouches ? e.originalEvent.changedTouches[0] : e;\n\n                            panel.__da = mouseObj.clientX - panel.mousePosition.clientX;\n                            var minWidth = panel.minWidth || 0;\n                            var maxWidth = panel.maxWidth || item.targetDimension.width - getDockPanelOuterSize[\"width\"](item, item.dockPanel.left) - getDockPanelOuterSize[\"width\"](item, item.dockPanel.right);\n\n                            if (panel.__width - panel.__da < minWidth) {\n                                panel.__da = panel.__width - minWidth;\n                            } else if (maxWidth < panel.__width - panel.__da) {\n                                panel.__da = -maxWidth + panel.__width;\n                            }\n                            return { left: panel.$splitter.position().left + panel.__da };\n                        },\n                        \"top\": function top(e) {\n                            var mouseObj = 'changedTouches' in e.originalEvent && e.changedTouches ? e.originalEvent.changedTouches[0] : e;\n\n                            panel.__da = mouseObj.clientY - panel.mousePosition.clientY;\n                            var minHeight = panel.minHeight || 0;\n                            var maxHeight = panel.maxHeight || item.targetDimension.height - getDockPanelOuterSize[\"height\"](item, item.dockPanel.top) - getDockPanelOuterSize[\"height\"](item, item.dockPanel.bottom);\n\n                            if (panel.__height + panel.__da < minHeight) {\n                                panel.__da = -panel.__height + minHeight;\n                            } else if (maxHeight < panel.__height + panel.__da) {\n                                panel.__da = maxHeight - panel.__height;\n                            }\n                            return { top: panel.$splitter.position().top + panel.__da };\n                        },\n                        \"bottom\": function bottom(e) {\n                            var mouseObj = 'changedTouches' in e.originalEvent && e.changedTouches ? e.originalEvent.changedTouches[0] : e;\n\n                            panel.__da = mouseObj.clientY - panel.mousePosition.clientY;\n                            var minHeight = panel.minHeight || 0;\n                            var maxHeight = panel.maxHeight || item.targetDimension.height - getDockPanelOuterSize[\"height\"](item, item.dockPanel.top) - getDockPanelOuterSize[\"height\"](item, item.dockPanel.bottom);\n\n                            if (panel.__height - panel.__da < minHeight) {\n                                panel.__da = panel.__height - minHeight;\n                            } else if (maxHeight < panel.__height - panel.__da) {\n                                panel.__da = -maxHeight + panel.__height;\n                            }\n                            return { top: panel.$splitter.position().top + panel.__da };\n                        },\n                        \"split\": function split(e) {\n                            var mouseObj = 'changedTouches' in e.originalEvent && e.changedTouches ? e.originalEvent.changedTouches[0] : e;\n\n                            if (item.orientation == \"horizontal\") {\n                                panel.__da = mouseObj.clientY - panel.mousePosition.clientY;\n\n                                var prevPanel = item.splitPanel[panel.panelIndex - 1];\n                                var nextPanel = item.splitPanel[panel.panelIndex + 1];\n\n                                var prePanelMinHeight = prevPanel.minHeight || 0;\n                                var nextPanelMinHeight = nextPanel.minHeight || 0;\n\n                                if (panel.offsetStart + panel.__da < prevPanel.offsetStart + prePanelMinHeight) {\n                                    panel.__da = prevPanel.offsetStart - panel.offsetStart + prePanelMinHeight;\n                                } else if (panel.offsetStart + panel.__da > nextPanel.offsetEnd - nextPanelMinHeight) {\n                                    panel.__da = nextPanel.offsetEnd - panel.offsetEnd - nextPanelMinHeight;\n                                }\n\n                                return { top: panel.$target.position().top + panel.__da };\n                            } else {\n                                /// todo : min & max 범위 정하기\n                                panel.__da = mouseObj.clientX - panel.mousePosition.clientX;\n\n                                var prevPanel = item.splitPanel[panel.panelIndex - 1];\n                                var nextPanel = item.splitPanel[panel.panelIndex + 1];\n                                var prePanelMinWidth = prevPanel.minWidth || 0;\n                                var nextPanelMinWidth = nextPanel.minWidth || 0;\n\n                                if (panel.offsetStart + panel.__da < prevPanel.offsetStart + prePanelMinWidth) {\n                                    panel.__da = prevPanel.offsetStart - panel.offsetStart + prePanelMinWidth;\n                                } else if (panel.offsetStart + panel.__da > nextPanel.offsetEnd - nextPanelMinWidth) {\n                                    panel.__da = nextPanel.offsetEnd - panel.offsetEnd - nextPanelMinWidth;\n                                }\n                                return { left: Number(panel.$target.position().left) + Number(panel.__da) };\n                            }\n                        }\n                    };\n                    panel.__da = 0; // 패널의 변화량\n\n                    jQuery(document.body).bind(ENM[\"mousemove\"] + \".ax5layout-\" + this.instanceId, function (e) {\n                        if (!self.resizer) {\n\n                            self.resizer = jQuery('<div class=\"ax5layout-resizer panel-' + panel.resizerType + '\" ondragstart=\"return false;\"></div>');\n                            self.resizer.css({\n                                left: splitterOffset.left,\n                                top: splitterOffset.top,\n                                width: splitterBox.width,\n                                height: splitterBox.height\n                            });\n                            item.$target.append(self.resizer);\n                        }\n                        self.resizer.css(getResizerPosition[panel.resizerType](e));\n                    }).bind(ENM[\"mouseup\"] + \".ax5layout-\" + this.instanceId, function (e) {\n                        resizeSplitter.off.call(self, queIdx, panel, $splitter);\n                    }).bind(\"mouseleave.ax5layout-\" + this.instanceId, function (e) {\n                        resizeSplitter.off.call(self, queIdx, panel, $splitter);\n                    });\n\n                    jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n                },\n                \"off\": function off(queIdx, panel, $splitter) {\n                    var item = this.queue[queIdx];\n                    var setPanelSize = {\n                        \"dock-panel\": {\n                            \"left\": function left(queIdx, panel) {\n                                panel.__width += panel.__da;\n                            },\n                            \"right\": function right() {\n                                panel.__width -= panel.__da;\n                            },\n                            \"top\": function top() {\n                                panel.__height += panel.__da;\n                            },\n                            \"bottom\": function bottom() {\n                                panel.__height -= panel.__da;\n                            }\n                        },\n                        \"split-panel\": {\n                            \"split\": function split() {\n                                if (item.orientation == \"horizontal\") {\n                                    // 앞과 뒤의 높이 조절\n                                    item.splitPanel[panel.panelIndex - 1].__height += panel.__da;\n                                    item.splitPanel[panel.panelIndex + 1].__height -= panel.__da;\n                                } else {\n                                    // 앞과 뒤의 높이 조절\n\n                                    item.splitPanel[panel.panelIndex - 1].__width += panel.__da;\n                                    item.splitPanel[panel.panelIndex + 1].__width -= panel.__da;\n                                }\n                            }\n                        },\n                        \"tab-panel\": {}\n                    };\n\n                    if (self.resizer) {\n                        self.resizer.remove();\n                        self.resizer = null;\n                        setPanelSize[this.queue[queIdx].layout][panel.resizerType].call(this, queIdx, panel);\n                        alignLayout.call(this, queIdx);\n                    }\n\n                    jQuery(document.body).unbind(ENM[\"mousemove\"] + \".ax5layout-\" + this.instanceId).unbind(ENM[\"mouseup\"] + \".ax5layout-\" + this.instanceId).unbind(\"mouseleave.ax5layout-\" + this.instanceId);\n\n                    jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n                }\n            },\n                tabControl = {\n                \"open\": function open(queIdx, layout, panelIndex) {\n                    if (layout.activePanelIndex != panelIndex) {\n                        layout.tabPanel[panelIndex].active = true;\n                        layout.tabPanel[layout.activePanelIndex].active = false;\n                        layout.$target.find('[data-tab-panel-label=\"' + panelIndex + '\"]').attr(\"data-tab-active\", \"true\");\n                        layout.$target.find('[data-tab-panel-label=\"' + layout.activePanelIndex + '\"]').removeAttr(\"data-tab-active\");\n                        layout.tabPanel[panelIndex].$target.attr(\"data-tab-active\", \"true\");\n                        layout.tabPanel[layout.activePanelIndex].$target.removeAttr(\"data-tab-active\");\n                        layout.activePanelIndex = panelIndex;\n\n                        if (layout.onOpenTab) {\n                            var that = {\n                                '$target': layout.$target,\n                                name: layout.name,\n                                id: layout.id,\n                                layout: layout.layout,\n                                activePanelIndex: layout.activePanelIndex,\n                                activePanel: layout.tabPanel[layout.activePanelIndex],\n                                tabPanel: layout.tabPanel\n                            };\n                            layout.onOpenTab.call(that);\n                        }\n                    }\n                }\n            },\n                getTabLabesTmpl = function getTabLabesTmpl() {\n                return '\\n<div data-tab-panel-label-holder=\"{{id}}\">\\n    <div data-tab-panel-label-border=\"{{id}}\"></div>\\n    <div data-tab-panel-label-table=\"{{id}}\">\\n        <div data-tab-panel-aside=\"left\"></div>\\n    {{#tabPanel}}\\n        <div data-tab-panel-label=\"{{panelIndex}}\" data-tab-active=\"{{active}}\">\\n            <div data-tab-label=\"{{panelIndex}}\">{{{label}}}</div>\\n        </div>\\n    {{/tabPanel}}\\n        <div data-tab-panel-aside=\"right\"></div>\\n    </div>\\n</div>\\n';\n            },\n                bindLayoutTarget = function () {\n\n                var applyLayout = {\n                    \"dock-panel\": function dockPanel(queIdx) {\n                        var item = this.queue[queIdx];\n                        item.dockPanel = {};\n                        item.$target.find('>[data-dock-panel]').each(function () {\n\n                            var panelInfo = {};\n                            (function (data) {\n                                if (U.isObject(data) && !data.error) {\n                                    panelInfo = jQuery.extend(true, panelInfo, data);\n                                }\n                            })(U.parseJson(this.getAttribute(\"data-dock-panel\"), true));\n\n                            if ('dock' in panelInfo) {\n                                panelInfo.$target = jQuery(this);\n                                panelInfo.$target.addClass(\"dock-panel-\" + panelInfo.dock);\n\n                                if (panelInfo.split = panelInfo.split && panelInfo.split.toString() == \"true\") {\n                                    panelInfo.$splitter = jQuery('<div data-splitter=\"\" class=\"dock-panel-' + panelInfo.dock + '\"></div>');\n                                    panelInfo.$splitter.bind(ENM[\"mousedown\"], function (e) {\n                                        panelInfo.mousePosition = getMousePosition(e);\n                                        resizeSplitter.on.call(self, queIdx, panelInfo, panelInfo.$splitter);\n                                    }).bind(\"dragstart\", function (e) {\n                                        U.stopEvent(e);\n                                        return false;\n                                    });\n                                    item.$target.append(panelInfo.$splitter);\n                                }\n\n                                if (panelInfo.dock == \"top\" || panelInfo.dock == \"bottom\") {\n                                    panelInfo.__height = getPixel(panelInfo.height, item.targetDimension.height);\n                                } else {\n                                    panelInfo.__width = getPixel(panelInfo.width, item.targetDimension.width);\n                                }\n                                panelInfo.resizerType = panelInfo.dock;\n                                item.dockPanel[panelInfo.dock] = panelInfo;\n                            }\n                        });\n                    },\n                    \"split-panel\": function splitPanel(queIdx) {\n                        var item = this.queue[queIdx];\n                        item.splitPanel = [];\n                        item.$target.find('>[data-split-panel], >[data-splitter]').each(function (ELIndex) {\n\n                            var panelInfo = {};\n                            (function (data) {\n                                if (U.isObject(data) && !data.error) {\n                                    panelInfo = jQuery.extend(true, panelInfo, data);\n                                }\n                            })(U.parseJson(this.getAttribute(\"data-split-panel\") || this.getAttribute(\"data-splitter\"), true));\n\n                            panelInfo.$target = jQuery(this);\n                            panelInfo.$target.addClass(\"split-panel-\" + item.orientation);\n                            panelInfo.panelIndex = ELIndex;\n\n                            if (this.getAttribute(\"data-splitter\")) {\n\n                                panelInfo.splitter = true;\n                                panelInfo.$target.bind(ENM[\"mousedown\"], function (e) {\n                                    if (panelInfo.panelIndex > 0 && panelInfo.panelIndex < item.splitPanel.length - 1) {\n                                        panelInfo.mousePosition = getMousePosition(e);\n                                        resizeSplitter.on.call(self, queIdx, panelInfo, panelInfo.$target);\n                                    }\n                                }).bind(\"dragstart\", function (e) {\n                                    U.stopEvent(e);\n                                    return false;\n                                });\n                                panelInfo.resizerType = \"split\";\n                            } else {\n\n                                if (item.orientation == \"horizontal\") {\n                                    panelInfo.__height = getPixel(panelInfo.height, item.targetDimension.height);\n                                } else {\n                                    item.orientation = \"vertical\";\n                                    panelInfo.__width = getPixel(panelInfo.width, item.targetDimension.width);\n                                }\n                            }\n\n                            item.splitPanel.push(panelInfo);\n                        });\n                    },\n                    \"tab-panel\": function tabPanel(queIdx) {\n                        var item = this.queue[queIdx];\n\n                        var hasActivePanel = false;\n                        var activePanelIndex = -1;\n                        item.tabPanel = [];\n                        item.$target.find('>[data-tab-panel]').each(function (ELIndex) {\n                            var panelInfo = {};\n                            (function (data) {\n                                if (U.isObject(data) && !data.error) {\n                                    panelInfo = jQuery.extend(true, panelInfo, data);\n                                }\n                            })(U.parseJson(this.getAttribute(\"data-tab-panel\"), true));\n\n                            if (hasActivePanel) {\n                                panelInfo.active = false;\n                            }\n\n                            panelInfo.$target = jQuery(this);\n\n                            if (panelInfo.active && panelInfo.active != \"false\") {\n                                hasActivePanel = true;\n                                item.activePanelIndex = ELIndex;\n                                panelInfo.$target.attr(\"data-tab-active\", \"true\");\n                            }\n\n                            panelInfo.panelIndex = ELIndex;\n                            item.tabPanel.push(panelInfo);\n                        });\n\n                        if (!hasActivePanel) {\n                            item.tabPanel[0].active = true;\n                            item.tabPanel[0].$target.attr(\"data-tab-active\", \"true\");\n                            item.activePanelIndex = 0;\n                        }\n\n                        // make tabLabel\n                        item.$target.append(jQuery(ax5.mustache.render(getTabLabesTmpl.call(this, queIdx), item)));\n                        item.$target.on(\"click\", '[data-tab-panel-label]', function (e) {\n                            var index = this.getAttribute(\"data-tab-panel-label\");\n                            tabControl.open.call(self, queIdx, item, index);\n                        });\n                    }\n                };\n\n                return function (queIdx) {\n                    var item = this.queue[queIdx];\n                    var data = {};\n\n                    // 레이아웃 타겟의 CSS속성을 미리 저장해 둡니다. 왜? 패널별로 크기 계산 할 때 쓰려고\n                    item.targetDimension = {\n                        height: item.$target.innerHeight(),\n                        width: item.$target.innerWidth()\n                    };\n\n                    // 부모 컨테이너가 ax5layout인지 판단 필요.\n                    if (item.$target.parents(\"[data-ax5layout]\").get(0)) {\n                        hooksResizeLayout.call(this, item.$target.parents(\"[data-ax5layout]\").get(0), queIdx);\n                    }\n\n                    if (item.layout in applyLayout) {\n                        applyLayout[item.layout].call(this, queIdx);\n                    }\n                    alignLayout.call(this, queIdx);\n                };\n            }(),\n                getQueIdx = function getQueIdx(boundID) {\n                if (!U.isString(boundID)) {\n                    boundID = jQuery(boundID).data(\"data-ax5layout-id\");\n                }\n                if (!U.isString(boundID)) {\n                    //console.log(ax5.info.getError(\"ax5layout\", \"402\", \"getQueIdx\"));\n                    return -1;\n                }\n                return U.search(this.queue, function () {\n                    return this.id == boundID;\n                });\n            },\n                hooksResizeLayout = function hooksResizeLayout(boundID, childQueIdx) {\n                var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                if (!this.queue[queIdx].childQueIdxs) this.queue[queIdx].childQueIdxs = [];\n                this.queue[queIdx].childQueIdxs.push(childQueIdx);\n                this.queue[childQueIdx].parentQueIdx = queIdx;\n            };\n\n            /**\n             * Preferences of layout UI\n             * @method ax5layout.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Number} [config.animateTime=250]\n             * @param {Object} [config.splitter]\n             * @param {Number} [config.splitter.size=4]\n             * @param {Boolean} [config.autoResize=true]\n             * @returns {ax5layout}\n             * @example\n             * ```js\n             * jQuery('[data-ax5layout=\"ax1\"]').ax5layout({\n             *     onResize: function () {\n             *     }\n             * });\n             *\n             * jQuery('[data-ax5layout=\"ax1\"]').ax5layout(\"resize\", {\n             *     top: {height: 100},\n             *     bottom: 100,\n             *     left: 100,\n             *     right: 100\n             * });\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                jQuery(window).bind(\"resize.ax5layout-\" + this.instanceId, function () {\n                    alignLayoutAll.call(this);\n                }.bind(this));\n            };\n\n            /**\n             * @method ax5layout.bind\n             * @param {Object} item\n             * @param {String} [item.layout]\n             * @param {String} [item.theme]\n             * @param {Element} item.target\n             * @param {Object[]} item.options\n             * @param {Object} [item.splitter]\n             * @param {Number} [item.splitter.size=4]\n             * @param {Boolean} [item.autoResize=true]\n             * @returns {ax5layout}\n             */\n            this.bind = function (item) {\n                var UIConfig = {},\n                    queIdx;\n\n                item = jQuery.extend(true, UIConfig, cfg, item);\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5layout\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                item.$target = jQuery(item.target);\n\n                if (!item.id) item.id = item.$target.data(\"data-ax5layout-id\");\n                if (!item.id) {\n                    item.id = 'ax5layout-' + ax5.getGuid();\n                    item.$target.data(\"data-ax5layout-id\", item.id);\n                }\n                item.name = item.$target.attr(\"data-ax5layout\");\n                if (item.options) {\n                    item.options = JSON.parse(JSON.stringify(item.options));\n                }\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        item = jQuery.extend(true, item, data);\n                    }\n                })(U.parseJson(item.$target.attr(\"data-config\"), true));\n\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindLayoutTarget.call(this, this.queue.length - 1);\n                } else {\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindLayoutTarget.call(this, queIdx);\n                }\n\n                UIConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * @method ax5layout.align\n             * @param boundID\n             * @param {Function} [callback]\n             * @param {String} [windowResize]\n             * @returns {ax5layout}\n             */\n            this.align = function (boundID, windowResize) {\n                var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n\n                if (queIdx === -1) {\n\n                    var i = this.queue.length;\n                    while (i--) {\n                        alignLayout.call(this, i, null, windowResize);\n                    }\n                } else {\n                    alignLayout.call(this, queIdx, null, windowResize);\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5layout.onResize\n             * @param boundID\n             * @param fn\n             * @returns {ax5layout}\n             */\n            this.onResize = function (boundID, fn) {\n                var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5layout\", \"402\", \"onResize\"));\n                    return;\n                }\n                this.queue[queIdx].onResize = fn;\n                return this;\n            };\n\n            /**\n             * @method ax5layout.resize\n             * @param boundID\n             * @param {Object} resizeOption\n             * @param {Function} [callback]\n             * @returns {ax5layout}\n             */\n            this.resize = function () {\n\n                var resizeLayoutPanel = {\n                    \"dock-panel\": function dockPanel(item, resizeOption) {\n                        [\"top\", \"bottom\", \"left\", \"right\"].forEach(function (dock) {\n                            if (resizeOption[dock] && item.dockPanel[dock]) {\n                                if (dock == \"top\" || dock == \"bottom\") {\n                                    item.dockPanel[dock].__height = U.isObject(resizeOption[dock]) ? resizeOption[dock].height : resizeOption[dock];\n                                } else if (dock == \"left\" || dock == \"right\") {\n                                    item.dockPanel[dock].__width = U.isObject(resizeOption[dock]) ? resizeOption[dock].width : resizeOption[dock];\n                                }\n                            }\n                        });\n                    },\n                    \"split-panel\": function splitPanel() {},\n                    \"tab-panel\": function tabPanel() {}\n                };\n\n                return function (boundID, resizeOption, callback) {\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {\n                        var i = this.queue.length;\n                        while (i--) {\n                            resizeLayoutPanel[this.queue[i].layout].call(this, this.queue[i], resizeOption);\n                            alignLayout.call(this, i, callback);\n                        }\n                    } else {\n                        if (this.queue[queIdx]) {\n                            resizeLayoutPanel[this.queue[queIdx].layout].call(this, this.queue[queIdx], resizeOption);\n                            alignLayout.call(this, queIdx, callback);\n                        }\n                    }\n\n                    return this;\n                };\n            }();\n\n            this.reset = function () {\n\n                var resetLayoutPanel = {\n                    \"dock-panel\": function dockPanel(item) {\n                        [\"top\", \"bottom\", \"left\", \"right\"].forEach(function (dock) {\n                            if (item.dockPanel[dock]) {\n                                if (dock == \"top\" || dock == \"bottom\") {\n                                    item.dockPanel[dock].__height = item.dockPanel[dock].height;\n                                } else if (dock == \"left\" || dock == \"right\") {\n                                    item.dockPanel[dock].__width = item.dockPanel[dock].width;\n                                }\n                            }\n                        });\n                    },\n                    \"split-panel\": function splitPanel(item) {\n                        item.splitPanel.forEach(function (panel) {\n                            if (item.orientation == \"vertical\") {\n                                panel.__width = getPixel(panel.width, item.targetDimension.width);\n                            } else if (item.orientation == \"horizontal\") {\n                                panel.__height = getPixel(panel.height, item.targetDimension.height);\n                            }\n                        });\n                    },\n                    \"tab-panel\": function tabPanel() {}\n                };\n\n                return function (boundID, callback) {\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {} else {\n                        resetLayoutPanel[this.queue[queIdx].layout].call(this, this.queue[queIdx]);\n                        alignLayout.call(this, queIdx, callback);\n                    }\n\n                    return this;\n                };\n            }();\n\n            this.hide = function () {};\n\n            /**\n             * @method ax5layout.tabOpen\n             * @param boundID\n             * @param tabIndex\n             * @returns {ax5.ui.ax5layout}\n             */\n            this.tabOpen = function () {\n                return function (boundID, tabIndex) {\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {\n                        console.log(ax5.info.getError(\"ax5layout\", \"402\", \"tabOpen\"));\n                        return;\n                    }\n\n                    tabControl.open.call(this, queIdx, this.queue[queIdx], tabIndex);\n                    return this;\n                };\n            }();\n\n            this.getActiveTab = function (boundID) {\n                var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5layout\", \"402\", \"tabOpen\"));\n                    return;\n                }\n\n                if (typeof this.queue[queIdx].activePanelIndex != \"undefined\") {\n                    return this.queue[queIdx].tabPanel[this.queue[queIdx].activePanelIndex];\n                }\n            };\n\n            /// 클래스 생성자\n            this.main = function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                } else {\n                    this.init();\n                }\n            }.apply(this, arguments);\n        };\n        return ax5layout;\n    }());\n})();\n\n/*\n * Copyright (c) 2017. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\nax5.ui.layout_instance = new ax5.ui.layout();\n\n/**\n * ax5layout jquery extends\n * @namespace jQueryExtends\n */\n\n/**\n * @method jQueryExtends.ax5layout\n * @param {String} methodName\n * @example\n * ```js\n * jQuery('[data-ax5layout=\"ax1\"]').ax5layout(\"align\");\n * jQuery('[data-ax5layout=\"ax1\"]').ax5layout(\"resize\");\n * jQuery('[data-ax5layout=\"ax1\"]').ax5layout(\"reset\");\n * jQuery('[data-ax5layout=\"ax1\"]').ax5layout(\"hide\");\n * jQuery('[data-ax5layout=\"ax1\"]').ax5layout(\"onResize\");\n * jQuery('[data-ax5layout=\"ax1\"]').ax5layout(\"tabOpen\", 1);\n * ```\n */\njQuery.fn.ax5layout = function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"align\":\n                    return ax5.ui.layout_instance.align(this, arguments[1]);\n                    break;\n                case \"resize\":\n                    return ax5.ui.layout_instance.resize(this, arguments[1], arguments[2]);\n                    break;\n                case \"reset\":\n                    return ax5.ui.layout_instance.reset(this, arguments[1]);\n                    break;\n                case \"hide\":\n                    return ax5.ui.layout_instance.hide(this, arguments[1]);\n                    break;\n                case \"onResize\":\n                    return ax5.ui.layout_instance.onResize(this, arguments[1]);\n                    break;\n                case \"tabOpen\":\n                    return ax5.ui.layout_instance.tabOpen(this, arguments[1]);\n                    break;\n                case \"getActiveTab\":\n                    return ax5.ui.layout_instance.getActiveTab(this, arguments[1]);\n                    break;\n                default:\n                    return this;\n            }\n        } else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.layout_instance.bind(config);\n            });\n        }\n        return this;\n    };\n}();\n// ax5.ui.binder\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n\n    UI.addClass({\n        className: \"binder\"\n    }, function () {\n\n        /**\n         * @class ax5binder\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var obj = {\n         *     name: \"Thomas Jang\",\n         *     alias: \"tom\",\n         *     tel: \"010-8881-9137\",\n         *     email: \"tom@axisj.com\",\n         *     sex: \"M\",\n         *     hobby: [\"sport\"],\n         *     useYn: \"N\",\n         *     description: \"http://www.axisj.com\",\n         *     list: [\n         *         {\n         *             name: \"thomas\",\n         *             tel: \"010-8881-9000\",\n         *             email: \"tom@axisj.com\",\n         *             sex: \"M\",\n         *             description: \"\",\n         *             child: [{name:\"값1\"},{name:\"값2\"}],\n         *             qty: 10,\n         *             cost: 100\n         *         },\n         *         {\n         *             name: \"thomas\",\n         *             tel: \"010-8881-9000\",\n         *             email: \"tom@axisj.com\",\n         *             sex: \"M\",\n         *             description: \"\",\n         *             child: [{name:\"값1\"},{name:\"값2\"}],\n         *             qty: 20,\n         *             cost: 100\n         *         }\n         * ]\n         * };\n         *\n         * var myBinder = new ax5.ui.binder();\n         * myBinder.setModel(obj, $('#form-target'));\n         * ```\n         */\n        return function () {\n\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {};\n            cfg = this.config;\n\n            this.model = {};\n            this.tmpl = {};\n            this.view_target = null;\n            this.change_trigger = {};\n            this.click_trigger = {};\n            this.update_trigger = {};\n            this.onerror = null;\n\n            var _toString = Object.prototype.toString,\n                get_type = function get_type(O) {\n                var typeName;\n                if (O != null && O == O.window) {\n                    typeName = \"window\";\n                } else if (!!(O && O.nodeType == 1)) {\n                    typeName = \"element\";\n                } else if (!!(O && O.nodeType == 11)) {\n                    typeName = \"fragment\";\n                } else if (typeof O === \"undefined\") {\n                    typeName = \"undefined\";\n                } else if (_toString.call(O) == \"[object Object]\") {\n                    typeName = \"object\";\n                } else if (_toString.call(O) == \"[object Array]\") {\n                    typeName = \"array\";\n                } else if (_toString.call(O) == \"[object String]\") {\n                    typeName = \"string\";\n                } else if (_toString.call(O) == \"[object Number]\") {\n                    typeName = \"number\";\n                } else if (_toString.call(O) == \"[object NodeList]\") {\n                    typeName = \"nodelist\";\n                } else if (typeof O === \"function\") {\n                    typeName = \"function\";\n                }\n                return typeName;\n            },\n                get_mix_path = function get_mix_path(dataPath, index, item_path) {\n                return dataPath + \"[\" + index + \"]\" + (item_path == \".\" ? \"\" : \".\" + item_path);\n            },\n                get_real_path = function get_real_path(_dataPath) {\n                var path = [];\n                var _path = [].concat(_dataPath.split(/[\\.\\[\\]]/g));\n                _path.forEach(function (n) {\n                    if (n !== \"\") path.push(\"[\\\"\" + n.replace(/['\\\"]/g, \"\") + \"\\\"]\");\n                });\n                _path = null;\n                return path.join(\"\");\n                /*\n                var path = [];\n                var _path = [].concat(dataPath.split(/[\\.\\[\\]]/g));\n                 _path.forEach(function (n) {\n                    if (n !== \"\") path.push(n);\n                });\n                _path = null;\n                return \"'\" + path.join(\"']['\") + \"'\";\n                */\n            };\n\n            /**\n             * 바인딩할 자바스크립트 오브젝트로 제이쿼리로 검색된 HTML dom 엘리먼트 에 바인딩합니다. 바인딩된 모델을 반환합니다.\n             * @method ax5binder.setModel\n             * @param {Object} model\n             * @param {jQueryObject} [view_target]\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * var myModel = new ax5.ui.binder();\n             * myModel.setModel({}, $(\"#...\"));\n             * ```\n             */\n            this.setModel = function (model, view_target) {\n                this.model = model;\n                if (!this.view_target && view_target) {\n                    this.view_target = view_target;\n                    this._binding();\n                } else {\n                    this._binding(\"update\");\n                }\n                return this;\n            };\n\n            /**\n             * data_path에 값을 변경한다. value의 타입은 (String, Number, Array, Object)를 지원.\n             * @method ax5binder.set\n             * @param {String} dataPath\n             * @param {Object} value\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.set(\"name\", \"Seowoo\");\n             * myModel.set(\"obj.path\", {a:1});\n             * ```\n             */\n            this.set = function (dataPath, value) {\n                var _this = this,\n                    obj_type,\n                    i,\n                    this_type;\n\n                Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\").call(this.model, value);\n                obj_type = get_type(value);\n\n                if (obj_type == \"object\") {\n                    for (var k in value) {\n                        this.set(dataPath + \".\" + k, value[k]);\n                    }\n                } else if (obj_type == \"array\") {\n                    this.view_target.find('[data-ax-path=\"' + dataPath + '\"]').each(function () {\n                        this_type = (this.type || \"\").toLowerCase();\n                        if (this_type == \"checkbox\" || this_type == \"radio\") _this.set_els_value(this, this.tagName.toLowerCase(), this_type, value, dataPath, \"change\");\n                    });\n                    i = value.length;\n                    while (i--) {\n                        this.set(dataPath + \"[\" + i + \"]\", value[i]);\n                    }\n                } else {\n                    // apply data value to els\n                    this.view_target.find('[data-ax-path=\"' + dataPath + '\"]').each(function () {\n                        _this.set_els_value(this, this.tagName.toLowerCase(), (this.type || \"\").toLowerCase(), value, dataPath, \"change\");\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * data_path에 값을 반환한다. data_path 가 없으면 전체 Object를 반환한다.\n             * @method ax5binder.get\n             * @param dataPath\n             * @returns {*}\n             */\n            this.get = function (dataPath) {\n                if (typeof dataPath == \"undefined\") {\n                    return this.model;\n                } else {\n                    return Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n                }\n            };\n\n            /**\n             * data_path에 값이 변경되는 이벤트 발생하면 callback을 실행합니다.\n             * @method ax5binder.onChange\n             * @param dataPath\n             * @param callback\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.onChange(\"name\", function () {\n             *       console.log(this);\n             *       // el: domElement - 변경이 발생한 엘리먼트, 엘리먼트로 부터 다양한 속성을 추출할 수 있다.\n             *       // jquery : jQueryObject\n             *       // tagname: \"input\"\n             *       // value: \"changed value\"\n             *       console.log(this.el.id);\n             *   });\n             *   myModel.onChange(\"*\", function (n) {\n             *       console.log(n);\n             *       // console.log(this); 와 동일\n             *   });\n             * ```\n             */\n            this.onChange = function (dataPath, callback) {\n                this.change_trigger[dataPath || \"*\"] = callback;\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 속성이 부여된 엘리먼트 하위에 태그중에 data-ax-repeat-click 속성을 가진 아이템에 대해 클릭 이벤트 발생하면 callback을 실행합니다.\n             * @method ax5binder.onClick\n             * @param dataPath\n             * @param callback\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.onclick(\"list\", function () {\n             *       console.log(this);\n             *       // el: domElement\n             *       // jquery: jQueryObject\n             *       // item: Object - repeat item\n             *       // item_index: \"0\" - index of item\n             *       // item_path: \"list[0]\" - repeat data_path\n             *       // repeat_path: \"list\"\n             *       // tagname: \"button\"\n             *       // value: \"add\"\n             *   });\n             * ```\n             */\n            this.onClick = function (dataPath, callback) {\n                this.click_trigger[dataPath] = callback;\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 하위아이템을 추가합니다.\n             * @method ax5binder.add\n             * @param dataPath\n             * @param item\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.add(\"list\", {a:1});\n             * ```\n             */\n            this.add = function (dataPath, item) {\n                var list = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n                var tmpl = this.tmpl[dataPath];\n                item['@i'] = list.length;\n                item['@r'] = list.length;\n                item.__ADDED__ = true;\n                Function(\"val\", \"this\" + get_real_path(dataPath) + \".push(val);\").call(this.model, item);\n\n                // 다중 템플릿 처리\n                for (var t in tmpl) {\n                    var fragdom = $(ax5.mustache.render(tmpl[t].content, item));\n                    fragdom.attr(\"data-ax-repeat-path\", dataPath);\n                    fragdom.attr(\"data-ax-repeat-i\", item['@i']);\n                    this.bind_event_tmpl(fragdom, dataPath);\n                    tmpl[t].container.append(fragdom);\n                }\n\n                this.change(\"*\");\n\n                var callback = this.update_trigger[dataPath];\n                if (callback) {\n                    var that = {\n                        repeat_path: dataPath,\n                        tmpl: tmpl,\n                        list: list\n                    };\n                    callback.call(that, that);\n                }\n\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 하위 아이템을 제거합니다. 단! 이 때 ADDED 값을 가진 아이템은 제거하고 그렇지 않은 아이템은 DELETED 값을 아이템에 추가합니다.\n             * @method ax5binder.remove\n             * @param dataPath\n             * @param index\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.remove(\"list\", 0);\n             * ```\n             */\n            this.remove = function (dataPath, index) {\n                var list = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n                var tmpl = this.tmpl[dataPath];\n                if (typeof index == \"undefined\") index = list.length - 1;\n                var remove_item = list[index];\n                if (remove_item.__ADDED__) {\n                    list.splice(index, 1);\n                } else {\n                    list[index].__DELETED__ = true;\n                }\n\n                for (var t in tmpl) {\n                    tmpl[t].container.empty();\n                    this.print_tmpl(dataPath, tmpl[t]);\n                }\n\n                this.change(\"*\");\n\n                var callback = this.update_trigger[dataPath];\n                if (callback) {\n                    var that = {\n                        repeat_path: dataPath,\n                        tmpl: tmpl,\n                        list: list\n                    };\n                    callback.call(that, that);\n                }\n\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 하위 아이템을 교체합니다.\n             * @method ax5binder.update\n             * @param dataPath\n             * @param index\n             * @param item\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.update(\"list\", 0, {a:1});\n             * ```\n             */\n            this.update = function (dataPath, index, item) {\n                var list = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n                var tmpl = this.tmpl[dataPath];\n                if (typeof index != \"undefined\" && item) list.splice(index, 1, item);\n\n                for (var t in tmpl) {\n                    tmpl[t].container.empty();\n                    this.print_tmpl(dataPath, tmpl[t]);\n                }\n\n                this.change(\"*\");\n\n                var callback = this.update_trigger[dataPath];\n                if (callback) {\n                    var that = {\n                        repeat_path: dataPath,\n                        tmpl: tmpl,\n                        list: list\n                    };\n                    callback.call(that, that);\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5binder.childAdd\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param child_item\n             */\n            this.childAdd = function (dataPath, index, child_path, child_item) {\n                var _list = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n                var list = Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \";\").call(this.model);\n                child_item.__ADDED__ = true;\n                list.push(child_item);\n                this.update(dataPath, index, _list[index]);\n            };\n\n            /**\n             * ax5binder.childRemove\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param child_index\n             */\n            this.childRemove = function (dataPath, index, child_path, child_index) {\n                var _list = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n                var list = Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \";\").call(this.model);\n                var remove_item = list[child_index];\n                if (remove_item.__ADDED__) {\n                    list.splice(child_index, 1);\n                } else {\n                    list[child_index].__DELETED__ = true;\n                }\n                this.update(dataPath, index, _list[index]);\n            };\n\n            /**\n             * @method ax5binder.childUpdate\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param child_index\n             * @param child_item\n             */\n            this.childUpdate = function (dataPath, index, child_path, child_index, child_item) {\n                var _list = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n                var list = Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \";\").call(this.model);\n                list[child_index] = child_item;\n                this.update(dataPath, index, _list[index]);\n            };\n\n            /**\n             * @method ax5binder.childSet\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param value\n             * @returns {ax5binder}\n             */\n            this.childSet = function (dataPath, index, child_path, value) {\n                var _this = this,\n                    i;\n                Function(\"val\", \"this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \" = val;\").call(this.model, value);\n\n                // apply data value to els\n                this.view_target.find('[data-ax-repeat=\"' + dataPath + '\"]').find('[data-ax-repeat-i=\"' + index + '\"]').find('[data-ax-item-path=\"' + child_path + '\"]').each(function () {\n                    _this.set_els_value(this, this.tagName.toLowerCase(), (this.type || \"\").toLowerCase(), value, dataPath + \"[\" + index + \"].\" + child_path);\n                });\n                return this;\n            };\n\n            /**\n             * @method ax5binder.onUpdate\n             * @param dataPath\n             * @param callback\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             *  this.model.onupdate(\"moderator\", function () {\n             *      $('#moderator-add').val('');\n             *      $moderator.find('[data-role-user-btn]')\n             *          .unbind(\"click\")\n             *          .bind(\"click\", role_user_btn_onclick);\n             *  });\n             * ```\n             */\n            this.onUpdate = function (dataPath, callback) {\n                this.update_trigger[dataPath] = callback;\n                return this;\n            };\n\n            this._binding = function (isupdate) {\n                var _this = this;\n\n                // apply data value to els\n                this.view_target.find('[data-ax-path]').each(function () {\n                    var dom = $(this),\n                        dataPath = dom.attr(\"data-ax-path\"),\n                        this_type = (this.type || \"\").toLowerCase();\n\n                    var val;\n                    try {\n                        val = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(_this.model);\n                    } catch (e) {\n                        /**\n                         * onerror를 선언 한 경우에만 에러 출력\n                         * */\n                        if (_this.onerror) _this.onerror(\"not found target [model.\" + get_real_path(dataPath) + \"]\");\n                    }\n\n                    _this.set_els_value(this, this.tagName.toLowerCase(), this_type, val || \"\", dataPath);\n                });\n\n                if (typeof isupdate == \"undefined\") {\n                    // collect tmpl\n                    this.view_target.find('[data-ax-repeat]').each(function () {\n                        var dom = $(this),\n                            dataPath = dom.attr(\"data-ax-repeat\"),\n                            repeat_idx = dom.attr(\"data-ax-repeat-idx\");\n\n                        if (typeof _this.tmpl[dataPath] == \"undefined\") _this.tmpl[dataPath] = {};\n                        if (typeof repeat_idx != \"undefined\") {\n                            _this.tmpl[dataPath][repeat_idx] = {\n                                container: dom, content: dom.find(\"script\").html()\n                            };\n                        } else {\n                            _this.tmpl[dataPath][\"0\"] = {\n                                container: dom, content: dom.find(\"script\").html()\n                            };\n                        }\n                        //dom.empty().show();\n                        dom.empty();\n                    });\n                } else {\n                    this.view_target.find('[data-ax-repeat]').each(function () {\n                        var dom = $(this);\n                        dom.empty().show();\n                    });\n                }\n\n                // binding event to els\n                this.view_target.find('[data-ax-path]').off(\"change.axbinder\").on(\"change.axbinder\", function (e) {\n\n                    var i,\n                        hasItem = false,\n                        checked,\n                        new_value = [],\n                        dom = $(e.target),\n                        dataPath = dom.attr(\"data-ax-path\"),\n                        origin_value = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(_this.model),\n                        this_type = (this.type || \"\").toLowerCase(),\n                        value_type = get_type(origin_value),\n                        setAllow = true;\n\n                    if (value_type == \"object\" || value_type == \"array\") {\n                        setAllow = false;\n                    }\n\n                    if (this_type == \"checkbox\") {\n                        // 동일한 체크박스가 여러개 인지 판단합니다.\n                        if (_this.view_target.find('[data-ax-path=\"' + dataPath + '\"]').length > 1) {\n\n                            if (get_type(origin_value) != \"array\") {\n                                if (typeof origin_value === \"undefined\" || origin_value == \"\") origin_value = [];else origin_value = [].concat(origin_value);\n                            }\n                            i = origin_value.length, hasItem = false, checked = this.checked;\n                            while (i--) {\n                                if (origin_value[i] == this.value) {\n                                    hasItem = true;\n                                }\n                            }\n\n                            if (checked) {\n                                if (!hasItem) origin_value.push(this.value);\n                            } else {\n                                i = origin_value.length;\n                                while (i--) {\n                                    if (origin_value[i] == this.value) {\n                                        //hasItemIndex = i;\n                                    } else {\n                                        new_value.push(origin_value[i]);\n                                    }\n                                }\n                                origin_value = new_value;\n                            }\n                        } else {\n                            origin_value = this.checked ? this.value : \"\";\n                        }\n\n                        Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\").call(_this.model, origin_value);\n                        _this.change(dataPath, {\n                            el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: origin_value\n                        });\n                    } else {\n                        if (setAllow) {\n                            Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\").call(_this.model, this.value);\n                            _this.change(dataPath, {\n                                el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: this.value\n                            });\n                        }\n                    }\n\n                    dom.data(\"changedTime\", new Date().getTime());\n                });\n                /*\n                 this.view_target.find('[data-ax-path]').unbind(\"blur.axbinder\").bind(\"blur.axbinder\", function (e) {\n                 var dom = $(e.target);\n                 if (typeof dom.data(\"changedTime\") == \"undefined\" || dom.data(\"changedTime\") < (new Date()).getTime() - 10) dom.trigger(\"change\");\n                 });\n                 */\n\n                //_this.tmpl\n                var callback;\n                for (var tk in _this.tmpl) {\n                    for (var ix in _this.tmpl[tk]) {\n                        // console.log(_this.tmpl[tk][ix].content);\n                        this.print_tmpl(tk, _this.tmpl[tk][ix], \"isInit\");\n                    }\n\n                    if (callback = this.update_trigger[tk]) {\n                        var that = {\n                            repeat_path: tk,\n                            tmpl: _this.tmpl[tk],\n                            list: Function(\"\", \"return this.\" + tk + \";\").call(this.model)\n                        };\n                        callback.call(that, that);\n                    }\n                }\n            };\n\n            this.set_els_value = function (el, tagname, type, value, dataPath, callChange) {\n                if (typeof value === \"undefined\") value = [];else value = [].concat(value);\n                var options, i;\n\n                if (tagname == \"input\") {\n                    if (type == \"checkbox\" || type == \"radio\") {\n                        i = value.length;\n                        var checked = false;\n                        try {\n                            if (i > 0) {\n                                while (i--) {\n                                    if (typeof value[i] !== \"undefined\" && el.value === value[i].toString()) {\n                                        checked = true;\n                                    }\n                                }\n                            }\n                        } catch (e) {\n                            console.log(e);\n                        }\n\n                        el.checked = checked;\n                    } else {\n                        el.value = value.join('');\n                    }\n                } else if (tagname == \"select\") {\n                    options = el.options, i = options.length;\n                    var vi,\n                        option_matched = false;\n\n                    while (i--) {\n                        vi = value.length;\n                        while (vi--) {\n                            if (typeof value[vi] !== \"undefined\" && options[i].value === value[vi].toString()) {\n                                options[i].selected = true;\n                                option_matched = true;\n                                break;\n                            }\n                        }\n                        if (option_matched) break;\n                    }\n                    if (!option_matched) {\n                        if (options[0]) {\n                            options[0].selected = true;\n                            Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\").call(this.model, options[0].value);\n                        } else {\n                            Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\").call(this.model, \"\");\n                        }\n                    }\n\n                    if (window.AXSelect) {\n                        // AXISJ 사용가능\n                        $(typeof value !== \"undefined\" && el).bindSelectSetValue(value[value.length - 1]);\n                    }\n                } else if (tagname == \"textarea\") {\n                    el.value = value.join('') || \"\";\n                } else {\n                    if (el.innerText) {\n                        el.innerText = value.join(\"\");\n                    } else {\n                        el.innerHTML = value.join(\"\");\n                    }\n                }\n\n                if (callChange) {\n                    this.change(dataPath, { el: el, tagname: tagname, value: value });\n                }\n                return this;\n            };\n\n            this.change = function (dataPath, that) {\n                var callback = this.change_trigger[dataPath];\n                if (callback) {\n                    callback.call(that, that);\n                }\n                if (dataPath != \"*\" && this.change_trigger[\"*\"]) {\n                    this.change_trigger[\"*\"].call(that, that);\n                }\n            };\n\n            this.click = function (dataPath, that) {\n                var callback = this.click_trigger[dataPath];\n                if (callback) {\n                    callback.call(that, that);\n                }\n            };\n\n            this.sync_model = function () {};\n\n            this.print_tmpl = function (dataPath, tmpl, isInit) {\n                var list = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n                if (list && get_type(list) == \"array\") {\n                    for (var i = 0, l = list.length; i < l; i++) {\n                        var item = list[i];\n                        if (jQuery.isPlainObject(item)) {\n                            item['@i'] = i;\n                            item['@r'] = i;\n                            if (i === 0) item['@first'] = true;\n                        } else {\n                            item = {\n                                \"@i\": i,\n                                \"@value\": item\n                            };\n                            if (i === 0) item['@first'] = true;\n                            console.log(item);\n                        }\n\n                        if (!item.__DELETED__) {\n                            var fragdom = $(ax5.mustache.render(tmpl.content, item));\n                            fragdom.attr(\"data-ax-repeat-path\", dataPath);\n                            fragdom.attr(\"data-ax-repeat-i\", item['@i']);\n                            this.bind_event_tmpl(fragdom, dataPath);\n                            tmpl.container.append(fragdom);\n                        }\n                    }\n                }\n            };\n\n            this.bind_event_tmpl = function (target, dataPath) {\n                var _this = this,\n                    index = target.attr(\"data-ax-repeat-i\");\n                var list = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(this.model);\n\n                target.find('[data-ax-repeat-click]').off(\"click.axbinder\").on(\"click.axbinder\", function (e) {\n                    var target = ax5.util.findParentNode(e.target, function (el) {\n                        return el.getAttribute(\"data-ax-repeat-click\");\n                    });\n                    if (target) {\n                        var dom = $(target),\n                            value = dom.attr(\"data-ax-repeat-click\"),\n                            repeat_path = dom.attr(\"data-ax-repeat-path\");\n                        var that = {\n                            el: target,\n                            jquery: dom,\n                            tagname: target.tagName.toLowerCase(),\n                            value: value,\n                            repeat_path: dataPath,\n                            item: list[index],\n                            item_index: index,\n                            item_path: dataPath + \"[\" + index + \"]\"\n                        };\n                        _this.click(dataPath, that);\n                    }\n                });\n\n                // apply data value to els\n                target.find('[data-ax-item-path]').each(function () {\n                    var dom = $(this),\n                        item_path = dom.attr(\"data-ax-item-path\"),\n                        mix_path = get_mix_path(dataPath, index, item_path),\n                        val,\n                        this_type = (this.type || \"\").toLowerCase();\n\n                    try {\n                        val = Function(\"\", \"return this.\" + mix_path + \";\").call(_this.model);\n                    } catch (e) {\n                        /**\n                         * onerror를 선언 한 경우에만 에러 출력\n                         * */\n                        if (_this.onerror) _this.onerror(\"not found target [model.\" + mix_path + \"]\");\n                    }\n                    //if (typeof val !== \"undefined\") _this.set_els_value(this, this.tagName.toLowerCase(), this_type, val, mix_path);\n                    _this.set_els_value(this, this.tagName.toLowerCase(), this_type, val || \"\", mix_path);\n                });\n\n                // binding event to els\n                target.find('[data-ax-item-path]').off(\"change.axbinder\").on(\"change.axbinder\", function (e) {\n                    var i,\n                        hasItem = false,\n                        checked,\n                        new_value = [],\n                        this_type = (this.type || \"\").toLowerCase(),\n                        dom = $(e.target),\n                        item_path = dom.attr(\"data-ax-item-path\"),\n                        mix_path = get_mix_path(dataPath, index, item_path),\n                        origin_value = Function(\"\", \"return this.\" + mix_path + \";\").call(_this.model),\n                        value_type = get_type(origin_value),\n                        setAllow = true;\n\n                    if (value_type == \"object\" || value_type == \"array\") {\n                        setAllow = false;\n                    }\n\n                    if (this_type == \"checkbox\") {\n                        if (target.find('[data-ax-item-path=\"' + item_path + '\"]').length > 1) {\n                            if (get_type(origin_value) != \"array\") {\n                                if (typeof origin_value === \"undefined\" || origin_value == \"\") origin_value = [];else origin_value = [].concat(origin_value);\n                            }\n                            i = origin_value.length, hasItem = false, checked = this.checked;\n                            while (i--) {\n                                if (origin_value[i] == this.value) {\n                                    hasItem = true;\n                                }\n                            }\n\n                            if (checked) {\n                                if (!hasItem) origin_value.push(this.value);\n                            } else {\n                                i = origin_value.length;\n                                while (i--) {\n                                    if (origin_value[i] == this.value) {\n                                        //hasItemIndex = i;\n                                    } else {\n                                        new_value.push(origin_value[i]);\n                                    }\n                                }\n                                origin_value = new_value;\n                            }\n                        } else {\n                            origin_value = this.checked ? this.value : \"\";\n                        }\n\n                        Function(\"val\", \"this.\" + mix_path + \" = val;\").call(_this.model, origin_value);\n                        _this.change(mix_path, {\n                            el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: origin_value\n                        });\n                    } else {\n                        if (setAllow) {\n                            Function(\"val\", \"this.\" + mix_path + \" = val;\").call(_this.model, this.value);\n                            _this.change(mix_path, {\n                                el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: this.value\n                            });\n                        }\n                    }\n\n                    dom.data(\"changedTime\", new Date().getTime());\n                });\n\n                target.find('[data-ax-item-path]').off(\"blur.axbinder\").on(\"blur.axbinder\", function (e) {\n                    var dom = $(e.target);\n                    if (typeof dom.data(\"changedTime\") == \"undefined\" || dom.data(\"changedTime\") < new Date().getTime() - 10) dom.trigger(\"change\");\n                });\n            };\n\n            /**\n             * @method ax5binder.focus\n             * @param dataPath\n             * @returns {ax5binder}\n             */\n            this.focus = function (dataPath) {\n                this.view_target.find('[data-ax-path=\"' + dataPath + '\"]').focus();\n                //this.view_target.find('[data-ax-item-path=\"' + get_real_path(dataPath) + '\"]').focus();\n                return this;\n            };\n\n            /**\n             * @method ax5binder.validate\n             * @returns {*}\n             * @example\n             * ```html\n             * <input type=\"text\" data-ax-path=\"q\" data-ax-validate=\"required\" title=\"이름\" maxlength=\"8\" value=\"\"/>\n             * ```\n             * ```js\n             * var rs = myModel.validate(), _s;\n             * console.log(rs); // 결과를 체크 해보세요\n             * if(rs.error) {\n             *      _s = rs.error[0].jquery.attr(\"title\");\n             *      alert(\"\" + _s + \"(은)는 필수 입력사항입니다.\" + _s + \"(을)를 입력하세요\");\n             *      rs.error[0].el.focus();\n             *      return;\n             *  }\n             * ```\n             */\n            this.validate = function () {\n                var _this = this;\n                var errors = [];\n                this.view_target.find('[data-ax-path]').each(function () {\n                    var dom = $(this),\n                        dataPath = dom.attr(\"data-ax-path\"),\n                        is_validate = dom.attr(\"data-ax-validate\"),\n                        pattern = dom.attr(\"pattern\");\n\n                    if (is_validate) {\n                        var val, _val, is_error;\n\n                        val = Function(\"\", \"return this\" + get_real_path(dataPath) + \";\").call(_this.model);\n                        if (typeof val === \"undefined\" || val === null) val = \"\";\n                        _val = val.toString();\n                        is_error = false;\n\n                        if (is_validate == \"required\" && _val.trim() == \"\") {\n                            is_error = true;\n                        } else if (is_validate == \"pattern\") {\n                            is_error = !new RegExp(pattern).test(_val);\n                        } else if (is_validate == \"email\") {\n                            is_error = !/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/.test(_val);\n                        } else if (!/\\D.?/g.test(is_validate) && _val.trim().length < is_validate.number()) {\n                            is_error = true;\n                        }\n\n                        if (is_error) {\n                            errors.push({\n                                type: is_validate,\n                                dataPath: dataPath,\n                                el: this,\n                                jquery: dom,\n                                value: val\n                            });\n                        }\n                    }\n                });\n                this.view_target.find('[data-ax-repeat-path]').each(function () {\n\n                    var dom = $(this),\n                        dataPath = dom.attr(\"data-ax-repeat-path\"),\n                        repeat_idx = dom.attr(\"data-ax-repeat-i\");\n\n                    dom.find('[data-ax-validate]').each(function () {\n                        var dom = $(this),\n                            is_validate = dom.attr(\"data-ax-validate\"),\n                            item_path = dom.attr(\"data-ax-item-path\");\n                        var val = Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + repeat_idx + \"].\" + item_path + \";\").call(_this.model);\n                        if (typeof val === \"undefined\") val = \"\";\n                        var _val = val.toString();\n\n                        if (is_validate) {\n                            var is_error = false;\n                            if (is_validate == \"required\" && _val.trim() == \"\") {\n                                is_error = true;\n                            } else if (is_validate == \"pattern\") {\n                                is_error = !new RegExp(pattern).test(_val);\n                            } else if (is_validate == \"email\") {\n                                is_error = !/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/.test(_val);\n                            } else if (!/\\D.?/g.test(is_validate) && _val.trim().length < is_validate.number()) {\n                                is_error = true;\n                            }\n\n                            if (is_error) {\n                                errors.push({\n                                    type: is_validate,\n                                    dataPath: dataPath,\n                                    el: this,\n                                    jquery: dom,\n                                    value: val\n                                });\n                            }\n                        }\n                    });\n                });\n\n                if (errors.length > 0) {\n                    return {\n                        error: errors\n                    };\n                } else {\n                    return {};\n                }\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n    }());\n})();\n// ax5.ui.autocomplete\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var AUTOCOMPLETE = void 0;\n\n    UI.addClass({\n        className: \"autocomplete\"\n    }, function () {\n        /**\n         * @class ax5autocomplete\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var options = [];\n         * options.push({value: \"1\", text: \"string\"});\n         * options.push({value: \"2\", text: \"number\"});\n         * options.push({value: \"3\", text: \"substr\"});\n         * options.push({value: \"4\", text: \"substring\"});\n         * options.push({value: \"5\", text: \"search\"});\n         * options.push({value: \"6\", text: \"parseInt\"});\n         * options.push({value: \"7\", text: \"toFixed\"});\n         * options.push({value: \"8\", text: \"min\"});\n         * options.push({value: \"9\", text: \"max\"});\n         * options.push({value: \"10\", text: \"장기영\"});\n         * options.push({value: \"11\", text: \"장서우\"});\n         * options.push({value: \"12\", text: \"이영희\"});\n         * options.push({value: \"13\", text: \"황인서\"});\n         * options.push({value: \"14\", text: \"황세진\"});\n         * options.push({value: \"15\", text: \"이서연\"});\n         * options.push({value: \"16\", text: \"액시스제이\"});\n         * options.push({value: \"17\", text: \"ax5\"});\n         * options.push({value: \"18\", text: \"ax5grid\"});\n         * options.push({value: \"19\", text: \"ax5combobox\"});\n         * options.push({value: \"20\", text: \"ax5autocomplete\"});\n         * options.push({value: \"21\", text: \"ax5binder\"});\n         * options.push({value: \"22\", text: \"ax5select\"});\n         * options.push({value: \"23\", text: \"ax5mask\"});\n         * options.push({value: \"24\", text: \"ax5toast\"});\n         * options.push({value: \"25\", text: \"ax5dialog\"});\n         * options.push({value: \"26\", text: \"ax5modal\"});\n          * var myUI = new ax5.ui.autocomplete({\n         *      theme: \"danger\",\n         *      removeIcon: '<i class=\"fa fa-times\" aria-hidden=\"true\"></i>'\n         * });\n         * ```\n         */\n        return function () {\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                removeIcon: 'X',\n                lang: {\n                    noSelected: '',\n                    noOptions: 'no options',\n                    loading: 'Now Processing'\n                },\n                columnKeys: {\n                    optionValue: 'value',\n                    optionText: 'text',\n                    optionSelected: 'selected'\n                }\n            };\n\n            this.queue = [];\n            this.activeautocompleteOptionGroup = null;\n            this.activeautocompleteQueueIndex = -1;\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.waitOptionsCallback = null;\n            this.keyUpTimer = null;\n\n            cfg = this.config;\n\n            var $window = jQuery(window);\n            var ctrlKeys = {\n                \"18\": \"KEY_ALT\",\n                //\"8\": \"KEY_BACKSPACE\",\n                \"17\": \"KEY_CONTROL\",\n                \"46\": \"KEY_DELETE\",\n                \"40\": \"KEY_DOWN\",\n                \"35\": \"KEY_END\",\n                \"187\": \"KEY_EQUAL\",\n                //\"27\": \"KEY_ESC\",\n                \"36\": \"KEY_HOME\",\n                \"45\": \"KEY_INSERT\",\n                \"37\": \"KEY_LEFT\",\n                \"189\": \"KEY_MINUS\",\n                \"34\": \"KEY_PAGEDOWN\",\n                \"33\": \"KEY_PAGEUP\",\n                // \"190\": \"KEY_PERIOD\",\n                //\"13\": \"KEY_RETURN\",\n                \"39\": \"KEY_RIGHT\",\n                \"16\": \"KEY_SHIFT\",\n                // \"32\": \"KEY_SPACE\",\n                \"9\": \"KEY_TAB\",\n                \"38\": \"KEY_UP\",\n                \"91\": \"KEY_WINDOW\"\n                //\"107\" : \"NUMPAD_ADD\",\n                //\"194\" : \"NUMPAD_COMMA\",\n                //\"110\" : \"NUMPAD_DECIMAL\",\n                //\"111\" : \"NUMPAD_DIVIDE\",\n                //\"12\" : \"NUMPAD_EQUAL\",\n                //\"106\" : \"NUMPAD_MULTIPLY\",\n                //\"109\" : \"NUMPAD_SUBTRACT\"\n            },\n                onStateChanged = function onStateChanged(item, that) {\n                if (item && item.onStateChanged) {\n                    item.onStateChanged.call(that, that);\n                } else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                if (that.state == \"changeValue\") {\n                    if (item && item.onChange) {\n                        item.onChange.call(that, that);\n                    } else if (this.onChange) {\n                        this.onChange.call(that, that);\n                    }\n                }\n\n                item = null;\n                that = null;\n                return true;\n            },\n                alignAutocompleteDisplay = function alignAutocompleteDisplay() {\n                var i = this.queue.length,\n                    w;\n\n                while (i--) {\n                    var item = this.queue[i];\n                    if (item.$display) {\n                        w = Math.max(item.$select.outerWidth(), U.number(item.minWidth));\n                        item.$display.css({\n                            \"min-width\": w\n                        });\n                        if (item.reset) {\n                            item.$display.find(\".addon-icon-reset\").css({\n                                \"line-height\": this.queue[i].$display.height() + \"px\"\n                            });\n                        }\n\n                        // 높이조절 처리\n                        if (item.multiple) {\n                            var displayTableHeightAdjust = function () {\n                                return U.number(item.$display.css(\"border-top-width\")) + U.number(item.$display.css(\"border-bottom-width\"));\n                            }.call(this);\n                            item.$target.height('');\n                            item.$display.height('');\n\n                            var displayTableHeight = item.$displayTable.outerHeight();\n                            //debugger;\n                            if (Math.abs(displayTableHeight - item.$target.height()) >= displayTableHeightAdjust) {\n                                item.$target.css({ height: displayTableHeight + displayTableHeightAdjust + 4 });\n                                item.$display.css({ height: displayTableHeight + displayTableHeightAdjust + 4 });\n                            }\n                        }\n                    }\n                }\n\n                i = null;\n                w = null;\n                return this;\n            },\n                alignAutocompleteOptionGroup = function alignAutocompleteOptionGroup(append) {\n                if (append && !this.activeautocompleteOptionGroup) return this;\n\n                var item = this.queue[this.activeautocompleteQueueIndex],\n                    pos = {},\n                    positionMargin = 0,\n                    dim = {},\n                    pickerDim = {},\n                    pickerDirection;\n\n                if (!item) return this;\n                if (append) jQuery(document.body).append(this.activeautocompleteOptionGroup);\n\n                pos = item.$target.offset();\n                dim = {\n                    width: item.$target.outerWidth(),\n                    height: item.$target.outerHeight()\n                };\n                pickerDim = {\n                    winWidth: Math.max($window.width(), jQuery(document.body).width()),\n                    winHeight: Math.max($window.height(), jQuery(document.body).height()),\n                    width: this.activeautocompleteOptionGroup.outerWidth(),\n                    height: this.activeautocompleteOptionGroup.outerHeight()\n                };\n\n                // picker css(width, left, top) & direction 결정\n                if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n                    // set direction\n                    pickerDirection = \"top\";\n\n                    if (pos.top - pickerDim.height - positionMargin < 0) {\n                        pickerDirection = \"top\";\n                    } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                        pickerDirection = \"bottom\";\n                    }\n                } else {\n                    pickerDirection = item.direction;\n                }\n\n                if (append) {\n                    this.activeautocompleteOptionGroup.addClass(\"direction-\" + pickerDirection);\n                }\n                this.activeautocompleteOptionGroup.css(function () {\n                    if (pickerDirection == \"top\") {\n                        if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n\n                            var newTop = pos.top + pickerDim.height;\n                            if (newTop + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                                newTop = 0;\n                            }\n                            if (newTop < 0) {\n                                newTop = 0;\n                            }\n\n                            return {\n                                left: pos.left,\n                                top: newTop,\n                                width: dim.width\n                            };\n                        }\n                        return {\n                            left: pos.left,\n                            top: pos.top + dim.height + 1,\n                            width: dim.width\n                        };\n                    } else if (pickerDirection == \"bottom\") {\n                        return {\n                            left: pos.left,\n                            top: pos.top - pickerDim.height - 1,\n                            width: dim.width\n                        };\n                    }\n                }.call(this));\n            },\n                onBodyClick = function onBodyClick(e, target) {\n                if (!this.activeautocompleteOptionGroup) return this;\n\n                var item = this.queue[this.activeautocompleteQueueIndex],\n                    clickEl = \"display\";\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-option-value\")) {\n                        clickEl = \"optionItem\";\n                        return true;\n                    } else if (item.$target.get(0) == target) {\n                        clickEl = \"display\";\n                        return true;\n                    }\n                });\n\n                if (!target) {\n                    this.close();\n                    return this;\n                } else if (clickEl === \"optionItem\") {\n                    setSelected.call(this, item.id, {\n                        optionIndex: {\n                            index: target.getAttribute(\"data-option-index\")\n                        }\n                    }, undefined, \"optionItemClick\");\n                    alignAutocompleteDisplay.call(this);\n                    alignAutocompleteOptionGroup.call(this);\n                    if (!item.multiple) {\n                        this.close();\n                    }\n                } else {}\n\n                return this;\n            },\n                getLabel = function getLabel(queIdx) {\n                var item = this.queue[queIdx];\n\n                // 템플릿에 전달 해야할 데이터 선언\n                var data = {};\n                data.id = item.id;\n                data.theme = item.theme;\n                data.size = \"ax5autocomplete-option-group-\" + item.size;\n                data.multiple = item.multiple;\n                data.lang = item.lang;\n                data.options = item.options;\n                data.selected = item.selected;\n                data.hasSelected = data.selected && data.selected.length > 0;\n                data.removeIcon = item.removeIcon;\n\n                return AUTOCOMPLETE.tmpl.get.call(this, \"label\", data, item.columnKeys);\n            },\n                syncLabel = function syncLabel(queIdx) {\n                var item = this.queue[queIdx];\n\n                if (!item.multiple && item.selected && item.selected.length > 0) {\n                    item.selected = [].concat(item.selected[item.selected.length - 1]);\n                }\n\n                item.selected.forEach(function (n, nindex) {\n                    n[\"@index\"] = nindex;\n                });\n\n                item.$select.html(AUTOCOMPLETE.tmpl.get.call(this, \"formSelectOptions\", {\n                    selected: item.selected\n                }, item.columnKeys));\n            },\n                printLabel = function printLabel(queIdx) {\n                var item = this.queue[queIdx];\n\n                item.$displayLabel.find('[data-ax5autocomplete-selected-label]').remove();\n                item.$displayLabelInput.before(getLabel.call(this, queIdx));\n            },\n                focusLabel = function focusLabel(queIdx) {\n                if (this.queue[queIdx].disabled) return this;\n\n                this.queue[queIdx].$displayLabel.trigger(\"focus\");\n                this.queue[queIdx].$displayLabelInput.focus();\n            },\n                clearLabel = function clearLabel(queIdx) {\n                this.queue[queIdx].$displayLabelInput.val('');\n            },\n                blurLabel = function blurLabel(queIdx) {\n                this.queue[queIdx].$displayLabel.trigger(\"blur\");\n            },\n                onSearch = function onSearch(queIdx, searchWord) {\n                if (this.activeautocompleteQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                var regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n                searchWord = searchWord.replace(regExp, \"\");\n\n                this.queue[queIdx].waitOptions = true;\n                this.queue[queIdx].onSearch.call({\n                    self: this,\n                    item: this.queue[queIdx],\n                    searchWord: searchWord\n                }, function (O) {\n\n                    var data = {};\n                    var item = this.queue[this.activeautocompleteQueueIndex];\n                    if (!item) return false;\n\n                    /// 현재 selected 검증후 처리\n                    (function (item, O) {\n                        var optionsMap = {};\n                        O.options.forEach(function (_O, _OIndex) {\n                            _O[\"@index\"] = _OIndex;\n                            _O[\"@findex\"] = _OIndex;\n                            optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                        });\n                        if (U.isArray(item.selected)) {\n                            item.selected.forEach(function (_O) {\n                                if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                    O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                }\n                            });\n                        }\n                    })(item, O);\n\n                    item.options = O.options;\n\n                    alignAutocompleteDisplay.call(this);\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5autocomplete-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n                    data.lang = item.lang;\n                    data.options = item.options;\n                    this.activeautocompleteOptionGroup.find('[data-els=\"content\"]').html(AUTOCOMPLETE.tmpl.get.call(this, \"options\", data, item.columnKeys));\n\n                    focusWord.call(this, this.activeautocompleteQueueIndex, searchWord);\n                    alignAutocompleteOptionGroup.call(this);\n\n                    setTimeout(function () {\n                        alignAutocompleteOptionGroup.call(this);\n                    }.bind(this));\n                }.bind(this));\n            },\n                focusWord = function focusWord(queIdx, searchWord) {\n                if (this.activeautocompleteQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                var collect_options = [],\n                    i = -1,\n                    l = this.queue[queIdx].options.length - 1,\n                    n;\n                if (searchWord != \"\") {\n                    while (l - i++) {\n                        n = this.queue[queIdx].options[i];\n\n                        if (('' + n.text).toLowerCase() == searchWord.toLowerCase()) {\n                            collect_options = [{ '@findex': n['@findex'], optionsSort: 0 }];\n                            break;\n                        } else {\n                            var sort = ('' + n.text).toLowerCase().search(searchWord.toLowerCase());\n                            if (sort > -1) {\n                                collect_options.push({ '@findex': n['@findex'], optionsSort: sort });\n                                if (collect_options.length > 2) break;\n                            }\n                            sort = null;\n                        }\n                    }\n                    collect_options.sort(function (a, b) {\n                        return a.optionsSort - b.optionsSort;\n                    });\n                }\n\n                if (collect_options && collect_options.length > 0) {\n                    focusMove.call(this, queIdx, undefined, collect_options[0]['@findex']);\n                } else {\n                    focusClear.call(this, queIdx);\n                }\n            },\n                focusClear = function focusClear(queIdx) {\n                if (this.activeautocompleteOptionGroup) {\n                    this.activeautocompleteOptionGroup.find('[data-option-focus-index]').removeClass(\"hover\").removeAttr(\"data-option-selected\");\n                }\n\n                this.queue[queIdx].optionFocusIndex = -1;\n            },\n                focusMove = function focusMove(queIdx, direction, findex) {\n                var _focusIndex, _prevFocusIndex, focusOptionEl, optionGroupScrollContainer;\n                var item = this.queue[queIdx];\n\n                if (this.activeautocompleteOptionGroup && item.options && item.options.length > 0) {\n\n                    if (typeof findex !== \"undefined\") {\n                        _focusIndex = findex;\n                    } else {\n                        _prevFocusIndex = item.optionFocusIndex == -1 ? item.optionSelectedIndex || -1 : item.optionFocusIndex;\n                        if (_prevFocusIndex == -1) {\n                            _focusIndex = 0;\n                            //_focusIndex = (direction > 0) ? 0 : item.optionItemLength - 1; // 맨 끝으로 보낼것인가 말 것인가.\n                        } else {\n                            _focusIndex = _prevFocusIndex + direction;\n                            if (_focusIndex < 0) _focusIndex = 0;else if (_focusIndex > item.optionItemLength - 1) _focusIndex = item.optionItemLength - 1;\n                        }\n                    }\n\n                    item.optionFocusIndex = _focusIndex;\n\n                    // 포커스 인덱스가 hide아이템을 만나면 hide 아이템이 안나올 때까지 루프를 순회 합니다.\n                    if (item.options[_focusIndex] && item.options[_focusIndex].hide) {\n                        // 옵션이 없는 값이 선택된 경우\n                        if (typeof direction === \"undefined\") {\n                            return this;\n                        } else {\n                            var isStrop = false;\n                            while (item.options[_focusIndex].hide) {\n                                _focusIndex = _focusIndex + direction;\n                                if (_focusIndex < 0) {\n                                    _focusIndex = 0;\n                                    break;\n                                } else if (_focusIndex > item.optionItemLength - 1) {\n                                    _focusIndex = item.optionItemLength - 1;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n\n                    if (typeof _focusIndex !== \"undefined\") {\n                        this.activeautocompleteOptionGroup.find('[data-option-focus-index]').removeClass(\"hover\");\n\n                        focusOptionEl = this.activeautocompleteOptionGroup.find('[data-option-focus-index=\"' + _focusIndex + '\"]').addClass(\"hover\");\n\n                        optionGroupScrollContainer = this.activeautocompleteOptionGroup.find('[data-els=\"content\"]');\n\n                        if (focusOptionEl.get(0)) {\n                            var focusOptionElHeight = focusOptionEl.outerHeight(),\n                                optionGroupScrollContainerHeight = optionGroupScrollContainer.innerHeight(),\n                                optionGroupScrollContainerScrollTop = optionGroupScrollContainer.scrollTop(),\n                                focusOptionElTop = focusOptionEl.position().top + optionGroupScrollContainer.scrollTop();\n\n                            if (optionGroupScrollContainerHeight + optionGroupScrollContainerScrollTop < focusOptionElTop + focusOptionElHeight) {\n                                optionGroupScrollContainer.scrollTop(focusOptionElTop + focusOptionElHeight - optionGroupScrollContainerHeight);\n                            } else if (optionGroupScrollContainerScrollTop > focusOptionElTop) {\n                                optionGroupScrollContainer.scrollTop(focusOptionElTop);\n                            }\n                            // optionGroup scroll check\n\n                            if (typeof direction !== \"undefined\") {\n                                item.$displayLabelInput.val(item.options[_focusIndex].text);\n                            }\n                        }\n                    }\n                }\n            },\n                getQueIdx = function getQueIdx(boundID) {\n                if (boundID instanceof jQuery) {\n                    boundID = boundID.data(\"data-ax5autocomplete-id\");\n                } else if (!U.isString(boundID)) {\n                    boundID = jQuery(boundID).data(\"data-ax5autocomplete-id\");\n                }\n                if (!U.isString(boundID)) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"getQueIdx\"));\n                    return;\n                }\n                return U.search(this.queue, function () {\n                    return this.id == boundID;\n                });\n            },\n                getSelected = function getSelected(_item, o, selected) {\n                if (typeof selected === \"undefined\") {\n                    return _item.multiple ? !o : true;\n                } else {\n                    return selected;\n                }\n            },\n                clearSelected = function clearSelected(queIdx) {\n                this.queue[queIdx].options.forEach(function (n) {\n                    if (n.optgroup) {\n                        n.options.forEach(function (nn) {\n                            nn.selected = false;\n                        });\n                    } else {\n                        n.selected = false;\n                    }\n                });\n\n                this.queue[queIdx].selected = [];\n                this.queue[queIdx].$select.html(AUTOCOMPLETE.tmpl.get.call(this, \"formSelectOptions\", {\n                    selected: this.queue[queIdx].selected\n                }, this.queue[queIdx].columnKeys));\n            },\n                setSelected = function () {\n                var processor = {\n                    'selectedIndex': function selectedIndex(queIdx, value, selected, setValueType) {},\n                    'removeSelectedIndex': function removeSelectedIndex(queIdx, value, selected, setValueType) {\n                        var item = this.queue[queIdx],\n                            addOptions = {};\n                        var newSelectedArray = [],\n                            optionIndex = 0;\n                        for (var i = 0; i < item.selected.length; i++) {\n                            if (item.selected[i]['@index'] != value.removeSelectedIndex.index) {\n                                addOptions = { '@index': optionIndex, '@findex': optionIndex };\n                                addOptions[item.columnKeys.optionValue] = item.selected[i][item.columnKeys.optionValue];\n                                addOptions[item.columnKeys.optionText] = item.selected[i][item.columnKeys.optionText];\n                                newSelectedArray.push(addOptions);\n                                optionIndex++;\n                            }\n                        }\n                        item.selected = newSelectedArray;\n                    },\n                    'optionIndex': function optionIndex(queIdx, value, selected, setValueType) {\n                        var item = this.queue[queIdx],\n                            addOptions = {};\n                        var optionIndex = item.selected.length;\n                        var pushOk = true;\n\n                        addOptions = {\n                            '@index': optionIndex, '@findex': optionIndex\n                        };\n                        addOptions[item.columnKeys.optionValue] = item.options[value.optionIndex.index][item.columnKeys.optionValue];\n                        addOptions[item.columnKeys.optionText] = item.options[value.optionIndex.index][item.columnKeys.optionText];\n\n                        for (var i = 0; i < item.selected.length; i++) {\n                            if (item.selected[i][item.columnKeys.optionValue] == addOptions[item.columnKeys.optionValue]) {\n                                pushOk = false;\n                            }\n                        }\n                        if (pushOk) item.selected.push(addOptions);\n                    },\n                    'arr': function arr(queIdx, values, selected, setValueType) {\n                        values.forEach(function (value) {\n                            if (U.isString(value) || U.isNumber(value)) {\n                                processor.text.call(self, queIdx, value, selected, \"justSetValue\");\n                            } else {\n                                for (var key in processor) {\n                                    if (value[key]) {\n                                        processor[key].call(self, queIdx, value, selected, \"justSetValue\");\n                                        break;\n                                    }\n                                }\n                            }\n                        });\n                    },\n                    'value': function value(queIdx, _value4, selected, setValueType) {\n                        var item = this.queue[queIdx];\n                        var addOptions;\n                        var optionIndex = U.search(item.options, function () {\n                            return this[item.columnKeys.optionValue] == _value4.value[item.columnKeys.optionValue];\n                        });\n\n                        if (optionIndex > -1) {\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n\n                            if (item.options[optionIndex][item.columnKeys.optionSelected]) {\n                                var appendOk = true;\n                                for (var i = 0; i < item.selected.length; i++) {\n                                    if (item.selected[i][cfg.columnKeys.optionValue] == item.options[optionIndex][cfg.columnKeys.optionValue]) {\n                                        appendOk = false;\n                                        break;\n                                    }\n                                }\n                                if (appendOk) {\n                                    addOptions = {};\n                                    addOptions[item.columnKeys.optionValue] = item.options[optionIndex][item.columnKeys.optionValue];\n                                    addOptions[item.columnKeys.optionText] = item.options[optionIndex][item.columnKeys.optionText];\n                                    item.selected.push(addOptions);\n                                }\n                            } else {\n                                var newSelectedArray = [];\n                                for (var i = 0; i < item.selected.length; i++) {\n                                    if (item.selected[i][cfg.columnKeys.optionValue] == item.options[optionIndex][cfg.columnKeys.optionValue]) {} else {\n                                        addOptions = {};\n                                        addOptions[item.columnKeys.optionValue] = item.selected[i][item.columnKeys.optionValue];\n                                        addOptions[item.columnKeys.optionText] = item.selected[i][item.columnKeys.optionText];\n                                        newSelectedArray.push(addOptions);\n                                    }\n                                }\n                                item.selected = newSelectedArray;\n                            }\n                        } else {\n                            // 새로운 값 추가\n                            var appendOk = true;\n                            for (var i = 0; i < item.selected.length; i++) {\n                                if (item.selected[i][cfg.columnKeys.optionValue] == _value4.value[cfg.columnKeys.optionValue]) {\n                                    appendOk = false;\n                                    break;\n                                }\n                            }\n\n                            if (appendOk) {\n                                addOptions = {};\n                                addOptions[item.columnKeys.optionValue] = _value4.value[cfg.columnKeys.optionValue];\n                                addOptions[item.columnKeys.optionText] = _value4.value[cfg.columnKeys.optionText];\n                                item.selected.push(addOptions);\n                            }\n                        }\n                    },\n                    'text': function text(queIdx, value, selected, setValueType) {\n                        var item = this.queue[queIdx];\n                        var addOptions;\n                        var optionIndex = U.search(item.options, function () {\n                            return this[item.columnKeys.optionText] == value;\n                        });\n\n                        if (optionIndex > -1) {\n                            item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n\n                            if (item.options[optionIndex][item.columnKeys.optionSelected]) {\n                                var appendOk = true;\n                                for (var i = 0; i < item.selected.length; i++) {\n                                    if (item.selected[i][cfg.columnKeys.optionText] == item.options[optionIndex][cfg.columnKeys.optionText]) {\n                                        appendOk = false;\n                                        break;\n                                    }\n                                }\n                                if (appendOk) {\n                                    addOptions = {};\n                                    addOptions[item.columnKeys.optionValue] = item.options[optionIndex][item.columnKeys.optionValue];\n                                    addOptions[item.columnKeys.optionText] = item.options[optionIndex][item.columnKeys.optionText];\n                                    item.selected.push(addOptions);\n                                }\n                            } else {\n                                var newSelectedArray = [];\n                                for (var i = 0; i < item.selected.length; i++) {\n                                    if (item.selected[i][cfg.columnKeys.optionText] == item.options[optionIndex][cfg.columnKeys.optionText]) {} else {\n                                        addOptions = {};\n                                        addOptions[item.columnKeys.optionValue] = item.selected[i][item.columnKeys.optionValue];\n                                        addOptions[item.columnKeys.optionText] = item.selected[i][item.columnKeys.optionText];\n                                        newSelectedArray.push(addOptions);\n                                    }\n                                }\n                                item.selected = newSelectedArray;\n                            }\n                        } else {\n                            // 새로운 값 추가\n                            var appendOk = true;\n                            for (var i = 0; i < item.selected.length; i++) {\n                                if (item.selected[i][cfg.columnKeys.optionText] == value) {\n                                    appendOk = false;\n                                    break;\n                                }\n                            }\n\n                            if (appendOk) {\n                                addOptions = {};\n                                addOptions[item.columnKeys.optionValue] = value;\n                                addOptions[item.columnKeys.optionText] = value;\n                                item.selected.push(addOptions);\n                            }\n                        }\n                    },\n                    'clear': function clear(queIdx) {\n                        clearSelected.call(this, queIdx);\n                        focusClear.call(this, queIdx);\n\n                        if (this.activeautocompleteOptionGroup) {\n                            this.activeautocompleteOptionGroup.find('[data-option-index]').attr(\"data-option-Selected\", \"false\");\n                        }\n                        this.queue[queIdx].optionSelectedIndex = -1;\n                    }\n                };\n                return function (boundID, value, selected, _option) {\n\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {\n                        console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                        return;\n                    }\n\n                    if (typeof value == \"undefined\") {\n                        throw \"error not found value\";\n                    } else if (U.isArray(value)) {\n                        processor.clear.call(this, queIdx);\n                        processor.arr.call(this, queIdx, this.queue[queIdx].multiple || value.length == 0 ? value : [value[value.length - 1]], selected);\n                    } else if (U.isString(value) || U.isNumber(value)) {\n                        if (typeof value !== \"undefined\" && value !== null && !this.queue[queIdx].multiple) {\n                            clearSelected.call(this, queIdx);\n                        }\n                        processor.text.call(this, queIdx, value, selected);\n                    } else {\n                        if (value === null) {\n                            processor.clear.call(this, queIdx);\n                        } else {\n                            if (!this.queue[queIdx].multiple) {\n                                clearSelected.call(this, queIdx);\n                            }\n                            for (var key in processor) {\n                                if (value[key]) {\n                                    processor[key].call(this, queIdx, value, selected);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n\n                    syncLabel.call(this, queIdx);\n                    printLabel.call(this, queIdx);\n                    focusLabel.call(this, queIdx);\n                    alignAutocompleteOptionGroup.call(this);\n\n                    if (typeof value !== \"undefined\") {\n                        if (_option && !_option.noStateChange) {\n                            onStateChanged.call(this, this.queue[queIdx], {\n                                self: this,\n                                item: this.queue[queIdx],\n                                state: \"changeValue\",\n                                value: this.queue[queIdx].selected\n                            });\n                        }\n                    }\n\n                    boundID = null;\n                    return this;\n                };\n            }();\n\n            /// private end\n\n            /**\n             * Preferences of autocomplete UI\n             * @method ax5autocomplete.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5autocomplete}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onChange = cfg.onChange;\n                jQuery(window).on(\"resize.ax5autocomplete-display-\" + this.instanceId, function () {\n                    alignAutocompleteDisplay.call(this);\n                }.bind(this));\n            };\n\n            /**\n             * bind autocomplete\n             * @method ax5autocomplete.bind\n             * @param {Object} item\n             * @param {String} [item.id]\n             * @param {String} [item.theme]\n             * @param {Boolean} [item.multiple]\n             * @param {Element} item.target\n             * @returns {ax5autocomplete}\n             */\n            this.bind = function (item) {\n                var bindAutocompleteTarget = function () {\n                    var debouncedFocusWord = U.debounce(function (queIdx) {\n                        if (this.activeautocompleteQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                        onSearch.call(self, queIdx, this.queue[queIdx].$displayLabelInput.val());\n                    }, 150);\n\n                    var blurLabel = function blurLabel(queIdx) {\n                        clearLabel.call(this, queIdx);\n                    };\n\n                    var autocompleteEvent = {\n                        'click': function click(queIdx, e) {\n                            var clickEl;\n                            var target = U.findParentNode(e.target, function (target) {\n                                if (target.getAttribute(\"data-ax5autocomplete-remove\")) {\n                                    clickEl = \"optionItemRemove\";\n                                    return true;\n                                } else if (target.getAttribute(\"data-selected-clear\")) {\n                                    clickEl = \"clear\";\n                                    return true;\n                                }\n                            });\n\n                            if (target) {\n                                if (clickEl === \"optionItemRemove\") {\n                                    var removeIndex = target.getAttribute(\"data-ax5autocomplete-remove-index\");\n                                    this.queue[queIdx].selected.splice(removeIndex, 1);\n                                    syncLabel.call(this, queIdx);\n                                    printLabel.call(this, queIdx);\n                                    focusLabel.call(this, queIdx);\n                                    alignAutocompleteDisplay.call(this);\n                                    alignAutocompleteOptionGroup.call(this);\n                                    U.stopEvent(e);\n                                    return this;\n                                } else if (clickEl === \"clear\") {\n                                    setSelected.call(this, queIdx, { clear: true });\n                                    alignAutocompleteDisplay.call(this);\n                                    alignAutocompleteOptionGroup.call(this);\n                                }\n                            } else {\n                                if (self.activeautocompleteQueueIndex == queIdx) {\n                                    if (this.queue[queIdx].optionFocusIndex == -1) {\n                                        // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                                        self.close();\n                                    }\n                                } else {\n                                    focusLabel.call(this, queIdx);\n                                }\n                            }\n                        },\n                        'keyUp': function keyUp(queIdx, e) {\n                            /// 약속된 키 이벤트가 발생하면 stopEvent를 통해 keyUp 이벤트가 발생되지 않도록 막아주는 센스\n                            if (e.which == ax5.info.eventKeys.ESC && this.activeautocompleteQueueIndex === -1) {\n                                // ESC키를 누르고 옵션그룹이 열려있지 않은 경우\n                                U.stopEvent(e);\n                                return this;\n                            }\n                            if (e.which == ax5.info.eventKeys.TAB) {\n                                // nothing\n\n                                this.close();\n                                return this;\n                            }\n                            if (this.activeautocompleteQueueIndex != queIdx) {\n                                // 닫힌 상태 인경우\n                                this.open(queIdx); // open and align\n                            }\n                            if (ctrlKeys[e.which]) {\n                                U.stopEvent(e);\n                            } else {\n                                // backspace 감지 하여 input 값이 없으면 스탑이벤트 처리 할 것\n                                if (e.which == ax5.info.eventKeys.BACKSPACE && this.queue[queIdx].$displayLabelInput.val() == \"\") {\n                                    // 마지막 아이템을 제거.\n                                    this.queue[queIdx].selected.pop();\n                                    syncLabel.call(this, queIdx);\n                                    printLabel.call(this, queIdx);\n                                    focusLabel.call(this, queIdx);\n                                    alignAutocompleteDisplay.call(this);\n                                    alignAutocompleteOptionGroup.call(this);\n                                    U.stopEvent(e);\n                                } else {\n                                    debouncedFocusWord.call(this, queIdx);\n                                }\n                            }\n                        },\n                        'keyDown': function keyDown(queIdx, e) {\n                            if (e.which == ax5.info.eventKeys.ESC) {\n                                clearLabel.call(this, queIdx);\n                                this.close();\n                                U.stopEvent(e);\n                            } else if (e.which == ax5.info.eventKeys.RETURN) {\n                                var inputValue = this.queue[queIdx].$displayLabelInput.val();\n                                if (item.optionFocusIndex > -1) {\n                                    setSelected.call(this, item.id, {\n                                        optionIndex: {\n                                            index: item.optionFocusIndex\n                                        }\n                                    }, undefined, \"optionItemClick\");\n                                } else if (inputValue != \"\") {\n                                    setSelected.call(this, queIdx, inputValue, true);\n                                }\n                                clearLabel.call(this, queIdx);\n                                alignAutocompleteDisplay.call(this);\n                                this.close();\n\n                                U.stopEvent(e);\n                            } else if (e.which == ax5.info.eventKeys.DOWN) {\n                                focusMove.call(this, queIdx, 1);\n                                U.stopEvent(e);\n                            } else if (e.which == ax5.info.eventKeys.UP) {\n                                focusMove.call(this, queIdx, -1);\n                                U.stopEvent(e);\n                            }\n                        },\n                        'focus': function focus(queIdx, e) {\n                            // console.log(e);\n\n                        },\n                        'blur': function blur(queIdx, e) {\n                            blurLabel.call(this, queIdx);\n                            U.stopEvent(e);\n                        },\n                        'selectChange': function selectChange(queIdx, e) {\n                            setSelected.call(this, queIdx, { value: this.queue[queIdx].$select.val() }, true);\n                        }\n                    };\n\n                    return function (queIdx) {\n                        var item = this.queue[queIdx];\n                        var data = {};\n\n                        if (!item.$display) {\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.instanceId = this.instanceId;\n                            data.id = item.id;\n                            data.name = item.name;\n                            data.theme = item.theme;\n                            data.tabIndex = item.tabIndex;\n                            data.multiple = item.multiple;\n                            data.reset = item.reset;\n\n                            data.label = getLabel.call(this, queIdx);\n                            data.formSize = function () {\n                                return item.size ? \"input-\" + item.size : \"\";\n                            }();\n\n                            item.$display = jQuery(AUTOCOMPLETE.tmpl.get.call(this, \"autocompleteDisplay\", data, item.columnKeys));\n                            item.$displayTable = item.$display.find('[data-els=\"display-table\"]');\n                            item.$displayLabel = item.$display.find('[data-ax5autocomplete-display=\"label\"]');\n                            item.$displayLabelInput = item.$display.find('[data-ax5autocomplete-display=\"input\"]');\n\n                            if (item.$target.find(\"select\").get(0)) {\n                                item.$select = item.$target.find(\"select\");\n                                item.$select.attr(\"tabindex\", \"-1\").attr(\"class\", \"form-control \" + data.formSize);\n\n                                if (data.name) {\n                                    item.$select.attr(\"name\", \"name\");\n                                }\n                                item.$select.attr(\"multiple\", \"multiple\");\n                            } else {\n                                item.$select = jQuery(AUTOCOMPLETE.tmpl.get.call(this, \"formSelect\", data, item.columnKeys));\n                                item.$target.append(item.$select);\n                            }\n\n                            item.$target.append(item.$display);\n                        } else {\n                            printLabel.call(this, queIdx);\n                        }\n\n                        alignAutocompleteDisplay.call(this);\n\n                        item.$display.off('click.ax5autocomplete').on('click.ax5autocomplete', autocompleteEvent.click.bind(this, queIdx));\n\n                        // autocomplete 태그에 대한 이벤트 감시\n                        item.$displayLabelInput.off(\"focus.ax5autocomplete\").on(\"focus.ax5autocomplete\", autocompleteEvent.focus.bind(this, queIdx)).off(\"blur.ax5autocomplete\").on(\"blur.ax5autocomplete\", autocompleteEvent.blur.bind(this, queIdx)).off(\"keydown.ax5autocomplete\").on(\"keydown.ax5autocomplete\", autocompleteEvent.keyDown.bind(this, queIdx)).off(\"keyup.ax5autocomplete\").on(\"keyup.ax5autocomplete\", autocompleteEvent.keyUp.bind(this, queIdx));\n\n                        // select 태그에 대한 change 이벤트 감시\n\n                        item.$select.off('change.ax5autocomplete').on('change.ax5autocomplete', autocompleteEvent.selectChange.bind(this, queIdx));\n\n                        data = null;\n                        item = null;\n                        queIdx = null;\n                        return this;\n                    };\n                }();\n\n                var autocompleteConfig = {},\n                    queIdx;\n\n                item = jQuery.extend(true, autocompleteConfig, cfg, item);\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                item.$target = jQuery(item.target);\n\n                if (!item.id) item.id = item.$target.data(\"data-ax5autocomplete-id\");\n                if (!item.id) {\n                    item.id = 'ax5autocomplete-' + ax5.getGuid();\n                    item.$target.data(\"data-ax5autocomplete-id\", item.id);\n                }\n                item.name = item.$target.attr(\"data-ax5autocomplete\");\n\n                item.options = [];\n                item.selected = [];\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        item = jQuery.extend(true, item, data);\n                    }\n                })(U.parseJson(item.$target.attr(\"data-ax5autocomplete-config\"), true));\n\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindAutocompleteTarget.call(this, this.queue.length - 1);\n                } else {\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindAutocompleteTarget.call(this, queIdx);\n                }\n\n                autocompleteConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * open the optionBox of autocomplete\n             * @method ax5autocomplete.open\n             * @param {(String|Number|Element)} boundID\n             * @param {Number} [tryCount]\n             * @returns {ax5autocomplete}\n             */\n            this.open = function () {\n\n                return function (boundID, tryCount) {\n                    this.waitOptionsCallback = null;\n\n                    /**\n                     * open autocomplete from the outside\n                     */\n                    var queIdx = U.isNumber(boundID) ? boundID : getQueIdx.call(this, boundID);\n                    var item = this.queue[queIdx];\n                    var data = {},\n                        focusTop,\n                        selectedOptionEl;\n\n                    if (item.$display.attr(\"disabled\")) return this;\n\n                    if (this.openTimer) clearTimeout(this.openTimer);\n                    if (this.activeautocompleteOptionGroup) {\n                        if (this.activeautocompleteQueueIndex == queIdx) {\n                            return this;\n                        }\n\n                        if (tryCount > 2) return this;\n                        this.close();\n                        this.openTimer = setTimeout(function () {\n                            this.open(queIdx, (tryCount || 0) + 1);\n                        }.bind(this), cfg.animateTime);\n\n                        return this;\n                    }\n\n                    item.optionFocusIndex = -1; // optionGroup이 열리면 포커스 인덱스 초기화 -1로\n                    if (item.selected && item.selected.length > 0) {\n                        item.optionSelectedIndex = item.selected[0][\"@findex\"];\n                    }\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5autocomplete-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n\n                    data.lang = item.lang;\n                    item.$display.attr(\"data-autocomplete-option-group-opened\", \"true\");\n\n                    data.waitOptions = true;\n                    data.options = [];\n\n                    this.activeautocompleteOptionGroup = jQuery(AUTOCOMPLETE.tmpl.get.call(this, \"optionGroup\", data, item.columnKeys));\n                    this.activeautocompleteOptionGroup.find('[data-els=\"content\"]').html(AUTOCOMPLETE.tmpl.get.call(this, \"options\", data, item.columnKeys));\n                    this.activeautocompleteQueueIndex = queIdx;\n\n                    alignAutocompleteOptionGroup.call(this, \"append\"); // alignAutocompleteOptionGroup 에서 body append\n                    jQuery(window).on(\"resize.ax5autocomplete-\" + this.instanceId, function () {\n                        alignAutocompleteOptionGroup.call(this);\n                    }.bind(this));\n\n                    if (item.selected && item.selected.length > 0) {\n                        selectedOptionEl = this.activeautocompleteOptionGroup.find('[data-option-index=\"' + item.selected[0][\"@index\"] + '\"]');\n                        if (selectedOptionEl.get(0)) {\n                            focusTop = selectedOptionEl.position().top - this.activeautocompleteOptionGroup.height() / 3;\n                            this.activeautocompleteOptionGroup.find('[data-els=\"content\"]').stop().animate({ scrollTop: focusTop }, item.animateTime, 'swing', function () {});\n                        }\n                    }\n\n                    jQuery(window).on(\"click.ax5autocomplete-\" + this.instanceId, function (e) {\n                        e = e || window.event;\n                        onBodyClick.call(this, e);\n                        U.stopEvent(e);\n                    }.bind(this));\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"open\",\n                        item: item\n                    });\n\n                    data = null;\n                    focusTop = null;\n                    selectedOptionEl = null;\n                    return this;\n                };\n            }();\n\n            /**\n             * @method ax5autocomplete.setValue\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @param {(String|Array)} _value\n             * @return {ax5autocomplete}\n             * @example\n             * ```js\n             * myAutocomplete.setValue($('[data-ax5autocomplete=\"autocomplete1\"]'), {value:\"test\", text:\"test\"});\n             * myAutocomplete.setValue($('[data-ax5autocomplete=\"autocomplete1\"]'), [{value:\"test1\", text:\"test1\"}, {value:\"test2\", text:\"test2\"}]);\n             * myAutocomplete.setValue($('[data-ax5autocomplete=\"autocomplete1\"]'), null);\n             * ```\n             */\n            this.setValue = function (_boundID, _value) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                    return;\n                }\n\n                clearSelected.call(this, queIdx);\n\n                if (U.isArray(_value)) {\n                    var _values = U.map(_value, function () {\n                        return { value: this };\n                    });\n                    setSelected.call(this, queIdx, _values, true, { noStateChange: true });\n                } else if (U.isObject(_value)) {\n                    setSelected.call(this, queIdx, { value: _value }, true, { noStateChange: true });\n                } else {\n                    printLabel.call(this, queIdx);\n                }\n\n                blurLabel.call(this, queIdx);\n                alignAutocompleteDisplay.call(this);\n\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.setText\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @param {(String|Array)} _text\n             * @returns {ax5autocomplete}\n             * @example\n             * ```js\n             * myAutocomplete.setText($('[data-ax5autocomplete=\"autocomplete1\"]'), \"string\");\n             * myAutocomplete.setText($('[data-ax5autocomplete=\"autocomplete1\"]'), [\"substring\", \"search\"]);\n             * ```\n             */\n            this.setText = function (_boundID, _text) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                    return;\n                }\n                this.queue[queIdx].selected = [];\n                clearSelected.call(this, queIdx);\n                setSelected.call(this, queIdx, _text, true, { noStateChange: true });\n                blurLabel.call(this, queIdx);\n                alignAutocompleteDisplay.call(this);\n\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.getSelectedOption\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {Array}\n             */\n            this.getSelectedOption = function (_boundID) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                    return;\n                }\n                return U.deepCopy(this.queue[queIdx].selected);\n            };\n\n            /**\n             * @method ax5autocomplete.close\n             * @returns {ax5autocomplete}\n             */\n            this.close = function (item) {\n                if (this.closeTimer) clearTimeout(this.closeTimer);\n                if (!this.activeautocompleteOptionGroup) return this;\n\n                item = this.queue[this.activeautocompleteQueueIndex];\n                item.optionFocusIndex = -1;\n                item.$display.removeAttr(\"data-autocomplete-option-group-opened\").trigger(\"focus\");\n\n                this.activeautocompleteOptionGroup.addClass(\"destroy\");\n\n                jQuery(window).off(\"resize.ax5autocomplete-\" + this.instanceId).off(\"click.ax5autocomplete-\" + this.instanceId).off(\"keyup.ax5autocomplete-\" + this.instanceId);\n\n                this.closeTimer = setTimeout(function () {\n                    if (this.activeautocompleteOptionGroup) this.activeautocompleteOptionGroup.remove();\n                    this.activeautocompleteOptionGroup = null;\n                    this.activeautocompleteQueueIndex = -1;\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"close\"\n                    });\n                }.bind(this), cfg.animateTime);\n                this.waitOptionsCallback = null;\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.blur\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5autocomplete}\n             */\n            this.blur = function (_boundID) {\n                var queIdx = U.isNumber(_boundID) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                    return;\n                }\n\n                blurLabel.call(this, queIdx);\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.enable\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5autocomplete}\n             */\n            this.enable = function (_boundID) {\n                var queIdx = getQueIdx.call(this, _boundID);\n\n                if (typeof queIdx !== \"undefined\") {\n                    this.queue[queIdx].disable = false;\n                    if (this.queue[queIdx].$display[0]) {\n                        this.queue[queIdx].$display.removeAttr(\"disabled\");\n                        this.queue[queIdx].$displayLabelInput.removeAttr(\"disabled\");\n                    }\n                    if (this.queue[queIdx].$select[0]) {\n                        this.queue[queIdx].$select.removeAttr(\"disabled\");\n                    }\n\n                    onStateChanged.call(this, this.queue[queIdx], {\n                        self: this,\n                        state: \"enable\"\n                    });\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.disable\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5autocomplete}\n             */\n            this.disable = function (_boundID) {\n                var queIdx = getQueIdx.call(this, _boundID);\n\n                if (typeof queIdx !== \"undefined\") {\n                    this.queue[queIdx].disable = true;\n                    if (this.queue[queIdx].$display[0]) {\n                        this.queue[queIdx].$display.attr(\"disabled\", \"disabled\");\n                        this.queue[queIdx].$displayLabelInput.attr(\"disabled\", \"disabled\");\n                    }\n                    if (this.queue[queIdx].$select[0]) {\n                        this.queue[queIdx].$select.attr(\"disabled\", \"disabled\");\n                    }\n\n                    onStateChanged.call(this, this.queue[queIdx], {\n                        self: this,\n                        state: \"disable\"\n                    });\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.align\n             */\n            this.align = function () {\n                alignAutocompleteDisplay.call(this);\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                } else {\n                    this.init();\n                }\n            }.apply(this, arguments);\n        };\n    }());\n\n    AUTOCOMPLETE = ax5.ui.autocomplete;\n})();\n\n// todo : editable 지원.\n// 아이템 박스 안에서 제거 할때 디스플레이 정렬\n\n// ax5.ui.autocomplete.tmpl\n(function () {\n    var AUTOCOMPLETE = ax5.ui.autocomplete;\n    var U = ax5.util;\n\n    var optionGroup = function optionGroup(columnKeys) {\n        return '\\n<div class=\"ax5autocomplete-option-group {{theme}} {{size}}\" data-ax5autocomplete-option-group=\"{{id}}\">\\n    <div class=\"ax-autocomplete-body\">\\n        <div class=\"ax-autocomplete-option-group-content\" data-els=\"content\"></div>\\n    </div>\\n    <div class=\"ax-autocomplete-arrow\"></div> \\n</div>\\n';\n    };\n\n    var autocompleteDisplay = function autocompleteDisplay(columnKeys) {\n        return ' \\n<input tabindex=\"-1\" type=\"text\" data-input-dummy=\"\" style=\"display: none;\" />\\n<div class=\"form-control {{formSize}} ax5autocomplete-display {{theme}}\" \\ndata-ax5autocomplete-display=\"{{id}}\" data-ax5autocomplete-instance=\"{{instanceId}}\">\\n    <div class=\"ax5autocomplete-display-table\" data-els=\"display-table\">\\n        <div data-ax5autocomplete-display=\"label-holder\"> \\n        <a {{^tabIndex}}{{/tabIndex}}{{#tabIndex}}tabindex=\"{{tabIndex}}\" {{/tabIndex}}\\n        data-ax5autocomplete-display=\"label\"\\n        spellcheck=\"false\"><input type=\"text\"data-ax5autocomplete-display=\"input\" style=\"border:0px none;\" /></a>\\n        </div>\\n        <div data-ax5autocomplete-display=\"addon\"> \\n            {{#multiple}}{{#reset}}\\n            <span class=\"addon-icon-reset\" data-selected-clear=\"true\">{{{.}}}</span>\\n            {{/reset}}{{/multiple}}\\n        </div>\\n    </div>\\n</a>\\n';\n    };\n\n    var formSelect = function formSelect(columnKeys) {\n        return '\\n<select tabindex=\"-1\" class=\"form-control {{formSize}}\" name=\"{{name}}\" multiple=\"multiple\"></select>\\n';\n    };\n\n    var formSelectOptions = function formSelectOptions(columnKeys) {\n        return '\\n{{#selected}}\\n<option value=\"{{' + columnKeys.optionValue + '}}\" selected=\"true\">{{' + columnKeys.optionText + '}}</option>\\n{{/selected}}\\n';\n    };\n\n    var options = function options(columnKeys) {\n        return '\\n{{#waitOptions}}\\n    <div class=\"ax-autocomplete-option-item\">\\n            <div class=\"ax-autocomplete-option-item-holder\">\\n                <span class=\"ax-autocomplete-option-item-cell ax-autocomplete-option-item-label\">\\n                    {{{lang.loading}}}\\n                </span>\\n            </div>\\n        </div>\\n{{/waitOptions}}\\n{{^waitOptions}}\\n    {{#options}}\\n        {{^hide}}\\n        <div class=\"ax-autocomplete-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-index=\"{{@index}}\" data-option-value=\"{{' + columnKeys.optionValue + '}}\" {{#' + columnKeys.optionSelected + '}}data-option-selected=\"true\"{{/' + columnKeys.optionSelected + '}}>\\n            <div class=\"ax-autocomplete-option-item-holder\">\\n                <span class=\"ax-autocomplete-option-item-cell ax-autocomplete-option-item-label\">{{' + columnKeys.optionText + '}}</span>\\n            </div>\\n        </div>\\n        {{/hide}}\\n    {{/options}}\\n    {{^options}}\\n        <div class=\"ax-autocomplete-option-item\">\\n            <div class=\"ax-autocomplete-option-item-holder\">\\n                <span class=\"ax-autocomplete-option-item-cell ax-autocomplete-option-item-label\">\\n                    {{{lang.noOptions}}}\\n                </span>\\n            </div>\\n        </div>\\n    {{/options}}\\n{{/waitOptions}}\\n';\n    };\n\n    var label = function label(columnKeys) {\n        return '{{#selected}}\\n<div tabindex=\"-1\" data-ax5autocomplete-selected-label=\"{{@i}}\" data-ax5autocomplete-selected-text=\"{{text}}\">\\n<div data-ax5autocomplete-remove=\"true\" data-ax5autocomplete-remove-index=\"{{@i}}\">{{{removeIcon}}}</div>\\n<span>{{' + columnKeys.optionText + '}}</span>\\n</div>{{/selected}}';\n    };\n\n    AUTOCOMPLETE.tmpl = {\n        \"autocompleteDisplay\": autocompleteDisplay,\n        \"formSelect\": formSelect,\n        \"formSelectOptions\": formSelectOptions,\n        \"optionGroup\": optionGroup,\n        \"options\": options,\n        \"label\": label,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(AUTOCOMPLETE.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();\n/**\n * autocomplete jquery extends\n * @namespace jQueryExtends\n */\n\n/**\n * @method jQueryExtends.ax5autocomplete\n * @param {String} methodName\n * @param [arguments]\n * @param [arguments]\n * @example\n * ```html\n * <div data-ax5autocomplete=\"ax1\" data-ax5autocomplete-config='{\n *  multiple: true,\n *  editable: true,\n *  size: \"\",\n *  theme:\"\"\n *  }'></div>\n * <script>\n * jQuery('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete();\n * $('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete(\"getSelectedOption\");\n * $('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete(\"setValue\", {value:\"test\", text:\"test\"});\n * $('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete(\"enable\");\n * $('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete(\"disable\");\n * </script>\n * ```\n */\nax5.ui.autocomplete_instance = new ax5.ui.autocomplete();\njQuery.fn.ax5autocomplete = function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"open\":\n                    return ax5.ui.autocomplete_instance.open(this);\n                    break;\n                case \"close\":\n                    return ax5.ui.autocomplete_instance.close(this);\n                    break;\n                case \"setValue\":\n                    return ax5.ui.autocomplete_instance.setValue(this, arguments[1], arguments[2], arguments[3], arguments[4] || \"justSetValue\");\n                    break;\n                case \"setText\":\n                    return ax5.ui.autocomplete_instance.setText(this, arguments[1], arguments[2], arguments[3], arguments[4] || \"justSetValue\");\n                    break;\n                case \"getSelectedOption\":\n                    return ax5.ui.autocomplete_instance.getSelectedOption(this);\n                    break;\n                case \"enable\":\n                    return ax5.ui.autocomplete_instance.enable(this);\n                    break;\n                case \"disable\":\n                    return ax5.ui.autocomplete_instance.disable(this);\n                    break;\n                case \"blur\":\n                    return ax5.ui.autocomplete_instance.blur(this);\n                case \"align\":\n                    return ax5.ui.autocomplete_instance.align(this);\n                default:\n                    return this;\n            }\n        } else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.autocomplete_instance.bind(config);\n            });\n        }\n        return this;\n    };\n}();\n/*\n * Copyright (c) 2017. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n\n    var DOCKER = void 0;\n\n    UI.addClass({\n        className: \"docker\"\n    }, function () {\n\n        /**\n         * @class ax5docker\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```\n         * var ax5docker = new ax5.ui.ax5docker();\n         * ```\n         */\n        return function () {\n            var _this3 = this;\n\n            var self = this,\n                cfg = void 0;\n\n            this.instanceId = ax5.getGuid();\n\n            /**\n             * @member {Object} ax5docker.config\n             */\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                columnKeys: {},\n                control: {},\n                icons: {\n                    close: 'X',\n                    more: '...'\n                },\n                labelDirection: 'top',\n                disableClosePanel: false,\n                disableDragPanel: false,\n                resizeDebounceTime: 100,\n                panelDebounceTime: 300\n            };\n\n            /**\n             * @member {Object} ax5docker.xvar\n             */\n            this.xvar = {};\n            /**\n             * @member {Object} ax5docker.menu\n             */\n            this.menu = null;\n\n            this.onResize = null;\n\n            // 패널 정보\n            /**\n             * @member {Array} ax5docker.panels\n             */\n            this.panels = [];\n            /**\n             * @member {Number} ax5docker.panelId\n             */\n            this.panelId = 0;\n\n            // 패널의 컨텐츠 모듈\n            /**\n             * @member {Object} ax5docker.modules\n             */\n            this.modules = {};\n\n            cfg = this.config;\n\n            /**\n             * @private {Object} ax5docker.debouncer\n             */\n            var debouncer = {\n                resizeDebounceFn: ax5.util.debounce(function (fn) {\n                    fn();\n                }, cfg.resizeDebounceTime),\n                panelDebounceFn: ax5.util.debounce(function (fn) {\n                    fn();\n                }, cfg.panelDebounceTime)\n            };\n\n            /**\n             * @private {Function} fireEvent\n             * @param event\n             * @returns {ax5docker}\n             */\n            var fireEvent = function fireEvent(event) {\n                var eventProcessor = {\n                    \"resize\": function resize(e) {\n                        if (this.onResize) {\n\n                            debouncer.resizeDebounceFn(function () {\n                                var that = {\n                                    self: this,\n                                    resizer: e.target,\n                                    resizedDom: [e.target.prev(), e.target.next()]\n                                };\n                                this.onResize.call(that, that);\n                            }.bind(this));\n                        }\n                    }\n                };\n\n                if (event.eventName in eventProcessor) {\n                    eventProcessor[event.eventName].call(_this3, event);\n                }\n\n                return _this3;\n            };\n\n            var getPanelId = function getPanelId() {\n                return _this3.panelId++;\n            };\n\n            /**\n             * defaultModule은 패널의 모듈이 정의되지 않은 경우를 위해 준비된 오브젝트\n             */\n            var defaultModule = {\n                init: function init(container, state) {\n                    container[\"$element\"].html(state.name);\n                },\n                active: function active(container, state) {},\n                deactive: function deactive(container, state) {},\n                destroy: function destroy(container, state) {}\n            };\n\n            /**\n             * 부모패널과 패널인덱스 값으로 패널 패스를 구합니다.\n             * @param parent\n             * @param pIndex\n             * @returns {string}\n             */\n            var getPanelPath = function getPanelPath(parent, pIndex) {\n                var paths = [];\n                if (parent && typeof parent.panelPath !== \"undefined\") {\n                    paths.push(parent.panelPath);\n                }\n\n                paths.push('panels[' + (pIndex || 0) + ']');\n                return paths.join(\".\");\n            };\n\n            /**\n             * 패널패스를 이용하여 패널을 가져옵니다\n             * @param _panelPath\n             * @returns {*}\n             */\n            var getPanel = function getPanel(_panelPath) {\n                var path = [],\n                    _path = U.isArray(_panelPath) ? [].concat(_panelPath) : [].concat(_panelPath.split(/[\\.\\[\\]]/g));\n\n                _path.forEach(function (n) {\n                    if (n !== \"\") path.push(\"[\\\"\" + n.replace(/['\\\"]/g, \"\") + \"\\\"]\");\n                });\n\n                try {\n                    return Function(\"\", \"return this\" + path.join('') + \";\").call(_this3);\n                } catch (e) {\n                    return;\n                }\n            };\n\n            /**\n             * 패널을 이용하여 패널의 부모 패널을 가져옵니다\n             * @param _panel\n             */\n            var getPanelParent = function getPanelParent(_panel) {\n                try {\n                    var _path = _panel.panelPath.substr(0, _panel.panelPath.lastIndexOf(\".\"));\n                    return Function(\"\", \"return this.\" + _path + \";\").call(_this3);\n                } catch (e) {\n                    return;\n                }\n            };\n\n            /**\n             * 패널패스를 이용하여 패널오브젝트에 값을 부여합니다.\n             * @param _panelPath\n             * @param _value\n             * @returns {*}\n             */\n            var setPanel = function setPanel(_panelPath, _value) {\n                var path = [],\n                    _path = U.isArray(_panelPath) ? [].concat(_panelPath) : [].concat(_panelPath.split(/[\\.\\[\\]]/g));\n\n                _path.forEach(function (n) {\n                    if (n !== \"\") path.push(\"[\\\"\" + n.replace(/['\\\"]/g, \"\") + \"\\\"]\");\n                });\n\n                return Function(\"val\", \"return this\" + path.join('') + \" = val;\").call(_this3, _value);\n            };\n\n            /**\n             * get mouse position\n             * @param e\n             * @returns {{clientX, clientY}}\n             */\n            var getMousePosition = function getMousePosition(e) {\n                var mouseObj = void 0,\n                    originalEvent = e.originalEvent ? e.originalEvent : e;\n                mouseObj = 'changedTouches' in originalEvent && originalEvent.changedTouches ? originalEvent.changedTouches[0] : originalEvent;\n                // clientX, Y 쓰면 스크롤에서 문제 발생\n                return {\n                    clientX: mouseObj.pageX,\n                    clientY: mouseObj.pageY\n                };\n            };\n\n            /**\n             * 패널의 모듈이 초기화, 활성화, 비활성, 제거 되는 일들을 제어하는 함수.\n             * 모든 컨트롤은 실행되기전에 사용자가 정의한 control.before 함수의 결과에 따라 실행 여부를 결정합니다. 사용자가 control.before를 정의하지 않으면 무조건 실행합니다.\n             * @param {Object} _panel\n             * @param {String} _control - \"init\",\"active\",\"deactive\",\"destroy\"\n             */\n            var controlPanel = function controlPanel(_panel, _control, _callback) {\n                var moduleState = jQuery.extend(_panel.moduleState, {\n                    name: _panel.name\n                }),\n                    moduleContainer = {\n                    '$element': _panel.$item\n                },\n                    module = void 0;\n\n                var processor = {\n                    init: function init() {\n                        _panel.builded = true;\n                        module = _panel.moduleName in _this3.modules && 'init' in _this3.modules[_panel.moduleName] ? _this3.modules[_panel.moduleName] : defaultModule;\n                        module.init(moduleContainer, moduleState);\n                    },\n                    active: function active() {\n                        _panel.active = true;\n                        _panel.$label.addClass(\"active\");\n                        _panel.$item.addClass(\"active\");\n\n                        var $pane = _panel.$label.parent();\n                        if ($pane.get(0) && $pane.get(0).clientWidth !== $pane.get(0).scrollWidth) {\n                            $pane.animate({ scrollLeft: _panel.$label.position().left }, 300);\n                        }\n\n                        module = _panel.moduleName in _this3.modules && 'active' in _this3.modules[_panel.moduleName] ? _this3.modules[_panel.moduleName] : defaultModule;\n                        module.active(moduleContainer, moduleState);\n                        $pane = null;\n                    },\n                    deactive: function deactive() {\n                        _panel.active = false;\n                        _panel.$label.removeClass(\"active\");\n                        _panel.$item.removeClass(\"active\");\n                        module = _panel.moduleName in _this3.modules && 'deactive' in _this3.modules[_panel.moduleName] ? _this3.modules[_panel.moduleName] : defaultModule;\n                        module.deactive(moduleContainer, moduleState);\n                    },\n                    destroy: function destroy() {\n                        module = _panel.moduleName in _this3.modules && 'destroy' in _this3.modules[_panel.moduleName] ? _this3.modules[_panel.moduleName] : defaultModule;\n                        module.destroy(moduleContainer, moduleState);\n\n                        // 패널 데이터 제거.\n                        setPanel(_panel.panelPath, null);\n                        // 현재 패널 정보를 검사하여 패널 정보를 재 구성합니다.\n                        arrangePanel();\n                    },\n                    remove: function remove() {\n                        module = _panel.moduleName in _this3.modules && 'destroy' in _this3.modules[_panel.moduleName] ? _this3.modules[_panel.moduleName] : defaultModule;\n                        module.destroy(moduleContainer, moduleState);\n\n                        // 패널 데이터 제거.\n                        setPanel(_panel.panelPath, null);\n                        // 현재 패널 정보를 검사하여 패널 정보를 재 구성합니다.\n                        arrangePanel();\n                    }\n                };\n\n                // 사용자정의 함수 control.before, control.after에 전달할 인자 = that\n                var that = {\n                    panel: _panel,\n                    controlType: _control\n                };\n\n                // 비동기 처리 상황에 대응하기 위해 runProcessor를 별도 처리\n                var runProcessor = function runProcessor() {\n                    processor[_control]();\n                    module = null;\n\n                    if (U.isFunction(cfg.control.after)) {\n                        cfg.control.after.call(that, that);\n                    }\n                };\n\n                if (processor[_control]) {\n                    if (U.isFunction(cfg.control.before)) {\n                        cfg.control.before.call(that, that, function (result) {\n                            if (typeof result === \"undefined\") result = true;\n                            if (result) runProcessor();\n\n                            if (U.isFunction(_callback)) {\n                                _callback(result);\n                            }\n                        });\n                    } else {\n                        runProcessor();\n                    }\n                }\n            };\n\n            /**\n             * 패널들의 패널 데이터 구조에 맞게 다시 그리기\n             */\n            var repaintPanels = function repaintPanels() {\n                var appendProcessor = {\n                    stack: function stack($parent, parent, myself, pIndex) {\n\n                        var $dom = void 0,\n                            activeIndex = -1;\n                        myself.panelPath = getPanelPath(parent, pIndex);\n\n                        $dom = jQuery(DOCKER.tmpl.get.call(this, \"stack-panel\", {\n                            id: self.instanceId,\n                            name: myself.name,\n                            hasLabelColor: !U.isNothing(myself.color),\n                            color: myself.color,\n                            borderColor: myself.borderColor,\n                            panelPath: myself.panelPath,\n                            icons: cfg.icons,\n                            labelDirection: myself.labelDirection || cfg.labelDirection,\n                            disableClosePanel: cfg.disableClosePanel,\n                            disableDragPanel: cfg.disableDragPanel\n                        }, {}));\n                        $parent.append($dom);\n\n                        if (U.isArray(myself.panels)) {\n                            myself.panels.forEach(function (P, pIndex) {\n                                if (P.active) activeIndex = pIndex;\n                            });\n                            if (activeIndex === -1) activeIndex = 0;\n                            myself.panels[activeIndex].active = true;\n\n                            myself.panels.forEach(function (P, _pIndex) {\n                                P.panelIndex = _pIndex;\n                                appendProcessor[P.type]($dom, myself, P, _pIndex);\n                            });\n                        }\n\n                        $dom = null;\n                        activeIndex = null;\n                    },\n                    panel: function panel($parent, parent, myself, pIndex) {\n                        var $dom = void 0;\n                        myself.panelPath = getPanelPath(parent, pIndex);\n                        myself.$label = jQuery(DOCKER.tmpl.get.call(this, \"panel-label\", {\n                            id: self.instanceId,\n                            pIndex: pIndex,\n                            name: myself.name,\n                            hasLabelColor: !U.isNothing(myself.color),\n                            color: myself.color,\n                            borderColor: myself.borderColor,\n                            panelPath: myself.panelPath,\n                            icons: cfg.icons,\n                            disableClosePanel: cfg.disableClosePanel,\n                            disableDragPanel: cfg.disableDragPanel\n                        }, {}));\n\n                        if (!myself.$item) {\n                            myself.$item = jQuery('<div data-ax5docker-pane-item=\"' + pIndex + '\" data-ax5docker-id=\"' + self.instanceId + '\" data-ax5docker-pane-id=\"' + getPanelId() + '\" data-ax5docker-path=\"' + myself.panelPath + '\"></div>');\n                        } else {\n                            myself.$item.attr(\"data-ax5docker-path\", myself.panelPath);\n                            myself.$item.attr(\"data-ax5docker-pane-item\", pIndex);\n                        }\n\n                        if (parent && parent.type == \"stack\") {\n                            if (myself.active) {\n                                if (!myself.builded) controlPanel(myself, \"init\");\n                                controlPanel(myself, \"active\");\n                            }\n                            $parent.find('[data-ax5docker-pane-tabs=\"' + self.instanceId + '\"]').append(myself.$label);\n                            $parent.find('[data-ax5docker-pane-item-views=\"' + self.instanceId + '\"]').append(myself.$item);\n                        } else {\n                            $dom = jQuery(DOCKER.tmpl.get.call(this, \"stack-panel\", {\n                                id: self.instanceId,\n                                name: myself.name,\n                                hasLabelColor: !U.isNothing(myself.color),\n                                color: myself.color,\n                                borderColor: myself.borderColor,\n                                panelPath: myself.panelPath,\n                                flexGrow: myself.flexGrow,\n                                icons: cfg.icons,\n                                labelDirection: myself.labelDirection || cfg.labelDirection,\n                                disableClosePanel: cfg.disableClosePanel,\n                                disableDragPanel: cfg.disableDragPanel\n                            }, {}));\n\n                            if (!myself.builded) controlPanel(myself, \"init\");\n                            controlPanel(myself, \"active\");\n\n                            $dom.find('[data-ax5docker-pane-tabs=\"' + self.instanceId + '\"]').append(myself.$label);\n                            $dom.find('[data-ax5docker-pane-item-views=\"' + self.instanceId + '\"]').append(myself.$item);\n\n                            $parent.append($dom);\n                        }\n\n                        $dom = null;\n                    },\n                    resizeHandle: function resizeHandle($parent, parent, myself, pIndex) {\n                        var $dom = jQuery('<div data-ax5docker-id=\"' + self.instanceId + '\" data-ax5docker-resize-handle=\"' + parent.type + \"/\" + parent.panelPath + \"/\" + pIndex + '\"></div>');\n                        $parent.append($dom);\n                        $dom = null;\n                    },\n                    row: function row($parent, parent, myself, pIndex) {\n                        var $dom = void 0;\n                        myself.panelPath = getPanelPath(parent, pIndex);\n                        if (parent && parent.type == \"stack\") {\n                            throw \"The 'stack' type child nodes are allowed only for the 'panel' type.\";\n                        }\n                        $dom = jQuery('<div data-ax5docker-pane-axis=\"row\" data-ax5docker-id=\"' + self.instanceId + '\" data-ax5docker-path=\"' + myself.panelPath + '\" style=\"flex-grow: ' + (myself.flexGrow || 1) + ';\"></div>');\n                        $parent.append($dom);\n\n                        if (U.isArray(myself.panels)) {\n                            myself.panels.forEach(function (P, _pIndex) {\n                                if (_pIndex > 0) appendProcessor[\"resizeHandle\"]($dom, myself, P, _pIndex);\n                                P.panelIndex = _pIndex;\n                                appendProcessor[P.type]($dom, myself, P, _pIndex);\n                            });\n                        }\n\n                        $dom = null;\n                    },\n                    column: function column($parent, parent, myself, pIndex) {\n                        var $dom = void 0;\n                        myself.panelPath = getPanelPath(parent, pIndex);\n                        if (parent && parent.type == \"stack\") {\n                            throw \"The 'stack' type child nodes are allowed only for the 'panel' type.\";\n                        }\n                        $dom = jQuery('<div data-ax5docker-pane-axis=\"column\" data-ax5docker-id=\"' + self.instanceId + '\" data-ax5docker-path=\"' + myself.panelPath + '\" style=\"flex-grow: ' + (myself.flexGrow || 1) + ';\"></div>');\n                        $parent.append($dom);\n\n                        if (U.isArray(myself.panels)) {\n                            myself.panels.forEach(function (P, _pIndex) {\n                                if (_pIndex > 0) appendProcessor[\"resizeHandle\"]($dom, myself, P, _pIndex);\n                                P.panelIndex = _pIndex;\n                                appendProcessor[P.type]($dom, myself, P, _pIndex);\n                            });\n                        }\n\n                        $dom = null;\n                    }\n                };\n\n                var $root = jQuery('<div data-ax5docker-panes=\"' + _this3.instanceId + '\"></div>');\n                if (_this3.panels[0]) appendProcessor[_this3.panels[0].type]($root, null, _this3.panels[0], 0);\n                _this3.$target.html($root);\n\n                _this3.$target.off(\"click.ax5docker-pane\").on(\"click.ax5docker-pane\", '[data-ax5docker-id=\"' + self.instanceId + '\"][data-ax5docker-pane-tab] .close-icon', function (e) {\n                    self.removePanel($(this).parents('[data-ax5docker-pane-tab]').attr(\"data-ax5docker-path\"));\n                    U.stopEvent(e);\n                }).on(\"click.ax5docker-pane\", '[data-ax5docker-id=\"' + self.instanceId + '\"][data-ax5docker-pane-tab]', function (e) {\n                    // pane, panelIndex 인자 변경.\n                    var $clickedLabel = jQuery(this);\n                    var pane = getPanel($clickedLabel.parents('[data-ax5docker-pane]').attr(\"data-ax5docker-path\"));\n                    var panelIndex = $clickedLabel.attr(\"data-ax5docker-pane-tab\");\n\n                    if (!$clickedLabel.hasClass(\"active\")) {\n                        changeActiveStackPanel(pane, panelIndex);\n                    }\n\n                    $clickedLabel = null;\n                    pane = null;\n                    panelIndex = null;\n                    U.stopEvent(e);\n                }).on(\"click.ax5docker-pane\", '[data-ax5docker-pane-tabs-more=\"' + _this3.instanceId + '\"]', function (e) {\n                    openStackPanelMore($(this).parents('[data-ax5docker-pane]'), e);\n                    U.stopEvent(e);\n                });\n\n                _this3.$target.off(\"mousedown.ax5docker-pane-resize\").off(\"dragstart.ax5docker-pane-resize\").on(\"dragstart.ax5docker-pane-resize\", '[data-ax5docker-id=\"' + self.instanceId + '\"][data-ax5docker-pane-tab]', function (e) {\n                    if (!cfg.disableDragPanel) {\n                        panelTabDragEvent.on(this);\n                    }\n                }).on(\"mousedown.ax5docker-pane-resize\", '[data-ax5docker-id=\"' + self.instanceId + '\"][data-ax5docker-resize-handle]', function (e) {\n                    var datas = this.getAttribute(\"data-ax5docker-resize-handle\").split(/\\//g);\n\n                    // panelResizerEvent.init\n                    self.xvar.mousePosition = getMousePosition(e);\n                    self.xvar.resizerType = datas[0];\n                    self.xvar.resizerPath = datas[1];\n                    self.xvar.resizerIndex = datas[2];\n                    // 주변 패널들\n                    self.xvar.resizer$dom = $(this);\n                    self.xvar.resizerParent$dom = self.xvar.resizer$dom.parent();\n                    self.xvar.resizerPrevGrow = U.number(self.xvar.resizer$dom.prev().css(\"flex-grow\"));\n                    self.xvar.resizerNextGrow = U.number(self.xvar.resizer$dom.next().css(\"flex-grow\"));\n\n                    if (self.xvar.resizerType == \"row\") {\n                        //self.xvar.resizerCanvasWidth = self.xvar.resizerParent$dom.innerWidth();\n                        self.xvar.resizerCanvasWidth = self.xvar.resizer$dom.prev().innerWidth() + self.xvar.resizer$dom.next().innerWidth() + self.xvar.resizer$dom.width();\n                    } else {\n                        //self.xvar.resizerCanvasHeight = self.xvar.resizerParent$dom.innerHeight();\n                        self.xvar.resizerCanvasHeight = self.xvar.resizer$dom.prev().innerHeight() + self.xvar.resizer$dom.next().innerHeight() + self.xvar.resizer$dom.height();\n                    }\n\n                    panelResizerEvent.on(this);\n                    U.stopEvent(e);\n                }).on(\"dragstart.ax5docker-pane-resize\", '[data-ax5docker-id=\"' + self.instanceId + '\"][data-ax5docker-resize-handle]', function (e) {\n                    U.stopEvent(e);\n                    return false;\n                });\n\n                // stackPane tabs 스크롤처리\n                alignStackPane();\n                $root = null;\n            };\n\n            /**\n             * repaintPanels이 작동할 때. 패널탭에 dragStart 이벤트를 연결합니다.\n             * 발생된 이벤트가 panelTabDragEvent.on를 작동.\n             */\n            var panelTabDragEvent = {\n                \"on\": function on(dragPanel) {\n                    if (_this3.panels[0] && _this3.panels[0].panels && _this3.panels[0].panels.length) {\n\n                        _this3.xvar.dragger = {\n                            dragPanel: dragPanel,\n                            target: null,\n                            dragOverVertical: null,\n                            dragOverHorizontal: null\n                        };\n\n                        _this3.$target.on(\"dragover.ax5docker-\" + _this3.instanceId, '[data-ax5docker-id=\"' + _this3.instanceId + '\"][data-ax5docker-path]', function (e) {\n                            // todo : dragover 구현\n                            // console.log(\"dargover\", getMousePosition(e));\n                            // console.log(e.target);\n                            panelTabDragEvent.dragover(this, e);\n                            U.stopEvent(e);\n                        }).on(\"drop.ax5docker-\" + _this3.instanceId, function (e) {\n                            panelTabDragEvent.off(\"drop\");\n                            U.stopEvent(e);\n                        }).on(\"dragend.ax5docker-\" + _this3.instanceId, function (e) {\n                            panelTabDragEvent.off();\n                            U.stopEvent(e);\n                        });\n                    }\n                },\n                \"dragover\": function dragover(dragoverDom, e) {\n\n                    var $dragoverDom = jQuery(dragoverDom),\n                        box = {},\n                        mouse = getMousePosition(e),\n                        dragOverVertical = void 0,\n                        dragOverHorizontal = void 0;\n\n                    if (_this3.xvar.dragger.target == null || _this3.xvar.dragger.target.get(0) != $dragoverDom.get(0)) {\n                        if (_this3.xvar.dragger.target) _this3.xvar.dragger.target.removeAttr(\"data-dropper\");\n\n                        _this3.xvar.dragger.target = $dragoverDom;\n                        _this3.xvar.dragger.dragOverVertical = null;\n                        _this3.xvar.dragger.dragOverHorizontal = null;\n                    }\n\n                    box = $dragoverDom.offset();\n                    box.width = $dragoverDom.width();\n                    box.height = $dragoverDom.height();\n\n                    if ($dragoverDom.attr(\"data-ax5docker-pane-tab\")) {\n                        var halfWidth = box.width / 2;\n                        if (box.left <= mouse.clientX && box.left + halfWidth >= mouse.clientX) {\n                            dragOverHorizontal = \"left\";\n                        } else if (box.left + halfWidth <= mouse.clientX && box.left + halfWidth * 2 >= mouse.clientX) {\n                            dragOverHorizontal = \"right\";\n                        }\n                        if (_this3.xvar.dragger.dragOverHorizontal != dragOverHorizontal && typeof dragOverHorizontal != \"undefined\") {\n                            _this3.xvar.dragger.dragOverHorizontal = dragOverHorizontal;\n                            var _draggerProcessor = {\n                                \"left\": function left($target) {\n                                    $target.attr(\"data-dropper\", \"left\");\n                                },\n                                \"right\": function right($target) {\n                                    $target.attr(\"data-dropper\", \"right\");\n                                }\n                            };\n                            if (_this3.xvar.dragger.dragOverHorizontal in _draggerProcessor) {\n                                _draggerProcessor[_this3.xvar.dragger.dragOverHorizontal](_this3.xvar.dragger.target);\n                            }\n                        }\n                        halfWidth = null;\n                    } else if ($dragoverDom.attr(\"data-ax5docker-pane-tabs\")) {\n                        //this.xvar.dragger.dragOverVertical = \"center\";\n                        _this3.xvar.dragger.dragOverHorizontal = \"last-child\";\n                        _this3.xvar.dragger.target.attr(\"data-dropper\", \"true\");\n                    } else if ($dragoverDom.attr(\"data-ax5docker-pane-item\")) {\n                        // panel dragover 포지션 구하기\n                        var threeQuarterHeight = box.height / 3;\n                        var threeQuarterWidth = box.width / 3;\n\n                        if (box.top <= mouse.clientY && box.top + threeQuarterHeight >= mouse.clientY) {\n                            dragOverVertical = \"top\";\n                        } else if (box.top + threeQuarterHeight <= mouse.clientY && box.top + threeQuarterHeight * 2 >= mouse.clientY) {\n                            dragOverVertical = \"middle\";\n                        } else if (box.top + threeQuarterHeight * 2 <= mouse.clientY && box.top + threeQuarterHeight * 3 >= mouse.clientY) {\n                            dragOverVertical = \"bottom\";\n                        }\n\n                        if (box.left <= mouse.clientX && box.left + threeQuarterWidth >= mouse.clientX) {\n                            dragOverHorizontal = \"left\";\n                        } else if (box.left + threeQuarterWidth <= mouse.clientX && box.left + threeQuarterWidth * 2 >= mouse.clientX) {\n                            dragOverHorizontal = \"center\";\n                        } else if (box.left + threeQuarterWidth * 2 <= mouse.clientX && box.left + threeQuarterWidth * 3 >= mouse.clientX) {\n                            dragOverHorizontal = \"right\";\n                        }\n\n                        if (_this3.xvar.dragger.dragOverVertical != dragOverVertical || _this3.xvar.dragger.dragOverHorizontal != dragOverHorizontal) {\n                            _this3.xvar.dragger.dragOverVertical = dragOverVertical;\n                            _this3.xvar.dragger.dragOverHorizontal = dragOverHorizontal;\n\n                            var draggerProcessor = {\n                                \"left-top\": function leftTop($target) {\n                                    $target.attr(\"data-dropper\", \"left\");\n                                },\n                                \"right-top\": function rightTop($target) {\n                                    $target.attr(\"data-dropper\", \"right\");\n                                },\n                                \"center-top\": function centerTop($target) {\n                                    $target.attr(\"data-dropper\", \"top\");\n                                },\n                                \"left-middle\": function leftMiddle($target) {\n                                    $target.attr(\"data-dropper\", \"left\");\n                                },\n                                \"right-middle\": function rightMiddle($target) {\n                                    $target.attr(\"data-dropper\", \"right\");\n                                },\n                                \"center-middle\": function centerMiddle($target) {\n                                    $target.attr(\"data-dropper\", \"center\");\n                                },\n                                \"left-bottom\": function leftBottom($target) {\n                                    $target.attr(\"data-dropper\", \"left\");\n                                },\n                                \"right-bottom\": function rightBottom($target) {\n                                    $target.attr(\"data-dropper\", \"right\");\n                                },\n                                \"center-bottom\": function centerBottom($target) {\n                                    $target.attr(\"data-dropper\", \"bottom\");\n                                }\n                            };\n                            if (_this3.xvar.dragger.dragOverHorizontal + \"-\" + _this3.xvar.dragger.dragOverVertical in draggerProcessor) {\n                                draggerProcessor[_this3.xvar.dragger.dragOverHorizontal + \"-\" + _this3.xvar.dragger.dragOverVertical](_this3.xvar.dragger.target);\n                            }\n                        }\n\n                        threeQuarterHeight = null;\n                        threeQuarterWidth = null;\n                    }\n                },\n                \"off\": function off(isDrop) {\n                    if (isDrop) {\n                        var dragPanel = getPanel(_this3.xvar.dragger.dragPanel.getAttribute(\"data-ax5docker-path\")),\n                            appendType = [];\n\n                        if (_this3.xvar.dragger.dragOverHorizontal) appendType.push(_this3.xvar.dragger.dragOverHorizontal);\n                        if (_this3.xvar.dragger.dragOverVertical) appendType.push(_this3.xvar.dragger.dragOverVertical);\n\n                        _this3.appendPanel(dragPanel, _this3.xvar.dragger.target.attr(\"data-ax5docker-path\"), appendType);\n\n                        dragPanel = null;\n                        appendType = null;\n                    }\n\n                    alignStackPane();\n\n                    _this3.$target.off(\"dragover.ax5docker-\" + _this3.instanceId).off(\"drop.ax5docker-\" + _this3.instanceId).off(\"dragend.ax5docker-\" + _this3.instanceId);\n\n                    _this3.xvar.dragger.target.removeAttr(\"data-dropper\");\n                }\n            };\n\n            /**\n             * repaintPanels이 작동할 때. 리사이저에 mousedown 이벤트를 연결합니다.\n             * 발생된 이벤트가 panelResizerEvent.on 을 작동시켜 리사이저를 움직이게 합니다\n             */\n            var panelResizerEvent = {\n                \"on\": function on(_resizer) {\n\n                    jQuery(document.body).on(\"mousemove.ax5docker-\" + _this3.instanceId, function (e) {\n                        var mouseObj = getMousePosition(e),\n                            da_grow = void 0;\n\n                        if (self.xvar.resizerLived) {\n                            if (self.xvar.resizerType == \"row\") {\n                                self.xvar.__da = mouseObj.clientX - self.xvar.mousePosition.clientX;\n                                da_grow = U.number(self.xvar.__da * 2 / self.xvar.resizerCanvasWidth, { round: 6 });\n\n                                self.xvar.resizer$dom.prev().css({ \"flex-grow\": self.xvar.resizerPrevGrow + da_grow });\n                                self.xvar.resizer$dom.next().css({ \"flex-grow\": self.xvar.resizerNextGrow - da_grow });\n                            } else {\n                                self.xvar.__da = mouseObj.clientY - self.xvar.mousePosition.clientY;\n                                da_grow = U.number(self.xvar.__da * 2 / self.xvar.resizerCanvasHeight, { round: 6 });\n\n                                self.xvar.resizer$dom.prev().css({ \"flex-grow\": self.xvar.resizerPrevGrow + da_grow });\n                                self.xvar.resizer$dom.next().css({ \"flex-grow\": self.xvar.resizerNextGrow - da_grow });\n                            }\n\n                            fireEvent({\n                                eventName: \"resize\",\n                                target: self.xvar.resizer$dom\n                            });\n                        } else {\n                            self.xvar.resizerLived = true;\n                        }\n\n                        mouseObj = null;\n                        da_grow = null;\n                    }).on(\"mouseup.ax5docker-\" + _this3.instanceId, function (e) {\n                        panelResizerEvent.off();\n                        U.stopEvent(e);\n                    }).on(\"mouseleave.ax5docker-\" + _this3.instanceId, function (e) {\n                        panelResizerEvent.off();\n                        U.stopEvent(e);\n                    });\n\n                    jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n                },\n                \"off\": function off() {\n                    self.xvar.resizerLived = false;\n\n                    if (typeof _this3.xvar.__da === \"undefined\") {} else {\n                        var $prevPanel = self.xvar.resizer$dom.prev(),\n                            $nextPanel = self.xvar.resizer$dom.next(),\n                            prevPane = getPanel($prevPanel.attr(\"data-ax5docker-path\")),\n                            nextPane = getPanel($nextPanel.attr(\"data-ax5docker-path\"));\n\n                        prevPane.flexGrow = U.number($prevPanel.css(\"flex-grow\"));\n                        nextPane.flexGrow = U.number($nextPanel.css(\"flex-grow\"));\n\n                        $prevPanel = null;\n                        $nextPanel = null;\n                        prevPane = null;\n                        nextPane = null;\n                    }\n\n                    alignStackPane();\n\n                    jQuery(document.body).off(\"mousemove.ax5docker-\" + _this3.instanceId).off(\"mouseup.ax5docker-\" + _this3.instanceId).off(\"mouseleave.ax5docker-\" + _this3.instanceId);\n\n                    jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n                }\n            };\n\n            /**\n             * 액티브 패널 변경(stack인 상황에서)\n             * @param pane\n             * @param panelIndex\n             * @returns {boolean}\n             */\n            var changeActiveStackPanel = function changeActiveStackPanel(pane, panelIndex) {\n                var panel = pane.panels[panelIndex];\n\n                for (var p = 0, pl = pane.panels.length; p < pl; p++) {\n                    if (pane.panels[p].active) {\n                        controlPanel(pane.panels[p], \"deactive\");\n                    }\n                }\n\n                if (!panel.builded) controlPanel(panel, \"init\");\n                controlPanel(panel, \"active\");\n\n                pane = null;\n                panelIndex = null;\n                panel = null;\n                return _this3;\n            };\n\n            /**\n             * stackTab의 더보기 아이콘이 클릭되면~~~\n             * @param stackPane\n             * @param e\n             * @returns {ax5docker}\n             */\n            var openStackPanelMore = function openStackPanelMore(stackPane, e) {\n                var $stackPane = jQuery(stackPane),\n                    panePath = $stackPane.attr(\"data-ax5docker-path\"),\n                    pane = getPanel(panePath);\n\n                if (_this3.menu) {\n                    var menuItems = U.map(pane.panels, function (index) {\n                        return {\n                            label: this.name,\n                            index: index,\n                            panePath: panePath\n                        };\n                    });\n\n                    _this3.menu.setConfig({\n                        items: menuItems,\n                        onClick: function onClick() {\n                            //console.log(pane);\n                            changeActiveStackPanel(getPanel(this.panePath), this.index);\n                        }\n                    });\n\n                    _this3.menu.popup(e);\n                } else {\n                    console.log(pane.panels);\n                    throw \"'ax5ui-menu' is required to implement the function.\";\n                }\n\n                $stackPane = null;\n                panePath = null;\n                pane = null;\n                return _this3;\n            };\n\n            /**\n             * stackPane이 리사이즈 되면 탭을 스크롤여부를 판단해야 합니다.\n             */\n            var alignStackPane = function alignStackPane() {\n                debouncer.panelDebounceFn(function () {\n                    this.$target.find('[data-ax5docker-pane-tabs=\"' + this.instanceId + '\"]').each(function () {\n                        var $this = jQuery(this).parent();\n                        if (this.scrollWidth > this.clientWidth) {\n                            $this.addClass(\"tabs-scrolled\");\n                        } else {\n                            $this.removeClass(\"tabs-scrolled\");\n                        }\n                        $this = null;\n                    });\n                }.bind(_this3));\n            };\n\n            var panelsDeactive = function panelsDeactive(panels) {\n                if (U.isArray(panels)) {\n                    panels.forEach(function (p) {\n                        //p.active = false;\n                        //p.$item.removeClass(\"active\");\n                        controlPanel(p, \"deactive\");\n                    });\n                } else {\n                    //panels.active = false;\n                    //panels.$item.removeClass(\"active\");\n                    controlPanel(panels, \"deactive\");\n                }\n            };\n\n            /**\n             * 패널중에 null이 된 요소를 찾아 panels를 정리 합니다.\n             * @returns {*}\n             */\n            var arrangePanel = function arrangePanel() {\n                var processor = {\n                    stack: function stack(myself) {\n                        if (!U.isArray(myself.panels)) return false;\n\n                        var newObj = {\n                            type: \"stack\",\n                            panels: []\n                        };\n\n                        myself.panels.forEach(function (P, _pIndex) {\n                            if (P) {\n                                var _p = processor[P.type](P);\n                                if (_p) newObj.panels.push(_p);\n                                _p = null;\n                            }\n                        });\n\n                        if (newObj.panels.length == 0) {\n                            return null;\n                        } else if (newObj.panels.length < 2) {\n                            newObj = newObj.panels[0];\n                        }\n\n                        return newObj;\n                    },\n                    panel: function panel(myself) {\n                        //console.log(myself);\n                        return myself;\n                    },\n                    row: function row(myself) {\n\n                        if (!U.isArray(myself.panels)) return false;\n\n                        var newObj = {\n                            type: \"row\",\n                            panels: []\n                        };\n\n                        myself.panels.forEach(function (P, _pIndex) {\n                            if (P) {\n                                var _p = processor[P.type](P);\n                                if (_p) newObj.panels.push(_p);\n                                _p = null;\n                            }\n                        });\n\n                        if (newObj.panels.length == 0) {\n                            return null;\n                        } else if (newObj.panels.length < 2) {\n                            newObj = newObj.panels[0];\n                        }\n\n                        return newObj;\n                    },\n                    column: function column(myself) {\n                        if (!U.isArray(myself.panels)) return false;\n\n                        var newObj = {\n                            type: \"column\",\n                            panels: []\n                        };\n\n                        myself.panels.forEach(function (P, _pIndex) {\n                            if (P) {\n                                var _p = processor[P.type](P);\n                                if (_p) newObj.panels.push(_p);\n                                _p = null;\n                            }\n                        });\n\n                        if (newObj.panels.length == 0) {\n                            return null;\n                        } else if (newObj.panels.length < 2) {\n                            newObj = newObj.panels[0];\n                        }\n\n                        return newObj;\n                    }\n                };\n\n                if (_this3.panels[0]) {\n                    _this3.panels[0] = processor[_this3.panels[0].type](_this3.panels[0]);\n                    if (_this3.panels[0] && _this3.panels[0].type === \"panel\") {\n                        _this3.panels[0] = {\n                            type: \"stack\",\n                            panels: [_this3.panels[0]]\n                        };\n                    }\n                } else {\n                    _this3.panels = [];\n                }\n\n                repaintPanels();\n            };\n\n            /**\n             * @method ax5docker.setConfig\n             * @param {Object} config\n             * @param {Element} config.target\n             * @param {Object[]} config.panels\n             * @param {String} config.panels[].type - panel, stack, row, column\n             * @param {String} config.panels[].name\n             * @param {String} [config.panels[].color]\n             * @param {String} [config.panels[].borderColor]\n             * @param {String} config.panels[].moduleName\n             * @param {Object} config.panels[].moduleState\n             * @param {Object[]} config.panels[].panels\n             * @param {Object} [config.icons]\n             * @param {String} [config.icons.close]\n             * @param {String} [config.icons.more]\n             * @param {Boolean} [config.disableClosePanel=false]\n             * @param {Boolean} [config.disableDragPanel=false]\n             * @param {Object} [config.control]\n             * @param {Function} [config.control.before]\n             * @param {Function} [config.control.after]\n             * @param {Object} [config.menu]\n             * @param {String} [config.menu.theme=\"default\"]\n             * @param {String} [config.menu.position=\"absolute\"]\n             * @param {Object} [config.menu.icons]\n             * @param {String} [config.menu.icons.arrow]\n             * @param {Number} [config.resizeDebounceTime=100]\n             * @param {Number} [config.panelDebounceTime=300]\n             * @example\n             * ```js\n             * var myDocker = new ax5.ui.docker();\n             * myDocker.setConfig({\n             *      target: $('[data-ax5docker=\"docker1\"]'),\n             *      panels: [\n             *          {\n             *              type: \"panel\",\n             *              name: \"panel name\",\n             *              color: \"#ff3300\",\n             *              borderColor: \"#000000\",\n             *              moduleName: \"content\",\n             *              moduleState:{\n             *                  data: \"data1\"\n             *              }\n             *          }\n             *      ]\n             * });\n             * ```\n             */\n            this.init = function (_config) {\n                cfg = jQuery.extend(true, {}, cfg, _config);\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5docker\", \"401\", \"init\"));\n                    return this;\n                }\n\n                // 이벤트 정의 영역\n                this.onResize = cfg.onResize;\n\n                // memory target\n                this.$target = jQuery(cfg.target);\n                // set panels\n                this.panels = cfg.panels || [];\n                // event Functions\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.onLoad = cfg.onLoad;\n                this.onDataChanged = cfg.onDataChanged;\n\n                if (ax5.ui.menu) {\n                    this.menu = new ax5.ui.menu({\n                        theme: 'default',\n                        position: \"absolute\",\n                        icons: {\n                            'arrow': '▸'\n                        }\n                    });\n                }\n\n                jQuery(window).bind(\"resize.ax5docker-\" + this.id, function () {\n                    // stackPane tabs 스크롤처리\n                    alignStackPane();\n                });\n            };\n\n            /**\n             * @method ax5docker.setPanels\n             * @returns {ax5docker}\n             */\n            this.setPanels = function (_panels) {\n                // set panels\n                this.panels = _panels || [];\n\n                // 패널 다시 그리기\n                repaintPanels();\n                return this;\n            };\n\n            /**\n             * @method ax5docker.addModule\n             * @param modules\n             * @returns {ax5docker}\n             */\n            this.addModule = function (modules) {\n                if (U.isObject(modules)) {\n                    jQuery.extend(true, this.modules, modules);\n                }\n                return this;\n            };\n\n            /**\n             * repaint panels of docker\n             * @method ax5docker.repaint\n             * @returns {ax5docker}\n             */\n            this.repaint = function () {\n                // 패널 다시 그리기\n                repaintPanels();\n                return this;\n            };\n\n            /**\n             * @method ax5docker.addPanel\n             * @param {String} _addPath - Position path to add panel\n             * @param _addType\n             * @param _panel\n             * @param _panelIndex\n             * @returns {ax5docker}\n             * @example\n             * ```js\n             * myDocker.addPanel('0.1', 'stack', {type:'panel', name:'addPanel', moduleName: 'content'});\n             *\n             * ```\n             */\n            this.addPanel = function (_addPath, _addType, _panel, _panelIndex) {\n                console.log(_addPath, _addType);\n                var addPath = \"\";\n                var pane = void 0;\n                var parent = void 0;\n\n                if (this.panels.length === 0 || !this.panels[0]) {\n                    return this.setPanels([{ type: \"stack\", panels: [_panel] }]);\n                } else {\n                    if (_addPath == \"undefined\") {\n                        addPath = \"0\";\n                    } else {\n                        addPath = _addPath.replace(/[a-zA-Z\\[\\]]+/g, \"\").replace(/(\\d+)/g, function (a, b) {\n                            return \"panels[\" + a + \"]\";\n                        });\n                    }\n                    pane = getPanel(addPath);\n                    parent = getPanelParent(pane);\n                }\n\n                if (parent && parent.type == \"stack\") {\n                    // 부모패널로 ~\n                    //console.log(addPath, _addPath);\n                    pane = parent;\n                    addPath = pane.panelPath;\n                }\n\n                console.log(pane);\n                console.log(parent);\n                console.log(addPath);\n\n                var panelProcessor = {\n                    \"stack\": function stack(_pane, _addType, _panel, _panelIndex) {\n                        var copyPanel = jQuery.extend({}, _pane),\n                            addProcessor = {\n                            \"stack\": function stack(_pane, _panel) {\n                                if (_panel.active) {\n                                    panelsDeactive(_pane.panels);\n                                }\n                                _pane.panels.push(_panel);\n                                arrangePanel();\n                            },\n                            \"stack-left\": function stackLeft(_pane, _panel) {\n                                if (_panel.active) {\n                                    panelsDeactive(_pane.panels);\n                                }\n                                _pane.panels.splice(_panelIndex, 0, _panel);\n                                arrangePanel();\n                            },\n                            \"stack-right\": function stackRight(_pane, _panel) {\n                                if (_panel.active) {\n                                    panelsDeactive(_pane.panels);\n                                }\n                                _pane.panels.splice(Number(_panelIndex) + 1, 0, _panel);\n                                arrangePanel();\n                            },\n                            \"row-left\": function rowLeft(_pane, _panel) {\n                                var parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                var parentPane = getPanel(parentPath);\n                                if (parentPane && parentPane.type == \"row\") {\n                                    this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                } else {\n                                    _pane = setPanel(addPath, {\n                                        type: \"row\",\n                                        panels: []\n                                    });\n                                    _pane.panels.push(_panel);\n                                    _pane.panels.push(copyPanel);\n                                    arrangePanel();\n                                }\n                            },\n                            \"row-right\": function rowRight(_pane, _panel) {\n                                var parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                var parentPane = getPanel(parentPath);\n                                if (parentPane && parentPane.type == \"row\") {\n                                    this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                } else {\n                                    _pane = setPanel(addPath, {\n                                        type: \"row\",\n                                        panels: []\n                                    });\n                                    _pane.panels.push(copyPanel);\n                                    _pane.panels.push(_panel);\n                                    arrangePanel();\n                                }\n                            },\n                            \"column-top\": function columnTop(_pane, _panel) {\n                                var parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                var parentPane = getPanel(parentPath);\n                                if (parentPane && parentPane.type == \"column\") {\n                                    this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                } else {\n                                    _pane = setPanel(addPath, {\n                                        type: \"column\",\n                                        panels: []\n                                    });\n                                    _pane.panels.push(_panel);\n                                    _pane.panels.push(copyPanel);\n                                    arrangePanel();\n                                }\n                            },\n                            \"column-bottom\": function columnBottom(_pane, _panel) {\n                                var parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                var parentPane = getPanel(parentPath);\n                                if (parentPane && parentPane.type == \"column\") {\n                                    this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                } else {\n                                    _pane = setPanel(addPath, {\n                                        type: \"column\",\n                                        panels: []\n                                    });\n                                    _pane.panels.push(copyPanel);\n                                    _pane.panels.push(_panel);\n                                    arrangePanel();\n                                }\n                            }\n                        };\n                        if (_addType in addProcessor) {\n                            addProcessor[_addType].call(this, _pane, _panel);\n                        }\n\n                        copyPanel = null;\n                        addProcessor = null;\n                    },\n                    \"row\": function row(_pane, _addType, _panel, _panelIndex) {\n                        var copyPanel = jQuery.extend({}, _pane),\n                            addProcessor = {\n                            \"stack\": function stack(_pane, _panel) {\n                                // 처리 할 수 없는 상황 첫번째 자식을 찾아 재 요청\n                                if (_pane.panels[0] && _pane.panels[0].panelPath) {\n                                    this.addPanel(_pane.panels[0].panelPath, _addType, _panel);\n                                }\n                            },\n                            \"row-left\": function rowLeft(_pane, _panel, _panelIndex) {\n                                _pane.panels.splice(_panelIndex, 0, _panel);\n                                arrangePanel();\n                            },\n                            \"row-right\": function rowRight(_pane, _panel, _panelIndex) {\n                                _pane.panels.splice(_panelIndex + 1, 0, _panel);\n                                arrangePanel();\n                            },\n                            \"column-top\": function columnTop(_pane, _panel, _panelIndex) {\n                                var parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                var parentPane = getPanel(parentPath);\n                                if (parentPane && parentPane.type == \"column\") {\n                                    this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                } else {\n                                    _pane = setPanel(addPath, {\n                                        type: \"column\",\n                                        panels: []\n                                    });\n                                    _pane.panels.push(_panel);\n                                    _pane.panels.push(copyPanel);\n                                    arrangePanel();\n                                }\n                            },\n                            \"column-bottom\": function columnBottom(_pane, _panel, _panelIndex) {\n                                var parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                var parentPane = getPanel(parentPath);\n                                if (parentPane && parentPane.type == \"column\") {\n                                    this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                } else {\n                                    _pane = setPanel(addPath, {\n                                        type: \"column\",\n                                        panels: []\n                                    });\n                                    _pane.panels.push(copyPanel);\n                                    _pane.panels.push(_panel);\n                                    arrangePanel();\n                                }\n                            }\n                        };\n                        if (_addType in addProcessor) {\n                            addProcessor[_addType].call(this, _pane, _panel, _panelIndex);\n                        }\n\n                        addProcessor = null;\n                        copyPanel = null;\n                    },\n                    \"column\": function column(_pane, _addType, _panel, _panelIndex) {\n                        var copyPanel = jQuery.extend({}, _pane),\n                            addProcessor = {\n                            \"stack\": function stack(_pane, _panel) {\n                                if (_pane.panels[0] && _pane.panels[0].panelPath) {\n                                    this.addPanel(_pane.panels[0].panelPath, _addType, _panel);\n                                }\n                            },\n                            \"row-left\": function rowLeft(_pane, _panel) {\n                                var parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                var parentPane = getPanel(parentPath);\n                                if (parentPane && parentPane.type == \"row\") {\n                                    this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                } else {\n                                    _pane = setPanel(addPath, {\n                                        type: \"row\",\n                                        panels: []\n                                    });\n                                    _pane.panels.push(_panel);\n                                    _pane.panels.push(copyPanel);\n                                    arrangePanel();\n                                }\n                            },\n                            \"row-right\": function rowRight(_pane, _panel) {\n                                var parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                var parentPane = getPanel(parentPath);\n                                if (parentPane && parentPane.type == \"row\") {\n                                    this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                } else {\n                                    _pane = setPanel(addPath, {\n                                        type: \"row\",\n                                        panels: []\n                                    });\n                                    _pane.panels.push(copyPanel);\n                                    _pane.panels.push(_panel);\n                                    arrangePanel();\n                                }\n                            },\n                            \"column-top\": function columnTop(_pane, _panel) {\n                                _pane.panels.splice(_panelIndex, 0, _panel);\n                                arrangePanel();\n                            },\n                            \"column-bottom\": function columnBottom(_pane, _panel) {\n                                _pane.panels.splice(_panelIndex + 1, 0, _panel);\n                                arrangePanel();\n                            }\n                        };\n                        if (_addType in addProcessor) {\n                            addProcessor[_addType].call(this, _pane, _panel);\n                        }\n\n                        addProcessor = null;\n                        copyPanel = null;\n                    },\n                    \"panel\": function panel(_pane, _addType, _panel) {\n                        var copyPanel = jQuery.extend({}, _pane),\n                            addProcessor = {\n                            \"stack\": function stack(_pane, _panel) {\n                                // _pane stack으로 재구성\n                                _pane = setPanel(addPath, {\n                                    type: \"stack\",\n                                    panels: []\n                                });\n\n                                if (_panel.active) {\n                                    panelsDeactive(copyPanel);\n                                }\n\n                                _pane.panels.push(copyPanel);\n                                _pane.panels.push(_panel);\n                                arrangePanel();\n                            },\n                            \"stack-left\": function stackLeft(_pane, _panel) {\n                                // _pane stack으로 재구성\n                                _pane = setPanel(addPath, {\n                                    type: \"stack\",\n                                    panels: []\n                                });\n\n                                if (_panel.active) {\n                                    panelsDeactive(copyPanel);\n                                }\n                                _pane.panels.push(_panel);\n                                _pane.panels.push(copyPanel);\n                                arrangePanel();\n                            },\n                            \"stack-right\": function stackRight(_pane, _panel) {\n                                // _pane stack으로 재구성\n                                _pane = setPanel(addPath, {\n                                    type: \"stack\",\n                                    panels: []\n                                });\n\n                                if (_panel.active) {\n                                    panelsDeactive(copyPanel);\n                                }\n                                _pane.panels.push(copyPanel);\n                                _pane.panels.push(_panel);\n                                arrangePanel();\n                            },\n                            \"row-left\": function rowLeft(_pane, _panel) {\n                                var parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                var parentPane = getPanel(parentPath);\n                                if (parentPane && parentPane.type == \"row\" || parentPane.type == \"column\") {\n                                    this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                } else {\n                                    _pane = setPanel(addPath, {\n                                        type: \"row\",\n                                        panels: []\n                                    });\n                                    _pane.panels.push(_panel);\n                                    _pane.panels.push(copyPanel);\n                                    arrangePanel();\n                                }\n                            },\n                            \"row-right\": function rowRight(_pane, _panel) {\n                                var parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                var parentPane = getPanel(parentPath);\n                                if (parentPane && parentPane.type == \"row\" || parentPane.type == \"column\") {\n                                    this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                } else {\n                                    _pane = setPanel(addPath, {\n                                        type: \"row\",\n                                        panels: []\n                                    });\n                                    _pane.panels.push(copyPanel);\n                                    _pane.panels.push(_panel);\n                                    arrangePanel();\n                                }\n                            },\n                            \"column-top\": function columnTop(_pane, _panel) {\n                                var parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                var parentPane = getPanel(parentPath);\n                                if (parentPane && parentPane.type == \"column\" || parentPane.type == \"row\") {\n                                    this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                } else {\n                                    _pane = setPanel(addPath, {\n                                        type: \"column\",\n                                        panels: []\n                                    });\n                                    _pane.panels.push(_panel);\n                                    _pane.panels.push(copyPanel);\n                                    arrangePanel();\n                                }\n                            },\n                            \"column-bottom\": function columnBottom(_pane, _panel) {\n                                var parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                var parentPane = getPanel(parentPath);\n\n                                if (parentPane && parentPane.type == \"column\" || parentPane.type == \"row\") {\n                                    this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                } else {\n                                    _pane = setPanel(addPath, {\n                                        type: \"column\",\n                                        panels: []\n                                    });\n                                    _pane.panels.push(copyPanel);\n                                    _pane.panels.push(_panel);\n                                    arrangePanel();\n                                }\n                            }\n                        };\n\n                        if (_addType in addProcessor) {\n                            addProcessor[_addType].call(this, _pane, _panel);\n                        }\n\n                        copyPanel = null;\n                        addProcessor = null;\n                    }\n                };\n\n                if (pane ? pane.type : \"stack\" in panelProcessor) {\n                    panelProcessor[pane ? pane.type : \"stack\"].call(this, pane, _addType, _panel, _panelIndex);\n                }\n\n                return this;\n            };\n\n            /**\n             * 패널 삭제하기\n             * @method ax5docker.removePanel\n             * @param {String} panelPath\n             * @param {Function} callback\n             * @returns {ax5docker}\n             * @example\n             * ```js\n             * function removePanel() {\n             *      var p = myDocker.searchPanel(function (panel) {\n             *          return (panel.key == \"A\");\n             *      });\n             *\n             *      if (p) {\n             *          myDocker.removePanel(p.panelPath, function () {\n             *              removePanel();\n             *          });\n             *      }\n             * }\n             * removePanel();\n             * ```\n             */\n            this.removePanel = function (panelPath, callback) {\n                var panel = getPanel(panelPath);\n\n                controlPanel(panel, \"destroy\", callback);\n\n                panel = null;\n                return this;\n            };\n\n            /**\n             * @method ax5docker.appendPanel\n             * @param _panel\n             * @param _appendPath\n             * @param _appendType\n             * @returns {ax5docker}\n             */\n            this.appendPanel = function (_panel, _appendPath, _appendType) {\n                console.log(_panel);\n                var copiedPanel = $.extend({}, _panel, { panelPath: \"\" }),\n                    addType = void 0;\n\n                var removePanelPath = _panel.panelPath;\n                var appendPanelIndex = U.right(_appendPath, \".\").replace(/\\D/g, \"\");\n\n                if (_appendType.length == 0) {\n                    return this;\n                }\n\n                if (_panel.panelPath === _appendPath) {\n                    var parentPath = _appendPath.substr(0, _appendPath.lastIndexOf(\".\"));\n                    var parentPane = getPanel(parentPath);\n                    if (parentPane.type != \"stack\") {\n                        return this;\n                    }\n                }\n\n                if (_appendType.length == 1) {\n                    // stack\n                    addType = _appendType[0] == \"last-child\" ? \"stack\" : \"stack-\" + _appendType[0];\n                    copiedPanel.active = false;\n                    copiedPanel.$item.removeClass(\"active\");\n                    controlPanel(copiedPanel, \"deactive\");\n                } else {\n                    switch (_appendType[0] + \"-\" + _appendType[1]) {\n                        case \"left-top\":\n                            addType = \"row-left\";\n                            break;\n                        case \"left-middle\":\n                            addType = \"row-left\";\n                            break;\n                        case \"left-bottom\":\n                            addType = \"row-left\";\n                            break;\n                        case \"center-top\":\n                            addType = \"column-top\";\n                            break;\n                        case \"center-middle\":\n                            addType = \"stack\";\n                            copiedPanel.active = false;\n                            copiedPanel.$item.removeClass(\"active\");\n                            appendPanelIndex = undefined;\n                            controlPanel(copiedPanel, \"deactive\");\n                            break;\n                        case \"center-bottom\":\n                            addType = \"column-bottom\";\n                            break;\n                        case \"right-top\":\n                            addType = \"row-right\";\n                            break;\n                        case \"right-middle\":\n                            addType = \"row-right\";\n                            break;\n                        case \"right-bottom\":\n                            addType = \"row-right\";\n                            break;\n                    }\n                }\n\n                if (_panel.panelPath === _appendPath) {\n                    // 부모레벨로 이동\n                    _appendPath = U.left(_appendPath, \".\");\n                }\n                // todo : deactive call\n\n                setPanel(removePanelPath, null);\n\n                console.log(_appendPath, addType, copiedPanel, appendPanelIndex);\n                this.addPanel(_appendPath, addType, copiedPanel, appendPanelIndex);\n\n                copiedPanel = null;\n                return this;\n            };\n\n            /**\n             * @method ax5docker.align\n             * @returns {ax5docker}\n             */\n            this.align = function () {\n                alignStackPane();\n                return this;\n            };\n\n            /**\n             * @method ax5docker.searchPanel\n             * @param _condition\n             * @returns {*}\n             * @example\n             * ```js\n             * var p = myDocker.searchPanel(function (panel) {\n             *  return (panel.id == \"A\");\n             * });\n             * ```\n             */\n            this.searchPanel = function (_condition) {\n                if (U.isFunction(_condition)) {\n\n                    var findPanel = function findPanel(_panels) {\n                        var i = 0,\n                            l = _panels.length,\n                            findResult = void 0;\n                        for (; i < l; i++) {\n                            if (_panels[i]) {\n                                if (_panels[i].type === \"panel\") {\n                                    if (_condition.call({\n                                        config: self.config,\n                                        panel: _panels[i]\n                                    }, _panels[i])) {\n                                        return _panels[i];\n                                    }\n                                } else {\n                                    if (findResult = findPanel(_panels[i].panels)) {\n                                        return findResult;\n                                    }\n                                }\n                            }\n                        }\n                    };\n\n                    return findPanel(this.panels);\n                } else if (U.isString(_condition)) {\n\n                    return getPanel(_condition);\n                }\n            };\n\n            /**\n             * @method ax5docker.activePanel\n             * @param {String} _panelPath\n             * @param {Function} callback\n             * @returns {ax5docker}\n             * @example\n             * ```js\n             * myDocker.activePanel(\"0.1\");\n             * myDocker.activePanel(\"0.0.1\");\n             * ```\n             */\n            this.activePanel = function (_panelPath, callback) {\n                var activePanelPath = \"\";\n                var pane = void 0;\n                var parent = void 0;\n\n                if (this.panels.length === 0 || !this.panels[0]) {\n                    // 액티브 대상 없음.\n                    return this;\n                } else {\n                    if (typeof _panelPath == \"undefined\") {\n                        activePanelPath = \"0\";\n                    } else {\n                        activePanelPath = _panelPath.replace(/[a-zA-Z\\[\\]]+/g, \"\").replace(/(\\d+)/g, function (a, b) {\n                            return \"panels[\" + a + \"]\";\n                        });\n                    }\n                    pane = getPanel(activePanelPath);\n                    parent = getPanelParent(pane);\n                }\n\n                changeActiveStackPanel(parent, pane.panelIndex);\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                UI.docker_instance = UI.docker_instance || [];\n                UI.docker_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n    }());\n\n    DOCKER = ax5.ui.docker;\n})();\n// ax5.ui.docker.tmpl\n(function () {\n\n    var DOCKER = ax5.ui.docker;\n\n    var stack_panel = function stack_panel(columnKeys, data) {\n        if (data.labelDirection === \"bottom\") {\n            return '<div data-ax5docker-pane=\"{{id}}\" data-ax5docker-label-direction=\"{{labelDirection}}\" data-ax5docker-path=\"{{panelPath}}\" style=\"flex-grow: {{#flexGrow}}{{.}}{{/flexGrow}}{{^flexGrow}}1{{/flexGrow}};\">\\n    <div data-ax5docker-pane-item-views=\"{{id}}\"></div>\\n    <ul data-ax5docker-pane-tabs=\"{{id}}\" data-ax5docker-id=\"{{id}}\" data-ax5docker-path=\"{{panelPath}}\"></ul>\\n    <div data-ax5docker-pane-tabs-more=\"{{id}}\">{{{icons.more}}}</div>\\n</div>';\n        } else {\n            return '<div data-ax5docker-pane=\"{{id}}\" data-ax5docker-label-direction=\"{{labelDirection}}\" data-ax5docker-path=\"{{panelPath}}\" style=\"flex-grow: {{#flexGrow}}{{.}}{{/flexGrow}}{{^flexGrow}}1{{/flexGrow}};\">\\n    <ul data-ax5docker-pane-tabs=\"{{id}}\" data-ax5docker-id=\"{{id}}\" data-ax5docker-path=\"{{panelPath}}\"></ul>\\n    <div data-ax5docker-pane-tabs-more=\"{{id}}\">{{{icons.more}}}</div>\\n    <div data-ax5docker-pane-item-views=\"{{id}}\"></div>\\n</div>';\n        }\n    };\n\n    var panel_label = function panel_label() {\n        return '<li data-ax5docker-pane-tab=\"{{pIndex}}\" data-ax5docker-id=\"{{id}}\" data-ax5docker-path=\"{{panelPath}}\" class=\"{{#hasLabelColor}}hasLabelColor{{/hasLabelColor}}\">\\n    <div class=\"label-icon\" style=\"{{#color}}background: {{color}};{{/color}}{{#borderColor}}border-color: {{borderColor}};{{/borderColor}}\"></div>\\n    <div class=\"title\">{{{name}}}</div>\\n    {{^disableClosePanel}}<div class=\"close-icon\">{{{icons.close}}}</div>{{/disableClosePanel}}\\n</li><li class=\"pane-tab-margin\"></li>';\n    };\n\n    DOCKER.tmpl = {\n        \"stack-panel\": stack_panel,\n        \"panel-label\": panel_label,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(DOCKER.tmpl[tmplName].call(this, columnKeys, data), data);\n        }\n    };\n})();\n// ax5.ui.palette\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var PALETTE = void 0;\n\n    UI.addClass({\n        className: \"palette\"\n    }, function () {\n\n        /**\n         * @class ax5palette\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * ```\n         */\n        return function () {\n            var _this4 = this;\n\n            var self = this,\n                cfg = void 0;\n\n            this.instanceId = ax5.getGuid();\n            this.target = null;\n            this.config = {\n                clickEventName: \"click\",\n                theme: 'default',\n                animateTime: 100,\n                colors: {\n                    preview: {\n                        width: 24,\n                        height: 24,\n                        cellWidth: 30\n                    },\n                    label: {\n                        width: 80\n                    },\n                    slider: {\n                        trackHeight: 8,\n                        amount: 32,\n                        handleWidth: 18,\n                        handleHeight: 18\n                    },\n                    list: [{ label: \"red\", value: \"#ff0000\" }, { label: \"orange\", value: \"#ff9802\" }, { label: \"yellow\", value: \"#ffff00\" }, { label: \"green\", value: \"#00ff36\" }, { label: \"blue\", value: \"#0000ff\" }, { label: \"purple\", value: \"#ba00ff\" },\n                    //{label: \"skyblue\", value: \"#84e4ff\"},\n                    //{label: \"pink\", value: \"#ff77c4\"},\n                    { label: \"black\", value: \"#000000\" }, { label: \"white\", value: \"#ffffff\" }]\n                },\n                controls: {\n                    height: 0\n                },\n                columnKeys: {}\n            };\n            this.xvar = {};\n            this.colors = [];\n\n            cfg = this.config;\n\n            var ENM = {\n                \"mousedown\": ax5.info.supportTouch ? \"touchstart\" : \"mousedown\",\n                \"mousemove\": ax5.info.supportTouch ? \"touchmove\" : \"mousemove\",\n                \"mouseup\": ax5.info.supportTouch ? \"touchend\" : \"mouseup\"\n            };\n\n            var onStateChanged = function onStateChanged(opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                } else if (_this4.onStateChanged) {\n                    _this4.onStateChanged.call(that, that);\n                }\n\n                that = null;\n            };\n\n            /**\n             * get mouse position\n             * @param e\n             * @returns {{clientX, clientY}}\n             */\n            var getMousePosition = function getMousePosition(e) {\n                var mouseObj = void 0,\n                    originalEvent = e.originalEvent ? e.originalEvent : e;\n                mouseObj = 'changedTouches' in originalEvent && originalEvent.changedTouches ? originalEvent.changedTouches[0] : originalEvent;\n                // clientX, Y 쓰면 스크롤에서 문제 발생\n                return {\n                    clientX: mouseObj.pageX,\n                    clientY: mouseObj.pageY\n                };\n            };\n\n            var bindHandle = function bindHandle(item) {\n                item.originalTrackWidth = item.$track.width();\n                item.trackWidth = item.originalTrackWidth - cfg.colors.slider.handleWidth / 5;\n                var handleLeft = amountToHandleLeft(item, item._amount);\n\n                // handleLeft 가 범위를 벗어나면?\n                if (handleLeft < 0 || handleLeft > item.trackWidth) {\n                    var amount = void 0;\n                    handleLeft = handleLeft < 0 ? 0 : handleLeft > item.trackWidth ? item.trackWidth : handleLeft;\n                    amount = handleLeftToAmount(item, handleLeft);\n                    updatePreviewColor(item, amountToColor(item, amount));\n                }\n\n                item.$handle.css({ left: handleLeft });\n                item.$item.off(ENM[\"mousedown\"]).on(ENM[\"mousedown\"], '[data-panel=\"color-handle\"]', function (e) {\n                    var mouseObj = getMousePosition(e);\n                    item._originalHandleClientX = mouseObj.clientX;\n                    item._originalHandleLeft = item.$handle.position().left;\n                    handleMoveEvent.on(item);\n                    U.stopEvent(e.originalEvent);\n                }).off(\"click\").on(\"click\", '[data-panel=\"color-label\"], [data-panel=\"color-preview\"]', function (e) {\n                    if (self.onClick) {\n                        self.onClick.call(item, '#' + item._selectedColor.toUpperCase(), e);\n                    }\n                }).on(\"click\", '[data-panel=\"color-track\"]', function (e) {\n                    if (e.target.getAttribute(\"data-panel\") == \"color-track\") {\n                        var mouseObj = getMousePosition(e),\n                            newHandleLeft = mouseObj.clientX - item.$track.offset().left,\n                            _amount2 = handleLeftToAmount(item, newHandleLeft);\n\n                        item.$handle.css({ left: newHandleLeft });\n                        updatePreviewColor(item, amountToColor(item, _amount2), e);\n\n                        mouseObj = null;\n                        newHandleLeft = null;\n                        _amount2 = null;\n                    }\n                });\n            };\n\n            var updatePreviewColor = function updatePreviewColor(item, color, event) {\n                item.$preview.css({ \"background-color\": '#' + color });\n                item.$label.html('#' + color.toUpperCase());\n                item._selectedColor = color;\n\n                if (event && self.onUpdateColor) {\n                    self.onUpdateColor.call(item, '#' + item._selectedColor.toUpperCase());\n                }\n            };\n\n            var amountToColor = function amountToColor(item, amount) {\n                var processor = {\n                    \"black\": function black(_color, _amount) {\n                        return _color.lighten(cfg.colors.slider.amount / 2).darken(_amount).getHexValue();\n                    },\n                    \"white\": function white(_color, _amount) {\n                        return _color.darken(cfg.colors.slider.amount / 2).darken(_amount).getHexValue();\n                    },\n                    \"normal\": function normal(_color, _amount) {\n                        return _color.darken(_amount).getHexValue();\n                    }\n                };\n\n                if (item._uniqColor in processor) {\n                    return processor[item._uniqColor](item._color, amount);\n                } else {\n                    return processor[\"normal\"](item._color, amount);\n                }\n            };\n\n            var colorToAmount = function colorToAmount(item, color) {\n                /// todo : 색상에 가까운 색 표현.\n                var processor = {\n                    \"black\": function black(_color, _diffColor) {\n                        var color1 = _color.lighten(cfg.colors.slider.amount / 2);\n                        return (color1.getHsl().l - _diffColor.getHsl().l) * 100;\n                    },\n                    \"white\": function white(_color, _diffColor) {\n                        var color1 = _color.darken(cfg.colors.slider.amount / 2);\n                        return (color1.getHsl().l - _diffColor.getHsl().l) * 100;\n                    },\n                    \"normal\": function normal(_color, _diffColor) {\n                        return (_color.getHsl().l - _diffColor.getHsl().l) * 100;\n                    }\n                };\n\n                if (item._uniqColor in processor) {\n                    return processor[item._uniqColor](item._color, color);\n                } else {\n                    return processor[\"normal\"](item._color, color);\n                }\n            };\n\n            var handleLeftToAmount = function handleLeftToAmount(item, handleLeft) {\n                return cfg.colors.slider.amount * (handleLeft - item.trackWidth / 2) / (item.originalTrackWidth / 2);\n            };\n\n            var amountToHandleLeft = function amountToHandleLeft(item, amount) {\n                return amount * (item.originalTrackWidth / 2) / cfg.colors.slider.amount + item.trackWidth / 2;\n            };\n\n            var handleMoveEvent = {\n                \"on\": function on(item) {\n                    jQuery(document.body).on(ENM[\"mousemove\"] + \".ax5palette-\" + _this4.instanceId, function (e) {\n                        var mouseObj = getMousePosition(e),\n                            da = mouseObj.clientX - item._originalHandleClientX,\n                            newHandleLeft = item._originalHandleLeft + da,\n                            amount = void 0;\n\n                        newHandleLeft = newHandleLeft < 0 ? 0 : newHandleLeft > item.trackWidth ? item.trackWidth : newHandleLeft;\n                        item.$handle.css({ left: newHandleLeft });\n                        amount = handleLeftToAmount(item, newHandleLeft);\n\n                        updatePreviewColor(item, amountToColor(item, amount), e);\n\n                        mouseObj = null;\n                        da = null;\n                    }).on(ENM[\"mouseup\"] + \".ax5palette-\" + _this4.instanceId, function (e) {\n                        handleMoveEvent.off();\n                        U.stopEvent(e);\n                    }).on(\"mouseleave.ax5palette-\" + _this4.instanceId, function (e) {\n                        handleMoveEvent.off();\n                        U.stopEvent(e);\n                    });\n\n                    jQuery(document.body).attr('unselectable', 'on').css('user-select', 'none').on('selectstart', false);\n                },\n                \"off\": function off() {\n                    self.xvar.resizerLived = false;\n\n                    jQuery(document.body).off(ENM[\"mousemove\"] + \".ax5palette-\" + _this4.instanceId).off(ENM[\"mouseup\"] + \".ax5palette-\" + _this4.instanceId).off(\"mouseleave.ax5palette-\" + _this4.instanceId);\n\n                    jQuery(document.body).removeAttr('unselectable').css('user-select', 'auto').off('selectstart');\n                }\n            };\n\n            var repaint = function repaint(selectedColor) {\n                var box = {\n                    width: _this4.$target.innerWidth(),\n                    height: _this4.$target.innerHeight()\n                };\n\n                // 패널 프레임 초기화\n                _this4.$target.html(PALETTE.tmpl.get(\"frame\", {}, cfg.columnKeys));\n\n                // 각 패널들을 캐싱~\n                _this4.$ = {\n                    \"root\": _this4.$target.find('[data-ax5palette-container=\"root\"]'),\n                    \"colors\": _this4.$target.find('[data-ax5palette-container=\"colors\"]'),\n                    \"controls\": _this4.$target.find('[data-ax5palette-container=\"controls\"]')\n                };\n\n                // todo : controls 나중에 고민하여 구현\n                // this.$[\"controls\"].css({height: cfg.controls.height});\n\n                /// colors.list 색상 범위 결정 / 초기화\n                cfg.colors.list.forEach(function (c) {\n                    c._color = U.color(c.value);\n                    c._selectedColor = c._color.getHexValue();\n                    if (c._color.r == 0 && c._color.g == 0 && c._color.b == 0) {\n                        c._amount = cfg.colors.slider.amount;\n                        c._uniqColor = \"black\";\n                        c._color0value = \"#\" + c._color.lighten(cfg.colors.slider.amount).getHexValue();\n                        c._color1value = \"#\" + c._color.lighten(cfg.colors.slider.amount / 2).getHexValue();\n                        c._color2value = \"#\" + c._color.getHexValue();\n                    } else if (c._color.r == 255 && c._color.g == 255 && c._color.b == 255) {\n                        c._amount = -cfg.colors.slider.amount;\n                        c._uniqColor = \"white\";\n                        c._color0value = \"#\" + c._color.getHexValue();\n                        c._color1value = \"#\" + c._color.darken(cfg.colors.slider.amount / 2).getHexValue();\n                        c._color2value = \"#\" + c._color.darken(cfg.colors.slider.amount).getHexValue();\n                    } else {\n                        c._amount = 0;\n                        c._color0value = \"#\" + c._color.lighten(cfg.colors.slider.amount).getHexValue();\n                        c._color1value = \"#\" + c._color.getHexValue();\n                        c._color2value = \"#\" + c._color.darken(cfg.colors.slider.amount).getHexValue();\n                    }\n                });\n\n                // 색생조절 핸들의 위치 조정cfg.colors.list[minDiffColorIndex]\n                cfg.colors.slider.handleLeft = -cfg.colors.slider.handleWidth / 2;\n                cfg.colors.slider.handleTop = -cfg.colors.slider.handleHeight / 2;\n\n                // 팔렛트 컬러 패널 초기화\n                _this4.$[\"colors\"].html(PALETTE.tmpl.get(\"colors\", cfg, cfg.columnKeys));\n\n                _this4.$[\"colors\"].find('[data-ax5palette-color-index]').each(function () {\n                    var idx = this.getAttribute(\"data-ax5palette-color-index\");\n                    var color = cfg.colors.list[idx];\n                    var item = jQuery.extend({}, color);\n                    item._index = idx;\n                    item.$item = jQuery(this);\n                    item.$preview = item.$item.find('[data-panel=\"color\"]');\n                    item.$label = item.$item.find('[data-panel=\"color-label\"]');\n                    item.$track = item.$item.find('[data-panel=\"color-track\"]');\n                    item.$handle = item.$item.find('[data-panel=\"color-handle\"]');\n                    bindHandle(item);\n                    /////\n                    self.colors.push(item);\n                });\n\n                if (selectedColor) {\n                    _this4.setSelectedColor(selectedColor);\n                }\n            };\n\n            /**\n             * Preferences of palette UI\n             * @method ax5palette.setConfig\n             * @param {Object} config\n             * @param {Element} config.target\n             * @param {String} [config.selectedColor]\n             * @param {Object} [config.colors]\n             * @param {Object} [config.colors.preview]\n             * @param {Number} [config.colors.preview.width=24]\n             * @param {Number} [config.colors.preview.height=24]\n             * @param {Number} [config.colors.preview.cellWidth=30]\n             * @param {Object} [config.colors.label]\n             * @param {Number} [config.colors.label.width=80]\n             * @param {Object} [config.colors.slider]\n             * @param {Number} [config.colors.slider.trackHeight=8]\n             * @param {Number} [config.colors.slider.amount=32]\n             * @param {Number} [config.colors.slider.handleWidth=18]\n             * @param {Number} [config.colors.slider.handleHeight=18]\n             * @param {Object[]} [config.colors.list=[red,orange,yellow,green,blue,purple,black,white]]\n             * @param {String} config.colors.list[].label\n             * @param {String} config.colors.list[].value\n             * @param {Object} [config.controls]\n             * @param {Number} [config.controls.height=0]\n             * @returns {ax5palette}\n             * @example\n             * ```js\n             * myPalette = new ax5.ui.palette({\n             *  target: $('[data-ax5palette=\"01\"]'),\n             *  onClick: function (hexColor) {\n             *      alert(hexColor);\n             *  }\n             * });\n             *\n             * myPalette = new ax5.ui.palette({\n             *  target: $('[data-ax5palette=\"01\"]'),\n             *  colors: {\n             *      list: [\n             *          {label: \"red\", value: \"#ff0000\"},\n             *          {label: \"orange\", value: \"#ff9802\"},\n             *          {label: \"yellow\", value: \"#ffff00\"},\n             *          {label: \"skyblue\", value: \"#84e4ff\"},\n             *          {label: \"white\", value: \"#ffffff\"}\n             *      ]\n             *  }\n             *  onClick: function (hexColor) {\n             *  }\n             * });\n             * ```\n             */\n            this.init = function () {\n                // after setConfig();\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.onUpdateColor = cfg.onUpdateColor;\n\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5palette\", \"401\", \"setConfig\"));\n                }\n                this.$target = jQuery(cfg.target);\n\n                setTimeout(function () {\n                    repaint((cfg.selectedColor || \"\").trim()); // 팔렛트 그리기.\n                });\n            };\n\n            /**\n             * @method ax5palette.repaint\n             * @returns {ax5palette}\n             */\n            this.repaint = function () {\n                repaint();\n                return this;\n            };\n\n            /**\n             * @method ax5palette.setSelectedColor\n             * @param selectedColor\n             * @returns {ax5palette}\n             */\n            this.setSelectedColor = function (selectedColor) {\n\n                var sColor = U.color(selectedColor.trim());\n                // 지정된 색이 가장 가까운 파렛 검색\n                var minDiffColor = 255 * 3,\n                    minDiffColorIndex = -1;\n\n                self.colors.forEach(function (c, cidx) {\n                    var c1hsl = c._color.getHsl(),\n                        c2hsl = sColor.getHsl();\n                    var diffColor = Math.abs(c1hsl.h - c2hsl.h) + Math.abs(c1hsl.s - c2hsl.s) + Math.abs(c1hsl.l - c2hsl.l);\n                    if (diffColor < minDiffColor) {\n                        minDiffColor = diffColor;\n                        minDiffColorIndex = cidx;\n                    }\n                });\n\n                if (minDiffColorIndex > -1) {\n                    var amount = void 0,\n                        handleLeft = void 0,\n                        item = self.colors[minDiffColorIndex];\n\n                    item._amount = colorToAmount(item, sColor);\n                    handleLeft = amountToHandleLeft(item, item._amount);\n                    //handleLeft = handleLeft < 0 ? 0 : handleLeft > item.trackWidth ? item.trackWidth : handleLeft;\n                    item.$handle.css({ left: handleLeft });\n\n                    amount = handleLeftToAmount(item, handleLeft);\n                    updatePreviewColor(item, amountToColor(item, amount));\n                }\n\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n\n                UI.palette_instance = UI.palette_instance || [];\n                UI.palette_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n    }());\n\n    PALETTE = ax5.ui.palette;\n})();\n// ax5.ui.calendar.tmpl\n(function () {\n\n    var PALETTE = ax5.ui.palette;\n\n    var tmpl_frame = function tmpl_frame(columnKeys) {\n        return '\\n<div data-ax5palette-container=\"root\">\\n    <div data-ax5palette-container=\"colors\"></div>\\n    <div data-ax5palette-container=\"controls\"></div>\\n</div>\\n';\n    };\n\n    var tmpl_colors = function tmpl_colors(columnKeys) {\n        return '\\n{{#colors}}\\n{{#list}}\\n<div data-ax5palette-color=\"{{label}}\" data-ax5palette-color-index=\"{{@i}}\">\\n    <div data-panel=\"color-preview\" style=\"padding:{{preview.cellPadding}}px;width:{{preview.cellWidth}}px;\">\\n        <div data-panel=\"color-box\" style=\"width:{{preview.width}}px;height:{{preview.height}}px;\"><div data-panel=\"color\" style=\"background-color:{{value}};\"></div></div>\\n    </div>\\n    <div data-panel=\"color-label\" style=\"width:{{label.width}}px;\">{{label}}</div>\\n    <div data-panel=\"color-slider\">\\n        <div data-panel=\"color-track\" style=\"height:{{slider.trackHeight}}px;background: linear-gradient(90deg, {{_color0value}}, {{_color1value}}, {{_color2value}}); \">\\n            <div data-panel=\"color-handle\">\\n                <div data-panel=\"color-handle-after\" style=\"width:{{slider.handleWidth}}px;height:{{slider.handleWidth}}px;left:{{slider.handleLeft}}px;top:{{slider.handleLeft}}px;\"></div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n{{/list}}\\n{{/colors}}\\n';\n    };\n\n    PALETTE.tmpl = {\n        \"frame\": tmpl_frame,\n        \"colors\": tmpl_colors,\n\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(PALETTE.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","(function () {\n    'use strict';\n\n    // root of function\n    let root = this, win = this,\n        doc = (win) ? win.document : null, docElem = (win) ? win.document.documentElement : null,\n        reIsJson = /^([\"'](\\\\.|[^\"\\\\\\n\\r])*?[\"']|[,:{}\\[\\]0-9.\\-+Eaeflnr-u \\n\\r\\t])+?$/,\n        reMs = /^-ms-/,\n        reSnakeCase = /[\\-_]([\\da-z])/gi,\n        reCamelCase = /([A-Z])/g,\n        reDot = /\\./,\n        reInt = /[-|+]?[\\D]/gi,\n        reNotNum = /\\D/gi,\n        reMoneySplit = new RegExp('([0-9])([0-9][0-9][0-9][,.])'),\n        reAmp = /&/g,\n        reEq = /=/,\n        reClassNameSplit = /[ ]+/g,\n\n        /** @namespace {Object} ax5 */\n        ax5 = {}, info, U, dom;\n\n    /**\n     * guid\n     * @member {Number} ax5.guid\n     */\n    ax5.guid = 1;\n    /**\n     * ax5.guid를 구하고 증가시킵니다.\n     * @method ax5.getGuid\n     * @returns {Number} guid\n     */\n    ax5.getGuid = () => {\n        return ax5.guid++\n    };\n\n    /**\n     * 상수모음\n     * @namespace ax5.info\n     */\n    ax5.info = info = (function () {\n        /**\n         * ax5 version\n         * @member {String} ax5.info.version\n         */\n        const version = \"1.4.129\";\n\n        /**\n         * ax5 library path\n         * @member {String} ax5.info.baseUrl\n         */\n        const baseUrl = \"\";\n\n        /**\n         * ax5 에러 출력메세지 사용자 재 정의\n         * @member {Object} ax5.info.onerror\n         * @examples\n         * ```\n         * ax5.info.onerror = function(){\n\t\t *  console.log(arguments);\n\t\t * }\n         * ```\n         */\n        let onerror = () => {\n            console.error(U.toArray(arguments).join(\":\"));\n        };\n\n        /**\n         * event keyCodes\n         * @member {Object} ax5.info.eventKeys\n         * @example\n         * ```\n         * {\n\t\t * \tBACKSPACE: 8, TAB: 9,\n\t\t * \tRETURN: 13, ESC: 27, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, DELETE: 46,\n\t\t * \tHOME: 36, END: 35, PAGEUP: 33, PAGEDOWN: 34, INSERT: 45, SPACE: 32\n\t\t * }\n         * ```\n         */\n        const eventKeys = {\n            BACKSPACE: 8, TAB: 9,\n            RETURN: 13, ESC: 27, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, DELETE: 46,\n            HOME: 36, END: 35, PAGEUP: 33, PAGEDOWN: 34, INSERT: 45, SPACE: 32\n        };\n\n        /**\n         * week names\n         * @member {Object[]} weekNames\n         * @member {string} weekNames[].label\n         *\n         * @example\n         * ```\n         * [\n         *  {label: \"SUN\"},{label: \"MON\"},{label: \"TUE\"},{label: \"WED\"},{label: \"THU\"},{label: \"FRI\"},{label: \"SAT\"}\n         * ]\n         * console.log( weekNames[0] );\n         * console.log( ax5.info.weekNames[(new Date()).getDay()].label )\n         * ```\n         */\n        let weekNames = [\n            {label: \"SUN\"},\n            {label: \"MON\"},\n            {label: \"TUE\"},\n            {label: \"WED\"},\n            {label: \"THU\"},\n            {label: \"FRI\"},\n            {label: \"SAT\"}\n        ];\n\n        /**\n         * 사용자 브라우저 식별용 오브젝트\n         * @member {Object} ax5.info.browser\n         * @example\n         * ```\n         * console.log( ax5.info.browser );\n         * //Object {name: \"chrome\", version: \"39.0.2171.71\", mobile: false}\n         * ```\n         */\n        let browser = (function (ua, mobile, browserName, match, browser, browserVersion) {\n            if (!win || !win.navigator) return {};\n\n            ua = navigator.userAgent.toLowerCase(), mobile = (ua.search(/mobile/g) != -1), browserName, match, browser, browserVersion;\n\n            if (ua.search(/iphone/g) != -1) {\n                return {name: \"iphone\", version: 0, mobile: true}\n            }\n            else if (ua.search(/ipad/g) != -1) {\n                return {name: \"ipad\", version: 0, mobile: true}\n            }\n            else if (ua.search(/android/g) != -1) {\n                match = /(android)[ \\/]([\\w.]+)/.exec(ua) || [];\n                browserVersion = (match[2] || \"0\");\n                return {name: \"android\", version: browserVersion, mobile: mobile}\n            }\n            else {\n                browserName = \"\";\n                match = /(opr)[ \\/]([\\w.]+)/.exec(ua) || /(chrome)[ \\/]([\\w.]+)/.exec(ua) || /(webkit)[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) || [];\n                browser = (match[1] || \"\");\n                browserVersion = (match[2] || \"0\");\n\n                if (browser == \"msie\") browser = \"ie\";\n                return {\n                    name: browser,\n                    version: browserVersion,\n                    mobile: mobile\n                }\n            }\n            ua = null, mobile = null, browserName = null, match = null, browser = null, browserVersion = null;\n        })();\n\n        /**\n         * 브라우저 여부\n         * @member {Boolean} ax5.info.isBrowser\n         */\n        let isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && win.document);\n\n        /**\n         * 브라우저에 따른 마우스 휠 이벤트이름\n         * @member {Object} ax5.info.wheelEnm\n         */\n        let wheelEnm = (win && (/Firefox/i.test(navigator.userAgent)) ? \"DOMMouseScroll\" : \"mousewheel\");\n\n        /**\n         * 첫번째 자리수 동사 - (필요한것이 없을때 : 4, 실행오류 : 5)\n         * 두번째 자리수 목적어 - 문자열 0, 숫자 1, 배열 2, 오브젝트 3, 함수 4, DOM 5, 파일 6, 기타 7\n         * 세번째 자리수 옵션\n         * @member {Object} ax5.info.errorMsg\n         */\n        let errorMsg = {};\n\n        /**\n         * 현재 페이지의 Url 정보를 리턴합니다.\n         * @method ax5.info.urlUtil\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log( ax5.util.toJson( ax5.info.urlUtil() ) );\n         * {\n\t\t *\t\"baseUrl\": \"http://ax5:2018\",\n\t\t *\t\"href\": \"http://ax5:2018/samples/index.html?a=1&b=1#abc\",\n\t\t *\t\"param\": \"a=1&b=1\",\n\t\t *\t\"referrer\": \"\",\n\t\t *\t\"pathname\": \"/samples/index.html\",\n\t\t *\t\"hostname\": \"ax5\",\n\t\t *\t\"port\": \"2018\",\n\t\t *\t\"url\": \"http://ax5:2018/samples/index.html\",\n\t\t *\t\"hashdata\": \"abc\"\n\t\t * }\n         * ```\n         */\n        function urlUtil(url, urls) {\n            url = {\n                href: win.location.href,\n                param: win.location.search,\n                referrer: doc.referrer,\n                pathname: win.location.pathname,\n                hostname: win.location.hostname,\n                port: win.location.port\n            }, urls = url.href.split(/[\\?#]/);\n            url.param = url.param.replace(\"?\", \"\");\n            url.url = urls[0];\n            if (url.href.search(\"#\") > -1) {\n                url.hashdata = U.last(urls);\n            }\n            urls = null;\n            url.baseUrl = U.left(url.href, \"?\").replace(url.pathname, \"\");\n            return url;\n        }\n\n        /**\n         * ax5-error-msg.js 에 정의된 ax5 error를 반환합니다.\n         * @method ax5.info.getError\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log( ax5.info.getError(\"single-uploader\", \"460\", \"upload\") );\n         *\n         * if(!this.selectedFile){\n\t\t *      if (cfg.onEvent) {\n\t\t *      \tvar that = {\n\t\t *      \t\taction: \"error\",\n\t\t *      \t\terror: ax5.info.getError(\"single-uploader\", \"460\", \"upload\")\n\t\t *      \t};\n\t\t *      \tcfg.onEvent.call(that, that);\n\t\t *      }\n\t\t *      return this;\n\t\t * }\n         * ```\n         */\n        function getError(className, errorCode, methodName) {\n            if (info.errorMsg && info.errorMsg[className]) {\n                return {\n                    className: className,\n                    errorCode: errorCode,\n                    methodName: methodName,\n                    msg: info.errorMsg[className][errorCode]\n                };\n            }\n            else {\n                return {className: className, errorCode: errorCode, methodName: methodName};\n            }\n        }\n\n        /**\n         * 브라우져의 터치 기능 유무를 확인합니다.\n         * @method ax5.info.supportTouch\n         * @returns {boolean}\n         * @example\n         * ```\n         * var chkFlag = ax5.info.supportTouch;\n         */\n        let supportTouch = (win) ? (('ontouchstart' in win) || (navigator.maxTouchPoints > 0) || (navigator.msMaxTouchPoints > 0)) : false;\n\n        let supportFileApi = (win) ? ( win.FileReader && win.File && win.FileList && win.Blob ) : false;\n\n        return {\n            errorMsg: errorMsg,\n            version: version,\n            baseUrl: baseUrl,\n            onerror: onerror,\n            eventKeys: eventKeys,\n            weekNames: weekNames,\n            browser: browser,\n            isBrowser: isBrowser,\n            supportTouch: supportTouch,\n            supportFileApi: supportFileApi,\n            wheelEnm: wheelEnm,\n            urlUtil: urlUtil,\n            getError: getError\n        };\n    })();\n\n    /**\n     * Refer to this by {@link ax5}.\n     * @namespace ax5.util\n     */\n    ax5['util'] = U = (function () {\n        const _toString = Object.prototype.toString;\n\n        /**\n         * Object나 Array의 아이템으로 사용자 함수를 호출합니다.\n         * @method ax5.util.each\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @example\n         * ```js\n         * var axf = ax5.util;\n         * axf.each([0,1,2], function(){\n\t\t * \t// with this\n\t\t * });\n         * axf.each({a:1, b:2}, function(){\n\t\t * \t// with this\n\t\t * });\n         * ```\n         */\n        function each(O, _fn) {\n            if (isNothing(O)) return [];\n            let key, i = 0, l = O.length,\n                isObj = l === undefined || typeof O === \"function\";\n            if (isObj) {\n                for (key in O) {\n                    if (typeof O[key] != \"undefined\")\n                        if (_fn.call(O[key], key, O[key]) === false) break;\n                }\n            }\n            else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\")\n                        if (_fn.call(O[i], i, O[i++]) === false) break;\n                }\n            }\n            return O;\n        }\n\n        // In addition to using the http://underscorejs.org : map, reduce, reduceRight, find\n        /**\n         * 원본 아이템들을 이용하여 사용자 함수의 리턴값으로 이루어진 새로운 배열을 만듭니다.\n         * @method ax5.util.map\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @returns {Array}\n         * @example\n         * ```js\n         * var myArray = [0,1,2,3,4];\n         * var myObject = {a:1, b:\"2\", c:{axj:\"what\", arrs:[0,2,\"3\"]},\n\t\t *    fn: function(abcdd){\n\t\t *        return abcdd;\n\t\t *    }\n\t\t * };\n         *\n         * var _arr = ax5.util.map( myArray,  function(index, I){\n\t\t *    return index+1;\n\t\t * });\n         * console.log(_arr);\n         * // [1, 2, 3, 4, 5]\n         *\n         * var _arr = ax5.util.map( myObject,  function(k, v){\n\t\t *    return v * 2;\n\t\t * });\n         * console.log(_arr);\n         * // [2, 4, NaN, NaN]\n         * ```\n         */\n        function map(O, _fn) {\n            if (isNothing(O)) return [];\n            let key, i = 0, l = O.length, results = [], fnResult;\n            if (isObject(O)) {\n                for (key in O) {\n                    if (typeof O[key] != \"undefined\") {\n                        fnResult = undefined;\n                        if ((fnResult = _fn.call(O[key], key, O[key])) === false) break;\n                        else results.push(fnResult);\n                    }\n                }\n            }\n            else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\") {\n                        fnResult = undefined;\n                        if ((fnResult = _fn.call(O[i], i, O[i++])) === false) break;\n                        else results.push(fnResult);\n                    }\n                }\n            }\n            return results;\n        }\n\n        /**\n         * 원본 아이템들을 이용하여 사용자 함수의 리턴값이 참인 아이템의 위치나 키값을 반환합니다.\n         * @method ax5.util.search\n         * @param {Object|Array} O\n         * @param {Function|String|Number} _fn - 함수 또는 값\n         * @returns {Number|String}\n         * @example\n         * ```js\n         * var myArray = [0,1,2,3,4,5,6];\n         * var myObject = {a:\"123\",\"b\":\"123\",c:123};\n         *\n         * ax5.util.search(myArray,  function(){\n\t\t *    return this > 3;\n\t\t * });\n         * // 4\n         * ax5.util.search(myObject,  function(k, v){\n\t\t *    return v === 123;\n\t\t * });\n         * // \"c\"\n         * ax5.util.search([1,2,3,4], 3);\n         * // 2\n         * ax5.util.search([1,2], 4);\n         * // -1\n         * ax5.util.search([\"name\",\"value\"], \"value\");\n         * // 1\n         * ax5.util.search([\"name\",\"value\"], \"values\");\n         * // -1\n         * ax5.util.search({k1:\"name\",k2:\"value\"}, \"value2\");\n         * // -1\n         * ax5.util.search({k1:\"name\",k2:\"value\"}, \"value\");\n         * // \"k2\"\n         * ```\n         */\n        function search(O, _fn) {\n            if (isNothing(O)) return -1;\n            if (isObject(O)) {\n                for (let key in O) {\n                    if (typeof O[key] != \"undefined\" && isFunction(_fn) && _fn.call(O[key], key, O[key])) {\n                        return key;\n                        break;\n                    }\n                    else if (O[key] == _fn) {\n                        return key;\n                        break;\n                    }\n                }\n            }\n            else {\n                for (let i = 0, l = O.length; i < l; i++) {\n                    if (typeof O[i] != \"undefined\" && isFunction(_fn) && _fn.call(O[i], i, O[i])) {\n                        return i;\n                        break;\n                    }\n                    else if (O[i] == _fn) {\n                        return i;\n                        break;\n                    }\n                }\n            }\n            return -1;\n        }\n\n        /**\n         * @method ax5.util.sum\n         * @param {Array|Object} O\n         * @param {Number} [defaultValue]\n         * @param {Function} _fn\n         * @returns {Number}\n         * @example\n         * ```js\n         * var arr = [\n         *  {name: \"122\", value: 9},\n         *  {name: \"122\", value: 10},\n         *  {name: \"123\", value: 11}\n         * ];\n         *\n         * var rs = ax5.util.sum(arr, function () {\n         *  if(this.name == \"122\") {\n         *      return this.value;\n         *  }\n         * });\n         * console.log(rs); // 19\n         *\n         * console.log(ax5.util.sum(arr, 10, function () {\n         *   return this.value;\n         * }));\n         * // 40\n         * ```\n         */\n        function sum(O, defaultValue, _fn) {\n            let i, l, tokenValue;\n            if (isFunction(defaultValue) && typeof _fn === \"undefined\") {\n                _fn = defaultValue;\n                defaultValue = 0;\n            }\n            if (typeof defaultValue === \"undefined\") defaultValue = 0;\n\n            if (isArray(O)) {\n                i = 0;\n                l = O.length;\n                for (; i < l; i++) {\n                    if (typeof O[i] !== \"undefined\") {\n                        if (( tokenValue = _fn.call(O[i], O[i]) ) === false) break;\n                        else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue;\n            }\n            else if (isObject(O)) {\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (( tokenValue = _fn.call(O[i], O[i]) ) === false) break;\n                        else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue;\n            }\n            else {\n                console.error(\"argument error : ax5.util.sum - use Array or Object\");\n                return defaultValue;\n            }\n        }\n\n        /**\n         * @method ax5.util.avg\n         * @param {Array|Object} O\n         * @param {Number} [defaultValue]\n         * @param {Function} _fn\n         * @returns {Number}\n         * @example\n         * ```js\n         * var arr = [\n         *  {name: \"122\", value: 9},\n         *  {name: \"122\", value: 10},\n         *  {name: \"123\", value: 11}\n         * ];\n         *\n         * var rs = ax5.util.avg(arr, function () {\n         *      return this.value;\n         * });\n         *\n         * console.log(rs); // 10\n         * ```\n         */\n        function avg(O, defaultValue, _fn) {\n            let i, l, tokenValue;\n            if (isFunction(defaultValue) && typeof _fn === \"undefined\") {\n                _fn = defaultValue;\n                defaultValue = 0;\n            }\n            if (typeof defaultValue === \"undefined\") defaultValue = 0;\n\n            if (isArray(O)) {\n                i = 0;\n                l = O.length;\n                for (; i < l; i++) {\n                    if (typeof O[i] !== \"undefined\") {\n                        if (( tokenValue = _fn.call(O[i], O[i]) ) === false) break;\n                        else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue;\n                    }\n                }\n                return defaultValue / l;\n            }\n            else if (isObject(O)) {\n                l = 0;\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (( tokenValue = _fn.call(O[i], O[i]) ) === false) break;\n                        else if (typeof tokenValue !== \"undefined\") defaultValue += tokenValue; ++l;\n                    }\n                }\n                return defaultValue / l;\n            }\n            else {\n                console.error(\"argument error : ax5.util.sum - use Array or Object\");\n                return defaultValue;\n            }\n        }\n\n        /**\n         * 배열의 왼쪽에서 오른쪽으로 연산을 진행하는데 수행한 결과가 왼쪽 값으로 반영되어 최종 왼쪽 값을 반환합니다.\n         * @method ax5.util.reduce\n         * @param {Array|Object} O\n         * @param {Function} _fn\n         * @returns {Alltypes}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.reduce( aarray, function(p, n){\n\t\t *   return p * n;\n\t\t * });\n         * console.log(result, aarray);\n         * // 120 [5, 4, 3, 2, 1]\n         *\n         * ax5.util.reduce({a:1, b:2}, function(p, n){\n\t\t *    return parseInt(p|0) + parseInt(n);\n\t\t * });\n         * // 3\n         * ```\n         */\n        function reduce(O, _fn) {\n            var i, l, tokenItem;\n            if (isArray(O)) {\n                i = 0, l = O.length, tokenItem = O[i];\n                for (; i < l - 1;) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (( tokenItem = _fn.call(root, tokenItem, O[++i]) ) === false) break;\n                    }\n                }\n                return tokenItem;\n            }\n            else if (isObject(O)) {\n                for (i in O) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (( tokenItem = _fn.call(root, tokenItem, O[i]) ) === false) break;\n                    }\n                }\n                return tokenItem;\n            }\n            else {\n                console.error(\"argument error : ax5.util.reduce - use Array or Object\");\n                return null;\n            }\n        }\n\n        /**\n         * 배열의 오른쪽에서 왼쪽으로 연산을 진행하는데 수행한 결과가 오른쪽 값으로 반영되어 최종 오른쪽 값을 반환합니다.\n         * @method ax5.util.reduceRight\n         * @param {Array} O\n         * @param {Function} _fn\n         * @returns {Alltypes}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.reduceRight( aarray, function(p, n){\n\t\t *    console.log( n );\n\t\t *    return p * n;\n\t\t * });\n         * console.log(result, aarray);\n         * 120 [5, 4, 3, 2, 1]\n         * ```\n         */\n        function reduceRight(O, _fn) {\n            var i = O.length - 1, tokenItem = O[i];\n            for (; i > 0;) {\n                if (typeof O[i] != \"undefined\") {\n                    if (( tokenItem = _fn.call(root, tokenItem, O[--i]) ) === false) break;\n                }\n            }\n            return tokenItem;\n        }\n\n        /**\n         * 배열또는 오브젝트의 각 아이템을 인자로 하는 사용자 함수의 결과가 참인 아이템들의 배열을 반환합니다.\n         * @method ax5.util.filter\n         * @param {Object|Array} O\n         * @param {Function} _fn\n         * @returns {Array}\n         * @example\n         * ```js\n         * var aarray = [5,4,3,2,1];\n         * result = ax5.util.filter( aarray, function(){\n\t\t *    return this % 2;\n\t\t * });\n         * console.log(result);\n         * // [5, 3, 1]\n         *\n         * var filObject = {a:1, s:\"string\", oa:{pickup:true, name:\"AXISJ\"}, os:{pickup:true, name:\"AX5\"}};\n         * result = ax5.util.filter( filObject, function(){\n\t\t * \treturn this.pickup;\n\t\t * });\n         * console.log( ax5.util.toJson(result) );\n         * // [{\"pickup\": , \"name\": \"AXISJ\"}, {\"pickup\": , \"name\": \"AX5\"}]\n         * ```\n         */\n        function filter(O, _fn) {\n            if (isNothing(O)) return [];\n            var k, i = 0, l = O.length, results = [], fnResult;\n            if (isObject(O)) {\n                for (k in O) {\n                    if (typeof O[k] != \"undefined\") {\n                        if (fnResult = _fn.call(O[k], k, O[k])) results.push(O[k]);\n                    }\n                }\n            }\n            else {\n                for (; i < l;) {\n                    if (typeof O[i] != \"undefined\") {\n                        if (fnResult = _fn.call(O[i], i, O[i])) results.push(O[i]);\n                        i++;\n                    }\n                }\n            }\n            return results;\n        }\n\n        /**\n         * Object를 JSONString 으로 반환합니다.\n         * @method ax5.util.toJson\n         * @param {Object|Array} O\n         * @returns {String} JSON\n         * @example\n         * ```js\n         * var ax = ax5.util;\n         * var myObject = {\n\t\t *    a:1, b:\"2\", c:{axj:\"what\", arrs:[0,2,\"3\"]},\n\t\t *    fn: function(abcdd){\n\t\t *        return abcdd;\n\t\t *    }\n\t\t * };\n         * console.log( ax.toJson(myObject) );\n         * ```\n         */\n        function toJson(O) {\n            var jsonString = \"\";\n            if (ax5.util.isArray(O)) {\n                var i = 0, l = O.length;\n                jsonString += \"[\";\n                for (; i < l; i++) {\n                    if (i > 0) jsonString += \",\";\n                    jsonString += toJson(O[i]);\n                }\n                jsonString += \"]\";\n            }\n            else if (ax5.util.isObject(O)) {\n                jsonString += \"{\";\n                var jsonObjectBody = [];\n                each(O, function (key, value) {\n                    jsonObjectBody.push('\"' + key + '\": ' + toJson(value));\n                });\n                jsonString += jsonObjectBody.join(\", \");\n                jsonString += \"}\";\n            }\n            else if (ax5.util.isString(O)) {\n                jsonString = '\"' + O + '\"';\n            }\n            else if (ax5.util.isNumber(O)) {\n                jsonString = O;\n            }\n            else if (ax5.util.isUndefined(O)) {\n                jsonString = \"undefined\";\n            }\n            else if (ax5.util.isFunction(O)) {\n                jsonString = '\"{Function}\"';\n            }\n            else {\n                jsonString = O;\n            }\n            return jsonString;\n        }\n\n        /**\n         * 관용의 JSON Parser\n         * @method ax5.util.parseJson\n         * @param {String} JSONString\n         * @param {Boolean} [force] - 강제 적용 여부 (json 문자열 검사를 무시하고 오브젝트 변환을 시도합니다.)\n         * @returns {Object}\n         * @example\n         * ```\n         * console.log(ax5.util.parseJson('{\"a\":1}'));\n         * // Object {a: 1}\n         * console.log(ax5.util.parseJson(\"{'a':1, 'b':'b'}\"));\n         * // Object {a: 1, b: \"b\"}\n         * console.log(ax5.util.parseJson(\"{'a':1, 'b':function(){return 1;}}\", true));\n         * // Object {a: 1, b: function}\n         * console.log(ax5.util.parseJson(\"{a:1}\"));\n         * // Object {a: 1}\n         * console.log(ax5.util.parseJson(\"[1,2,3]\"));\n         * // [1, 2, 3]\n         * console.log(ax5.util.parseJson(\"['1','2','3']\"));\n         * // [\"1\", \"2\", \"3\"]\n         * console.log(ax5.util.parseJson(\"[{'a':'99'},'2','3']\"));\n         * // [Object, \"2\", \"3\"]\n         * ```\n         */\n        function parseJson(str, force) {\n            if (force || (reIsJson).test(str)) {\n                try {\n                    return (new Function('', 'return ' + str))();\n                } catch (e) {\n                    return {error: 500, msg: 'syntax error'};\n                }\n            }\n            else {\n                return {error: 500, msg: 'syntax error'};\n            }\n        }\n\n        /**\n         * 인자의 타입을 반환합니다.\n         * @method ax5.util.getType\n         * @param {Object|Array|String|Number|Element|Etc} O\n         * @returns {String} window|element|object|array|function|string|number|undefined|nodelist\n         * @example\n         * ```js\n         * var axf = ax5.util;\n         * var a = 11;\n         * var b = \"11\";\n         * console.log( axf.getType(a) );\n         * console.log( axf.getType(b) );\n         * ```\n         */\n        function getType(O) {\n            var typeName;\n            if (O != null && O == O.window) {\n                typeName = \"window\";\n            }\n            else if (!!(O && O.nodeType == 1)) {\n                typeName = \"element\";\n            }\n            else if (!!(O && O.nodeType == 11)) {\n                typeName = \"fragment\";\n            }\n            else if (O === null) {\n                typeName = \"null\";\n            }\n            else if (typeof O === \"undefined\") {\n                typeName = \"undefined\";\n            }\n            else if (_toString.call(O) == \"[object Object]\") {\n                typeName = \"object\";\n            }\n            else if (_toString.call(O) == \"[object Array]\") {\n                typeName = \"array\";\n            }\n            else if (_toString.call(O) == \"[object String]\") {\n                typeName = \"string\";\n            }\n            else if (_toString.call(O) == \"[object Number]\") {\n                typeName = \"number\";\n            }\n            else if (_toString.call(O) == \"[object NodeList]\") {\n                typeName = \"nodelist\";\n            }\n            else if (typeof O === \"function\") {\n                typeName = \"function\";\n            }\n            return typeName;\n        }\n\n        /**\n         * 오브젝트가 window 인지 판단합니다.\n         * @method ax5.util.isWindow\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isWindow(O) {\n            return O != null && O == O.window;\n        }\n\n        /**\n         * 오브젝트가 HTML 엘리먼트여부인지 판단합니다.\n         * @method ax5.util.isElement\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isElement(O) {\n            return !!(O && (O.nodeType == 1 || O.nodeType == 11));\n        }\n\n        /**\n         * 오브젝트가 Object인지 판단합니다.\n         * @method ax5.util.isObject\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isObject(O) {\n            return _toString.call(O) == \"[object Object]\";\n        }\n\n        /**\n         * 오브젝트가 Array인지 판단합니다.\n         * @method ax5.util.isArray\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isArray(O) {\n            return _toString.call(O) == \"[object Array]\";\n        }\n\n        /**\n         * 오브젝트가 Function인지 판단합니다.\n         * @method ax5.util.isFunction\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isFunction(O) {\n            return typeof O === \"function\";\n        }\n\n        /**\n         * 오브젝트가 String인지 판단합니다.\n         * @method ax5.util.isString\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isString(O) {\n            return _toString.call(O) == \"[object String]\";\n        }\n\n        /**\n         * 오브젝트가 Number인지 판단합니다.\n         * @method ax5.util.isNumber\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNumber(O) {\n            return _toString.call(O) == \"[object Number]\";\n        }\n\n        /**\n         * 오브젝트가 NodeList인지 판단합니다.\n         * @method ax5.util.isNodelist\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNodelist(O) {\n            return !!(_toString.call(O) == \"[object NodeList]\" || (typeof O !== \"undefined\" && O && O[0] && O[0].nodeType == 1));\n        }\n\n        /**\n         * 오브젝트가 undefined인지 판단합니다.\n         * @method ax5.util.isUndefined\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isUndefined(O) {\n            return typeof O === \"undefined\";\n        }\n\n        /**\n         * 오브젝트가 undefined이거나 null이거나 빈값인지 판단합니다.\n         * @method ax5.util.isNothing\n         * @param {Object} O\n         * @returns {Boolean}\n         */\n        function isNothing(O) {\n            return (typeof O === \"undefined\" || O === null || O === \"\");\n        }\n\n        /**\n         * 오브젝트가 날자값인지 판단합니다.\n         * @method ax5.util.isDate\n         * @param {Date} O\n         * @returns {Boolean}\n         * @example\n         * ```js\n         * ax5.util.isDate('2016-09-30');\n         * // false\n         * ax5.util.isDate( new Date('2016-09-30') );\n         * // true\n         * ```\n         */\n        function isDate(O) {\n            return (O instanceof Date && !isNaN(O.valueOf()));\n        }\n\n\n        function isDateFormat(O) {\n            var\n                result = false\n                ;\n            if (!O) {\n            }\n            else if (O instanceof Date && !isNaN(O.valueOf())) {\n                result = true;\n            }\n            else {\n                if (O.length > 7) {\n                    if (date(O) instanceof Date) {\n                        return true;\n                    }\n                }\n                O = O.replace(/\\D/g, '');\n                if (O.length > 7) {\n                    var\n                        mm = O.substr(4, 2),\n                        dd = O.substr(6, 2)\n                        ;\n                    O = date(O);\n                    if (O.getMonth() == (mm - 1) && O.getDate() == dd) {\n                        result = true;\n                    }\n                }\n            }\n            return result;\n        }\n\n        /**\n         * 오브젝트의 첫번째 아이템을 반환합니다.\n         * @method ax5.util.first\n         * @param {Object|Array} O\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.first({a:1, b:2});\n         * // Object {a: 1}\n         * ax5.util.first([1,2,3,4]);\n         * // 1\n         * ```\n         */\n        function first(O) {\n            if (isObject(O)) {\n                var keys = Object.keys(O);\n                var item = {};\n                item[keys[0]] = O[keys[0]];\n                return item;\n            }\n            else if (isArray(O)) {\n                return O[0];\n            }\n            else {\n                console.error(\"ax5.util.object.first\", \"argument type error\");\n                return undefined;\n            }\n        }\n\n        /**\n         * 오브젝트의 마지막 아이템을 반환합니다.\n         * @method ax5.util.last\n         * @param {Object|Array} O\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.last({a:1, b:2});\n         * // Object {b: 2}\n         * ax5.util.last([1,2,3,4]);\n         * // 4\n         * ```\n         */\n        function last(O) {\n            if (isObject(O)) {\n                var keys = Object.keys(O);\n                var item = {};\n                item[keys[keys.length - 1]] = O[keys[keys.length - 1]];\n                return item;\n            }\n            else if (isArray(O)) {\n                return O[O.length - 1];\n            }\n            else {\n                console.error(\"ax5.util.object.last\", \"argument type error\");\n                return undefined;\n            }\n        }\n\n        /**\n         * 쿠키를 설정합니다.\n         * @method ax5.util.setCookie\n         * @param {String} cname - 쿠키이름\n         * @param {String} cvalue - 쿠키값\n         * @param {Number} [exdays] - 쿠키 유지일수\n         * @param {Object} [opts] - path, domain 설정 옵션\n         * @example\n         * ```js\n         * ax5.util.setCookie(\"jslib\", \"AX5\");\n         * ax5.util.setCookie(\"jslib\", \"AX5\", 3);\n         * ax5.util.setCookie(\"jslib\", \"AX5\", 3, {path:\"/\", domain:\".axisj.com\"});\n         * ```\n         */\n        function setCookie(cn, cv, exdays, opts) {\n            var expire;\n            if (typeof exdays === \"number\") {\n                expire = new Date();\n                expire.setDate(expire.getDate() + exdays);\n            }\n            opts = opts || {};\n            return (doc.cookie = [\n                escape(cn), '=', escape(cv),\n                expire ? \"; expires=\" + expire.toUTCString() : \"\", // use expires attribute, max-age is not supported by IE\n                opts.path ? \"; path=\" + opts.path : \"\",\n                opts.domain ? \"; domain=\" + opts.domain : \"\",\n                opts.secure ? \"; secure\" : \"\"\n            ].join(\"\"));\n        }\n\n        /**\n         * 쿠키를 가져옵니다.\n         * @method ax5.util.getCookie\n         * @param {String} cname\n         * @returns {String} cookie value\n         * @example\n         * ```js\n         * ax5.util.getCookie(\"jslib\");\n         * ```\n         */\n        function getCookie(cname) {\n            var name = cname + \"=\";\n            var ca = doc.cookie.split(';'), i = 0, l = ca.length;\n            for (; i < l; i++) {\n                var c = ca[i];\n                while (c.charAt(0) == ' ') c = c.substring(1);\n                if (c.indexOf(name) != -1) return unescape(c.substring(name.length, c.length));\n            }\n            return \"\";\n        }\n\n        /**\n         * jsonString 으로 alert 합니다.\n         * @method ax5.util.alert\n         * @param {Object|Array|String|Number} O\n         * @returns {Object|Array|String|Number} O\n         * @example ```js\n         * ax5.util.alert({a:1,b:2});\n         * ax5.util.alert(\"정말?\");\n         * ```\n         */\n        function alert(O) {\n            win.alert(toJson(O));\n            return O;\n        }\n\n        /**\n         * 문자열의 특정 문자열까지 잘라주거나 원하는 포지션까지 잘라줍니다.\n         * @method ax5.util.left\n         * @param {String} str - 문자열\n         * @param {String|Number} pos - 찾을 문자열 또는 포지션\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.left(\"abcd.efd\", 3);\n         * // abc\n         * ax5.util.left(\"abcd.efd\", \".\");\n         * // abcd\n         * ```\n         */\n        function left(str, pos) {\n            if (typeof str === \"undefined\" || typeof pos === \"undefined\") return \"\";\n            if (isString(pos)) {\n                return (str.indexOf(pos) > -1) ? str.substr(0, str.indexOf(pos)) : \"\";\n            }\n            else if (isNumber(pos)) {\n                return str.substr(0, pos);\n            }\n            else {\n                return \"\";\n            }\n        }\n\n        /**\n         * 문자열의 특정 문자열까지 잘라주거나 원하는 포지션까지 잘라줍니다.\n         * @method ax5.util.right\n         * @param {String} str - 문자열\n         * @param {String|Number} pos - 찾을 문자열 또는 포지션\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.right(\"abcd.efd\", 3);\n         * // efd\n         * ax5.util.right(\"abcd.efd\", \".\");\n         * // efd\n         * ```\n         */\n        function right(str, pos) {\n            if (typeof str === \"undefined\" || typeof pos === \"undefined\") return \"\";\n            str = '' + str;\n            if (isString(pos)) {\n                return (str.lastIndexOf(pos) > -1) ? str.substr(str.lastIndexOf(pos) + 1) : \"\";\n            }\n            else if (isNumber(pos)) {\n                return str.substr(str.length - pos);\n            }\n            else {\n                return \"\";\n            }\n        }\n\n        /**\n         * css형 문자열이나 특수문자가 포함된 문자열을 카멜케이스로 바꾸어 반환합니다.\n         * @method ax5.util.camelCase\n         * @param {String} str\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.camelCase(\"inner-width\");\n         * ax5.util.camelCase(\"innerWidth\");\n         * // innerWidth\n         * ```\n         */\n        function camelCase(str) {\n            return str.replace(reMs, \"ms-\").replace(reSnakeCase, function (all, letter) {\n                return letter.toUpperCase();\n            });\n        }\n\n        /**\n         * css형 문자열이나 카멜케이스문자열을 스네이크 케이스 문자열로 바꾸어 반환합니다.\n         * @method ax5.util.snakeCase\n         * @param {String} str\n         * @returns {String}\n         * @example\n         * ```js\n         * ax5.util.snakeCase(\"innerWidth\");\n         * ax5.util.snakeCase(\"inner-Width\");\n         * ax5.util.snakeCase(\"innerWidth\");\n         * // inner-width\n         * ```\n         */\n        function snakeCase(str) {\n            return camelCase(str).replace(reCamelCase, function (all, letter) {\n                return \"-\" + letter.toLowerCase();\n            });\n        }\n\n        /**\n         * 문자열에서 -. 을 제외한 모든 문자열을 제거하고 숫자로 반환합니다. 옵션에 따라 원하는 형식의 숫자로 변환 할 수 도 있습니다.\n         * @method ax5.util.number\n         * @param {String|Number} str\n         * @param {Object} cond - 옵션\n         * @returns {String|Number}\n         * @example\n         * ```js\n         * var cond = {\n\t\t * \tround: {Number|Boolean} - 반올림할 자릿수,\n\t\t * \tmoney: {Boolean} - 통화,\n\t\t * \tabs: {Boolean} - 절대값,\n\t\t * \tbyte: {Boolean} - 바이트\n\t\t * }\n         *\n         * console.log(ax5.util.number(123456789.678, {round:1}));\n         * console.log(ax5.util.number(123456789.678, {round:1, money:true}));\n         * console.log(ax5.util.number(123456789.678, {round:2, byte:true}));\n         * console.log(ax5.util.number(-123456789.8888, {abs:true, round:2, money:true}));\n         * console.log(ax5.util.number(\"A-1234~~56789.8~888PX\", {abs:true, round:2, money:true}));\n         *\n         * //123456789.7\n         * //123,456,789.7\n         * //117.7MB\n         * //123,456,789.89\n         * //123,456,789.89\n         * ```\n         */\n        function number(str, cond) {\n            var result, pair = ('' + str).split(reDot), isMinus, returnValue;\n\n            isMinus = (Number(pair[0].replace(/,/g, \"\")) < 0 || pair[0] == \"-0\");\n            returnValue = 0.0;\n            pair[0] = pair[0].replace(reInt, \"\");\n\n            if (pair[1]) {\n                pair[1] = pair[1].replace(reNotNum, \"\");\n                returnValue = Number(pair[0] + \".\" + pair[1]) || 0;\n            }\n            else {\n                returnValue = Number(pair[0]) || 0;\n            }\n            result = (isMinus) ? -returnValue : returnValue;\n\n            each(cond, function (k, c) {\n                if (k == \"round\") {\n                    if (isNumber(c)) {\n                        if (c < 0) {\n                            result = +(Math.round(result + \"e-\" + Math.abs(c)) + \"e+\" + Math.abs(c));\n                        }\n                        else {\n                            result = +(Math.round(result + \"e+\" + c) + \"e-\" + c);\n                        }\n                    }\n                    else {\n                        result = Math.round(result);\n                    }\n                }\n                if (k == \"floor\") {\n                    result = Math.floor(result);\n                }\n                if (k == \"ceil\") {\n                    result = Math.ceil(result);\n                }\n                else if (k == \"money\") {\n                    result = (function (val) {\n                        var txtNumber = '' + val;\n                        if (isNaN(txtNumber) || txtNumber == \"\") {\n                            return \"\";\n                        }\n                        else {\n                            var arrNumber = txtNumber.split('.');\n                            arrNumber[0] += '.';\n                            do {\n                                arrNumber[0] = arrNumber[0].replace(reMoneySplit, '$1,$2');\n                            } while (reMoneySplit.test(arrNumber[0]));\n                            if (arrNumber.length > 1) {\n                                return arrNumber.join('');\n                            }\n                            else {\n                                return arrNumber[0].split('.')[0];\n                            }\n                        }\n                    })(result);\n                }\n                else if (k == \"abs\") {\n                    result = Math.abs(Number(result));\n                }\n                else if (k == \"byte\") {\n                    result = (function (val) {\n                        val = Number(result);\n                        var nUnit = \"KB\";\n                        var myByte = val / 1024;\n                        if (myByte / 1024 > 1) {\n                            nUnit = \"MB\";\n                            myByte = myByte / 1024;\n                        }\n                        if (myByte / 1024 > 1) {\n                            nUnit = \"GB\";\n                            myByte = myByte / 1024;\n                        }\n                        return number(myByte, {round: 1}) + nUnit;\n                    })(result);\n                }\n            });\n\n            return result;\n        }\n\n        /**\n         * 배열 비슷한 오브젝트를 배열로 변환해줍니다.\n         * @method ax5.util.toArray\n         * @param {Object|Elements|Arguments} O\n         * @returns {Array}\n         * @example\n         * ```js\n         * ax5.util.toArray(arguments);\n         * //\n         * ```\n         */\n        function toArray(O) {\n            if (typeof O.length != \"undefined\") return Array.prototype.slice.call(O);\n            return [];\n        }\n\n        /**\n         * 첫번째 인자에 두번째 인자 아이템을 합쳐줍니다. concat과 같은 역할을 하지만. 인자가 Array타입이 아니어도 됩니다.\n         * @method ax5.util.merge\n         * @param {Array|ArrayLike} first\n         * @param {Array|ArrayLike} second\n         * @returns {Array} first\n         * @example\n         * ```\n         *\n         * ```\n         */\n        function merge(first, second) {\n            var l = second.length,\n                i = first.length,\n                j = 0;\n\n            if (typeof l === \"number\") {\n                for (; j < l; j++) {\n                    first[i++] = second[j];\n                }\n            }\n            else {\n                while (second[j] !== undefined) {\n                    first[i++] = second[j++];\n                }\n            }\n\n            first.length = i;\n\n            return first;\n        }\n\n        /**\n         * 오브젝트를 파라미터형식으로 또는 파라미터를 오브젝트 형식으로 변환합니다.\n         * @method ax5.util.param\n         * @param {Object|Array|String} O\n         * @param {String} [cond] - param|object\n         * @returns {Object|String}\n         * @example\n         * ```\n         * ax5.util.param({a:1,b:'1232'}, \"param\");\n         * ax5.util.param(\"a=1&b=1232\", \"param\");\n         * // \"a=1&b=1232\"\n         * ax5.util.param(\"a=1&b=1232\");\n         * // {a: \"1\", b: \"1232\"}\n         * ```\n         */\n        function param(O, cond) {\n            var p;\n            if (isString(O) && typeof cond !== \"undefined\" && cond == \"param\") {\n                return O;\n            }\n            else if ((isString(O) && typeof cond !== \"undefined\" && cond == \"object\") || (isString(O) && typeof cond === \"undefined\")) {\n                p = {};\n                each(O.split(reAmp), function () {\n                    var item = this.split(reEq);\n                    if (!p[item[0]]) p[item[0]] = item[1];\n                    else {\n                        if (isString(p[item[0]])) p[item[0]] = [p[item[0]]];\n                        p[item[0]].push(item[1]);\n                    }\n                });\n                return p;\n            }\n            else {\n                p = [];\n                each(O, function (k, v) {\n                    p.push(k + \"=\" + escape(v));\n                });\n                return p.join('&');\n            }\n        }\n\n        function encode(s) {\n            return encodeURIComponent(s);\n        }\n\n        function decode(s) {\n            return decodeURIComponent(s);\n        }\n\n        function error() {\n            ax5.info.onerror.apply(this, arguments);\n        }\n\n        function localDate(yy, mm, dd, hh, mi, ss) {\n            var utcD, localD;\n            localD = new Date();\n            if (mm < 0) mm = 0;\n            if (typeof hh === \"undefined\") hh = 12;\n            if (typeof mi === \"undefined\") mi = 0;\n            utcD = new Date(Date.UTC(yy, mm, dd || 1, hh, mi, ss || 0));\n\n            if (mm == 0 && dd == 1 && utcD.getUTCHours() + (utcD.getTimezoneOffset() / 60) < 0) {\n                utcD.setUTCHours(0);\n            }\n            else {\n                utcD.setUTCHours(utcD.getUTCHours() + (utcD.getTimezoneOffset() / 60));\n            }\n            return utcD;\n        }\n\n        /**\n         * 날짜 형식의 문자열이나 Date객체를 조건에 맞게 처리 한 후 원하는 return 값으로 반환합니다.\n         * @method ax5.util.date\n         * @param {String|Date} d\n         * @param {Object} cond\n         * @returns {Date|String}\n         * @example\n         * ```js\n         * ax5.util.date('2013-01-01'); // Tue Jan 01 2013 23:59:00 GMT+0900 (KST)\n         * ax5.util.date((new Date()), {add:{d:10}, return:'yyyy/MM/dd'}); // \"2015/07/01\"\n         * ax5.util.date('1919-03-01', {add:{d:10}, return:'yyyy/MM/dd hh:mm:ss'}); // \"1919/03/11 23:59:00\"\n         * ```\n         */\n        function date(d, cond) {\n            let yy, mm, dd, hh, mi,\n                aDateTime, aTimes, aTime, aDate,\n                va,\n                ISO_8601 = /^\\d{4}(-\\d\\d(-\\d\\d(T\\d\\d:\\d\\d(:\\d\\d)?(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?)?)?)?$/i,\n                ISO_8601_FULL = /^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$/i;\n\n            if (isString(d)) {\n                if (d.length == 0) {\n                    d = new Date();\n                }\n                else if (d.length > 15) {\n                    if (ISO_8601_FULL.test(d) || ISO_8601.test(d)) {\n                        d = new Date(d);\n                    } else {\n                        aDateTime = d.split(/ /g), aTimes, aTime,\n                            aDate = aDateTime[0].split(/\\D/g),\n                            yy = aDate[0];\n                        mm = parseFloat(aDate[1]);\n                        dd = parseFloat(aDate[2]);\n                        aTime = aDateTime[1] || \"09:00\";\n                        aTimes = aTime.substring(0, 5).split(\":\");\n                        hh = parseFloat(aTimes[0]);\n                        mi = parseFloat(aTimes[1]);\n                        if (right(aTime, 2) === \"AM\" || right(aTime, 2) === \"PM\") hh += 12;\n                        d = localDate(yy, mm - 1, dd, hh, mi);\n                    }\n                }\n                else if (d.length == 14) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, number(va.substr(6, 2)), number(va.substr(8, 2)), number(va.substr(10, 2)), number(va.substr(12, 2)));\n                }\n                else if (d.length > 7) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, number(va.substr(6, 2)));\n                }\n                else if (d.length > 4) {\n                    va = d.replace(/\\D/g, \"\");\n                    d = localDate(va.substr(0, 4), va.substr(4, 2) - 1, 1);\n                }\n                else if (d.length > 2) {\n                    va = d.replace(/\\D/g, \"\");\n                    return localDate(va.substr(0, 4), va.substr(4, 2) - 1, 1);\n                }\n                else {\n                    d = new Date();\n                }\n            }\n            if (typeof cond === \"undefined\" || typeof d === \"undefined\") {\n                return d;\n            }\n            else {\n                if (\"add\" in cond) {\n                    d = (function (_d, opts) {\n                        let yy, mm, dd, mxdd,\n                            DyMilli = ((1000 * 60) * 60) * 24;\n\n                        if (typeof opts[\"d\"] !== \"undefined\") {\n                            _d.setTime(_d.getTime() + (opts[\"d\"] * DyMilli));\n                        }\n                        else if (typeof opts[\"m\"] !== \"undefined\") {\n                            yy = _d.getFullYear();\n                            mm = _d.getMonth();\n                            dd = _d.getDate();\n                            yy = yy + parseInt(opts[\"m\"] / 12);\n                            mm += opts[\"m\"] % 12;\n                            mxdd = daysOfMonth(yy, mm);\n                            if (mxdd < dd) dd = mxdd;\n                            _d = new Date(yy, mm, dd, 12);\n                        }\n                        else if (typeof opts[\"y\"] !== \"undefined\") {\n                            _d.setTime(_d.getTime() + ((opts[\"y\"] * 365) * DyMilli));\n                        }\n                        else if (typeof opts[\"h\"] !== \"undefined\") {\n                            _d.setTime(_d.getTime() + (opts[\"h\"] * 1000 * 60 * 60));\n                        }\n\n                        return _d;\n                    })(new Date(d), cond[\"add\"]);\n                }\n                if (\"set\" in cond) {\n                    d = (function (_d, opts) {\n                        let yy, mm, dd,\n                            processor = {\n                                \"firstDayOfMonth\": function (date) {\n                                    yy = date.getFullYear();\n                                    mm = date.getMonth();\n                                    dd = 1;\n                                    return new Date(yy, mm, dd, 12);\n                                },\n                                \"lastDayOfMonth\": function (date) {\n                                    yy = date.getFullYear();\n                                    mm = date.getMonth();\n                                    dd = daysOfMonth(yy, mm);\n                                    return new Date(yy, mm, dd, 12);\n                                }\n                            };\n                        if (opts in processor) {\n                            return processor[opts](_d);\n                        } else {\n                            return _d;\n                        }\n                    })(new Date(d), cond[\"set\"]);\n                }\n                if (\"return\" in cond) {\n                    return (function () {\n\n                        let fStr = cond[\"return\"], nY, nM, nD, nH, nMM, nS, nDW,\n                            yre, regY, mre, regM, dre, regD, hre, regH, mire, regMI, sre, regS, dwre, regDW;\n\n                        nY = d.getUTCFullYear();\n                        nM = setDigit(d.getMonth() + 1, 2);\n                        nD = setDigit(d.getDate(), 2);\n                        nH = setDigit(d.getHours(), 2);\n                        nMM = setDigit(d.getMinutes(), 2);\n                        nS = setDigit(d.getSeconds(), 2);\n                        nDW = d.getDay();\n\n                        yre = /[^y]*(yyyy)[^y]*/gi;\n                        yre.exec(fStr);\n                        regY = RegExp.$1;\n                        mre = /[^m]*(MM)[^m]*/g;\n                        mre.exec(fStr);\n                        regM = RegExp.$1;\n                        dre = /[^d]*(dd)[^d]*/gi;\n                        dre.exec(fStr);\n                        regD = RegExp.$1;\n                        hre = /[^h]*(hh)[^h]*/gi;\n                        hre.exec(fStr);\n                        regH = RegExp.$1;\n                        mire = /[^m]*(mm)[^i]*/g;\n                        mire.exec(fStr);\n                        regMI = RegExp.$1;\n                        sre = /[^s]*(ss)[^s]*/gi;\n                        sre.exec(fStr);\n                        regS = RegExp.$1;\n                        dwre = /[^d]*(dw)[^w]*/gi;\n                        dwre.exec(fStr);\n                        regDW = RegExp.$1;\n\n                        if (regY === \"yyyy\") {\n                            fStr = fStr.replace(regY, right(nY, regY.length));\n                        }\n                        if (regM === \"MM\") {\n                            if (regM.length == 1) nM = (d.getMonth() + 1);\n                            fStr = fStr.replace(regM, nM);\n                        }\n                        if (regD === \"dd\") {\n                            if (regD.length == 1) nD = d.getDate();\n                            fStr = fStr.replace(regD, nD);\n                        }\n                        if (regH === \"hh\") {\n                            fStr = fStr.replace(regH, nH);\n                        }\n                        if (regMI === \"mm\") {\n                            fStr = fStr.replace(regMI, nMM);\n                        }\n                        if (regS === \"ss\") {\n                            fStr = fStr.replace(regS, nS);\n                        }\n                        if (regDW == \"dw\") {\n                            fStr = fStr.replace(regDW, info.weekNames[nDW].label);\n                        }\n                        return fStr;\n                    })();\n                }\n                else {\n                    return d;\n                }\n            }\n        }\n\n        /**\n         * 인자인 날짜가 오늘부터 몇일전인지 반환합니다. 또는 인자인 날짜가 가까운 미래에 몇일 후인지 반환합니다.\n         * @method ax5.util.dday\n         * @param {String|Data} d\n         * @param {Object} cond\n         * @returns {Number}\n         * @example\n         * ```js\n         * ax5.util.dday('2016-01-29');\n         * // 1\n         * ax5.util.dday('2016-01-29', {today:'2016-01-28'});\n         * // 1\n         * ax5.util.dday('1977-03-29', {today:'2016-01-28', age:true});\n         * // 39\n         * ```\n         */\n        function dday(d, cond) {\n            var memoryDay = date(d), DyMilli = ((1000 * 60) * 60) * 24, today = new Date(), diffnum, thisYearMemoryDay;\n\n            function getDayTime(_d) {\n                return Math.floor(_d.getTime() / DyMilli) * DyMilli;\n            }\n\n            if (typeof cond === \"undefined\") {\n                diffnum = number((( getDayTime(memoryDay) - getDayTime(today) ) / DyMilli), {floor: true});\n                return diffnum;\n            }\n\n            else {\n                diffnum = number((( getDayTime(memoryDay) - getDayTime(today) ) / DyMilli), {floor: true});\n                if (cond[\"today\"]) {\n                    today = date(cond.today);\n                    diffnum = number((( getDayTime(memoryDay) - getDayTime(today) ) / DyMilli), {floor: true});\n                }\n                if (cond[\"thisYear\"]) {\n                    thisYearMemoryDay = new Date(today.getFullYear(), memoryDay.getMonth(), memoryDay.getDate());\n                    diffnum = number((( getDayTime(thisYearMemoryDay) - getDayTime(today) ) / DyMilli), {floor: true});\n                    if (diffnum < 0) {\n                        thisYearMemoryDay = new Date(today.getFullYear() + 1, memoryDay.getMonth(), memoryDay.getDate());\n                        diffnum = number((( getDayTime(thisYearMemoryDay) - getDayTime(today) ) / DyMilli), {floor: true});\n                    }\n                }\n                if (cond[\"age\"]) {\n                    thisYearMemoryDay = new Date(today.getFullYear(), memoryDay.getMonth(), memoryDay.getDate());\n                    diffnum = thisYearMemoryDay.getFullYear() - memoryDay.getFullYear();\n                }\n\n                return diffnum;\n            }\n        }\n\n        /**\n         * 인자인 날짜가 몇년 몇월의 몇번째 주차인지 반환합니다.\n         * @method ax5.util.weeksOfMonth\n         * @param {String|Data} d\n         * @returns {Object}\n         * @example\n         * ```js\n         * ax5.util.weeksOfMonth(\"2015-10-01\"); // {year: 2015, month: 10, count: 1}\n         * ax5.util.weeksOfMonth(\"2015-09-19\"); // {year: 2015, month: 9, count: 3}\n         * ```\n         */\n        function weeksOfMonth(d) {\n            var myDate = date(d);\n            return {\n                year: myDate.getFullYear(),\n                month: myDate.getMonth() + 1,\n                count: parseInt(myDate.getDate() / 7 + 1)\n            };\n        }\n\n        /**\n         * 년월에 맞는 날자수를 반환합니다.\n         * (new Date()).getMonth() 기준으로 월값을 보냅니다. \"2월\" 인경우 \"1\" 을 넘기게 됩니다.\n         * @method ax5.util.daysOfMonth\n         * @param {Number} y\n         * @param {Number} m\n         * @returns {Number}\n         * @examples\n         * ```js\n         * ax5.util.daysOfMonth(2015, 11); // 31\n         * ax5.util.daysOfMonth(2015, 1); // 28\n         * ```\n         */\n        function daysOfMonth(y, m) {\n            if (m == 3 || m == 5 || m == 8 || m == 10) {\n                return 30;\n            }\n            else if (m == 1) {\n                return (((y % 4 == 0) && (y % 100 != 0)) || (y % 400 == 0)) ? 29 : 28;\n            }\n            else {\n                return 31;\n            }\n        }\n\n        /**\n         * 원하는 횟수 만큼 자릿수 맞춤 문자열을 포함한 문자열을 반환합니다.\n         * 문자열 길이보다 작은값을 보내면 무시됩니다.\n         * @method ax5.util.setDigit\n         * @param {String|Number} num\n         * @param {Number} length\n         * @param {String} [padder=0]\n         * @param {Number} [radix]\n         * @returns {String}\n         * @example\n         * ```\n         * ax5.util.setDigit(2016, 6)\n         * // \"002016\"\n         * ax5.util.setDigit(2016, 2)\n         * // \"2016\"\n         * ```\n         */\n        function setDigit(num, length, padder, radix) {\n            var s = num.toString(radix || 10);\n            return times((padder || '0'), (length - s.length)) + s;\n        }\n\n        /**\n         * 문자열을 지정된 수만큼 반복 합니다.\n         * @param {String} s\n         * @param {Number} count\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.times(2016, 2)\n         * //\"20162016\"\n         * ```\n         */\n        function times(s, count) {\n            return count < 1 ? '' : new Array(count + 1).join(s);\n        }\n\n        /**\n         * 타겟엘리먼트의 부모 엘리멘트 트리에서 원하는 조건의 엘리먼트를 얻습니다.\n         * @method ax5.util.findParentNode\n         * @param {Element} _target - target element\n         * @param {Object|Function} cond - 원하는 element를 찾을 조건\n         * @returns {Element}\n         * @example\n         * ```\n         * // cond 속성정의\n         * var cond = {\n\t\t * \ttagname: {String} - 태그명 (ex. a, div, span..),\n\t\t * \tclazz: {String} - 클래스명\n\t\t * \t[, 그 외 찾고 싶은 attribute명들]\n\t\t * };\n         * console.log(\n         * console.log(\n         *    ax5.util.findParentNode(e.target, {tagname:\"a\", clazz:\"ax-menu-handel\", \"data-custom-attr\":\"attr_value\"})\n         * );\n         * // cond 함수로 처리하기\n         * jQuery('#id').bind(\"click.app_expand\", function(e){\n\t\t * \tvar target = ax5.util.findParentNode(e.target, function(target){\n\t\t * \t\tif($(target).hasClass(\"aside\")){\n\t\t * \t\t\treturn true;\n\t\t * \t\t}\n\t\t * \t\telse{\n\t\t * \t\t\treturn true;\n\t\t * \t\t}\n\t\t * \t});\n\t\t * \t//client-aside\n\t\t * \tif(target.id !== \"client-aside\"){\n\t\t * \t\t// some action\n\t\t * \t}\n\t\t * });\n         * ```\n         */\n\n        function findParentNode(_target, cond) {\n            if (_target) {\n                while ((function () {\n                    var result = true;\n                    if (typeof cond === \"undefined\") {\n                        _target = (_target.parentNode) ? _target.parentNode : false;\n                    }\n                    else if (isFunction(cond)) {\n                        result = cond(_target);\n                    }\n                    else if (isObject(cond)) {\n                        for (var k in cond) {\n                            if (k === \"tagname\") {\n                                if (_target.tagName.toLocaleLowerCase() != cond[k]) {\n                                    result = false;\n                                    break;\n                                }\n                            }\n                            else if (k === \"clazz\" || k === \"class_name\") {\n                                if (\"className\" in _target) {\n                                    var klasss = _target.className.split(reClassNameSplit);\n                                    var hasClass = false;\n                                    for (var a = 0; a < klasss.length; a++) {\n                                        if (klasss[a] == cond[k]) {\n                                            hasClass = true;\n                                            break;\n                                        }\n                                    }\n                                    result = hasClass;\n                                }\n                                else {\n                                    result = false;\n                                    break;\n                                }\n                            }\n                            else { // 그외 속성값들.\n                                if (_target.getAttribute) {\n                                    if (_target.getAttribute(k) != cond[k]) {\n                                        result = false;\n                                        break;\n                                    }\n                                }\n                                else {\n                                    result = false;\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                    return !result;\n                })()) {\n                    if (_target.parentNode && _target.parentNode.parentNode) {\n                        _target = _target.parentNode;\n                    }\n                    else {\n                        _target = false;\n                        break;\n                    }\n                }\n            }\n            return _target;\n        }\n\n        /**\n         * @method ax5.util.cssNumber\n         * @param {String|Number} val\n         * @returns {String}\n         * @example\n         * ```\n         * console.log(ax5.util.cssNumber(\"100px\"))\n         * console.log(ax5.util.cssNumber(\"100%\"))\n         * console.log(ax5.util.cssNumber(\"100\"))\n         * console.log(ax5.util.cssNumber(100))\n         * console.log(ax5.util.cssNumber(\"!!100@#\"))\n         * ```\n         */\n        function cssNumber(val) {\n            var re = /\\D?(\\d+)([a-zA-Z%]*)/i,\n                found = ('' + val).match(re),\n                unit = found[2] || \"px\"\n                ;\n\n            return found[1] + unit;\n        }\n\n        /**\n         * css string 및 object 를 넘기면 object 및 string 으로 변환되어 리턴됩니다.\n         * @method ax5.util.css\n         * @param {Object|String} val - CSS String or CSS Object\n         * @returns {String|Object}\n         * @example\n         * ```\n         * console.log(ax5.util.css({background: \"#ccc\", padding: \"50px\", width: \"100px\"}));\n         * //\"background:#ccc;padding:50px;width:100px;\"\n         * console.log(ax5.util.css('width:100px;padding: 50px; background: #ccc'));\n         * // object {width: \"100px\", padding: \"50px\", background: \"#ccc\"}\n         * ```\n         */\n        function css(val) {\n            var returns;\n            if (isObject(val)) {\n                returns = '';\n                for (var k in val) {\n                    returns += k + ':' + val[k] + ';';\n                }\n                return returns;\n            }\n            else if (isString(val)) {\n                returns = {};\n                var valSplited = val.split(/[ ]*;[ ]*/g);\n                valSplited.forEach(function (v) {\n                    if ((v = v.trim()) !== \"\") {\n                        var vSplited = v.split(/[ ]*:[ ]*/g);\n                        returns[vSplited[0]] = vSplited[1];\n                    }\n                });\n                return returns;\n            }\n        }\n\n        /**\n         * @method ax5.util.stopEvent\n         * @param {Event} e\n         * @example\n         * ```\n         * ax5.util.stopEvent(e);\n         * ```\n         */\n        function stopEvent(e) {\n            // 이벤트 중지 구문\n            if (!e) var e = window.event;\n\n            //e.cancelBubble is supported by IE -\n            // this will kill the bubbling process.\n            e.cancelBubble = true;\n            e.returnValue = false;\n\n            //e.stopPropagation works only in Firefox.\n            if (e.stopPropagation) e.stopPropagation();\n            if (e.preventDefault) e.preventDefault();\n\n            return false;\n            // 이벤트 중지 구문 끝\n        }\n\n        /**\n         * @method ax5.util.selectRange\n         * @param {Element} el\n         * @param {Element} offset\n         * @example\n         * ```\n         * ax5.util.selectRange($(\"#select-test-0\")); // selectAll\n         * ax5.util.selectRange($(\"#select-test-0\"), \"selectAll\"); //selectAll\n         * ax5.util.selectRange($(\"#select-test-0\"), \"start\"); // focus on start\n         * ax5.util.selectRange($(\"#select-test-0\"), \"end\"); // focus on end\n         * ax5.util.selectRange($(\"#select-test-0\"), [1, 5]); // select 1~5\n         * ```\n         */\n        const selectRange = (function () {\n            var processor = {\n                'textRange': {\n                    'selectAll': function (el, range, offset) {\n\n                    },\n                    'arr': function (el, range, offset) {\n                        range.moveStart(\"character\", offset[0]); // todo ie node select 체크필요\n                        range.collapse();\n                        range.moveEnd(\"character\", offset[1]);\n                    },\n                    'start': function (el, range, offset) {\n                        range.moveStart(\"character\", 0);\n                        range.collapse();\n                    },\n                    'end': function (el, range, offset) {\n                        range.moveStart(\"character\", range.text.length);\n                        range.collapse();\n                    }\n                },\n                'range': {\n                    'selectAll': function (el, range, offset) {\n                        range.selectNodeContents(el);\n                    },\n                    'arr': function (el, range, offset) {\n                        if (isObject(offset[0])) {\n                            range.setStart(offset[0].node, offset[0].offset);\n                            range.setEnd(offset[1].node, offset[1].offset);\n                        }\n                        else {\n                            range.setStart(el.firstChild, offset[0]);\n                            range.setEnd(el.firstChild, offset[1]);\n                        }\n                    },\n                    'start': function (el, range, offset) {\n                        range.selectNodeContents(el);\n                        range.collapse(true);\n                    },\n                    'end': function (el, range, offset) {\n                        range.selectNodeContents(el);\n                        range.collapse(false);\n                    }\n                }\n            };\n            return function (el, offset) {\n                var range, rangeType, selection;\n\n                if (el instanceof jQuery) {\n                    el = el.get(0);\n                }\n                if (!el) return;\n\n                // 레인지 타입 선택\n                if (doc.body.createTextRange) {\n                    range = document.body.createTextRange();\n                    range.moveToElementText(el);\n                    rangeType = \"textRange\";\n                }\n                else if (window.getSelection) {\n                    selection = window.getSelection();\n                    range = document.createRange();\n                    rangeType = \"range\";\n                }\n\n                // range 적용\n                if (typeof offset == \"undefined\") {\n                    processor[rangeType].selectAll.call(this, el, range, offset);\n                }\n                else if (isArray(offset)) {\n                    processor[rangeType].arr.call(this, el, range, offset);\n                }\n                else {\n                    for (var key in processor[rangeType]) {\n                        if (offset == key) {\n                            processor[rangeType][key].call(this, el, range, offset);\n                            break;\n                        }\n                    }\n                }\n\n                // 포커스 및 셀렉트\n                if (doc.body.createTextRange) {\n                    range.select();\n                    el.focus();\n                }\n                else if (window.getSelection) {\n                    el.focus();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n\n            }\n        })();\n\n        /**\n         * 지정한 시간을 지연시켜 함수를 실행합니다.\n         * @method ax5.util.debounce\n         * @param {Function} func\n         * @param {Number} wait\n         * @param {Object} options\n         * @returns {debounced}\n         * @example\n         * ```js\n         * var debounceFn = ax5.util.debounce(function( val ) { console.log(val); }, 300);\n         * $(document.body).click(function(){\n         *  debounceFn(new Date());\n         * });\n         * ```\n         */\n        // https://github.com/lodash/lodash/blob/master/debounce.js\n        function debounce(func, wait, options) {\n            let lastArgs,\n                lastThis,\n                maxWait,\n                result,\n                timerId,\n                lastCallTime;\n\n            let lastInvokeTime = 0;\n            let leading = false;\n            let maxing = false;\n            let trailing = true;\n\n            if (typeof func != 'function') {\n                throw new TypeError('Expected a function')\n            }\n            wait = +wait || 0;\n            if (isObject(options)) {\n                leading = !!options.leading;\n                maxing = 'maxWait' in options;\n                maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : maxWait;\n                trailing = 'trailing' in options ? !!options.trailing : trailing;\n            }\n\n            function invokeFunc(time) {\n                const args = lastArgs;\n                const thisArg = lastThis;\n\n                lastArgs = lastThis = undefined;\n                lastInvokeTime = time;\n                result = func.apply(thisArg, args);\n                return result\n            }\n\n            function leadingEdge(time) {\n                // Reset any `maxWait` timer.\n                lastInvokeTime = time;\n                // Start the timer for the trailing edge.\n                timerId = setTimeout(timerExpired, wait);\n                // Invoke the leading edge.\n                return leading ? invokeFunc(time) : result;\n            }\n\n            function remainingWait(time) {\n                const timeSinceLastCall = time - lastCallTime;\n                const timeSinceLastInvoke = time - lastInvokeTime;\n                const result = wait - timeSinceLastCall;\n\n                return maxing ? Math.min(result, maxWait - timeSinceLastInvoke) : result;\n            }\n\n            function shouldInvoke(time) {\n                const timeSinceLastCall = time - lastCallTime;\n                const timeSinceLastInvoke = time - lastInvokeTime;\n\n                // Either this is the first call, activity has stopped and we're at the\n                // trailing edge, the system time has gone backwards and we're treating\n                // it as the trailing edge, or we've hit the `maxWait` limit.\n                return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n                    (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait))\n            }\n\n            function timerExpired() {\n                const time = Date.now();\n                if (shouldInvoke(time)) {\n                    return trailingEdge(time);\n                }\n                // Restart the timer.\n                timerId = setTimeout(timerExpired, remainingWait(time));\n            }\n\n            function trailingEdge(time) {\n                timerId = undefined;\n\n                // Only invoke if we have `lastArgs` which means `func` has been\n                // debounced at least once.\n                if (trailing && lastArgs) {\n                    return invokeFunc(time)\n                }\n                lastArgs = lastThis = undefined;\n                return result\n            }\n\n            function cancel() {\n                if (timerId !== undefined) {\n                    clearTimeout(timerId);\n                }\n                lastInvokeTime = 0;\n                lastArgs = lastCallTime = lastThis = timerId = undefined\n            }\n\n            function flush() {\n                return timerId === undefined ? result : trailingEdge(Date.now())\n            }\n\n            function debounced(...args) {\n                const time = Date.now();\n                const isInvoking = shouldInvoke(time);\n\n                lastArgs = args;\n                lastThis = this;\n                lastCallTime = time;\n\n                if (isInvoking) {\n                    if (timerId === undefined) {\n                        return leadingEdge(lastCallTime)\n                    }\n                    if (maxing) {\n                        // Handle invocations in a tight loop.\n                        timerId = setTimeout(timerExpired, wait);\n                        return invokeFunc(lastCallTime)\n                    }\n                }\n                if (timerId === undefined) {\n                    timerId = setTimeout(timerExpired, wait)\n                }\n                return result\n            }\n            debounced.cancel = cancel;\n            debounced.flush = flush;\n            return debounced\n        }\n\n        /**\n         * @method ax5.util.throttle\n         * @param func\n         * @param wait\n         * @param options\n         * @return {debounced}\n         */\n        //https://github.com/lodash/lodash/blob/master/throttle.js\n        function throttle(func, wait, options) {\n            let leading = true;\n            let trailing = true;\n\n            if (typeof func != 'function') {\n                throw new TypeError('Expected a function');\n            }\n            if (isObject(options)) {\n                leading = 'leading' in options ? !!options.leading : leading;\n                trailing = 'trailing' in options ? !!options.trailing : trailing;\n            }\n            return debounce(func, wait, {\n                'leading': leading,\n                'maxWait': wait,\n                'trailing': trailing\n            });\n        }\n\n        /**\n         * @method ax5.util.deepCopy\n         * @param {Object} obj\n         * @returns {Object}\n         * @example\n         * ```js\n         * var obj = [\n         *  {name:\"A\", child:[{name:\"a-1\"}]},\n         *  {name:\"B\", child:[{name:\"b-1\"}], callBack: function(){ console.log('callBack'); }}\n         * ];\n         * var copiedObj = ax5.util.deepCopy(obj)\n         * ```\n         */\n        function deepCopy(obj) {\n            var r, l;\n            if (typeof obj == 'object') {\n                if (U.isArray(obj)) {\n                    l = obj.length;\n                    r = new Array(l);\n                    for (var i = 0; i < l; i++) {\n                        r[i] = deepCopy(obj[i]);\n                    }\n                    return r;\n                } else {\n                    return jQuery.extend({}, obj);\n                }\n            }\n            return obj;\n        }\n\n        /**\n         * HTML 문자열을 escape 처리합니다.\n         * \"&lt;\" represents the < sign.\n         * \"&gt;\" represents the > sign.\n         * \"&amp;\" represents the & sign.\n         * \"&quot; represents the \" mark.\n         * [Character entity references](https://www.w3.org/TR/html401/charset.html#h-5.3)\n         * @method ax5.util.escapeHtml\n         * @param {String} s\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.escapeHtml('HTML <span>string</span> & \"escape\"')\n         * //\"HTML &lt;span&gt;string&lt;/span&gt; &amp; &quot;escape&quot;\"\n         * ```\n         */\n        function escapeHtml(s) {\n            if (_toString.call(s) != \"[object String]\") return s;\n            if (!s) return \"\";\n            return s.replace(/[\\<\\>\\&\\\"]/gm, function (match) {\n                switch (match) {\n                    case \"<\":\n                        return \"&lt;\";\n                    case \">\":\n                        return \"&gt;\";\n                    case \"&\":\n                        return \"&amp;\";\n                    case \"\\\"\":\n                        return \"&quot;\";\n                    default:\n                        return match;\n                }\n            });\n        }\n\n        /**\n         * HTML 문자열을 unescape 처리합니다.\n         * escapeHtml를 참고하세요.\n         * @method ax5.util.unescapeHtml\n         * @param {String} s\n         * @returns {string}\n         * @example\n         * ```\n         * ax5.util.unescapeHtml('HTML &lt;span&gt;string&lt;/span&gt; &amp; &quot;escape&quot;')\n         * //\"HTML <span>string</span> & \"escape\"\"\n         * ```\n         */\n        function unescapeHtml(s) {\n            if (_toString.call(s) != \"[object String]\") return s;\n            if (!s) return \"\";\n            return s.replace(/(&lt;)|(&gt;)|(&amp;)|(&quot;)/gm, function (match) {\n                switch (match) {\n                    case \"&lt;\":\n                        return \"<\";\n                    case \"&gt;\":\n                        return \">\";\n                    case \"&amp;\":\n                        return \"&\";\n                    case \"&quot;\":\n                        return \"\\\"\";\n                    default:\n                        return match;\n                }\n            });\n        }\n\n        /**\n         * @method ax5.util.string\n         * @param {String} tmpl\n         * @param {*} args\n         * @return {ax5string}\n         * @example\n         * ```js\n         * ax5.util.string(\"{0} is dead, but {1} is alive! {0} {2}\").format(\"ASP\", \"ASP.NET\");\n         * ax5.util.string(\"{0} is dead, but {1} is alive! {0} {2}\").format([\"ASP\", \"ASP.NET\"]);\n         * ax5.util.stinrg(\"{0} counts\").format(100);\n         * ```\n         */\n        function string(_string) {\n            return new (function (_string) {\n                this.value = _string;\n                this.toString = function () {\n                    return this.value;\n                };\n                /**\n                 * @method ax5.util.string.format\n                 * @returns {*}\n                 */\n                this.format = function () {\n                    var args = [];\n                    for (var i = 0, l = arguments.length; i < l; i++) {\n                        args = args.concat(arguments[i]);\n                    }\n                    return this.value.replace(/{(\\d+)}/g, function (match, number) {\n                        return typeof args[number] != 'undefined' ? args[number] : match;\n                    });\n                };\n                /**\n                 * @method ax5.util.string.escape\n                 * @returns {*}\n                 */\n                this.escape = function () {\n                    return escapeHtml(this.value);\n                };\n                /**\n                 * @method ax5.util.string.unescape\n                 * @returns {*}\n                 */\n                this.unescape = function () {\n                    return unescapeHtml(this.value);\n                };\n                /**\n                 * @method ax5.util.string.encode\n                 * @returns {*}\n                 */\n                this.encode = function () {\n                    return encode(this.value);\n                };\n                /**\n                 * @method ax5.util.string.decode\n                 * @returns {*}\n                 */\n                this.decode = function () {\n                    return decode(this.value);\n                };\n                /**\n                 * @method ax5.util.string.left\n                 * @param {String|Number} pos - 찾을 문자열 또는 포지션\n                 * @returns {*}\n                 */\n                this.left = function (_pos) {\n                    return left(this.value, _pos);\n                };\n                /**\n                 * @method ax5.util.string.right\n                 * @param {String|Number} pos - 찾을 문자열 또는 포지션\n                 * @returns {*}\n                 */\n                this.right = function (_pos) {\n                    return right(this.value, _pos);\n                };\n                /**\n                 * @method ax5.util.string.camelCase\n                 * @returns {*}\n                 */\n                this.camelCase = function () {\n                    return camelCase(this.value);\n                };\n                /**\n                 * @method ax5.util.string.snakeCase\n                 * @returns {*}\n                 */\n                this.snakeCase = function () {\n                    return snakeCase(this.value);\n                };\n            })(_string);\n        }\n\n        /**\n         * @method ax5.util.color\n         * @param _hexColor\n         * @return {ax5color}\n         * @example\n         * ```js\n         * ax5.util.color(\"#ff3300\").lighten(10).getHexValue()\n         * console.log(ax5.util.color(\"#ff3300\").darken(10).getHexValue());\n         * ```\n         */\n        function color(_hexColor) {\n\n            const matchers = (function () {\n\n                // <http://www.w3.org/TR/css3-values/#integers>\n                const CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n                // <http://www.w3.org/TR/css3-values/#number-value>\n                const CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n                // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n                const CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n                // Actual matching.\n                // Parentheses and commas are optional, but not required.\n                // Whitespace can take the place of commas or opening paren\n                const PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n                const PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n\n                return {\n                    CSS_UNIT: new RegExp(CSS_UNIT),\n                    rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n                    rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n                    hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n                    hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n                    hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n                    hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n                    hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n                    hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n                    hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n                    hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n                };\n            })();\n\n            const convertObject = function (_color) {\n                let match;\n                if ((match = matchers.rgb.exec(_color))) {\n                    return {r: match[1], g: match[2], b: match[3]};\n                }\n                if ((match = matchers.rgba.exec(_color))) {\n                    return {r: match[1], g: match[2], b: match[3], a: match[4]};\n                }\n                if ((match = matchers.hsl.exec(_color))) {\n                    return {h: match[1], s: match[2], l: match[3]};\n                }\n                if ((match = matchers.hsla.exec(_color))) {\n                    return {h: match[1], s: match[2], l: match[3], a: match[4]};\n                }\n                if ((match = matchers.hsv.exec(_color))) {\n                    return {h: match[1], s: match[2], v: match[3]};\n                }\n                if ((match = matchers.hsva.exec(_color))) {\n                    return {h: match[1], s: match[2], v: match[3], a: match[4]};\n                }\n                if ((match = matchers.hex8.exec(_color))) {\n                    return {\n                        r: parseInt(match[1], 16),\n                        g: parseInt(match[2], 16),\n                        b: parseInt(match[3], 16),\n                        a: parseInt((match[4]) / 255, 16),\n                        format: \"hex8\"\n                    };\n                }\n                if ((match = matchers.hex6.exec(_color))) {\n                    return {\n                        r: parseInt(match[1], 16),\n                        g: parseInt(match[2], 16),\n                        b: parseInt(match[3], 16),\n                        format: \"hex\"\n                    };\n                }\n                if ((match = matchers.hex4.exec(_color))) {\n                    return {\n                        r: parseInt(match[1] + '' + match[1], 16),\n                        g: parseInt(match[2] + '' + match[2], 16),\n                        b: parseInt(match[3] + '' + match[3], 16),\n                        a: parseInt(match[4] + '' + match[4], 16),\n                        format: \"hex8\"\n                    };\n                }\n                if ((match = matchers.hex3.exec(_color))) {\n                    return {\n                        r: parseInt(match[1] + '' + match[1], 16),\n                        g: parseInt(match[2] + '' + match[2], 16),\n                        b: parseInt(match[3] + '' + match[3], 16),\n                        format: \"hex\"\n                    };\n                }\n\n                return false;\n            };\n\n            function isOnePointZero(n) {\n                return typeof n == \"string\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\n            }\n\n            function isPercentage(n) {\n                return typeof n === \"string\" && n.indexOf('%') != -1;\n            }\n\n            function convertToPercentage(n) {\n                if (n <= 1) {\n                    n = (n * 100) + \"%\";\n                }\n\n                return n;\n            }\n\n            function convertTo255(n) {\n                return ax5.util.number(Math.min(255, Math.max(n, 0)), {'round': 2});\n            }\n\n            function convertToHex(n) {\n                return setDigit(Math.round(n).toString(16), 2)\n            }\n\n            function bound01(n, max) {\n                if (isOnePointZero(n)) {\n                    n = \"100%\";\n                }\n\n                var processPercent = isPercentage(n);\n                n = Math.min(max, Math.max(0, parseFloat(n)));\n\n                // Automatically convert percentage into number\n                if (processPercent) {\n                    n = parseInt(n * max, 10) / 100;\n                }\n\n                // Handle floating point rounding errors\n                if ((Math.abs(n - max) < 0.000001)) {\n                    return 1;\n                }\n\n                // Convert into [0, 1] range if it isn't already\n                return (n % max) / parseFloat(max);\n            }\n\n            function rgbToHsl(r, g, b) {\n                r = bound01(r, 255);\n                g = bound01(g, 255);\n                b = bound01(b, 255);\n\n                var max = Math.max(r, g, b), min = Math.min(r, g, b);\n                var h, s, l = (max + min) / 2;\n\n                if (max == min) {\n                    h = s = 0; // achromatic\n                }\n                else {\n                    var d = max - min;\n                    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n                    switch (max) {\n                        case r:\n                            h = (g - b) / d + (g < b ? 6 : 0);\n                            break;\n                        case g:\n                            h = (b - r) / d + 2;\n                            break;\n                        case b:\n                            h = (r - g) / d + 4;\n                            break;\n                    }\n\n                    h /= 6;\n                }\n\n                return {h: h, s: s, l: l};\n            }\n\n            function hslToRgb(h, s, l) {\n                let r, g, b;\n\n                h = bound01(h, 360);\n                s = bound01(s, 100);\n                l = bound01(l, 100);\n\n                function hue2rgb(p, q, t) {\n                    if (t < 0) t += 1;\n                    if (t > 1) t -= 1;\n                    if (t < 1 / 6) return p + (q - p) * 6 * t;\n                    if (t < 1 / 2) return q;\n                    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n                    return p;\n                }\n\n                if (s === 0) {\n                    r = g = b = l; // achromatic\n                }\n                else {\n                    let q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n                    let p = 2 * l - q;\n                    r = hue2rgb(p, q, h + 1 / 3);\n                    g = hue2rgb(p, q, h);\n                    b = hue2rgb(p, q, h - 1 / 3);\n                }\n\n                return {r: r * 255, g: g * 255, b: b * 255};\n            }\n\n            return new (function (_color) {\n                this._originalValue = _color;\n                _color = convertObject(_color);\n                this.r = _color.r;\n                this.g = _color.g;\n                this.b = _color.b;\n                this.a = _color.a || 1;\n                this._format = _color.format;\n                this._hex = convertToHex(this.r) + convertToHex(this.g) + convertToHex(this.b);\n\n                this.getHexValue = function () {\n                    return this._hex;\n                };\n\n                this.lighten = function (amount) {\n                    amount = (amount === 0) ? 0 : (amount || 10);\n                    let hsl = rgbToHsl(this.r, this.g, this.b), rgb = {};\n\n                    hsl.l += amount / 100;\n                    hsl.l = Math.min(1, Math.max(0, hsl.l));\n                    hsl.h = hsl.h * 360;\n\n                    rgb = hslToRgb(hsl.h, convertToPercentage(hsl.s), convertToPercentage(hsl.l));\n\n                    return color('rgba(' + convertTo255(rgb.r) + ', ' + convertTo255(rgb.g)+ ', ' + convertTo255(rgb.b) + ', ' + this.a + ')');\n                };\n\n                this.darken = function (amount) {\n                    amount = (amount === 0) ? 0 : (amount || 10);\n                    let hsl = rgbToHsl(this.r, this.g, this.b), rgb = {};\n\n                    hsl.l -= amount / 100;\n                    hsl.l = Math.min(1, Math.max(0, hsl.l));\n                    hsl.h = hsl.h * 360;\n\n                    rgb = hslToRgb(hsl.h, convertToPercentage(hsl.s), convertToPercentage(hsl.l));\n\n                    return color('rgba(' + convertTo255(rgb.r) + ', ' + convertTo255(rgb.g)+ ', ' + convertTo255(rgb.b) + ', ' + this.a + ')');\n                };\n\n                this.getBrightness = function () {\n                    return (this.r * 299 + this.g * 587 + this.b * 114) / 1000;\n                };\n\n                this.isDark = function() {\n                    return this.getBrightness() < 128;\n                };\n\n                this.isLight = function() {\n                    return !this.isDark();\n                };\n\n                this.getHsl = function () {\n                    let hsl = rgbToHsl(this.r, this.g, this.b);\n                    hsl.l = Math.min(1, Math.max(0, hsl.l));\n                    hsl.h = hsl.h * 360;\n                    return {\n                        h: hsl.h,\n                        s: hsl.s,\n                        l: hsl.l\n                    }\n                };\n\n            })(_hexColor);\n        }\n\n        return {\n            alert: alert,\n            each: each,\n            map: map,\n            search: search,\n            reduce: reduce,\n            reduceRight: reduceRight,\n            filter: filter,\n            sum: sum,\n            avg: avg,\n            toJson: toJson,\n            parseJson: parseJson,\n            first: first,\n            last: last,\n            deepCopy: deepCopy,\n\n            left: left,\n            right: right,\n            getType: getType,\n            isWindow: isWindow,\n            isElement: isElement,\n            isObject: isObject,\n            isArray: isArray,\n            isFunction: isFunction,\n            isString: isString,\n            isNumber: isNumber,\n            isNodelist: isNodelist,\n            isUndefined: isUndefined,\n            isNothing: isNothing,\n            setCookie: setCookie,\n            getCookie: getCookie,\n            camelCase: camelCase,\n            snakeCase: snakeCase,\n            number: number,\n            toArray: toArray,\n            merge: merge,\n            param: param,\n            error: error,\n            date: date,\n            dday: dday,\n            daysOfMonth: daysOfMonth,\n            weeksOfMonth: weeksOfMonth,\n            setDigit: setDigit,\n            times: times,\n            findParentNode: findParentNode,\n            cssNumber: cssNumber,\n            css: css,\n            isDate: isDate,\n            isDateFormat: isDateFormat,\n            stopEvent: stopEvent,\n            selectRange: selectRange,\n            debounce: debounce,\n            throttle: throttle,\n            escapeHtml: escapeHtml,\n            unescapeHtml: unescapeHtml,\n\n            string: string,\n            color: color\n        }\n    })();\n\n    if (typeof module === \"object\" && typeof module.exports === \"object\") {\n        module.exports = ax5;\n    } else {\n        root.ax5 = (function () {\n            return ax5;\n        })(); // ax5.ui에 연결\n    }\n\n}).call(typeof window !== \"undefined\" ? window : this);\n","ax5.def = {};","ax5.info.errorMsg[\"ax5dialog\"] = {\n    \"501\": \"Duplicate call error\"\n};\n\nax5.info.errorMsg[\"ax5picker\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find content key\"\n};\n\nax5.info.errorMsg[\"single-uploader\"] = {\n    \"460\": \"There are no files to be uploaded.\",\n    \"461\": \"There is no uploaded files.\"\n};\n\nax5.info.errorMsg[\"ax5calendar\"] = {\n    \"401\": \"Can not find target element\"\n};\n\nax5.info.errorMsg[\"ax5formatter\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find pattern\"\n};\n\nax5.info.errorMsg[\"ax5menu\"] = {\n    \"501\": \"Can not find menu item\"\n};\n\nax5.info.errorMsg[\"ax5select\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find option\"\n};\n\nax5.info.errorMsg[\"ax5combobox\"] = {\n    \"401\": \"Can not find target element\",\n    \"402\": \"Can not find boundID\",\n    \"501\": \"Can not find option\"\n};","// 필수 Ployfill 확장 구문\n(function () {\n    'use strict';\n    \n    var root = this,\n        re_trim = /^\\s*|\\s*$/g;\n\n    // From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys\n    if (!Object.keys) {\n        Object.keys = (function () {\n            var hwp = Object.prototype.hasOwnProperty,\n                hdeb = !({toString: null}).propertyIsEnumerable('toString'),\n                de = [\n                    'toString',\n                    'toLocaleString',\n                    'valueOf',\n                    'hasOwnProperty',\n                    'isPrototypeOf',\n                    'propertyIsEnumerable',\n                    'constructor'\n                ],\n                del = de.length;\n\n            return function (obj) {\n                if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) throw new TypeError('type err');\n                var r = [], prop, i;\n                for (prop in obj) if (hwp.call(obj, prop)) r.push(prop);\n                if (hdeb) {\n                    for (i = 0; i < del; i++) if (hwp.call(obj, de[i])) r.push(de[i]);\n                }\n                return r;\n            };\n        }());\n    }\n\n    // ES5 15.4.4.18 Array.prototype.forEach ( callbackfn [ , thisArg ] )\n    // From https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/forEach\n    if (!Array.prototype.forEach) {\n        Array.prototype.forEach = function (fun /*, thisp */) {\n            if (this === void 0 || this === null) {\n                throw TypeError();\n            }\n            var t = Object(this);\n            var len = t.length >>> 0;\n            if (typeof fun !== \"function\") {\n                throw TypeError();\n            }\n            var thisp = arguments[1], i;\n            for (i = 0; i < len; i++) {\n                if (i in t) {\n                    fun.call(thisp, t[i], i, t);\n                }\n            }\n        };\n    }\n\n    // ES5 15.3.4.5 Function.prototype.bind ( thisArg [, arg1 [, arg2, ... ]] )\n    // https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function (o) {\n            if (typeof this !== 'function') {\n                throw TypeError(\"function\");\n            }\n            var slice = [].slice,\n                args = slice.call(arguments, 1),\n                self = this,\n                bound = function () {\n                    return self.apply(this instanceof nop ? this : o,\n                        args.concat(slice.call(arguments)));\n                };\n\n            function nop() {}\n\n            nop.prototype = self.prototype;\n            bound.prototype = new nop();\n            return bound;\n        };\n    }\n\n    /*global document */\n    /**\n     * define document.querySelector & document.querySelectorAll for IE7\n     *\n     * A not very fast but small hack. The approach is taken from\n     * http://weblogs.asp.net/bleroy/archive/2009/08/31/queryselectorall-on-old-ie-versions-something-that-doesn-t-work.aspx\n     *\n     */\n    (function () {\n        if (document.querySelectorAll || document.querySelector) {\n            return;\n        }\n        if (!document.createStyleSheet) return;\n        var style = document.createStyleSheet(),\n            select = function (selector, maxCount) {\n                var\n                    all = document.all,\n                    l = all.length,\n                    i,\n                    resultSet = [];\n\n                style.addRule(selector, \"foo:bar\");\n                for (i = 0; i < l; i += 1) {\n                    if (all[i].currentStyle.foo === \"bar\") {\n                        resultSet.push(all[i]);\n                        if (resultSet.length > maxCount) {\n                            break;\n                        }\n                    }\n                }\n                style.removeRule(0);\n                return resultSet;\n            };\n\n        document.querySelectorAll = function (selector) {\n            return select(selector, Infinity);\n        };\n        document.querySelector = function (selector) {\n            return select(selector, 1)[0] || null;\n        };\n    }());\n\n    if (!String.prototype.trim) {\n        (function () {\n            String.prototype.trim = function () {\n                return this.replace(re_trim, '');\n            };\n        })();\n    }\n\n    if (!window.JSON) {\n        window.JSON = {\n            parse: function (sJSON) { return (new Function('', 'return ' + sJSON))(); },\n            stringify: (function () {\n                var r = /[\"]/g, f;\n                return f = function (vContent) {\n                    var result, i, j;\n                    switch (result = typeof vContent) {\n                        case'string':\n                            return '\"' + vContent.replace(r, '\\\\\"') + '\"';\n                        case'number':\n                        case'boolean':\n                            return vContent.toString();\n                        case'undefined':\n                            return 'undefined';\n                        case'function':\n                            return '\"\"';\n                        case'object':\n                            if (!vContent) return 'null';\n                            result = '';\n                            if (vContent.splice) {\n                                for (i = 0, j = vContent.length; i < j; i++) result += ',' + f(vContent[i]);\n                                return '[' + result.substr(1) + ']';\n                            }\n                            else {\n                                for (i in vContent) if (vContent.hasOwnProperty(i) && vContent[i] !== undefined && typeof vContent[i] != 'function') result += ',\"' + i + '\":' + f(vContent[i]);\n                                return '{' + result.substr(1) + '}';\n                            }\n                    }\n                };\n            })()\n        };\n    }\n\n    // splice ie8 <= polyfill\n    (function () {\n        if (!document.documentMode || document.documentMode >= 9) return false;\n        var _splice = Array.prototype.splice;\n        Array.prototype.splice = function () {\n            var args = Array.prototype.slice.call(arguments);\n            if (typeof args[1] === \"undefined\") args[1] = this.length - args[0];\n            return _splice.apply(this, args);\n        };\n    })();\n\n    /**\n     * Shim for \"fixing\" IE's lack of support (IE < 9) for applying slice\n     * on host objects like NamedNodeMap, NodeList, and HTMLCollection\n     * (technically, since host objects have been implementation-dependent,\n     * at least before ES6, IE hasn't needed to work this way).\n     * Also works on strings, fixes IE < 9 to allow an explicit undefined\n     * for the 2nd argument (as in Firefox), and prevents errors when\n     * called on other DOM objects.\n     */\n    (function () {\n        'use strict';\n        var _slice = Array.prototype.slice;\n\n        try {\n            // Can't be used with DOM elements in IE < 9\n            _slice.call(document.documentElement);\n        } catch (e) { // Fails in IE < 9\n            // This will work for genuine arrays, array-like objects,\n            // NamedNodeMap (attributes, entities, notations),\n            // NodeList (e.g., getElementsByTagName), HTMLCollection (e.g., childNodes),\n            // and will not fail on other DOM objects (as do DOM elements in IE < 9)\n            Array.prototype.slice = function(begin, end) {\n                // IE < 9 gets unhappy with an undefined end argument\n                end = (typeof end !== 'undefined') ? end : this.length;\n\n                // For native Array objects, we use the native slice function\n                if (Object.prototype.toString.call(this) === '[object Array]'){\n                    return _slice.call(this, begin, end);\n                }\n\n                // For array like object we handle it ourselves.\n                var i, cloned = [],\n                    size, len = this.length;\n\n                // Handle negative value for \"begin\"\n                var start = begin || 0;\n                start = (start >= 0) ? start : Math.max(0, len + start);\n\n                // Handle negative value for \"end\"\n                var upTo = (typeof end == 'number') ? Math.min(end, len) : len;\n                if (end < 0) {\n                    upTo = len + end;\n                }\n \n                // Actual expected size of the slice\n                size = upTo - start;\n\n                if (size > 0) {\n                    cloned = new Array(size);\n                    if (this.charAt) {\n                        for (i = 0; i < size; i++) {\n                            cloned[i] = this.charAt(start + i);\n                        }\n                    } else {\n                        for (i = 0; i < size; i++) {\n                            cloned[i] = this[start + i];\n                        }\n                    }\n                }\n\n                return cloned;\n            };\n        }\n    }());\n\n    // Console-polyfill. MIT license. https://github.com/paulmillr/console-polyfill\n    // Make it safe to do console.log() always.\n    (function (con) {\n        var prop, method;\n        var empty = {};\n        var dummy = function () {};\n        var properties = 'memory'.split(',');\n        var methods = ('assert,clear,count,debug,dir,dirxml,error,exception,group,' +\n        'groupCollapsed,groupEnd,info,log,markTimeline,profile,profiles,profileEnd,' +\n        'show,table,time,timeEnd,timeline,timelineEnd,timeStamp,trace,warn').split(',');\n        while (prop = properties.pop()) con[prop] = con[prop] || empty;\n        while (method = methods.pop()) con[method] = con[method] || dummy;\n    })(window.console || {}); // Using `this` for web workers.\n\n\n    // Modernizr style test\n    if (!(window.webkitMatchMedia || window.mozMatchMedia || window.oMatchMedia || window.msMatchMedia || window.matchMedia)) {\n        var root = document.getElementsByTagName( 'html' )[0];\n        root.className += ' no-matchmedia';\n    }\n\n    /*! matchMedia() polyfill - Test a CSS media type/query in JS. Authors & copyright (c) 2012: Scott Jehl, Paul Irish, Nicholas Zakas, David Knight. Dual MIT/BSD license */\n    window.matchMedia || (window.matchMedia = function() {\n        \"use strict\";\n\n        // For browsers that support matchMedium api such as IE 9 and webkit\n        var styleMedia = (window.styleMedia || window.media);\n\n        // For those that don't support matchMedium\n        if (!styleMedia) {\n            var style       = document.createElement('style'),\n                script      = document.getElementsByTagName('script')[0],\n                info        = null;\n\n            style.type  = 'text/css';\n            style.id    = 'matchmediajs-test';\n\n            script.parentNode.insertBefore(style, script);\n\n            // 'style.currentStyle' is used by IE <= 8 and 'window.getComputedStyle' for all other browsers\n            info = ('getComputedStyle' in window) && window.getComputedStyle(style, null) || style.currentStyle;\n\n            styleMedia = {\n                matchMedium: function(media) {\n                    var text = '@media ' + media + '{ #matchmediajs-test { width: 1px; } }';\n\n                    // 'style.styleSheet' is used by IE <= 8 and 'style.textContent' for all other browsers\n                    if (style.styleSheet) {\n                        style.styleSheet.cssText = text;\n                    } else {\n                        style.textContent = text;\n                    }\n\n                    // Test if media query is true or false\n                    return info.width === '1px';\n                }\n            };\n        }\n\n        return function(media) {\n            return {\n                matches: styleMedia.matchMedium(media || 'all'),\n                media: media || 'all'\n            };\n        };\n    }());\n\n    /*! matchMedia() polyfill addListener/removeListener extension. Author & copyright (c) 2012: Scott Jehl. Dual MIT/BSD license */\n    (function(){\n        // Bail out for browsers that have addListener support\n        if (window.matchMedia && window.matchMedia('all').addListener) {\n            return false;\n        }\n\n        var localMatchMedia = window.matchMedia,\n            hasMediaQueries = localMatchMedia('only all').matches,\n            isListening     = false,\n            timeoutID       = 0,    // setTimeout for debouncing 'handleChange'\n            queries         = [],   // Contains each 'mql' and associated 'listeners' if 'addListener' is used\n            handleChange    = function(evt) {\n                // Debounce\n                clearTimeout(timeoutID);\n\n                timeoutID = setTimeout(function() {\n                    for (var i = 0, il = queries.length; i < il; i++) {\n                        var mql         = queries[i].mql,\n                            listeners   = queries[i].listeners || [],\n                            matches     = localMatchMedia(mql.media).matches;\n\n                        // Update mql.matches value and call listeners\n                        // Fire listeners only if transitioning to or from matched state\n                        if (matches !== mql.matches) {\n                            mql.matches = matches;\n\n                            for (var j = 0, jl = listeners.length; j < jl; j++) {\n                                listeners[j].call(window, mql);\n                            }\n                        }\n                    }\n                }, 30);\n            };\n\n        window.matchMedia = function(media) {\n            var mql         = localMatchMedia(media),\n                listeners   = [],\n                index       = 0;\n\n            mql.addListener = function(listener) {\n                // Changes would not occur to css media type so return now (Affects IE <= 8)\n                if (!hasMediaQueries) {\n                    return;\n                }\n\n                // Set up 'resize' listener for browsers that support CSS3 media queries (Not for IE <= 8)\n                // There should only ever be 1 resize listener running for performance\n                if (!isListening) {\n                    isListening = true;\n                    window.addEventListener('resize', handleChange, true);\n                }\n\n                // Push object only if it has not been pushed already\n                if (index === 0) {\n                    index = queries.push({\n                        mql         : mql,\n                        listeners   : listeners\n                    });\n                }\n\n                listeners.push(listener);\n            };\n\n            mql.removeListener = function(listener) {\n                for (var i = 0, il = listeners.length; i < il; i++){\n                    if (listeners[i] === listener){\n                        listeners.splice(i, 1);\n                    }\n                }\n            };\n\n            return mql;\n        };\n    }());\n\n    // extend innerWidth ..\n    var html = document.getElementsByTagName('html')[0];\n    var body = document.getElementsByTagName('body')[0];\n\n    /*\n    if (!window.innerWidth) window.innerWidth = html.clientWidth;\n    if (!window.innerHeight) window.innerHeight = html.clientHeight;\n    if (!window.scrollX) window.scrollX = window.pageXOffset || html.scrollLeft;\n    if (!window.scrollY) window.scrollY = window.pageYOffset || html.scrollTop;\n    */\n}.call(window));","/**\n * Refer to this by {@link ax5}.\n * @namespace ax5.ui\n */\n\n/**\n * @class ax5.ui.root\n * @classdesc ax5 ui class\n * @author tom@axisj.com\n * @example\n * ```\n * var myui = new ax5.ui.root();\n * ```\n */\nax5.ui = (function () {\n\n    function axUi() {\n        this.config = {};\n        this.name = \"root\";\n\n        /**\n         * 클래스의 속성 정의 메소드 속성 확장후에 내부에 init 함수를 호출합니다.\n         * @method ax5.ui.root.setConfig\n         * @param {Object} config - 클래스 속성값\n         * @param {Boolean} [callInit=true] - init 함수 호출 여부\n         * @returns {ax5.ui.axUi}\n         * @example\n         * ```\n         * var myui = new ax5.ui.root();\n         * myui.setConfig({\n\t\t * \tid:\"abcd\"\n\t\t * });\n         * ```\n         */\n        this.setConfig = function (cfg, callInit) {\n            jQuery.extend(true, this.config, cfg);\n            if (typeof callInit == \"undefined\" || callInit === true) {\n                this.init();\n            }\n            return this;\n        };\n        this.init = function () {\n            console.log(this.config);\n        };\n\n        this.bindWindowResize = function (callBack) {\n            setTimeout((function () {\n                jQuery(window).resize((function () {\n                    if (this.bindWindowResize__) clearTimeout(this.bindWindowResize__);\n                    this.bindWindowResize__ = setTimeout((function () {\n                        callBack.call(this);\n                    }).bind(this), 10);\n                }).bind(this));\n            }).bind(this), 100);\n        };\n\n        this.stopEvent = function (e) {\n            if (e.preventDefault) e.preventDefault();\n            if (e.stopPropagation) e.stopPropagation();\n            e.cancelBubble = true;\n            return false;\n        };\n\n        this.toString = function () {\n            return this.name + '@' + this.version;\n        };\n\n        // instance init\n        this.main = (function () {\n\n        }).apply(this, arguments);\n\n    }\n\n    /**\n     * @method ax5.ui.addClass\n     * @param {Object} config\n     * @param {String} config.className - name of Class\n     * @param {Object} [config.classStore=ax5.ui] - 클래스가 저장될 경로\n     * @param {Function} [config.superClass=ax5.ui.root]\n     * @param {Function} cls - Class Function\n     */\n    function addClass(config, cls) {\n        if (!config || !config.className) throw 'invalid call';\n        var classStore = (config.classStore) ? config.classStore : ax5.ui;\n        if (!classStore)  throw 'invalid classStore';\n\n        // make ui definition variable\n        ax5.def[config.className] = {\n            version: ax5.info.version\n        };\n\n        var factory = function (cls, arg) {\n            switch (arg.length) {\n                case 0:\n                    return new cls();\n                    break;\n                case 1:\n                    return new cls(arg[0]);\n                    break;\n                case 2:\n                    return new cls(arg[0], arg[1]);\n                    break;\n                case 3:\n                    return new cls(arg[0], arg[1], arg[2]);\n                    break;\n            }\n        };\n        var initInstance = function (name, version, instance) {\n            instance.name = name;\n            instance.version = version;\n            instance.instanceId = ax5.getGuid();\n            return instance;\n        };\n        var initPrototype = function (cls) {\n            var superClass = (config.superClass) ? config.superClass : ax5.ui.root;\n            if (!ax5.util.isFunction(superClass)) throw 'invalid superClass';\n            superClass.call(this); // 부모호출\n            cls.prototype = new superClass(); // 상속\n        };\n        var wrapper = function () {\n            if (!this || !(this instanceof wrapper)) throw 'invalid call';\n            var instance = factory(cls, arguments);\n            return initInstance(config.className, config.version || \"\", instance);\n        };\n        initPrototype.call(this, cls);\n        classStore[config.className] = wrapper;\n    }\n\n    return {\n        root: axUi,\n        addClass: addClass\n    }\n})();\n","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n * https://github.com/thomasJang/mustache.js -- imporove some variables\n */\n\n(function defineMustache(global, factory) {\n\n    factory(global.mustache = {});\n\n}(window.ax5, function mustacheFactory(mustache) {\n\n    var objectToString = Object.prototype.toString;\n    var isArray = Array.isArray || function isArrayPolyfill(object) {\n            return objectToString.call(object) === '[object Array]';\n        };\n\n    function isFunction(object) {\n        return typeof object === 'function';\n    }\n\n    /**\n     * More correct typeof string handling array\n     * which normally returns typeof 'object'\n     */\n    function typeStr(obj) {\n        return isArray(obj) ? 'array' : typeof obj;\n    }\n\n    function escapeRegExp(string) {\n        return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n    }\n\n    /**\n     * Null safe way of checking whether or not an object,\n     * including its prototype, has a given property\n     */\n    function hasProperty(obj, propName) {\n        return obj != null && typeof obj === 'object' && (propName in obj);\n    }\n\n    // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n    // See https://github.com/janl/mustache.js/issues/189\n    var regExpTest = RegExp.prototype.test;\n\n    function testRegExp(re, string) {\n        return regExpTest.call(re, string);\n    }\n\n    var nonSpaceRe = /\\S/;\n\n    function isWhitespace(string) {\n        return !testRegExp(nonSpaceRe, string);\n    }\n\n    var entityMap = {\n        '&': '&amp;', '<': '&lt;', '>': '&gt;', '\"': '&quot;', \"'\": '&#39;', '/': '&#x2F;'\n    };\n\n    function escapeHtml(string) {\n        return String(string).replace(/[&<>\"'\\/]/g, function fromEntityMap(s) {\n            return entityMap[s];\n        });\n    }\n\n    var whiteRe = /\\s*/;\n    var spaceRe = /\\s+/;\n    var equalsRe = /\\s*=/;\n    var curlyRe = /\\s*\\}/;\n    var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n    /**\n     * Breaks up the given `template` string into a tree of tokens. If the `tags`\n     * argument is given here it must be an array with two string values: the\n     * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n     * course, the default is to use mustaches (i.e. mustache.tags).\n     *\n     * A token is an array with at least 4 elements. The first element is the\n     * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n     * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n     * all text that appears outside a symbol this element is \"text\".\n     *\n     * The second element of a token is its \"value\". For mustache tags this is\n     * whatever else was inside the tag besides the opening symbol. For text tokens\n     * this is the text itself.\n     *\n     * The third and fourth elements of the token are the start and end indices,\n     * respectively, of the token in the original template.\n     *\n     * Tokens that are the root node of a subtree contain two more elements: 1) an\n     * array of tokens in the subtree and 2) the index in the original template at\n     * which the closing tag for that section begins.\n     */\n    function parseTemplate(template, tags) {\n        if (!template)\n            return [];\n\n        var sections = [];     // Stack to hold section tokens\n        var tokens = [];       // Buffer to hold the tokens\n        var spaces = [];       // Indices of whitespace tokens on the current line\n        var hasTag = false;    // Is there a {{tag}} on the current line?\n        var nonSpace = false;  // Is there a non-space char on the current line?\n\n        // Strips all whitespace tokens array for the current line\n        // if there was a {{#tag}} on it and otherwise only space.\n        function stripSpace() {\n            if (hasTag && !nonSpace) {\n                while (spaces.length)\n                    delete tokens[spaces.pop()];\n            }\n            else {\n                spaces = [];\n            }\n\n            hasTag = false;\n            nonSpace = false;\n        }\n\n        var openingTagRe, closingTagRe, closingCurlyRe;\n\n        function compileTags(tagsToCompile) {\n            if (typeof tagsToCompile === 'string')\n                tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n            if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n                throw new Error('Invalid tags: ' + tagsToCompile);\n\n            openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n            closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n            closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n        }\n\n        compileTags(tags || mustache.tags);\n\n        var scanner = new Scanner(template);\n\n        var start, type, value, chr, token, openSection;\n        while (!scanner.eos()) {\n            start = scanner.pos;\n\n            // Match any text between tags.\n            value = scanner.scanUntil(openingTagRe);\n\n            if (value) {\n                for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n                    chr = value.charAt(i);\n\n                    if (isWhitespace(chr)) {\n                        spaces.push(tokens.length);\n                    }\n                    else {\n                        nonSpace = true;\n                    }\n\n                    tokens.push(['text', chr, start, start + 1]);\n                    start += 1;\n\n                    // Check for whitespace on the current line.\n                    if (chr === '\\n')\n                        stripSpace();\n                }\n            }\n\n            // Match the opening tag.\n            if (!scanner.scan(openingTagRe))\n                break;\n\n            hasTag = true;\n\n            // Get the tag type.\n            type = scanner.scan(tagRe) || 'name';\n            scanner.scan(whiteRe);\n\n            // Get the tag value.\n            if (type === '=') {\n                value = scanner.scanUntil(equalsRe);\n                scanner.scan(equalsRe);\n                scanner.scanUntil(closingTagRe);\n            }\n            else if (type === '{') {\n                value = scanner.scanUntil(closingCurlyRe);\n                scanner.scan(curlyRe);\n                scanner.scanUntil(closingTagRe);\n                type = '&';\n            }\n            else {\n                value = scanner.scanUntil(closingTagRe);\n            }\n\n            // Match the closing tag.\n            if (!scanner.scan(closingTagRe))\n                throw new Error('Unclosed tag at ' + scanner.pos);\n\n            token = [type, value, start, scanner.pos];\n            tokens.push(token);\n\n            if (type === '#' || type === '^') {\n                sections.push(token);\n            }\n            else if (type === '/') {\n                // Check section nesting.\n                openSection = sections.pop();\n\n                if (!openSection)\n                    throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n                if (openSection[1] !== value)\n                    throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n            }\n            else if (type === 'name' || type === '{' || type === '&') {\n                nonSpace = true;\n            }\n            else if (type === '=') {\n                // Set the tags for the next time around.\n                compileTags(value);\n            }\n        }\n\n        // Make sure there are no open sections when we're done.\n        openSection = sections.pop();\n\n        if (openSection)\n            throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n        return nestTokens(squashTokens(tokens));\n    }\n\n    /**\n     * Combines the values of consecutive text tokens in the given `tokens` array\n     * to a single token.\n     */\n    function squashTokens(tokens) {\n        var squashedTokens = [];\n\n        var token, lastToken;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            token = tokens[i];\n\n            if (token) {\n                if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n                    lastToken[1] += token[1];\n                    lastToken[3] = token[3];\n                }\n                else {\n                    squashedTokens.push(token);\n                    lastToken = token;\n                }\n            }\n        }\n\n        return squashedTokens;\n    }\n\n    /**\n     * Forms the given array of `tokens` into a nested tree structure where\n     * tokens that represent a section have two additional items: 1) an array of\n     * all tokens that appear in that section and 2) the index in the original\n     * template that represents the end of that section.\n     */\n    function nestTokens(tokens) {\n        var nestedTokens = [];\n        var collector = nestedTokens;\n        var sections = [];\n\n        var token, section;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            token = tokens[i];\n\n            switch (token[0]) {\n                case '#':\n                case '^':\n                    collector.push(token);\n                    sections.push(token);\n                    collector = token[4] = [];\n                    break;\n                case '/':\n                    section = sections.pop();\n                    section[5] = token[2];\n                    collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n                    break;\n                default:\n                    collector.push(token);\n            }\n        }\n\n        return nestedTokens;\n    }\n\n    /**\n     * A simple string scanner that is used by the template parser to find\n     * tokens in template strings.\n     */\n    function Scanner(string) {\n        this.string = string;\n        this.tail = string;\n        this.pos = 0;\n    }\n\n    /**\n     * Returns `true` if the tail is empty (end of string).\n     */\n    Scanner.prototype.eos = function eos() {\n        return this.tail === '';\n    };\n\n    /**\n     * Tries to match the given regular expression at the current position.\n     * Returns the matched text if it can match, the empty string otherwise.\n     */\n    Scanner.prototype.scan = function scan(re) {\n        var match = this.tail.match(re);\n\n        if (!match || match.index !== 0)\n            return '';\n\n        var string = match[0];\n\n        this.tail = this.tail.substring(string.length);\n        this.pos += string.length;\n\n        return string;\n    };\n\n    /**\n     * Skips all text until the given regular expression can be matched. Returns\n     * the skipped string, which is the entire tail if no match can be made.\n     */\n    Scanner.prototype.scanUntil = function scanUntil(re) {\n        var index = this.tail.search(re), match;\n\n        switch (index) {\n            case -1:\n                match = this.tail;\n                this.tail = '';\n                break;\n            case 0:\n                match = '';\n                break;\n            default:\n                match = this.tail.substring(0, index);\n                this.tail = this.tail.substring(index);\n        }\n\n        this.pos += match.length;\n\n        return match;\n    };\n\n    /**\n     * Represents a rendering context by wrapping a view object and\n     * maintaining a reference to the parent context.\n     */\n    function Context(view, parentContext) {\n        this.view = view;\n        this.cache = {\n            '.': this.view,\n            '@each': function () {\n                var returns = [];\n                for (var k in this) {\n                    returns.push({'@key': k, '@value': this[k]});\n                }\n                return returns;\n            }\n        };\n        this.parent = parentContext;\n    }\n\n    /**\n     * Creates a new context using the given view with this context\n     * as the parent.\n     */\n    Context.prototype.push = function push(view) {\n        return new Context(view, this);\n    };\n\n    /**\n     * Returns the value of the given name in this context, traversing\n     * up the context hierarchy if the value is absent in this context's view.\n     */\n    Context.prototype.lookup = function lookup(name) {\n        var cache = this.cache;\n\n        var value;\n        if (cache.hasOwnProperty(name)) {\n            value = cache[name];\n        }\n        else {\n            var context = this, names, index, lookupHit = false;\n\n            while (context) {\n                if (name.indexOf('.') > 0) {\n                    value = context.view;\n                    names = name.split('.');\n                    index = 0;\n\n                    /**\n                     * Using the dot notion path in `name`, we descend through the\n                     * nested objects.\n                     *\n                     * To be certain that the lookup has been successful, we have to\n                     * check if the last object in the path actually has the property\n                     * we are looking for. We store the result in `lookupHit`.\n                     *\n                     * This is specially necessary for when the value has been set to\n                     * `undefined` and we want to avoid looking up parent contexts.\n                     **/\n                    while (value != null && index < names.length) {\n                        if (index === names.length - 1)\n                            lookupHit = hasProperty(value, names[index]);\n\n                        value = value[names[index++]];\n                    }\n                }\n                else {\n                    value = context.view[name];\n                    lookupHit = hasProperty(context.view, name);\n                }\n\n                if (lookupHit)\n                    break;\n\n                context = context.parent;\n            }\n\n            cache[name] = value;\n        }\n\n        if (isFunction(value))\n            value = value.call(this.view);\n\n        return value;\n    };\n\n    /**\n     * A Writer knows how to take a stream of tokens and render them to a\n     * string, given a context. It also maintains a cache of templates to\n     * avoid the need to parse the same template twice.\n     */\n    function Writer() {\n        this.cache = {};\n    }\n\n    /**\n     * Clears all cached templates in this writer.\n     */\n    Writer.prototype.clearCache = function clearCache() {\n        this.cache = {};\n    };\n\n    /**\n     * Parses and caches the given `template` and returns the array of tokens\n     * that is generated from the parse.\n     */\n    Writer.prototype.parse = function parse(template, tags) {\n        var cache = this.cache;\n        var tokens = cache[template];\n\n        if (tokens == null)\n            tokens = cache[template] = parseTemplate(template, tags);\n\n        return tokens;\n    };\n\n    /**\n     * High-level method that is used to render the given `template` with\n     * the given `view`.\n     *\n     * The optional `partials` argument may be an object that contains the\n     * names and templates of partials that are used in the template. It may\n     * also be a function that is used to load partial templates on the fly\n     * that takes a single argument: the name of the partial.\n     */\n    Writer.prototype.render = function render(template, view, partials) {\n        var tokens = this.parse(template);\n        var context = (view instanceof Context) ? view : new Context(view);\n        return this.renderTokens(tokens, context, partials, template);\n    };\n\n    /**\n     * Low-level method that renders the given array of `tokens` using\n     * the given `context` and `partials`.\n     *\n     * Note: The `originalTemplate` is only ever used to extract the portion\n     * of the original template that was contained in a higher-order section.\n     * If the template doesn't use higher-order sections, this argument may\n     * be omitted.\n     */\n    Writer.prototype.renderTokens = function renderTokens(tokens, context, partials, originalTemplate) {\n        var buffer = '';\n        var token, symbol, value;\n        for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n            value = undefined;\n            token = tokens[i];\n            symbol = token[0];\n\n            if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n            else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n            else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n            else if (symbol === '&') value = this.unescapedValue(token, context);\n            else if (symbol === 'name') value = this.escapedValue(token, context);\n            else if (symbol === 'text') value = this.rawValue(token);\n\n            if (value !== undefined)\n                buffer += value;\n        }\n\n        return buffer;\n    };\n\n    Writer.prototype.renderSection = function renderSection(token, context, partials, originalTemplate) {\n        var self = this;\n        var buffer = '';\n\n        var value = context.lookup(token[1]);\n\n        // This function is used to render an arbitrary template\n        // in the current context by higher-order sections.\n        function subRender(template) {\n            return self.render(template, context, partials);\n        }\n\n        if (!value) return;\n\n        if (isArray(value)) {\n            for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n                if (value[j]) {\n                    if (typeof value[j] === 'object') {\n                        value[j]['@i'] = j;\n                        value[j]['@first'] = (j === 0);\n                    }\n\n                    buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n                }\n            }\n        }\n        else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n            buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n        }\n        else if (isFunction(value)) {\n            if (typeof originalTemplate !== 'string')\n                throw new Error('Cannot use higher-order sections without the original template');\n\n            // Extract the portion of the original template that the section contains.\n            value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n            if (value != null)\n                buffer += value;\n        }\n        else {\n            buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n        }\n        return buffer;\n    };\n\n    Writer.prototype.renderInverted = function renderInverted(token, context, partials, originalTemplate) {\n        var value = context.lookup(token[1]);\n\n        // Use JavaScript's definition of falsy. Include empty arrays.\n        // See https://github.com/janl/mustache.js/issues/186\n        if (!value || (isArray(value) && value.length === 0))\n            return this.renderTokens(token[4], context, partials, originalTemplate);\n    };\n\n    Writer.prototype.renderPartial = function renderPartial(token, context, partials) {\n        if (!partials) return;\n\n        var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n        if (value != null)\n            return this.renderTokens(this.parse(value), context, partials, value);\n    };\n\n    Writer.prototype.unescapedValue = function unescapedValue(token, context) {\n        var value = context.lookup(token[1]);\n        if (value != null)\n            return value;\n    };\n\n    Writer.prototype.escapedValue = function escapedValue(token, context) {\n        var value = context.lookup(token[1]);\n        if (value != null)\n            return mustache.escape(value);\n    };\n\n    Writer.prototype.rawValue = function rawValue(token) {\n        return token[1];\n    };\n\n    mustache.name = 'mustache.js';\n    mustache.version = '2.1.3';\n    mustache.tags = ['{{', '}}'];\n\n    // All high-level mustache.* functions use this writer.\n    var defaultWriter = new Writer();\n\n    /**\n     * Clears all cached templates in the default writer.\n     */\n    mustache.clearCache = function clearCache() {\n        return defaultWriter.clearCache();\n    };\n\n    /**\n     * Parses and caches the given template in the default writer and returns the\n     * array of tokens it contains. Doing this ahead of time avoids the need to\n     * parse templates on the fly as they are rendered.\n     */\n    mustache.parse = function parse(template, tags) {\n        return defaultWriter.parse(template, tags);\n    };\n\n    /**\n     * Renders the `template` with the given `view` and `partials` using the\n     * default writer.\n     */\n    mustache.render = function render(template, view, partials) {\n        if (typeof template !== 'string') {\n            throw new TypeError('Invalid template! Template should be a \"string\" ' + 'but \"' + typeStr(template) + '\" was given as the first ' + 'argument for mustache#render(template, view, partials)');\n        }\n\n        return defaultWriter.render(template, view, partials);\n    };\n\n    // This is here for backwards compatibility with 0.4.x.,\n    /*eslint-disable */ // eslint wants camel cased function name\n    mustache.to_html = function to_html(template, view, partials, send) {\n        /*eslint-enable*/\n\n        var result = mustache.render(template, view, partials);\n\n        if (isFunction(send)) {\n            send(result);\n        }\n        else {\n            return result;\n        }\n    };\n\n    // Export the escaping function so that the user may override it.\n    // See https://github.com/janl/mustache.js/issues/244\n    mustache.escape = escapeHtml;\n\n    // Export these mainly for testing, but also for advanced usage.\n    mustache.Scanner = Scanner;\n    mustache.Context = Context;\n    mustache.Writer = Writer;\n\n}));","// ax5.ui.dialog\n(function () {\n\n    let UI = ax5.ui;\n    let U = ax5.util;\n    let DIALOG;\n\n    UI.addClass({\n        className: \"dialog\"\n    }, (function () {\n        /**\n         * @class ax5dialog\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var dialog = new ax5.ui.dialog();\n         * var mask = new ax5.ui.mask();\n         * dialog.setConfig({\n         *     zIndex: 5000,\n         *     onStateChanged: function () {\n         *         if (this.state === \"open\") {\n         *             mask.open();\n         *         }\n         *         else if (this.state === \"close\") {\n         *             mask.close();\n         *         }\n         *     }\n         * });\n         *\n         * dialog.alert({\n         *     theme: 'default',\n         *     title: 'Alert default',\n         *     msg: theme + ' color'\n         * }, function () {\n         *     console.log(this);\n         * });\n         * ```\n         */\n        let ax5dialog = function () {\n            let self = this, cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                id: 'ax5-dialog-' + this.instanceId,\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n                theme: 'default',\n                width: 300,\n                title: '',\n                msg: '',\n                lang: {\n                    \"ok\": \"ok\", \"cancel\": \"cancel\"\n                },\n                animateTime: 150,\n                autoCloseTime: 0\n            };\n            this.activeDialog = null;\n            this.autoCloseTimer = null;\n            this.queue = [];\n\n            cfg = this.config;\n\n            const onStateChanged = function (opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                }\n                else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                that = null;\n                return true;\n            };\n            /**\n             * @private ax5dialog.getContent\n             * @param {String} dialogId\n             * @param {Object} opts\n             * @returns dialogDisplay\n             */\n            const getContent = function (dialogId, opts) {\n\n                let data = {\n                    dialogId: dialogId,\n                    title: (opts.title || cfg.title || \"\"),\n                    msg: (opts.msg || cfg.msg || \"\").replace(/\\n/g, \"<br/>\"),\n                    input: opts.input,\n                    btns: opts.btns,\n                    '_crlf': function () {\n                        return this.replace(/\\n/g, \"<br/>\");\n                    },\n                    additionalContent: (function (additionalContent) {\n                        if (U.isFunction(additionalContent)) {\n                            return additionalContent.call(opts);\n                        }\n                        else {\n                            return additionalContent;\n                        }\n                    })(opts.additionalContent)\n                };\n\n                try {\n                    return DIALOG.tmpl.get.call(this, \"dialogDisplay\", data);\n                }\n                finally {\n                    data = null;\n                }\n            };\n            /**\n             * @private ax5dialog.open\n             * @param {Object} opts\n             * @param callback\n             */\n            const open = function (opts, callback) {\n                let pos = {}, box;\n\n                opts.id = (opts.id || cfg.id);\n\n                box = {\n                    width: opts.width\n                };\n                jQuery(document.body).append(getContent.call(this, opts.id, opts));\n\n                this.dialogConfig = opts;\n                this.activeDialog = jQuery('#' + opts.id);\n                this.activeDialog.css({width: box.width});\n\n                if (typeof callback === \"undefined\") {\n                    callback = opts.callback;\n                }\n\n                // dialog 높이 구하기 - 너비가 정해지면 높이가 변경 될 것.\n                opts.height = box.height = this.activeDialog.height();\n\n                //- position 정렬\n                if (typeof opts.position === \"undefined\" || opts.position === \"center\") {\n                    pos.top = jQuery(window).height() / 2 - box.height / 2;\n                    pos.left = jQuery(window).width() / 2 - box.width / 2;\n                }\n                else {\n                    pos.left = opts.position.left || 0;\n                    pos.top = opts.position.top || 0;\n                }\n                if (cfg.zIndex) {\n                    pos[\"z-index\"] = cfg.zIndex;\n                }\n                this.activeDialog.css(pos);\n\n                // bind button event\n                if (opts.dialogType === \"prompt\") {\n                    this.activeDialog.find(\"[data-dialog-prompt]\").get(0).focus();\n                }\n                else {\n                    this.activeDialog.find(\"[data-dialog-btn]\").get(0).focus();\n                }\n\n                this.activeDialog.find(\"[data-dialog-btn]\").on(cfg.clickEventName, (function (e) {\n                    btnOnClick.call(this, e || window.event, opts, callback);\n                }).bind(this));\n\n                // bind key event\n                jQuery(window).bind(\"keydown.ax5dialog\", (function (e) {\n                    onKeyup.call(this, e || window.event, opts, callback);\n                }).bind(this));\n\n                jQuery(window).bind(\"resize.ax5dialog\", (function (e) {\n                    align.call(this, e || window.event);\n                }).bind(this));\n\n                onStateChanged.call(this, opts, {\n                    self: this,\n                    state: \"open\"\n                });\n\n                if (opts.autoCloseTime) {\n                    this.autoCloseTimer = setTimeout(function () {\n                        self.close();\n                    }, opts.autoCloseTime);\n                }\n\n                pos = null;\n                box = null;\n            };\n            const align = function (e) {\n                if (!this.activeDialog) return this;\n                let opts = self.dialogConfig,\n                    box = {\n                        width: opts.width,\n                        height: opts.height\n                    };\n\n                //- position 정렬\n                if (typeof opts.position === \"undefined\" || opts.position === \"center\") {\n                    box.top = window.innerHeight / 2 - box.height / 2;\n                    box.left = window.innerWidth / 2 - box.width / 2;\n                }\n                else {\n                    box.left = opts.position.left || 0;\n                    box.top = opts.position.top || 0;\n                }\n                if (box.left < 0) box.left = 0;\n                if (box.top < 0) box.top = 0;\n\n                this.activeDialog.css(box);\n\n                opts = null;\n                box = null;\n\n                return this;\n            };\n            const btnOnClick = function (e, opts, callback, target, k) {\n                let that,\n                    emptyKey = null;\n\n                if (e.srcElement) e.target = e.srcElement;\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-dialog-btn\")) {\n                        return true;\n                    }\n                });\n\n                if (target) {\n                    k = target.getAttribute(\"data-dialog-btn\");\n\n                    that = {\n                        self: this,\n                        key: k, value: opts.btns[k],\n                        dialogId: opts.id,\n                        btnTarget: target\n                    };\n                    if (opts.dialogType === \"prompt\") {\n                        that.input = {};\n                        for (let oi in opts.input) {\n                            that.input[oi] = this.activeDialog.find('[data-dialog-prompt=' + oi + ']').val();\n                            if (opts.input[oi].required && (that.input[oi] == \"\" || that.input[oi] == null)) {\n                                emptyKey = oi;\n                                break;\n                            }\n                        }\n                    }\n                    if (opts.btns[k].onClick) {\n                        opts.btns[k].onClick.call(that, k);\n                    }\n                    else if (opts.dialogType === \"alert\") {\n                        if (callback) callback.call(that, k);\n                        this.close({doNotCallback: true});\n                    }\n                    else if (opts.dialogType === \"confirm\") {\n                        if (callback) callback.call(that, k);\n                        this.close({doNotCallback: true});\n                    }\n                    else if (opts.dialogType === \"prompt\") {\n                        if (k === 'ok') {\n                            if (emptyKey) {\n                                this.activeDialog.find('[data-dialog-prompt=\"' + emptyKey + '\"]').get(0).focus();\n                                return false;\n                            }\n                        }\n                        if (callback) callback.call(that, k);\n                        this.close({doNotCallback: true});\n                    }\n                }\n\n                that = null;\n                opts = null;\n                callback = null;\n                target = null;\n                k = null;\n            };\n            const onKeyup = function (e, opts, callback, target, k) {\n                let that,\n                    emptyKey = null;\n\n                if (e.keyCode == ax5.info.eventKeys.ESC) {\n                    this.close();\n                }\n                if (opts.dialogType === \"prompt\") {\n                    if (e.keyCode == ax5.info.eventKeys.RETURN) {\n                        that = {\n                            self: this,\n                            key: k, value: opts.btns[k],\n                            dialogId: opts.id,\n                            btnTarget: target\n                        };\n                        that.input = {};\n\n                        for (let oi in opts.input) {\n                            that.input[oi] = this.activeDialog.find('[data-dialog-prompt=' + oi + ']').val();\n                            if (opts.input[oi].required && (that.input[oi] == \"\" || that.input[oi] == null)) {\n                                emptyKey = oi;\n                                break;\n                            }\n                        }\n                        if (emptyKey) {\n                            that = null;\n                            emptyKey = null;\n                            return false;\n                        }\n                        if (callback) callback.call(that, k);\n                        this.close({doNotCallback: true});\n                    }\n                }\n\n                that = null;\n                emptyKey = null;\n                opts = null;\n                callback = null;\n                target = null;\n                k = null;\n            };\n\n            /**\n             * Preferences of dialog UI\n             * @method ax5dialog.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {String} [config.theme=\"default\"]\n             * @param {Number} [config.width=300]\n             * @param {String} [config.title=\"\"]\n             * @param {Number} [config.zIndex]\n             * @param {Function} [config.onStateChanged] - `onStateChanged` function can be defined in setConfig method or new ax5.ui.dialog initialization method. However, you can us to define an\n             * event function after initialization, if necessary\n             * @param {Object} [config.lang]\n             * @param {String} [config.lang.ok=\"ok\"]\n             * @param {String} [config.lang.cancel=\"cancel\"]\n             * @param {Number} [config.animateTime=150]\n             * @param {Number} [config.autoCloseTime=0] - 0보다 크면 autoCloseTime 프레임후에 dialog auto close\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * var dialog = new ax5.ui.dialog();\n             * dialog.setConfig({\n             *      title: \"app dialog title\",\n             *      zIndex: 5000,\n             *      onStateChanged: function () {\n             *          if (this.state === \"open\") {\n             *              mask.open();\n             *          }\n             *          else if (this.state === \"close\") {\n             *              mask.close();\n             *          }\n             *      }\n             * });\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                // this.onLoad = cfg.onLoad;\n\n            };\n\n            /**\n             * open the dialog of alert type\n             * @method ax5dialog.alert\n             * @param {Object|String} config - dialog 속성을 json으로 정의하거나 msg만 전달\n             * @param {String} [config.theme=\"default\"]\n             * @param {Number} [config.width=300]\n             * @param {String} [config.title=\"\"]\n             * @param {Number} [config.zIndex]\n             * @param {Function} [config.onStateChanged]\n             * @param {Object} [config.lang]\n             * @param {String} [config.lang.ok=\"ok\"]\n             * @param {String} [config.lang.cancel=\"cancel\"]\n             * @param {Number} [config.animateTime=150]\n             * @param {Number} [config.autoCloseTime=0] - 0보다 크면 autoCloseTime 프레임후에 dialog auto close\n             * @param {Function|String} [config.additionalContent]\n             * @param {Function} [callback] - 사용자 확인 이벤트시 호출될 callback 함수\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * myDialog.alert({\n             *  title: 'app title',\n             *  msg: 'alert'\n             * }, function(){});\n             * ```\n             */\n            this.alert = function (opts, callback, tryCount) {\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    }\n                }\n\n                opts = jQuery.extend(true, {}, cfg, opts);\n                opts.dialogType = \"alert\";\n                opts.theme = (opts.theme || cfg.theme || \"\");\n                opts.callback = callback;\n\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: {label: cfg.lang[\"ok\"], theme: opts.theme}\n                    };\n                }\n\n                if (this.activeDialog) {\n                    this.queue.push(opts);\n                } else {\n                    open.call(this, opts, callback);\n                }\n                return this;\n            };\n\n            /**\n             * open the dialog of confirm type\n             * @method ax5dialog.confirm\n             * @param {Object|String} config - dialog 속성을 json으로 정의하거나 msg만 전달\n             * @param {String} [config.theme=\"default\"]\n             * @param {Number} [config.width=300]\n             * @param {String} [config.title=\"\"]\n             * @param {Number} [config.zIndex]\n             * @param {Function} [config.onStateChanged]\n             * @param {Object} [config.lang]\n             * @param {String} [config.lang.ok=\"ok\"]\n             * @param {String} [config.lang.cancel=\"cancel\"]\n             * @param {Number} [config.animateTime=150]\n             * @param {Number} [config.autoCloseTime=0] - 0보다 크면 autoCloseTime 프레임후에 dialog auto close\n             * @param {Function|String} [config.additionalContent]\n             * @param {Function} [callback] - 사용자 확인 이벤트시 호출될 callback 함수\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * myDialog.confirm({\n             *      title: 'app title',\n             *      msg: 'confirm',\n             *      additionalContent: function () {\n             *          return \"<div style='border:1px solid #ccc;border-radius: 5px;background: #eee;padding: 10px;'>추가정보</div>\";\n             *      }\n             * }, function(){});\n             * ```\n             */\n            this.confirm = function (opts, callback, tryCount) {\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    }\n                }\n\n                opts = jQuery.extend(true, {}, cfg, opts);\n                opts.dialogType = \"confirm\";\n                opts.theme = (opts.theme || cfg.theme || \"\");\n                opts.callback = callback;\n\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: {label: cfg.lang[\"ok\"], theme: opts.theme},\n                        cancel: {label: cfg.lang[\"cancel\"]}\n                    };\n                }\n\n                if (this.activeDialog) {\n                    this.queue.push(opts);\n                } else {\n                    open.call(this, opts, callback);\n                }\n\n                return this;\n            };\n\n            /**\n             * open the dialog of prompt type\n             * @method ax5dialog.prompt\n             * @param {Object|String} config - dialog 속성을 json으로 정의하거나 msg만 전달\n             * @param {String} [config.theme=\"default\"]\n             * @param {Number} [config.width=300]\n             * @param {String} [config.title=\"\"]\n             * @param {Number} [config.zIndex]\n             * @param {Function} [config.onStateChanged]\n             * @param {Object} [config.lang]\n             * @param {String} [config.lang.ok=\"ok\"]\n             * @param {String} [config.lang.cancel=\"cancel\"]\n             * @param {Number} [config.animateTime=150]\n             * @param {Number} [config.autoCloseTime=0] - 0보다 크면 autoCloseTime 프레임후에 dialog auto close\n             * @param {Function|String} [config.additionalContent]\n             * @param {Function} [callback] - 사용자 확인 이벤트시 호출될 callback 함수\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * myDialog.prompt({\n             *  title: 'app title',\n             *  msg: 'alert'\n             * }, function(){});\n             * ```\n             */\n            this.prompt = function (opts, callback, tryCount) {\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    }\n                }\n\n                opts = jQuery.extend(true, {}, cfg, opts);\n                opts.dialogType = \"prompt\";\n                opts.theme = (opts.theme || cfg.theme || \"\");\n                opts.callback = callback;\n\n                if (typeof opts.input === \"undefined\") {\n                    opts.input = {\n                        value: {label: \"\"}\n                    };\n                }\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: {label: cfg.lang[\"ok\"], theme: opts.theme},\n                        cancel: {label: cfg.lang[\"cancel\"]}\n                    };\n                }\n\n                if (this.activeDialog) {\n                    this.queue.push(opts);\n                } else {\n                    open.call(this, opts, callback);\n                }\n\n                return this;\n            };\n\n            /**\n             * close the dialog\n             * @method ax5dialog.close\n             * @returns {ax5dialog}\n             * @example\n             * ```\n             * myDialog.close();\n             * ```\n             */\n            this.close = function (_option) {\n                let opts, that;\n\n                if (this.activeDialog) {\n                    if (this.autoCloseTimer) clearTimeout(this.autoCloseTimer);\n\n                    opts = self.dialogConfig;\n\n                    this.activeDialog.addClass(\"destroy\");\n                    jQuery(window).unbind(\"keydown.ax5dialog\");\n                    jQuery(window).unbind(\"resize.ax5dialog\");\n\n                    setTimeout((function () {\n                        if (this.activeDialog) {\n                            this.activeDialog.remove();\n                            this.activeDialog = null;\n                        }\n\n                        that = {\n                            self: this,\n                            state: \"close\",\n                            dialogId: opts.id\n                        };\n\n                        if (opts.callback && (!_option || !_option.doNotCallback)) {\n                            opts.callback.call(that);\n                        }\n\n                        if (opts && opts.onStateChanged) {\n                            opts.onStateChanged.call(that, that);\n                        }\n                        else if (this.onStateChanged) {\n                            this.onStateChanged.call(that, that);\n                        }\n\n                        if (this.queue && this.queue.length) {\n                            open.call(this, this.queue.shift());\n                        }\n\n                        opts = null;\n                        that = null;\n                    }).bind(this), cfg.animateTime);\n                }\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.dialog_instance = UI.dialog_instance || [];\n                UI.dialog_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n        return ax5dialog;\n    })());\n\n    DIALOG = ax5.ui.dialog;\n})();\n","// ax5.ui.dialog.tmpl\n(function () {\n\n    var DIALOG = ax5.ui.dialog;\n\n    var dialogDisplay = function(columnKeys) {\n        return ` \n        <div id=\"{{dialogId}}\" data-dialog-els=\"root\" class=\"ax5-ui-dialog {{theme}}\">\n            <div class=\"ax-dialog-header\" data-dialog-els=\"header\">\n                {{{title}}}\n            </div>\n            <div class=\"ax-dialog-body\" data-dialog-els=\"body\">\n                <div class=\"ax-dialog-msg\">{{{msg}}}</div>\n                \n                {{#input}}\n                <div class=\"ax-dialog-prompt\">\n                    {{#@each}}\n                    <div class=\"form-group\">\n                    {{#@value.label}}\n                    <label>{{#_crlf}}{{{.}}}{{/_crlf}}</label>\n                    {{/@value.label}}\n                    <input type=\"{{@value.type}}\" placeholder=\"{{@value.placeholder}}\" class=\"form-control {{@value.theme}}\" data-dialog-prompt=\"{{@key}}\" style=\"width:100%;\" value=\"{{@value.value}}\" />\n                    {{#@value.help}}\n                    <p class=\"help-block\">{{#_crlf}}{{.}}{{/_crlf}}</p>\n                    {{/@value.help}}\n                    </div>\n                    {{/@each}}\n                </div>\n                {{/input}}\n                \n                <div class=\"ax-dialog-buttons\" data-dialog-els=\"buttons\">\n                    <div class=\"ax-button-wrap\">\n                    {{#btns}}\n                        {{#@each}}\n                        <button type=\"button\" data-dialog-btn=\"{{@key}}\" class=\"btn btn-{{@value.theme}}\">{{@value.label}}</button>\n                        {{/@each}}\n                    {{/btns}}\n                    </div>\n                </div>\n                \n                {{#additionalContent}}\n                <div data-dialog-els=\"additional-content\">{{{.}}}</div>\n                {{/additionalContent}}\n            </div>\n        </div>  \n        `;\n    };\n\n    DIALOG.tmpl = {\n        \"dialogDisplay\": dialogDisplay,\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(DIALOG.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();","// ax5.ui.mask\n(function () {\n\n    const UI = ax5.ui;\n    const U = ax5.util;\n    let MASK;\n\n    UI.addClass({\n        className: \"mask\"\n    }, (function () {\n        /**\n         * @class ax5mask\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var customMask = function customMask() {\n         *     var cTmpl = '' +\n         *         '<div class=\"ax-mask\" id=\"{{maskId}}\" >' +\n         *         '    <div class=\"ax-mask-bg\" style=\"background-color:red !important;\"></div>' +\n         *         '    <div class=\"ax-mask-content\">' +\n         *         '        {{{body}}}' +\n         *         '    </div>' +\n         *         '</div>';\n         *     return cTmpl;\n         * };\n         * ax5.ui.mask.tmpl.customMask = customMask;\n         *\n         * var mask = new ax5.ui.mask();\n         *\n         * mask.open({\n         *     templateName: 'customMask',\n         *     content: 'custom MASK on target',\n         *     target: $(\"#user-content\").get(0),\n         *     onClick: function(){\n         *         console.log(this);\n         *     }\n         * });\n         * ```\n         */\n        return function () {\n            let self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: '',\n                target: jQuery(document.body).get(0),\n                animateTime: 250\n            };\n            this.maskContent = '';\n            this.status = \"off\";\n\n            cfg = this.config;\n\n            const onStateChanged = function (opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                }\n                else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                opts = null;\n                that = null;\n                return true;\n            };\n            const getBodyTmpl = function (data) {\n                if (typeof data.templateName === \"undefined\") data.templateName = \"defaultMask\";\n                return MASK.tmpl.get.call(this, data.templateName, data);\n            };\n            const setBody = function (content) {\n                this.maskContent = content;\n            };\n\n            /**\n             * Preferences of Mask UI\n             * @method ax5mask.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5mask}\n             * @example\n             * ```\n             * setConfig({\n             *      target : {Element|AX5 nodelist}, // 마스크 처리할 대상\n             *      content : {String}, // 마스크안에 들어가는 내용물\n             *      onStateChanged: function(){} // 마스크 상태변경 시 호출되는 함수 this.type으로 예외처리 가능\n             * }\n             * ```\n             */\n            this.init = function () {\n                // after setConfig();\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                if (this.config.content) setBody.call(this, this.config.content);\n            };\n\n            /**\n             * open mask\n             * target 을 주지 않으면 기본적으로 body 에 마스크가 적용되고 원하는 타겟을 지정해서 마스크를 씌울 수 있습니다.\n             * 기본 정의된 마스크 외에 사용자가 템플릿을 정의해서 마스크를 사용 가능합니다.\n             * @method ax5mask.open\n             * @param {Object} config\n             * @param {String} config\n             * @returns {ax5mask}\n             * @example\n             * ```js\n             * my_mask.open({\n             *     target: document.body,\n             *     content: \"<h1>Loading..</h1>\",\n             *     onStateChanged: function () {\n             *\n             *     }\n             * });\n             *\n             * my_mask.open({\n             *     target: $(\"#mask-target\").get(0), // dom Element\n             *     content: \"<h1>Loading..</h1>\",\n             *     onStateChanged: function () {\n             *\n             *     }\n             * });\n             *\n             *\n             * var customMask = function customMask() {\n             *     var cTmpl = '' +\n             *             '<div class=\"ax-mask\" id=\"{{maskId}}\" >' +\n             *             '    <div class=\"ax-mask-bg\" style=\"background-color:red   !important;\"></div>' +\n             *             '    <div class=\"ax-mask-content\">' +\n             *             '        {{{body}}}' +\n             *             '    </div>' +\n             *             '</div>';\n             *     return cTmpl;\n             * };\n             * ax5.ui.mask.tmpl.customMask = customMask;\n             *\n             * my_mask.open({\n             *     target: $(\"#mask-target\").get(0), // dom Element\n             *     content: \"<h1>Loading..</h1>\",\n             *     \n             *     onStateChanged: function () {\n             *\n             *     }\n             * });\n             * ```\n             */\n            this.open = function (options) {\n\n                if (this.status === \"on\") this.close();\n                if (options && options.content) setBody.call(this, options.content);\n                if (options && typeof options.templateName === \"undefined\") options.templateName = \"defaultMask\";\n                self.maskConfig = jQuery.extend(true, {}, this.config, options);\n\n                let _cfg = self.maskConfig,\n                    target = _cfg.target,\n                    $target = jQuery(target),\n                    maskId = 'ax-mask-' + ax5.getGuid(),\n                    $mask,\n                    css = {},\n                    that = {},\n                    templateName = _cfg.templateName,\n                    body = getBodyTmpl({\n                        theme: _cfg.theme,\n                        maskId: maskId,\n                        body: this.maskContent,\n                        templateName: templateName\n                    });\n\n                jQuery(document.body).append(body);\n\n                // 마스크의 타겟이 html body 가 아니라면\n                if (target && target !== jQuery(document.body).get(0)) {\n                    css = {\n                        position: _cfg.position || \"absolute\",\n                        left: $target.offset().left,\n                        top: $target.offset().top,\n                        width: $target.outerWidth(),\n                        height: $target.outerHeight()\n                    };\n\n\n                    $target.addClass(\"ax-masking\");\n\n                    // 마스크의 타겟이 html body가 아닌경우 window resize 이벤트를 추적하여 엘리먼트 마스크의 CSS 속성 변경\n                    jQuery(window).on(\"resize.ax5mask-\" + this.instanceId, (function (_$target) {\n                        this.align();\n                    }).bind(this));\n                }\n\n                if (typeof self.maskConfig.zIndex !== \"undefined\") {\n                    css[\"z-index\"] = self.maskConfig.zIndex;\n                }\n\n                this.$mask = $mask = jQuery(\"#\" + maskId);\n                this.$target = $target;\n                this.status = \"on\";\n                $mask.css(css);\n\n                if (_cfg.onClick) {\n                    $mask.on(\"click\", function (e) {\n                        that = {\n                            self: self,\n                            state: \"open\",\n                            type: \"click\"\n                        };\n                        self.maskConfig.onClick.call(that, that);\n                    });\n                }\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"open\"\n                });\n\n                options = null;\n                _cfg = null;\n                target = null;\n                $target = null;\n                maskId = null;\n                $mask = null;\n                css = null;\n                that = null;\n                templateName = null;\n                body = null;\n\n                return this;\n            };\n\n            /**\n             * close mask\n             * @method ax5mask.close\n             * @param {Number} [_delay=0]\n             * @returns {ax5mask}\n             * @example\n             * ```\n             * my_mask.close();\n             * ```\n             */\n            this.close = function (_delay) {\n                if (this.$mask) {\n                    let _close = function () {\n                        this.status = \"off\";\n                        this.$mask.remove();\n                        this.$target.removeClass(\"ax-masking\");\n\n                        onStateChanged.call(this, null, {\n                            self: this,\n                            state: \"close\"\n                        });\n\n                        jQuery(window).off(\"resize.ax5mask-\" + this.instanceId);\n                    };\n\n                    if (_delay) {\n                        setTimeout((function () {\n                            _close.call(this);\n                        }).bind(this), _delay);\n                    } else {\n                        _close.call(this);\n                    }\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5mask.fadeOut\n             * @returns {ax5mask}\n             */\n            this.fadeOut = function () {\n                if (this.$mask) {\n                    let _close = function () {\n                        this.status = \"off\";\n                        this.$mask.remove();\n                        this.$target.removeClass(\"ax-masking\");\n\n                        onStateChanged.call(this, null, {\n                            self: this,\n                            state: \"close\"\n                        });\n\n                        jQuery(window).off(\"resize.ax5mask-\" + this.instanceId);\n                    };\n\n\n                    this.$mask.addClass(\"fade-out\");\n                    setTimeout((function () {\n                        _close.call(this);\n                    }).bind(this), cfg.animateTime);\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5mask.align\n             * @returns {ax5mask}\n             */\n            this.align = function () {\n                if (this.maskConfig && this.maskConfig.target && this.maskConfig.target !== jQuery(document.body).get(0)) {\n                    try {\n                        var css = {\n                            position: this.maskConfig.position || \"absolute\",\n                            left: this.$target.offset().left,\n                            top: this.$target.offset().top,\n                            width: this.$target.outerWidth(),\n                            height: this.$target.outerHeight()\n                        };\n                        this.$mask.css(css);\n                    } catch (e) {\n\n                    }\n                }\n                return this;\n            };\n\n\n            this.pullRequest = function () {\n                console.log(\"test pullRequest01\");\n                console.log(\"test pullRequest02\");\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.mask_instance = UI.mask_instance || [];\n                UI.mask_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n    })());\n    MASK = ax5.ui.mask;\n})();","// ax5.ui.mask.tmpl\n(function () {\n\n    var MASK = ax5.ui.mask;\n\n    var defaultMask = function(columnKeys) {\n        return `\n            <div class=\"ax-mask {{theme}}\" id=\"{{maskId}}\">\n                <div class=\"ax-mask-bg\"></div>\n                <div class=\"ax-mask-content\">\n                    <div class=\"ax-mask-body\">\n                    {{{body}}}\n                    </div>\n                </div>\n            </div>\n        `;\n    };\n\n    MASK.tmpl = {\n        \"defaultMask\": defaultMask,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(MASK.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();","// ax5.ui.toast\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var TOAST;\n\n    UI.addClass({\n        className: \"toast\"\n    }, (function () {\n        /**\n         * @class ax5toast\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```\n         * ```js\n         * var toast = new ax5.ui.toast();\n         * toast.setConfig({\n         *     icon: '<i class=\"fa fa-bug\"></i>',\n         *     containerPosition: \"bottom-right\",\n         *     closeIcon: '<i class=\"fa fa-times\"></i>'\n         * });\n         *\n         * toast.onStateChanged = function(){\n         *     console.log(this);\n         * };\n         *\n         * toast.push({\n         *     icon: '<i class=\"fa fa-book\"></i>',\n         *     msg:\"999999\"\n         * });\n         *\n         * toast.push({\n         *     theme: theme,\n         *     msg: 'toast message'\n         * });\n         * ```\n         */\n        var ax5toast = function () {\n            var\n                self = this,\n                cfg,\n                toastSeq = 0, toastSeqClear = null;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchstart\" : \"click\"),\n                theme: 'default',\n                width: 300,\n                icon: '',\n                closeIcon: '',\n                msg: '',\n                lang: {\n                    \"ok\": \"ok\", \"cancel\": \"cancel\"\n                },\n                displayTime: 3000,\n                animateTime: 250,\n                containerPosition: \"bottom-left\"\n            };\n            this.toastContainer = null;\n            this.queue = [];\n\n            cfg = this.config;\n\n            var\n                onStateChanged = function (opts, that) {\n                    if (opts && opts.onStateChanged) {\n                        opts.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n\n                    opts = null;\n                    that = null;\n                    return true;\n                },\n                /**\n                 * @method ax5toast.getContent\n                 * @param {String} toastId\n                 * @param {Object} opts\n                 * @returns toastDisplay\n                 * @example\n                 * ```js\n                 * ax5toast.getContent('ax5-toast-3-1', opts);\n                 * ```\n                 */\n                getContent = function (toastId, opts) {\n\n                    var\n                        data = {\n                            toastId: toastId,\n                            theme: opts.theme,\n                            icon: opts.icon,\n                            msg: (opts.msg || \"\").replace(/\\n/g, \"<br/>\"),\n                            btns: opts.btns,\n                            closeIcon: opts.closeIcon\n                        };\n\n                    try {\n                        return TOAST.tmpl.get.call(this, \"toastDisplay\", data);\n                    }\n                    finally {\n                        toastId = null;\n                        data = null;\n                    }\n                },\n                /**\n                 * @method ax5toast.open\n                 * @param opts\n                 * @param callBack\n                 * @returns {ax5toast}\n                 */\n                open = function (opts, callBack) {\n                    if (toastSeqClear) clearTimeout(toastSeqClear);\n\n                    var\n                        toastBox,\n                        box = {\n                            width: opts.width\n                        };\n\n                    opts.id = 'ax5-toast-' + self.containerId + '-' + (++toastSeq);\n                    if (jQuery('#' + opts.id).get(0)) return this;\n\n                    if (U.left(cfg.containerPosition, '-') == 'bottom') {\n                        this.toastContainer.append(getContent(opts.id, opts));\n                    }\n                    else {\n                        this.toastContainer.prepend(getContent(opts.id, opts));\n                    }\n\n                    toastBox = jQuery('#' + opts.id);\n                    toastBox.css({width: box.width});\n                    opts.toastBox = toastBox;\n                    this.queue.push(opts);\n\n                    onStateChanged.call(this, opts, {\n                        self: this,\n                        state: \"open\",\n                        toastId: opts.id\n                    });\n\n                    if (opts.toastType === \"push\") {\n                        // 자동 제거 타이머 시작\n                        setTimeout((function () {\n                            this.close(opts, callBack);\n                        }).bind(this), cfg.displayTime);\n\n                        toastBox.find(\"[data-ax-toast-btn]\").on(cfg.clickEventName, (function (e) {\n                            btnOnClick.call(this, e || window.event, opts, toastBox, callBack);\n                        }).bind(this));\n                    }\n                    else if (opts.toastType === \"confirm\") {\n                        toastBox.find(\"[data-ax-toast-btn]\").on(cfg.clickEventName, (function (e) {\n                            btnOnClick.call(this, e || window.event, opts, toastBox, callBack);\n                        }).bind(this));\n                    }\n\n                    box = null;\n                },\n                btnOnClick = function (e, opts, toastBox, callBack, target, k) {\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-ax-toast-btn\")) {\n                            return true;\n                        }\n                    });\n\n                    if (target) {\n                        k = target.getAttribute(\"data-ax-toast-btn\");\n\n                        var that = {\n                            key: k, value: (opts.btns) ? opts.btns[k] : k,\n                            toastId: opts.id,\n                            btn_target: target\n                        };\n\n                        if (opts.btns && opts.btns[k].onClick) {\n                            opts.btns[k].onClick.call(that, k);\n                        }\n                        else if (opts.toastType === \"push\") {\n                            if (callBack) callBack.call(that, k);\n                            this.close(opts, callBack);\n                        }\n                        else if (opts.toastType === \"confirm\") {\n                            if (callBack) callBack.call(that, k);\n                            this.close(opts, callBack);\n                        }\n                    }\n\n                    e = null;\n                    opts = null;\n                    toastBox = null;\n                    callBack = null;\n                    target = null;\n                    k = null;\n                };\n\n            /**\n             * Preferences of toast UI\n             * @method ax5toast.set_config\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5toast}\n             * @example\n             * ```\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                // after set_config();\n                self.containerId = ax5.getGuid();\n                var styles = [];\n                if (cfg.zIndex) {\n                    styles.push(\"z-index:\" + cfg.zIndex);\n                }\n                jQuery(document.body).append('<div class=\"ax5-ui-toast-container ' + cfg.containerPosition + '\" data-toast-container=\"' +\n                    '' + self.containerId + '\" style=\"' + styles.join(\";\") + '\"></div>');\n                this.toastContainer = jQuery('[data-toast-container=\"' + self.containerId + '\"]');\n            };\n\n            /**\n             * @method ax5toast.push\n             * @param opts\n             * @param callBack\n             * @returns {ax5toast}\n             */\n            this.push = function (opts, callBack) {\n                if (!self.containerId) {\n                    this.init();\n                }\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    }\n                }\n                opts.toastType = \"push\";\n\n                self.dialogConfig = {};\n                jQuery.extend(true, self.dialogConfig, cfg, opts);\n                opts = self.dialogConfig;\n\n                open.call(this, opts, callBack);\n\n                opts = null;\n                callBack = null;\n                return this;\n            };\n\n            /**\n             * @method ax5toast.confirm\n             * @param opts\n             * @param callBack\n             * @returns {ax5toast}\n             */\n            this.confirm = function (opts, callBack) {\n                if (!self.containerId) {\n                    this.init();\n                }\n                if (U.isString(opts)) {\n                    opts = {\n                        title: cfg.title,\n                        msg: opts\n                    }\n                }\n                opts.toastType = \"confirm\";\n\n                self.dialogConfig = {};\n                jQuery.extend(true, self.dialogConfig, cfg, opts);\n                opts = self.dialogConfig;\n\n                if (typeof opts.btns === \"undefined\") {\n                    opts.btns = {\n                        ok: {label: cfg.lang[\"ok\"], theme: opts.theme}\n                    };\n                }\n                open.call(this, opts, callBack);\n\n                opts = null;\n                callBack = null;\n                return this;\n            };\n\n            /**\n             * close the toast\n             * @method ax5toast.close\n             * @returns {ax5toast}\n             * @example\n             * ```\n             * my_toast.close();\n             * ```\n             */\n            this.close = function (opts, callBack) {\n                if (typeof opts === \"undefined\") {\n                    opts = U.last(this.queue);\n                }\n\n                var toastBox = opts.toastBox;\n                toastBox.addClass((opts.toastType == \"push\") ? \"removed\" : \"destroy\");\n                this.queue = U.filter(this.queue, function () {\n                    return opts.id != this.id;\n                });\n                setTimeout((function () {\n                    var that = {\n                        toastId: opts.id\n                    };\n\n                    toastBox.remove();\n                    if (callBack) callBack.call(that);\n\n                    that = {\n                        self: this,\n                        state: \"close\",\n                        toastId: opts.id\n                    };\n                    onStateChanged.call(this, opts, that);\n\n                    // 3초후에도 아무 일이 없다면 완전히 제거\n                    if (this.queue.length === 0) {\n                        if (toastSeqClear) clearTimeout(toastSeqClear);\n                        toastSeqClear = setTimeout((function () {\n                            /// console.log(\"try clear seq\");\n                            if (this.queue.length === 0) toastSeq = 0;\n                        }).bind(this), 3000);\n                    }\n\n                    that = null;\n                    opts = null;\n                    callBack = null;\n                    toastBox = null;\n                }).bind(this), cfg.animateTime);\n\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.toast_instance = UI.toast_instance || [];\n                UI.toast_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n        return ax5toast;\n    })());\n    TOAST = ax5.ui.toast;\n})();","// ax5.ui.toast.tmpl\n(function () {\n\n    var TOAST = ax5.ui.toast;\n\n    var toastDisplay = function(columnKeys) {\n        return `\n        <div id=\"{{toastId}}\" data-ax5-ui=\"toast\" class=\"ax5-ui-toast {{theme}}\">\n            {{#icon}}\n            <div class=\"ax-toast-icon\">{{{.}}}</div>\n            {{/icon}}\n            <div class=\"ax-toast-body\">{{{msg}}}</div>\n            {{#btns}}\n            <div class=\"ax-toast-buttons\">\n                <div class=\"ax-button-wrap\">\n                    {{#@each}}\n                    <button type=\"button\" data-ax-toast-btn=\"{{@key}}\" class=\"btn btn-{{@value.theme}}\">{{{@value.label}}}</button>\n                    {{/@each}}\n                </div>\n            </div>\n            {{/btns}}\n            {{^btns}}\n                <a class=\"ax-toast-close\" data-ax-toast-btn=\"ok\">{{{closeIcon}}}</a>\n            {{/btns}}\n            <div style=\"clear:both;\"></div>\n        </div>`;\n    };\n\n    TOAST.tmpl = {\n        \"toastDisplay\": toastDisplay,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(TOAST.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();","/*\n * Copyright (c) 2016. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n// ax5.ui.modal\n(function() {\n  const UI = ax5.ui;\n  const U = ax5.util;\n  let MODAL;\n\n  UI.addClass(\n    {\n      className: \"modal\"\n    },\n    (function() {\n      /**\n       * @class ax5modal\n       * @alias ax5.ui.modal\n       * @author tom@axisj.com\n       */\n      return function() {\n        let self = this,\n          cfg,\n          ENM = {\n            mousedown: \"mousedown\",\n            mousemove: \"mousemove\",\n            mouseup: \"mouseup\"\n          },\n          getMousePosition = function(e) {\n            let mouseObj = e;\n            if (\"changedTouches\" in e && e.changedTouches) {\n              mouseObj = e.changedTouches[0];\n            }\n            return {\n              clientX: mouseObj.clientX,\n              clientY: mouseObj.clientY\n            };\n          };\n\n        this.instanceId = ax5.getGuid();\n        this.config = {\n          id: \"ax5-modal-\" + this.instanceId,\n          position: {\n            left: \"center\",\n            top: \"middle\",\n            margin: 10\n          },\n          minimizePosition: \"bottom-right\",\n          clickEventName:\n            \"ontouchstart\" in document.documentElement ? \"touchstart\" : \"click\",\n          theme: \"default\",\n          width: 300,\n          height: 400,\n          closeToEsc: true,\n          disableDrag: false,\n          disableResize: false,\n          animateTime: 250,\n          iframe: false\n        };\n        this.activeModal = null;\n        this.watingModal = false;\n        this.$ = {}; // UI inside of the jQuery object store\n\n        cfg = this.config; // extended config copy cfg\n\n        let onStateChanged = function(opts, that) {\n            var eventProcessor = {\n              resize: function(that) {\n                if (opts && opts.onResize) {\n                  opts.onResize.call(that, that);\n                } else if (this.onResize) {\n                  this.onResize.call(that, that);\n                }\n              },\n              move: function() {}\n            };\n            if (that.state in eventProcessor) {\n              eventProcessor[that.state].call(this, that);\n            }\n\n            if (opts && opts.onStateChanged) {\n              opts.onStateChanged.call(that, that);\n            } else if (this.onStateChanged) {\n              this.onStateChanged.call(that, that);\n            }\n            return true;\n          },\n          getContent = function(modalId, opts) {\n            let data = {\n              modalId: modalId,\n              theme: opts.theme,\n              header: opts.header,\n              fullScreen: opts.fullScreen ? \"fullscreen\" : \"\",\n              styles: \"\",\n              iframe: opts.iframe,\n              iframeLoadingMsg: opts.iframeLoadingMsg,\n              disableResize: opts.disableResize\n            };\n\n            if (opts.zIndex) {\n              data.styles += \"z-index:\" + opts.zIndex + \";\";\n            }\n            if (opts.absolute) {\n              data.styles += \"position:absolute;\";\n            }\n\n            if (data.iframe && typeof data.iframe.param === \"string\") {\n              data.iframe.param = ax5.util.param(data.iframe.param);\n            }\n\n            return MODAL.tmpl.get.call(this, \"content\", data, {});\n          },\n          open = function(opts, callback) {\n            let that;\n            jQuery(document.body).append(getContent.call(this, opts.id, opts));\n\n            this.activeModal = jQuery(\"#\" + opts.id);\n            // 파트수집\n            this.$ = {\n              root: this.activeModal,\n              header: this.activeModal.find('[data-modal-els=\"header\"]'),\n              body: this.activeModal.find('[data-modal-els=\"body\"]')\n            };\n\n            if (opts.iframe) {\n              this.$[\"iframe-wrap\"] = this.activeModal.find(\n                '[data-modal-els=\"iframe-wrap\"]'\n              );\n              this.$[\"iframe\"] = this.activeModal.find(\n                '[data-modal-els=\"iframe\"]'\n              );\n              this.$[\"iframe-form\"] = this.activeModal.find(\n                '[data-modal-els=\"iframe-form\"]'\n              );\n              this.$[\"iframe-loading\"] = this.activeModal.find(\n                '[data-modal-els=\"iframe-loading\"]'\n              );\n            } else {\n              this.$[\"body-frame\"] = this.activeModal.find(\n                '[data-modal-els=\"body-frame\"]'\n              );\n            }\n\n            //- position 정렬\n            this.align();\n\n            that = {\n              self: this,\n              id: opts.id,\n              theme: opts.theme,\n              width: opts.width,\n              height: opts.height,\n              state: \"open\",\n              $: this.$\n            };\n\n            if (opts.iframe) {\n              this.$[\"iframe-wrap\"].css({ height: opts.height });\n              this.$[\"iframe\"].css({ height: opts.height });\n\n              // iframe content load\n              this.$[\"iframe-form\"].attr({ method: opts.iframe.method });\n              this.$[\"iframe-form\"].attr({ target: opts.id + \"-frame\" });\n              this.$[\"iframe-form\"].attr({ action: opts.iframe.url });\n              this.$[\"iframe\"].on(\n                \"load\",\n                function() {\n                  that.state = \"load\";\n                  if (opts.iframeLoadingMsg) {\n                    this.$[\"iframe-loading\"].hide();\n                  }\n                  onStateChanged.call(this, opts, that);\n                }.bind(this)\n              );\n              if (!opts.iframeLoadingMsg) {\n                this.$[\"iframe\"].show();\n              }\n              this.$[\"iframe-form\"].submit();\n            }\n\n            if (callback) callback.call(that, that);\n\n            if (!this.watingModal) {\n              onStateChanged.call(this, opts, that);\n            }\n\n            // bind key event\n            if (opts.closeToEsc) {\n              jQuery(window).bind(\n                \"keydown.ax-modal\",\n                function(e) {\n                  onkeyup.call(this, e || window.event);\n                }.bind(this)\n              );\n            }\n\n            jQuery(window).bind(\n              \"resize.ax-modal\",\n              function(e) {\n                this.align(null, e || window.event);\n              }.bind(this)\n            );\n\n            this.$.header\n              .off(ENM[\"mousedown\"])\n              .off(\"dragstart\")\n              .on(ENM[\"mousedown\"], function(e) {\n                /// 이벤트 필터링 추가 : 버튼엘리먼트로 부터 발생된 이벤트이면 moveModal 시작하지 않도록 필터링\n                let isButton = U.findParentNode(e.target, function(_target) {\n                  if (_target.getAttribute(\"data-modal-header-btn\")) {\n                    return true;\n                  }\n                });\n\n                if (\n                  !opts.isFullScreen &&\n                  !isButton &&\n                  opts.disableDrag != true\n                ) {\n                  self.mousePosition = getMousePosition(e);\n                  moveModal.on.call(self);\n                }\n                if (isButton) {\n                  btnOnClick.call(self, e || window.event, opts);\n                }\n              })\n              .on(\"dragstart\", function(e) {\n                U.stopEvent(e.originalEvent);\n                return false;\n              });\n\n            this.activeModal\n              .off(ENM[\"mousedown\"])\n              .off(\"dragstart\")\n              .on(ENM[\"mousedown\"], \"[data-ax5modal-resizer]\", function(e) {\n                if (opts.disableDrag || opts.isFullScreen) return false;\n                self.mousePosition = getMousePosition(e);\n                resizeModal.on.call(\n                  self,\n                  this.getAttribute(\"data-ax5modal-resizer\")\n                );\n              })\n              .on(\"dragstart\", function(e) {\n                U.stopEvent(e.originalEvent);\n                return false;\n              });\n          },\n          btnOnClick = function(e, opts, callback, target, k) {\n            let that;\n            if (e.srcElement) e.target = e.srcElement;\n\n            target = U.findParentNode(e.target, function(target) {\n              if (target.getAttribute(\"data-modal-header-btn\")) {\n                return true;\n              }\n            });\n\n            if (target) {\n              k = target.getAttribute(\"data-modal-header-btn\");\n\n              that = {\n                self: this,\n                key: k,\n                value: opts.header.btns[k],\n                dialogId: opts.id,\n                btnTarget: target\n              };\n\n              if (opts.header.btns[k].onClick) {\n                opts.header.btns[k].onClick.call(that, k);\n              }\n            }\n\n            that = null;\n            opts = null;\n            callback = null;\n            target = null;\n            k = null;\n          },\n          onkeyup = function(e) {\n            if (e.keyCode == ax5.info.eventKeys.ESC) {\n              this.close();\n            }\n          },\n          alignProcessor = {\n            \"top-left\": function() {\n              this.align({ left: \"left\", top: \"top\" });\n            },\n            \"top-right\": function() {\n              this.align({ left: \"right\", top: \"top\" });\n            },\n            \"bottom-left\": function() {\n              this.align({ left: \"left\", top: \"bottom\" });\n            },\n            \"bottom-right\": function() {\n              this.align({ left: \"right\", top: \"bottom\" });\n            },\n            \"center-middle\": function() {\n              this.align({ left: \"center\", top: \"middle\" });\n            }\n          },\n          moveModal = {\n            on: function() {\n              let modalZIndex = this.activeModal.css(\"z-index\"),\n                modalOffset = this.activeModal.offset(),\n                modalBox = {\n                  width: this.activeModal.outerWidth(),\n                  height: this.activeModal.outerHeight()\n                },\n                windowBox = {\n                  width: jQuery(window).width(),\n                  height: jQuery(window).height(),\n                  scrollLeft: jQuery(document).scrollLeft(),\n                  scrollTop: jQuery(document).scrollTop()\n                },\n                getResizerPosition = function(e) {\n                  self.__dx = e.clientX - self.mousePosition.clientX;\n                  self.__dy = e.clientY - self.mousePosition.clientY;\n\n                  /*\n                  if (minX > modalOffset.left + self.__dx) {\n                    self.__dx = -modalOffset.left;\n                  } else if (maxX < modalOffset.left + self.__dx) {\n                    self.__dx = maxX - modalOffset.left;\n                  }\n\n                  if (minY > modalOffset.top + self.__dy) {\n                    self.__dy = -modalOffset.top;\n                  } else if (maxY < modalOffset.top + self.__dy) {\n                    self.__dy = maxY - modalOffset.top;\n                  }\n                    */\n\n                  return {\n                    left: modalOffset.left + self.__dx,\n                    top: modalOffset.top + self.__dy\n                  };\n                };\n\n              let minX = 0,\n                maxX = windowBox.width - modalBox.width,\n                minY = 0,\n                maxY = windowBox.height - modalBox.height;\n\n              self.__dx = 0; // 변화량 X\n              self.__dy = 0; // 변화량 Y\n\n              // self.resizerBg : body 가 window보다 작을 때 문제 해결을 위한 DIV\n              self.resizerBg = jQuery(\n                '<div class=\"ax5modal-resizer-background\" ondragstart=\"return false;\"></div>'\n              );\n              self.resizer = jQuery(\n                '<div class=\"ax5modal-resizer\" ondragstart=\"return false;\"></div>'\n              );\n              self.resizerBg.css({ zIndex: modalZIndex });\n              self.resizer.css({\n                left: modalOffset.left,\n                top: modalOffset.top,\n                width: modalBox.width,\n                height: modalBox.height,\n                zIndex: modalZIndex + 1\n              });\n\n              jQuery(document.body)\n                .append(self.resizerBg)\n                .append(self.resizer);\n\n              self.activeModal.addClass(\"draged\");\n\n              jQuery(document.body)\n                .on(\n                  ENM[\"mousemove\"] + \".ax5modal-move-\" + this.instanceId,\n                  function(e) {\n                    self.resizer.css(getResizerPosition(e));\n                  }\n                )\n                .on(\n                  ENM[\"mouseup\"] + \".ax5modal-move-\" + this.instanceId,\n                  function(e) {\n                    moveModal.off.call(self);\n                  }\n                )\n                .on(\"mouseleave.ax5modal-move-\" + this.instanceId, function(e) {\n                  moveModal.off.call(self);\n                });\n\n              jQuery(document.body)\n                .attr(\"unselectable\", \"on\")\n                .css(\"user-select\", \"none\")\n                .on(\"selectstart\", false);\n            },\n            off: function() {\n              let setModalPosition = function() {\n                let box = this.resizer.offset();\n                if (!this.modalConfig.absolute) {\n                  box.left -= jQuery(document).scrollLeft();\n                  box.top -= jQuery(document).scrollTop();\n                }\n                this.activeModal.css(box);\n                this.modalConfig.left = box.left;\n                this.modalConfig.top = box.top;\n\n                box = null;\n              };\n\n              this.activeModal.removeClass(\"draged\");\n              setModalPosition.call(this);\n\n              this.resizer.remove();\n              this.resizer = null;\n              this.resizerBg.remove();\n              this.resizerBg = null;\n              //this.align();\n\n              jQuery(document.body)\n                .off(ENM[\"mousemove\"] + \".ax5modal-move-\" + this.instanceId)\n                .off(ENM[\"mouseup\"] + \".ax5modal-move-\" + this.instanceId)\n                .off(\"mouseleave.ax5modal-move-\" + this.instanceId);\n\n              jQuery(document.body)\n                .removeAttr(\"unselectable\")\n                .css(\"user-select\", \"auto\")\n                .off(\"selectstart\");\n\n              onStateChanged.call(this, self.modalConfig, {\n                self: this,\n                state: \"move\"\n              });\n            }\n          },\n          resizeModal = {\n            on: function(resizerType) {\n              let modalZIndex = this.activeModal.css(\"z-index\"),\n                modalOffset = this.activeModal.offset(),\n                modalBox = {\n                  width: this.activeModal.outerWidth(),\n                  height: this.activeModal.outerHeight()\n                },\n                windowBox = {\n                  width: jQuery(window).width(),\n                  height: jQuery(window).height(),\n                  scrollLeft: jQuery(document).scrollLeft(),\n                  scrollTop: jQuery(document).scrollTop()\n                },\n                resizerProcessor = {\n                  top: function(e) {\n                    if (minHeight > modalBox.height - self.__dy) {\n                      self.__dy = modalBox.height - minHeight;\n                    }\n\n                    if (e.shiftKey) {\n                      if (minHeight > modalBox.height - self.__dy * 2) {\n                        self.__dy = (modalBox.height - minHeight) / 2;\n                      }\n\n                      return {\n                        left: modalOffset.left,\n                        top: modalOffset.top + self.__dy,\n                        width: modalBox.width,\n                        height: modalBox.height - self.__dy * 2\n                      };\n                    } else if (e.altKey) {\n                      if (minHeight > modalBox.height - self.__dy * 2) {\n                        self.__dy = (modalBox.height - minHeight) / 2;\n                      }\n\n                      return {\n                        left: modalOffset.left + self.__dy,\n                        top: modalOffset.top + self.__dy,\n                        width: modalBox.width - self.__dy * 2,\n                        height: modalBox.height - self.__dy * 2\n                      };\n                    } else {\n                      return {\n                        left: modalOffset.left,\n                        top: modalOffset.top + self.__dy,\n                        width: modalBox.width,\n                        height: modalBox.height - self.__dy\n                      };\n                    }\n                  },\n                  bottom: function(e) {\n                    if (minHeight > modalBox.height + self.__dy) {\n                      self.__dy = -modalBox.height + minHeight;\n                    }\n\n                    if (e.shiftKey) {\n                      if (minHeight > modalBox.height + self.__dy * 2) {\n                        self.__dy = (-modalBox.height + minHeight) / 2;\n                      }\n\n                      return {\n                        left: modalOffset.left,\n                        top: modalOffset.top - self.__dy,\n                        width: modalBox.width,\n                        height: modalBox.height + self.__dy * 2\n                      };\n                    } else if (e.altKey) {\n                      if (minHeight > modalBox.height + self.__dy * 2) {\n                        self.__dy = (-modalBox.height + minHeight) / 2;\n                      }\n\n                      return {\n                        left: modalOffset.left - self.__dy,\n                        top: modalOffset.top - self.__dy,\n                        width: modalBox.width + self.__dy * 2,\n                        height: modalBox.height + self.__dy * 2\n                      };\n                    } else {\n                      return {\n                        left: modalOffset.left,\n                        top: modalOffset.top,\n                        width: modalBox.width,\n                        height: modalBox.height + self.__dy\n                      };\n                    }\n                  },\n                  left: function(e) {\n                    if (minWidth > modalBox.width - self.__dx) {\n                      self.__dx = modalBox.width - minWidth;\n                    }\n\n                    if (e.shiftKey) {\n                      if (minWidth > modalBox.width - self.__dx * 2) {\n                        self.__dx = (modalBox.width - minWidth) / 2;\n                      }\n\n                      return {\n                        left: modalOffset.left + self.__dx,\n                        top: modalOffset.top,\n                        width: modalBox.width - self.__dx * 2,\n                        height: modalBox.height\n                      };\n                    } else if (e.altKey) {\n                      if (minWidth > modalBox.width - self.__dx * 2) {\n                        self.__dx = (modalBox.width - minWidth) / 2;\n                      }\n\n                      return {\n                        left: modalOffset.left + self.__dx,\n                        top: modalOffset.top + self.__dx,\n                        width: modalBox.width - self.__dx * 2,\n                        height: modalBox.height - self.__dx * 2\n                      };\n                    } else {\n                      return {\n                        left: modalOffset.left + self.__dx,\n                        top: modalOffset.top,\n                        width: modalBox.width - self.__dx,\n                        height: modalBox.height\n                      };\n                    }\n                  },\n                  right: function(e) {\n                    if (minWidth > modalBox.width + self.__dx) {\n                      self.__dx = -modalBox.width + minWidth;\n                    }\n\n                    if (e.shiftKey) {\n                      if (minWidth > modalBox.width + self.__dx * 2) {\n                        self.__dx = (-modalBox.width + minWidth) / 2;\n                      }\n\n                      return {\n                        left: modalOffset.left - self.__dx,\n                        top: modalOffset.top,\n                        width: modalBox.width + self.__dx * 2,\n                        height: modalBox.height\n                      };\n                    } else if (e.altKey) {\n                      if (minWidth > modalBox.width + self.__dx * 2) {\n                        self.__dx = (-modalBox.width + minWidth) / 2;\n                      }\n\n                      return {\n                        left: modalOffset.left - self.__dx,\n                        top: modalOffset.top - self.__dx,\n                        width: modalBox.width + self.__dx * 2,\n                        height: modalBox.height + self.__dx * 2\n                      };\n                    } else {\n                      return {\n                        left: modalOffset.left,\n                        top: modalOffset.top,\n                        width: modalBox.width + self.__dx,\n                        height: modalBox.height\n                      };\n                    }\n                  },\n                  \"top-left\": function(e) {\n                    if (minWidth > modalBox.width - self.__dx) {\n                      self.__dx = modalBox.width - minWidth;\n                    }\n\n                    if (minHeight > modalBox.height - self.__dy) {\n                      self.__dy = modalBox.height - minHeight;\n                    }\n\n                    if (e.shiftKey || e.altKey) {\n                      if (minHeight > modalBox.height - self.__dy * 2) {\n                        self.__dy = (modalBox.height - minHeight) / 2;\n                      }\n                      if (minWidth > modalBox.width - self.__dx * 2) {\n                        self.__dx = (modalBox.width - minWidth) / 2;\n                      }\n\n                      return {\n                        left: modalOffset.left + self.__dx,\n                        top: modalOffset.top + self.__dy,\n                        width: modalBox.width - self.__dx * 2,\n                        height: modalBox.height - self.__dy * 2\n                      };\n                    } else {\n                      if (minHeight > modalBox.height - self.__dy * 2) {\n                        self.__dy = (modalBox.height - minHeight) / 2;\n                      }\n                      if (minWidth > modalBox.width - self.__dx * 2) {\n                        self.__dx = (modalBox.width - minWidth) / 2;\n                      }\n\n                      return {\n                        left: modalOffset.left + self.__dx,\n                        top: modalOffset.top + self.__dy,\n                        width: modalBox.width - self.__dx,\n                        height: modalBox.height - self.__dy\n                      };\n                    }\n                  },\n                  \"top-right\": function(e) {\n                    if (minWidth > modalBox.width + self.__dx) {\n                      self.__dx = -modalBox.width + minWidth;\n                    }\n\n                    if (minHeight > modalBox.height - self.__dy) {\n                      self.__dy = modalBox.height - minHeight;\n                    }\n\n                    if (e.shiftKey || e.altKey) {\n                      if (minHeight > modalBox.height - self.__dy * 2) {\n                        self.__dy = (modalBox.height - minHeight) / 2;\n                      }\n                      if (minWidth > modalBox.width + self.__dx * 2) {\n                        self.__dx = (-modalBox.width + minWidth) / 2;\n                      }\n\n                      return {\n                        left: modalOffset.left - self.__dx,\n                        top: modalOffset.top + self.__dy,\n                        width: modalBox.width + self.__dx * 2,\n                        height: modalBox.height - self.__dy * 2\n                      };\n                    } else {\n                      return {\n                        left: modalOffset.left,\n                        top: modalOffset.top + self.__dy,\n                        width: modalBox.width + self.__dx,\n                        height: modalBox.height - self.__dy\n                      };\n                    }\n                  },\n                  \"bottom-left\": function(e) {\n                    if (minWidth > modalBox.width - self.__dx) {\n                      self.__dx = modalBox.width - minWidth;\n                    }\n\n                    if (minHeight > modalBox.height + self.__dy) {\n                      self.__dy = -modalBox.height + minHeight;\n                    }\n\n                    if (e.shiftKey || e.altKey) {\n                      if (minWidth > modalBox.width - self.__dx * 2) {\n                        self.__dx = (modalBox.width - minWidth) / 2;\n                      }\n                      if (minHeight > modalBox.height + self.__dy * 2) {\n                        self.__dy = (-modalBox.height + minHeight) / 2;\n                      }\n                      return {\n                        left: modalOffset.left + self.__dx,\n                        top: modalOffset.top - self.__dy,\n                        width: modalBox.width - self.__dx * 2,\n                        height: modalBox.height + self.__dy * 2\n                      };\n                    } else {\n                      return {\n                        left: modalOffset.left + self.__dx,\n                        top: modalOffset.top,\n                        width: modalBox.width - self.__dx,\n                        height: modalBox.height + self.__dy\n                      };\n                    }\n                  },\n                  \"bottom-right\": function(e) {\n                    if (minWidth > modalBox.width + self.__dx) {\n                      self.__dx = -modalBox.width + minWidth;\n                    }\n\n                    if (minHeight > modalBox.height + self.__dy) {\n                      self.__dy = -modalBox.height + minHeight;\n                    }\n\n                    if (e.shiftKey || e.altKey) {\n                      if (minWidth > modalBox.width + self.__dx * 2) {\n                        self.__dx = (-modalBox.width + minWidth) / 2;\n                      }\n                      if (minHeight > modalBox.height + self.__dy * 2) {\n                        self.__dy = (-modalBox.height + minHeight) / 2;\n                      }\n                      return {\n                        left: modalOffset.left - self.__dx,\n                        top: modalOffset.top - self.__dy,\n                        width: modalBox.width + self.__dx * 2,\n                        height: modalBox.height + self.__dy * 2\n                      };\n                    } else {\n                      return {\n                        left: modalOffset.left,\n                        top: modalOffset.top,\n                        width: modalBox.width + self.__dx,\n                        height: modalBox.height + self.__dy\n                      };\n                    }\n                  }\n                },\n                getResizerPosition = function(e) {\n                  self.__dx = e.clientX - self.mousePosition.clientX;\n                  self.__dy = e.clientY - self.mousePosition.clientY;\n\n                  return resizerProcessor[resizerType](e);\n                };\n\n              let minWidth = 100,\n                minHeight = 100;\n\n              let cursorType = {\n                top: \"row-resize\",\n                bottom: \"row-resize\",\n                left: \"col-resize\",\n                right: \"col-resize\",\n                \"top-left\": \"nwse-resize\",\n                \"top-right\": \"nesw-resize\",\n                \"bottom-left\": \"nesw-resize\",\n                \"bottom-right\": \"nwse-resize\"\n              };\n\n              self.__dx = 0; // 변화량 X\n              self.__dy = 0; // 변화량 Y\n\n              // self.resizerBg : body 가 window보다 작을 때 문제 해결을 위한 DIV\n              self.resizerBg = jQuery(\n                '<div class=\"ax5modal-resizer-background\" ondragstart=\"return false;\"></div>'\n              );\n              self.resizer = jQuery(\n                '<div class=\"ax5modal-resizer\" ondragstart=\"return false;\"></div>'\n              );\n              self.resizerBg.css({\n                zIndex: modalZIndex,\n                cursor: cursorType[resizerType]\n              });\n              self.resizer.css({\n                left: modalOffset.left,\n                top: modalOffset.top,\n                width: modalBox.width,\n                height: modalBox.height,\n                zIndex: modalZIndex + 1,\n                cursor: cursorType[resizerType]\n              });\n              jQuery(document.body)\n                .append(self.resizerBg)\n                .append(self.resizer);\n              self.activeModal.addClass(\"draged\");\n\n              jQuery(document.body)\n                .bind(\n                  ENM[\"mousemove\"] + \".ax5modal-resize-\" + this.instanceId,\n                  function(e) {\n                    self.resizer.css(getResizerPosition(e));\n                  }\n                )\n                .bind(\n                  ENM[\"mouseup\"] + \".ax5modal-resize-\" + this.instanceId,\n                  function(e) {\n                    resizeModal.off.call(self);\n                  }\n                )\n                .bind(\"mouseleave.ax5modal-resize-\" + this.instanceId, function(\n                  e\n                ) {\n                  resizeModal.off.call(self);\n                });\n\n              jQuery(document.body)\n                .attr(\"unselectable\", \"on\")\n                .css(\"user-select\", \"none\")\n                .bind(\"selectstart\", false);\n            },\n            off: function() {\n              let setModalPosition = function() {\n                let box = this.resizer.offset();\n                jQuery.extend(box, {\n                  width: this.resizer.width(),\n                  height: this.resizer.height()\n                });\n                if (!this.modalConfig.absolute) {\n                  box.left -= jQuery(document).scrollLeft();\n                  box.top -= jQuery(document).scrollTop();\n                }\n                this.activeModal.css(box);\n\n                this.modalConfig.left = box.left;\n                this.modalConfig.top = box.top;\n                this.modalConfig.width = box.width;\n                this.modalConfig.height = box.height;\n                this.$[\"body\"].css({\n                  height: box.height - this.modalConfig.headerHeight\n                });\n                if (this.modalConfig.iframe) {\n                  this.$[\"iframe-wrap\"].css({\n                    height: box.height - this.modalConfig.headerHeight\n                  });\n                  this.$[\"iframe\"].css({\n                    height: box.height - this.modalConfig.headerHeight\n                  });\n                }\n\n                box = null;\n              };\n\n              this.activeModal.removeClass(\"draged\");\n              setModalPosition.call(this);\n\n              this.resizer.remove();\n              this.resizer = null;\n              this.resizerBg.remove();\n              this.resizerBg = null;\n\n              onStateChanged.call(this, self.modalConfig, {\n                self: this,\n                state: \"resize\"\n              });\n\n              jQuery(document.body)\n                .unbind(\n                  ENM[\"mousemove\"] + \".ax5modal-resize-\" + this.instanceId\n                )\n                .unbind(ENM[\"mouseup\"] + \".ax5modal-resize-\" + this.instanceId)\n                .unbind(\"mouseleave.ax5modal-resize-\" + this.instanceId);\n\n              jQuery(document.body)\n                .removeAttr(\"unselectable\")\n                .css(\"user-select\", \"auto\")\n                .unbind(\"selectstart\");\n            }\n          };\n\n        /// private end\n\n        /**\n         * Preferences of modal UI\n         * @method ax5modal.setConfig\n         * @param {Object} config - 클래스 속성값\n         * @param {Number} [config.zIndex]\n         * @param {Object} [config.position]\n         * @param {String} [config.position.left=\"center\"]\n         * @param {String} [config.position.top=\"middle\"]\n         * @param {Number} [config.position.margin=10]\n         * @param {String} [config.minimizePosition=\"bottom-right\"]\n         * @param {Number} [config.width=300]\n         * @param {Number} [config.height=400]\n         * @param {Boolean} [config.closeToEsc=true]\n         * @param {Boolean} [config.absolute=false]\n         * @param {Boolean} [config.disableDrag=false]\n         * @param {Boolean} [config.disableResize=false]\n         * @param {Number} [config.animateTime=250]\n         * @param {Function} [config.fullScreen]\n         * @param {Function} [config.onStateChanged] - `onStateChanged` function can be defined in setConfig method or new ax5.ui.modal initialization method. However, you can us to define an event function after initialization, if necessary\n         * @param {Function} [config.onResize]\n         * @returns {ax5modal}\n         * @example\n         * ```js\n         * var modal = new ax5.ui.modal({\n         *     iframeLoadingMsg: '<i class=\"fa fa-spinner fa-5x fa-spin\" aria-hidden=\"true\"></i>',\n         *     header: {\n         *         title: \"MODAL TITLE\",\n         *         btns: {\n         *             minimize: {\n         *                 label: '<i class=\"fa fa-minus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.minimize();\n         *                 }\n         *             },\n         *             maximize: {\n         *                 label: '<i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.maximize();\n         *                 }\n         *             },\n         *             close: {\n         *                 label: '<i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i>', onClick: function () {\n         *                     modal.close();\n         *                 }\n         *             }\n         *         }\n         *     }\n         * });\n         *\n         * modal.open({\n         *     width: 800,\n         *     height: 600,\n         *     fullScreen: function(){\n         *         return ($(window).width() < 600);\n         *     },\n         *     iframe: {\n         *         method: \"get\",\n         *         url: \"http://chequer-app:2017/html/login.html\",\n         *         param: \"callback=modalCallback\"\n         *     },\n         *     onStateChanged: function(){\n         *          console.log(this);\n         *     },\n         *     onResize: function(){\n         *          console.log(this);\n         *     }\n         * });\n         * ```\n         */\n        //== class body start\n        this.init = function() {\n          this.onStateChanged = cfg.onStateChanged;\n          this.onResize = cfg.onResize;\n        };\n\n        /**\n         * open the modal\n         * @method ax5modal.open\n         * @returns {ax5modal}\n         * @example\n         * ```\n         * modal.open();\n         * modal.open({\n         *  width: 500,\n         *  height: 500\n         * });\n         * moaal.open({}, function(){\n         *  console.log(this);\n         * });\n         * ```\n         */\n        this.open = function(opts, callback, tryCount) {\n          if (typeof tryCount === \"undefined\") tryCount = 0;\n          if (!this.activeModal) {\n            opts = self.modalConfig = jQuery.extend(true, {}, cfg, opts);\n            open.call(this, opts, callback);\n            this.watingModal = false;\n          } else if (tryCount < 3) {\n            // 3번까지 재 시도\n            this.watingModal = true;\n            setTimeout(\n              function() {\n                this.open(opts, callback, tryCount + 1);\n              }.bind(this),\n              cfg.animateTime\n            );\n          } else {\n            // 열기 시도 종료\n            this.watingModal = false;\n          }\n          return this;\n        };\n\n        /**\n         * close the modal\n         * @method ax5modal.close\n         * @param _option\n         * @returns {ax5modal}\n         * @example\n         * ```\n         * my_modal.close();\n         * my_modal.close({callback: function(){\n         *  // on close event\n         * });\n         * // close 함수에 callback을 전달하면 정확한 close 타이밍을 캐치할 수 있습니다\n         * ```\n         */\n\n        this.close = function(_option) {\n          let opts, that;\n\n          if (this.activeModal) {\n            opts = self.modalConfig;\n            this.activeModal.addClass(\"destroy\");\n            jQuery(window).unbind(\"keydown.ax-modal\");\n            jQuery(window).unbind(\"resize.ax-modal\");\n\n            setTimeout(\n              function() {\n                // 프레임 제거\n                if (opts.iframe) {\n                  var $iframe = this.$[\"iframe\"]; // iframe jQuery Object\n                  if ($iframe) {\n                    var iframeObject = $iframe.get(0),\n                      idoc = iframeObject.contentDocument\n                        ? iframeObject.contentDocument\n                        : iframeObject.contentWindow.document;\n\n                    try {\n                      $(idoc.body)\n                        .children()\n                        .each(function() {\n                          $(this).remove();\n                        });\n                    } catch (e) {}\n                    idoc.innerHTML = \"\";\n                    $iframe.attr(\"src\", \"about:blank\").remove();\n\n                    // force garbarge collection for IE only\n                    window.CollectGarbage && window.CollectGarbage();\n                  }\n                }\n\n                this.activeModal.remove();\n                this.activeModal = null;\n\n                // 모달 오픈 대기중이면 닫기 상태 전달 안함.\n                if (!this.watingModal) {\n                  onStateChanged.call(this, opts, {\n                    self: this,\n                    state: \"close\"\n                  });\n                }\n\n                if (_option && U.isFunction(_option.callback)) {\n                  that = {\n                    self: this,\n                    id: opts.id,\n                    theme: opts.theme,\n                    width: opts.width,\n                    height: opts.height,\n                    state: \"close\",\n                    $: this.$\n                  };\n                  _option.callback.call(that, that);\n                }\n              }.bind(this),\n              cfg.animateTime\n            );\n          }\n\n          this.minimized = false; // hoksi\n\n          return this;\n        };\n\n        /**\n         * @method ax5modal.minimize\n         * @returns {ax5modal}\n         */\n        this.minimize = (function() {\n          return function(minimizePosition) {\n            if (this.minimized !== true) {\n              var opts = self.modalConfig;\n              if (typeof minimizePosition === \"undefined\")\n                minimizePosition = cfg.minimizePosition;\n\n              this.minimized = true;\n              this.$.body.hide();\n              self.modalConfig.originalHeight = opts.height;\n              self.modalConfig.height = 0;\n              alignProcessor[minimizePosition].call(this);\n\n              onStateChanged.call(this, opts, {\n                self: this,\n                state: \"minimize\"\n              });\n            }\n\n            return this;\n          };\n        })();\n\n        /**\n         * @method ax5modal.restore\n         * @returns {ax5modal}\n         */\n        this.restore = function() {\n          var opts = self.modalConfig;\n          if (this.minimized) {\n            this.minimized = false;\n            this.$.body.show();\n            self.modalConfig.height = self.modalConfig.originalHeight;\n            self.modalConfig.originalHeight = undefined;\n\n            this.align({ left: \"center\", top: \"middle\" });\n            onStateChanged.call(this, opts, {\n              self: this,\n              state: \"restore\"\n            });\n          }\n          return this;\n        };\n\n        /**\n         * setCSS\n         * @method ax5modal.css\n         * @param {Object} css -\n         * @returns {ax5modal}\n         */\n        this.css = function(css) {\n          if (this.activeModal && !self.fullScreen) {\n            this.activeModal.css(css);\n            if (typeof css.width !== \"undefined\") {\n              self.modalConfig.width = css.width;\n            }\n            if (typeof css.height !== \"undefined\") {\n              self.modalConfig.height = css.height;\n            }\n\n            this.align();\n          }\n          return this;\n        };\n\n        /**\n         * @method ax5modal.setModalConfig\n         * @param _config\n         * @returns {ax5.ui.ax5modal}\n         */\n        this.setModalConfig = function(_config) {\n          self.modalConfig = jQuery.extend({}, self.modalConfig, _config);\n          this.align();\n          return this;\n        };\n\n        /**\n         * @method ax5modal.align\n         * @param position\n         * @param e\n         * @returns {ax5modal}\n         * @example\n         * ```js\n         * modal.align({left:\"center\", top:\"middle\"});\n         * modal.align({left:\"left\", top:\"top\", margin: 20});\n         * ```\n         */\n        this.align = (function() {\n          return function(position, e) {\n            if (!this.activeModal) return this;\n\n            var opts = self.modalConfig,\n              box = {\n                width: opts.width,\n                height: opts.height\n              };\n\n            var fullScreen = (opts.isFullScreen = (function(_fullScreen) {\n              if (typeof _fullScreen === \"undefined\") {\n                return false;\n              } else if (U.isFunction(_fullScreen)) {\n                return _fullScreen();\n              }\n            })(opts.fullScreen));\n\n            if (fullScreen) {\n              if (opts.header) this.$.header.show();\n              if (opts.header) {\n                opts.headerHeight = this.$.header.outerHeight();\n                box.height += opts.headerHeight;\n              } else {\n                opts.headerHeight = 0;\n              }\n              box.width = jQuery(window).width();\n              box.height = opts.height;\n              box.left = 0;\n              box.top = 0;\n            } else {\n              if (opts.header) this.$.header.show();\n              if (position) {\n                jQuery.extend(true, opts.position, position);\n              }\n\n              if (opts.header) {\n                opts.headerHeight = this.$.header.outerHeight();\n                box.height += opts.headerHeight;\n              } else {\n                opts.headerHeight = 0;\n              }\n\n              //- position 정렬\n              if (opts.position.left == \"left\") {\n                box.left = opts.position.margin || 0;\n              } else if (opts.position.left == \"right\") {\n                // window.innerWidth;\n                box.left =\n                  jQuery(window).width() -\n                  box.width -\n                  (opts.position.margin || 0);\n              } else if (opts.position.left == \"center\") {\n                box.left = jQuery(window).width() / 2 - box.width / 2;\n              } else {\n                box.left = opts.position.left || 0;\n              }\n\n              if (opts.position.top == \"top\") {\n                box.top = opts.position.margin || 0;\n              } else if (opts.position.top == \"bottom\") {\n                box.top =\n                  jQuery(window).height() -\n                  box.height -\n                  (opts.position.margin || 0);\n              } else if (opts.position.top == \"middle\") {\n                box.top = jQuery(window).height() / 2 - box.height / 2;\n              } else {\n                box.top = opts.position.top || 0;\n              }\n              if (box.left < 0) box.left = 0;\n              if (box.top < 0) box.top = 0;\n\n              if (opts.absolute) {\n                box.top += jQuery(window).scrollTop();\n                box.left += jQuery(window).scrollLeft();\n              }\n            }\n\n            this.activeModal.css(box);\n\n            this.$[\"body\"].css({\n              height: box.height - (opts.headerHeight || 0)\n            });\n\n            if (opts.iframe) {\n              this.$[\"iframe-wrap\"].css({\n                height: box.height - opts.headerHeight\n              });\n              this.$[\"iframe\"].css({ height: box.height - opts.headerHeight });\n            } else {\n            }\n            return this;\n          };\n        })();\n\n        // 클래스 생성자\n        this.main = function() {\n          UI.modal_instance = UI.modal_instance || [];\n          UI.modal_instance.push(this);\n\n          if (arguments && U.isObject(arguments[0])) {\n            this.setConfig(arguments[0]);\n          }\n        }.apply(this, arguments);\n      };\n    })()\n  );\n\n  MODAL = ax5.ui.modal;\n})();\n","// ax5.ui.modal.tmpl\n(function () {\n    var MODAL = ax5.ui.modal;\n\n    var content = function () {\n        return ` \n        <div id=\"{{modalId}}\" data-modal-els=\"root\" class=\"ax5modal {{theme}} {{fullscreen}}\" style=\"{{styles}}\">\n            {{#header}}\n            <div class=\"ax-modal-header\" data-modal-els=\"header\">\n                {{{title}}}\n                {{#btns}}\n                    <div class=\"ax-modal-header-addon\">\n                    {{#@each}}\n                    <button tabindex=\"-1\" data-modal-header-btn=\"{{@key}}\" class=\"{{@value.theme}}\">{{{@value.label}}}</button>\n                    {{/@each}}\n                    </div>\n                {{/btns}}\n            </div>\n            {{/header}}\n            <div class=\"ax-modal-body\" data-modal-els=\"body\">\n            {{#iframe}}\n                <div data-modal-els=\"iframe-wrap\" style=\"-webkit-overflow-scrolling: touch; overflow: auto;position: relative;\">\n                    <table data-modal-els=\"iframe-loading\" style=\"width:100%;height:100%;\"><tr><td style=\"text-align: center;vertical-align: middle\">{{{iframeLoadingMsg}}}</td></tr></table>\n                    <iframe name=\"{{modalId}}-frame\" src=\"\" width=\"100%\" height=\"100%\" frameborder=\"0\" data-modal-els=\"iframe\" style=\"position: absolute;left:0;top:0;\"></iframe>\n                </div>\n                <form name=\"{{modalId}}-form\" data-modal-els=\"iframe-form\">\n                <input type=\"hidden\" name=\"modalId\" value=\"{{modalId}}\" />\n                {{#param}}\n                {{#@each}}\n                <input type=\"hidden\" name=\"{{@key}}\" value=\"{{@value}}\" />\n                {{/@each}}\n                {{/param}}\n                </form>\n            {{/iframe}}\n            {{^iframe}}\n                <div data-modal-els=\"body-frame\" style=\"position: absolute;left:0;top:0;width:100%;height:100%;\"></div>\n            {{/iframe}}\n            </div>\n            {{^disableResize}}\n            <div data-ax5modal-resizer=\"top\"></div>\n            <div data-ax5modal-resizer=\"right\"></div>\n            <div data-ax5modal-resizer=\"bottom\"></div>\n            <div data-ax5modal-resizer=\"left\"></div>\n            <div data-ax5modal-resizer=\"top-left\"></div>\n            <div data-ax5modal-resizer=\"top-right\"></div>\n            <div data-ax5modal-resizer=\"bottom-left\"></div>\n            <div data-ax5modal-resizer=\"bottom-right\"></div>\n            {{/disableResize}}\n        </div>\n        `;\n    };\n\n    MODAL.tmpl = {\n        \"content\": content,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(MODAL.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","// ax5.ui.calendar\n(function () {\n\n    const UI = ax5.ui;\n    const U = ax5.util;\n    let CALENDAR;\n\n    UI.addClass({\n        className: \"calendar\"\n    }, (function () {\n\n        /**\n         * @class ax5calendar\n         * @classdesc\n         * @author tom@axisj.com\n         * @logs\n         * 2014-06-21 tom : 시작\n         * @example\n         * ```js\n         * ax5.info.months = [\"1월\",\"2월\",\"3월\",\"4월\",\"5월\",\"6월\",\"7월\",\"8월\",\"9월\",\"10월\",\"11월\"];\n         * ax5.info.weekNames = [\n         *     {label: \"일\"},\n         *     {label: \"월\"},\n         *     {label: \"화\"},\n         *     {label: \"수\"},\n         *     {label: \"목\"},\n         *     {label: \"금\"},\n         *     {label: \"토\"}\n         * ];\n         *\n         * var myCalendar = new ax5.ui.calendar({\n         *     control: {\n         *         left: '≪',\n         *         yearTmpl: '%s',\n         *         monthTmpl: '%s',\n         *         right: '≫',\n         *         yearFirst: true\n         *     },\n         *\n         *     dimensions: {\n         *         itemPadding: 1,\n         *         height: 200\n         *     },\n         *\n         *     target: document.getElementById(\"calendar-target\"),\n         *     displayDate: (new Date()),\n         *     mode: \"day\",\n         *     selectMode: \"day\",\n         *\n         *     marker: (function () {\n         *         var marker = {};\n         *         marker[_c_date(today, {'return': 'yyyy-MM-dd', 'add': {d: -1}})] = true;\n         *         marker[_c_date(today, {'return': 'yyyy-MM-dd', 'add': {d: 0}})] = true;\n         *         marker[_c_date(today, {'return': 'yyyy-MM-dd', 'add': {d: 1}})] = true;\n         *\n\t     *         return marker;\n         *     })(),\n         *     onClick: function () {\n         *         console.log(myCalendar.getSelection());\n         *     },\n         *     onStateChanged: function () {\n         *         console.log(this);\n         *     }\n         *     , multipleSelect: 2\n         * });\n         * ```\n         */\n        return function () {\n            let self = this,\n                cfg,\n                selectableCount = 1;\n\n            this.instanceId = ax5.getGuid();\n            this.target = null;\n            this.selection = [];\n            this.selectionMap = {};\n            this.selectableMap = {};\n            this.markerMap = {};\n            this.printedDay = {\n                start: \"\", end: \"\"\n            };\n            this.config = {\n                clickEventName: \"click\",\n                theme: 'default',\n                startOfWeek: 0,\n                mode: 'day', // day|month|year,\n                dateFormat: 'yyyy-MM-dd',\n                displayDate: (new Date()),\n                animateTime: 100,\n                dimensions: {\n                    controlHeight: '40',\n                    controlButtonWidth: '40',\n                    colHeadHeight: '30',\n                    itemPadding: 2\n                },\n                lang: {\n                    yearHeading: \"Choose the year\",\n                    monthHeading: \"Choose the month\",\n                    yearTmpl: \"%s\",\n                    months: ax5.info.months || ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC'],\n                    dayTmpl: \"%s\"\n                },\n                multipleSelect: false,\n                selectMode: 'day',\n                defaultMarkerTheme: 'holiday',\n                defaultPeriodTheme: 'period'\n            };\n\n            cfg = this.config;\n\n            const onStateChanged = function (opts, that) {\n                    if (opts && opts.onStateChanged) {\n                        opts.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n\n                    that = null;\n            };\n            const getFrame = function () {\n                    var\n                        data = jQuery.extend(true, {}, cfg, {\n                            controlCSS: {},\n                            controlButtonCSS: {}\n                        });\n\n                    data.controlButtonCSS[\"height\"] = data.controlCSS[\"height\"] = U.cssNumber(cfg.dimensions.controlHeight);\n                    data.controlButtonCSS[\"line-height\"] = data.controlCSS[\"line-height\"] = U.cssNumber(cfg.dimensions.controlHeight);\n                    data.controlButtonCSS[\"width\"] = U.cssNumber(cfg.dimensions.controlHeight);\n\n                    data.controlCSS = U.css(data.controlCSS);\n                    data.controlButtonCSS = U.css(data.controlButtonCSS);\n\n                    try {\n                        return CALENDAR.tmpl.get.call(this, \"frameTmpl\", data);\n                    }\n                    finally {\n                        data = null;\n                    }\n            };\n            const setDisplay = function () {\n                    var\n                        myDate = U.date(cfg.displayDate),\n                        yy = \"\",\n                        mm = \"\",\n                        yy1, yy2;\n\n                    if (cfg.control) {\n                        if (cfg.mode == \"day\" || cfg.mode == \"d\") {\n                            yy = (cfg.control.yearTmpl) ? cfg.control.yearTmpl.replace('%s', myDate.getFullYear()) : myDate.getFullYear();\n                            mm = (cfg.control.monthTmpl) ? cfg.control.monthTmpl.replace('%s', cfg.lang.months[myDate.getMonth()]) : cfg.lang.months[myDate.getMonth()];\n\n                            this.$[\"control-display\"].html((function () {\n                                if (cfg.control.yearFirst) {\n                                    return '<span data-calendar-display=\"year\">' + yy + '</span>' +\n                                        '<span data-calendar-display=\"month\">' + mm + '</span>';\n                                }\n                                else {\n                                    return '<span data-calendar-display=\"month\">' + mm + '</span>' +\n                                        '<span data-calendar-display=\"year\">' + yy + '</span>';\n                                }\n\n                            })());\n                        }\n                        else if (cfg.mode == \"month\" || cfg.mode == \"m\") {\n                            yy = (cfg.control.yearTmpl) ? cfg.control.yearTmpl.replace('%s', myDate.getFullYear()) : myDate.getFullYear();\n                            this.$[\"control-display\"].html('<span data-calendar-display=\"year\">' + yy + '</span>');\n                        }\n                        else if (cfg.mode == \"year\" || cfg.mode == \"y\") {\n                            yy1 = (cfg.control.yearTmpl) ? cfg.control.yearTmpl.replace('%s', myDate.getFullYear() - 10) : myDate.getFullYear() - 10;\n                            yy2 = (cfg.control.yearTmpl) ? cfg.control.yearTmpl.replace('%s', Number(myDate.getFullYear()) + 9) : Number(myDate.getFullYear()) + 9;\n                            this.$[\"control-display\"].html(yy1 + ' ~ ' + yy2);\n                        }\n\n                        this.$[\"control-display\"].find('[data-calendar-display]').on(cfg.clickEventName, (function (e) {\n                            var target = U.findParentNode(e.target, function (target) {\n                                if (target.getAttribute(\"data-calendar-display\")) {\n                                    return true;\n                                }\n                            }), mode;\n                            if (target) {\n                                mode = target.getAttribute(\"data-calendar-display\");\n                                this.changeMode(mode);\n                            }\n                            target = null;\n                            mode = null;\n                        }).bind(this));\n                    }\n\n                    myDate = null;\n                    yy = null;\n                    mm = null;\n                    yy1 = null;\n                    yy2 = null;\n                    return this;\n            };\n            const printDay = function (nowDate) {\n                    var\n                        dotDate = U.date(nowDate),\n                        monthStratDate = new Date(dotDate.getFullYear(), dotDate.getMonth(), 1, 12),\n                        _today = cfg.displayDate,\n                        tableStartDate = (function () {\n                            var day = monthStratDate.getDay();\n                            if (day == 0) day = 7;\n                            day -= cfg.startOfWeek;\n\n                            try {\n                                return U.date(monthStratDate, {add: {d: -day}});\n                            }\n                            finally {\n                                day = null;\n                            }\n                        })(),\n                        loopDate,\n                        thisMonth = dotDate.getMonth(),\n                        itemStyles = {},\n                        i,\n                        k, _k,\n                        frameWidth = this.$[\"body\"].width(),\n                        frameHeight = Math.floor(frameWidth * (6 / 7)), // 1week = 7days, 1month = 6weeks\n                        data,\n                        tmpl;\n\n                    if (cfg.dimensions.height) {\n                        frameHeight = U.number(cfg.dimensions.height) - U.number(cfg.dimensions.colHeadHeight);\n                    }\n\n                    itemStyles['height'] = Math.floor(frameHeight / 6) - U.number(cfg.dimensions.itemPadding) * 2 + 'px';\n                    itemStyles['line-height'] = itemStyles['height'];\n                    itemStyles['padding'] = U.cssNumber(cfg.dimensions.itemPadding);\n\n                    data = {\n                        weekNames: [].concat(ax5.info.weekNames),\n                        list: []\n                    };\n\n                    if(cfg.startOfWeek) {\n                        data.weekNames = data.weekNames.concat(data.weekNames.slice(0, cfg.startOfWeek)).splice(cfg.startOfWeek);\n                    }\n\n                    data.weekNames.forEach(function (n) {\n                        n.colHeadHeight = U.cssNumber(cfg.dimensions.colHeadHeight);\n                    });\n\n                    loopDate = tableStartDate;\n                    i = 0;\n                    while (i < 6) {\n                        k = 0;\n                        while (k < 7) {\n                            _k = (7 + (k - cfg.startOfWeek)) % 7;\n                            var\n                                thisDate = '' + U.date(loopDate, {\"return\": cfg.dateFormat}),\n                                _date = {\n                                    'row': i,\n                                    'col': k,\n                                    isStartOfWeek: (k == 0),\n                                    thisDate: '' + thisDate,\n                                    thisDataLabel: cfg.lang.dayTmpl.replace('%s', loopDate.getDate()),\n                                    itemStyles: U.css(itemStyles),\n                                    addClass: (function () {\n\n                                        var classNames = \"\";\n\n                                        if (cfg.selectable) {\n                                            if (self.selectableMap[thisDate]) {\n                                                classNames += ( loopDate.getMonth() == thisMonth ) ? \" live\" : \"\";\n                                            }\n                                            else {\n                                                classNames += \" disable\";\n                                            }\n                                        }\n                                        else {\n                                            if(loopDate.getMonth() == thisMonth){\n                                                if(thisDate == U.date(_today, {\"return\": \"yyyyMMdd\"})){\n                                                    classNames += \" focus\";\n                                                }else{\n                                                    classNames += \" live\";\n                                                }\n\n                                                if(loopDate.getDay() == 0){\n                                                    classNames += \" sunday\";\n                                                }\n                                                if(loopDate.getDay() == 6){\n                                                    classNames += \" saturday\";\n                                                }\n                                            }\n                                        }\n\n                                        return classNames;\n                                    })()\n                                    + ' '\n                                    + (function () {\n                                        return (self.markerMap[thisDate]) ? self.markerMap[thisDate].theme || cfg.defaultMarkerTheme : '';\n                                    })()\n                                    + ' '\n                                    + (function () {\n                                        return (self.selectionMap[thisDate]) ? \"selected-day\" : '';\n                                    })()\n                                };\n                            data.list.push(_date);\n\n                            k++;\n                            loopDate = U.date(loopDate, {add: {d: 1}});\n\n                            thisDate = null;\n                            _date = null;\n                        }\n                        i++;\n                    }\n                    tmpl = CALENDAR.tmpl.get.call(this, \"dayTmpl\", data);\n                    this.$[\"body\"].html(tmpl);\n                    this.$[\"body\"].find('[data-calendar-item-date]').on(cfg.clickEventName, function (e) {\n                        e = e || window.event;\n                        onclick.call(self, e, 'date');\n                        U.stopEvent(e);\n                    });\n\n                    this.printedDay = {\n                        start: tableStartDate, end: loopDate\n                    };\n\n                    onStateChanged.call(this, null, {\n                        self: this,\n                        action: \"printDay\",\n                        printedDay: this.printedDay\n                    });\n                    setDisplay.call(this);\n\n                    dotDate = null;\n                    monthStratDate = null;\n                    _today = null;\n                    tableStartDate = null;\n                    loopDate = null;\n                    thisMonth = null;\n                    itemStyles = null;\n                    i = null;\n                    k = null;\n                    frameWidth = null;\n                    frameHeight = null;\n                    data = null;\n                    tmpl = null;\n            };\n            const printMonth = function (nowDate) {\n                    var\n                        dotDate = U.date(nowDate),\n                        nMonth = dotDate.getMonth(),\n                        itemStyles = {},\n                        i,\n                        k,\n                        m,\n                        tableStartMonth,\n                        frameWidth = this.$[\"body\"].width(),\n                        frameHeight = Math.floor(frameWidth * (6 / 7)),\n                        data,\n                        tmpl;\n\n                    if (cfg.dimensions.height) {\n                        frameHeight = U.number(cfg.dimensions.height) - U.number(cfg.dimensions.colHeadHeight);\n                    }\n\n                    itemStyles['height'] = Math.floor(frameHeight / 4) - U.number(cfg.dimensions.itemPadding) * 2 + 'px';\n                    itemStyles['line-height'] = itemStyles['height'];\n                    itemStyles['padding'] = U.cssNumber(cfg.dimensions.itemPadding);\n\n                    data = {\n                        colHeadHeight: U.cssNumber(cfg.dimensions.colHeadHeight),\n                        colHeadLabel: cfg.lang.monthHeading,\n                        list: []\n                    };\n\n                    tableStartMonth = 0;\n                    m = 0;\n                    i = 0;\n                    while (i < 4) {\n                        k = 0;\n                        while (k < 3) {\n                            var\n                                _month = {\n                                    row: i,\n                                    col: k,\n                                    isStartOfRow: (k == 0),\n                                    thisMonth: dotDate.getFullYear() + '-' + U.setDigit(m + 1, 2) + '-01', // + U.setDigit(dotDate.getDate(), 2),\n                                    thisMonthLabel: cfg.lang.months[m],\n                                    itemStyles: U.css(itemStyles),\n                                    addClass: (function () {\n                                        if (cfg.selectable) {\n                                            return (self.selectableMap[m]) ? 'live' : 'disable';\n                                        }\n                                        else {\n                                            return 'live';\n                                        }\n                                    })()\n                                    + ' '\n                                    + (function () {\n                                        return ( m == nMonth ) ? \"focus\" : \"\";\n                                    })()\n                                    + ' '\n                                    + (function () {\n                                        return (self.markerMap[m]) ? self.markerMap[m].theme || cfg.defaultMarkerTheme : '';\n                                    })()\n                                };\n                            data.list.push(_month);\n                            m++;\n                            k++;\n                            _month = null;\n                        }\n                        i++;\n                    }\n                    tmpl = CALENDAR.tmpl.get.call(this, \"monthTmpl\", data);\n                    this.$[\"body\"].html(tmpl);\n                    this.$[\"body\"].find('[data-calendar-item-month]').on(cfg.clickEventName, function (e) {\n                        e = e || window.event;\n                        onclick.call(self, e, 'month');\n                        U.stopEvent(e);\n                    });\n\n                    this.printedDay = {\n                        start: dotDate.getFullYear() + '-' + U.setDigit(tableStartMonth + 1, 2),\n                        end: dotDate.getFullYear() + '-' + U.setDigit(m, 2)\n                    };\n\n                    onStateChanged.call(this, null, {\n                        self: this,\n                        action: \"printMonth\",\n                        printedDay: this.printedDay\n                    });\n                    setDisplay.call(this);\n\n                    dotDate = null;\n                    nMonth = null;\n                    itemStyles = null;\n                    i = null;\n                    k = null;\n                    m = null;\n                    tableStartMonth = null;\n                    frameWidth = null;\n                    frameHeight = null;\n                    data = null;\n                    tmpl = null;\n            };\n            const printYear = function (nowDate) {\n                    var\n                        dotDate = U.date(nowDate),\n                        nYear = dotDate.getFullYear(),\n                        itemStyles = {},\n                        i,\n                        k,\n                        y,\n                        tableStartYear,\n                        frameWidth = this.$[\"body\"].width(),\n                        frameHeight = Math.floor(frameWidth * (6 / 7)),\n                        data,\n                        tmpl;\n\n                    if (cfg.dimensions.height) {\n                        frameHeight = U.number(cfg.dimensions.height) - U.number(cfg.dimensions.colHeadHeight);\n                    }\n\n                    itemStyles['height'] = Math.floor(frameHeight / 5) - U.number(cfg.dimensions.itemPadding) * 2 + 'px';\n                    itemStyles['line-height'] = itemStyles['height'];\n                    itemStyles['padding'] = U.cssNumber(cfg.dimensions.itemPadding);\n\n                    data = {\n                        colHeadHeight: U.cssNumber(cfg.dimensions.colHeadHeight),\n                        colHeadLabel: cfg.lang.yearHeading,\n                        list: []\n                    };\n\n                    tableStartYear = nYear - 10;\n                    y = nYear - 10;\n                    i = 0;\n                    while (i < 5) {\n                        k = 0;\n                        while (k < 4) {\n                            var\n                                _year = {\n                                    row: i,\n                                    col: k,\n                                    isStartOfRow: (k == 0),\n                                    thisYear: y + '-' + U.setDigit(dotDate.getMonth() + 1, 2) + '-01', // + U.setDigit(dotDate.getDate(), 2),\n                                    thisYearLabel: cfg.lang.yearTmpl.replace('%s', (y)),\n                                    itemStyles: U.css(itemStyles),\n                                    addClass: (function () {\n                                        if (cfg.selectable) {\n                                            return (self.selectableMap[y]) ? 'live' : 'disable';\n                                        }\n                                        else {\n                                            return 'live';\n                                        }\n                                    })()\n                                    + ' '\n                                    + (function () {\n                                        return ( y == nYear ) ? \"focus\" : \"\";\n                                    })()\n                                    + ' '\n                                    + (function () {\n                                        return (self.selectableMap[y]) ? self.selectableMap[y].theme || cfg.defaultMarkerTheme : '';\n                                    })()\n                                };\n                            data.list.push(_year);\n                            y++;\n                            k++;\n                            _year = null;\n                        }\n                        i++;\n                    }\n                    tmpl = CALENDAR.tmpl.get.call(this, \"yearTmpl\", data);\n                    this.$[\"body\"].html(tmpl);\n                    this.$[\"body\"].find('[data-calendar-item-year]').on(cfg.clickEventName, function (e) {\n                        e = (e || window.event);\n                        onclick.call(this, e, 'year');\n                        U.stopEvent(e);\n                    });\n\n                    this.printedDay = {\n                        start: tableStartYear, end: y - 1\n                    };\n\n                    onStateChanged.call(this, null, {\n                        self: this,\n                        action: \"printYear\",\n                        printedDay: this.printedDay\n                    });\n                    setDisplay.call(this);\n\n                    dotDate = null;\n                    nYear = null;\n                    itemStyles = null;\n                    i = null;\n                    k = null;\n                    y = null;\n                    tableStartYear = null;\n                    frameWidth = null;\n                    frameHeight = null;\n                    data = null;\n                    tmpl = null;\n            };\n            const onclick = function (e, mode, target, value) {\n                    var\n                        removed,\n                        dt,\n                        selectable;\n\n                    mode = mode || \"date\";\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-calendar-item-\" + mode)) {\n                            return true;\n                        }\n                    });\n                    if (target) {\n                        value = target.getAttribute(\"data-calendar-item-\" + mode);\n\n                        dt = U.date(value, {\"return\": cfg.dateFormat});\n                        selectable = true;\n                        selectableCount = (cfg.multipleSelect) ? (U.isNumber(cfg.multipleSelect)) ? cfg.multipleSelect : 2 : 1;\n\n                        if (cfg.selectable) {\n                            if (!self.selectableMap[dt]) selectable = false;\n                        }\n\n                        if (mode == \"date\") {\n                            if (selectable) {\n\n                                if (self.selection.length >= selectableCount) {\n                                    removed = self.selection.splice(0, self.selection.length - (selectableCount - 1));\n                                    removed.forEach(function (d) {\n                                        self.$[\"body\"].find('[data-calendar-item-date=\"' + U.date(d, {\"return\": cfg.dateFormat}) + '\"]').removeClass(\"selected-day\");\n                                    });\n                                }\n\n                                jQuery(target).addClass(\"selected-day\");\n                                self.selection.push(value);\n\n                                if (self.onClick) {\n                                    self.onClick.call({\n                                        self: this, date: value, target: this.target, dateElement: target\n                                    });\n                                }\n                            }\n                        }\n                        else if (mode == \"month\") {\n                            if (cfg.selectMode == \"month\") {\n                                if (selectable) {\n                                    if (self.selection.length >= selectableCount) {\n                                        removed = self.selection.splice(0, self.selection.length - (selectableCount - 1));\n                                        removed.forEach(function (d) {\n                                            self.$[\"body\"].find('[data-calendar-item-month=\"' + U.date(d, {\"return\": 'yyyy-MM-dd'}) + '\"]').removeClass(\"selected-month\");\n                                        });\n                                    }\n\n                                    jQuery(target).addClass(\"selected-month\");\n                                    self.selection.push(value);\n\n                                    if (self.onClick) {\n                                        self.onClick.call({\n                                            self: this, date: value, target: this.target, dateElement: target\n                                        });\n                                    }\n                                }\n                            }\n                            else {\n                                self.changeMode(\"day\", value);\n                            }\n                        }\n                        else if (mode == \"year\") {\n                            if (cfg.selectMode == \"year\") {\n                                if (selectable) {\n                                    if (self.selection.length >= selectableCount) {\n                                        removed = self.selection.splice(0, self.selection.length - (selectableCount - 1));\n                                        removed.forEach(function (d) {\n                                            self.$[\"body\"].find('[data-calendar-item-year=\"' + U.date(d, {\"return\": 'yyyy-MM-dd'}) + '\"]').removeClass(\"selected-year\");\n                                        });\n                                    }\n\n                                    jQuery(target).addClass(\"selected-year\");\n                                    self.selection.push(value);\n\n                                    if (self.onClick) {\n                                        self.onClick.call({\n                                            self: this, date: value, target: this.target, dateElement: target\n                                        });\n                                    }\n                                }\n                            }\n                            else {\n                                self.changeMode(\"month\", value);\n                            }\n                        }\n                    }\n\n                    mode = null;\n                    target = null;\n                    value = null;\n                    removed = null;\n                    dt = null;\n                    selectable = null;\n            };\n            const move = function (e, target, value) {\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-calendar-move\")) {\n                            return true;\n                        }\n                    });\n                    if (target) {\n                        value = target.getAttribute(\"data-calendar-move\");\n                        if (cfg.mode == \"day\" || cfg.mode == \"d\") {\n                            if (value == \"left\") {\n                                cfg.displayDate = U.date(cfg.displayDate, {add: {m: -1}});\n                            }\n                            else {\n                                cfg.displayDate = U.date(cfg.displayDate, {add: {m: 1}});\n                            }\n                            printDay.call(this, cfg.displayDate);\n                        }\n                        else if (cfg.mode == \"month\" || cfg.mode == \"m\") {\n                            if (value == \"left\") {\n                                cfg.displayDate = U.date(cfg.displayDate, {add: {y: -1}});\n                            }\n                            else {\n                                cfg.displayDate = U.date(cfg.displayDate, {add: {y: 1}});\n                            }\n                            printMonth.call(this, cfg.displayDate);\n                        }\n                        else if (cfg.mode == \"year\" || cfg.mode == \"y\") {\n                            if (value == \"left\") {\n                                cfg.displayDate = U.date(cfg.displayDate, {add: {y: -10}});\n                            }\n                            else {\n                                cfg.displayDate = U.date(cfg.displayDate, {add: {y: 10}});\n                            }\n                            printYear.call(this, cfg.displayDate);\n                        }\n                    }\n\n                    target = null;\n                    value = null;\n            };\n            const applyMarkerMap = function () {\n                    setTimeout((function () {\n                        if (cfg.mode === \"day\" || cfg.mode === \"d\") {\n                            for (var k in this.markerMap) {\n                                this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').addClass(this.markerMap[k].theme || cfg.defaultMarkerTheme);\n                            }\n                        }\n                    }).bind(this));\n            };\n            const applySelectionMap = function () {\n                    setTimeout((function () {\n                        for (var k in this.selectionMap) {\n                            this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').addClass(\"selected-day\");\n                        }\n                    }).bind(this));\n            };\n            const applyPeriodMap = function () {\n                    setTimeout((function () {\n                        if (cfg.mode === \"day\" || cfg.mode === \"d\") {\n                            for (var k in this.periodMap) {\n                                if (this.periodMap[k].label) {\n                                    this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').find(\".addon-footer\").html(this.periodMap[k].label);\n                                }\n                                this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').addClass(this.periodMap[k].theme);\n                            }\n                        }\n                    }).bind(this));\n            };\n            const clearPeriodMap = function () {\n                    if (cfg.mode === \"day\" || cfg.mode === \"d\") {\n                        for (var k in this.periodMap) {\n                            this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').find(\".addon-footer\").empty();\n                            this.$[\"body\"].find('[data-calendar-item-date=\"' + k + '\"]').removeClass(this.periodMap[k].theme);\n                        }\n                    }\n                };\n\n            /**\n             * Preferences of calendar UI\n             * @method ax5calendar.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Element|nodelist} config.target\n             * @param {String} [config.mode=day|month|year]\n             * @param {Function} [config.onClick}\n             * @returns {ax5calendar}\n             * @example\n             * ```js\n             * var myCalendar = new ax5.ui.calendar();\n             * myCalendar.setConfig({\n             *  target: $(\"#target\"),\n             *  mode: \"day\"\n             * });\n             * ```\n             */\n            //== class body start\n            this.init = function () {\n                // after setConfig();\n\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5calendar\", \"401\", \"setConfig\"));\n                }\n                this.target = jQuery(cfg.target);\n\n                cfg.displayDate = U.date(cfg.displayDate);\n                this.target.html(getFrame.call(this));\n\n                // 파트수집\n                this.$ = {\n                    \"root\": this.target.find('[data-calendar-els=\"root\"]'),\n                    \"control\": this.target.find('[data-calendar-els=\"control\"]'),\n                    \"control-display\": this.target.find('[data-calendar-els=\"control-display\"]'),\n                    \"body\": this.target.find('[data-calendar-els=\"body\"]')\n                };\n\n                if (cfg.control) {\n                    this.$[\"root\"].on(cfg.clickEventName, '[data-calendar-move]', (function (e) {\n                        move.call(this, e || window.event);\n                    }).bind(this));\n                }\n\n                // collect selectableMap\n                if (cfg.selection) {\n                    this.setSelection(cfg.selection, false);\n                }\n                // collect selectableMap\n                if (cfg.selectable) {\n                    this.setSelectable(cfg.selectable, false);\n                }\n                // collect markerMap\n                if (cfg.marker) {\n                    this.setMarker(cfg.marker, false);\n                }\n\n                setTimeout((function () {\n                    if (cfg.mode === \"day\" || cfg.mode === \"d\") {\n                        printDay.call(this, cfg.displayDate);\n                    }\n                    else if (cfg.mode === \"month\" || cfg.mode === \"m\") {\n                        printMonth.call(this, cfg.displayDate);\n                    }\n                    else if (cfg.mode === \"year\" || cfg.mode === \"y\") {\n                        printYear.call(this, cfg.displayDate);\n                    }\n                }).bind(this));\n            };\n\n            /**\n             * @method ax5calendar.changeMode\n             * @param {String} mode\n             * @param {String} changeDate\n             * @returns {ax5calendar}\n             */\n            this.changeMode = function (mode, changeDate) {\n                if (typeof changeDate != \"undefined\") cfg.displayDate = changeDate;\n                if (mode) cfg.mode = mode;\n\n                this.$[\"body\"].removeClass(\"fadein\").addClass(\"fadeout\");\n                setTimeout((function () {\n                    if (cfg.mode == \"day\" || cfg.mode == \"d\") {\n                        printDay.call(this, cfg.displayDate);\n                    }\n                    else if (cfg.mode == \"month\" || cfg.mode == \"m\") {\n                        printMonth.call(this, cfg.displayDate);\n                    }\n                    else if (cfg.mode == \"year\" || cfg.mode == \"y\") {\n                        printYear.call(this, cfg.displayDate);\n                    }\n                    this.$[\"body\"].removeClass(\"fadeout\").addClass(\"fadein\");\n                }).bind(this), cfg.animateTime);\n\n                return this;\n            };\n\n            /**\n             * @method ax5calendar.setSelection\n             * @param {Array} selection\n             * @returns {ax5calendar}\n             * @example\n             * ```\n             *\n             * ```\n             */\n            this.setSelection = (function () {\n                self.selectionMap = {};\n                var processor = {\n                    'arr': function (v, map, count) {\n                        map = {};\n                        if (!U.isArray(v)) return map;\n                        self.selection = v = v.splice(0, count);\n                        v.forEach(function (n) {\n                            if (U.isDate(n))\n                                n = U.date(n, {'return': cfg.dateFormat});\n                            map[n] = true;\n                        });\n                        return map;\n                    }\n                };\n\n                return function (selection, isPrint) {\n                    var result = {};\n                    selectableCount = (cfg.multipleSelect) ? (U.isNumber(cfg.multipleSelect)) ? cfg.multipleSelect : 2 : 1;\n\n                    if (cfg.selection = selection) {\n                        if (U.isArray(selection)) {\n                            result = processor.arr(selection, {}, selectableCount);\n                        } else {\n                            return this;\n                        }\n                    }\n\n                    this.selectionMap = jQuery.extend({}, result);\n                    // 변경내용 적용하여 출력\n\n                    if (isPrint !== false) applySelectionMap.call(this);\n\n                    result = null;\n\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5calendar.getSelection\n             */\n            this.getSelection = function () {\n                return this.selection;\n            };\n\n            /**\n             * @method ax5calendar.setSelectable\n             */\n            this.setSelectable = (function () {\n                self.selectableMap = {};\n                var processor = {\n                    'arr': function (v, map) {\n                        map = {};\n                        if (!U.isArray(v)) return map;\n                        v.forEach(function (n) {\n                            if (U.isDate(n))\n                                n = U.date(n, {'return': cfg.dateFormat});\n                            map[n] = true;\n                        });\n                        return map;\n                    },\n                    'obj': function (v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (v.range) return map;\n                        for (var k in v) {\n                            map[k] = v[k];\n                        }\n                        return map;\n                    },\n                    'range': function (v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (!v.range) return map;\n\n                        v.range.forEach(function (n) {\n                            if (U.isDateFormat(n.from) && U.isDateFormat(n.to)) {\n                                for (var d = U.date(n.from); d <= U.date(n.to); d.setDate(d.getDate() + 1)) {\n                                    map[U.date(d, {\"return\": cfg.dateFormat})] = true;\n                                }\n                            }\n                            else {\n                                for (var i = n.from; i <= n.to; i++) {\n                                    map[i] = true;\n                                }\n                            }\n                        });\n\n                        return map;\n                    }\n                };\n\n                return function (selectable, isPrint) {\n\n                    var key,\n                        result = {};\n\n                    if (cfg.selectable = selectable) {\n                        if (U.isArray(selectable)) {\n                            result = processor.arr(selectable);\n                        }\n                        else {\n                            for (key in processor) {\n                                if (selectable[key]) {\n                                    result = processor[key](selectable);\n                                    break;\n                                }\n                            }\n                            if (Object.keys(result).length === 0) {\n                                result = processor.obj(selectable);\n                            }\n                        }\n                    }\n\n                    this.selectableMap = result;\n                    // 변경내용 적용하여 출력\n                    if (isPrint !== false) this.changeMode();\n\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5calendar.setMarker\n             */\n            this.setMarker = (function () {\n                self.markerMap = {};\n                var processor = {\n                    'obj': function (v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (v.range) return map;\n                        for (var k in v) {\n                            map[k] = v[k];\n                        }\n\n                        v = null;\n                        return map;\n                    },\n                    'range': function (v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (!v.range) return map;\n\n                        v.range.forEach(function (n) {\n                            if (U.isDateFormat(n.from) && U.isDateFormat(n.to)) {\n                                for (var d = U.date(n.from); d <= U.date(n.to); d.setDate(d.getDate() + 1)) {\n                                    map[U.date(d, {\"return\": cfg.dateFormat})] = {theme: n.theme, label: n.label};\n                                }\n                            }\n                            else {\n                                for (var i = n.from; i <= n.to; i++) {\n                                    map[i] = {theme: n.theme, label: n.label};\n                                }\n                            }\n                        });\n\n                        v = null;\n                        return map;\n                    }\n                };\n\n                return function (marker, isApply) {\n\n                    var\n                        key,\n                        result = {}\n                        ;\n\n                    if (cfg.marker = marker) {\n                        for (key in processor) {\n                            if (marker[key]) {\n                                result = processor[key](marker);\n                                break;\n                            }\n                        }\n                        if (Object.keys(result).length === 0) {\n                            result = processor.obj(marker);\n                        }\n                    }\n\n                    this.markerMap = result;\n                    // 변경내용 적용하여 출력\n                    if (isApply !== false) applyMarkerMap.call(this);\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5calendar.setPeriod\n             */\n            this.setPeriod = (function () {\n                self.periodMap = {};\n\n                var processor = {\n                    'range': function (v, map) {\n                        map = {};\n                        if (U.isArray(v)) return map;\n                        if (!v.range) return map;\n\n                        v.range.forEach(function (n) {\n                            if (U.isDateFormat(n.from) && U.isDateFormat(n.to)) {\n                                for (var d = new Date(U.date(n.from)); d <= U.date(n.to); d.setDate(d.getDate() + 1)) {\n                                    if (d.getTime() == U.date(n.from).getTime()) {\n                                        map[U.date(d, {\"return\": cfg.dateFormat})] = {theme: n.theme || cfg.defaultPeriodTheme, label: n.fromLabel};\n                                    } else if (d.getTime() == U.date(n.to).getTime()) {\n                                        map[U.date(d, {\"return\": cfg.dateFormat})] = {theme: n.theme || cfg.defaultPeriodTheme, label: n.toLabel};\n                                    } else {\n                                        map[U.date(d, {\"return\": cfg.dateFormat})] = {theme: n.theme || cfg.defaultPeriodTheme};\n                                    }\n                                }\n                            }\n                        });\n\n                        v = null;\n                        return map;\n                    }\n                };\n\n                return function (period, isApply) {\n\n                    var\n                        key,\n                        result = {}\n                        ;\n\n                    // 변경내용 적용하여 출력\n                    if (isApply !== false) {\n                        clearPeriodMap.call(this);\n                    }\n\n                    if (cfg.period = period) {\n                        result = processor.range(period);\n                    }\n\n                    this.periodMap = result;\n\n                    //console.log(this.periodMap);\n\n                    // 변경내용 적용하여 출력\n                    if (isApply !== false) {\n                        applyPeriodMap.call(this);\n                    }\n                    return this;\n                };\n            })();\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.calendar_instance = UI.calendar_instance || [];\n                UI.calendar_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n    })());\n    CALENDAR = ax5.ui.calendar;\n})();","// ax5.ui.calendar.tmpl\n(function () {\n\n    var CALENDAR = ax5.ui.calendar;\n\n    var frameTmpl = function (columnKeys) {\n        return `\n                <div class=\"ax5-ui-calendar {{theme}}\" data-calendar-els=\"root\" onselectstart=\"return false;\">\n                    {{#control}}\n                    <div class=\"calendar-control\" data-calendar-els=\"control\" style=\"{{controlCSS}}\">\n                        <a class=\"date-move-left\" data-calendar-move=\"left\" style=\"{{controlButtonCSS}}\">{{{left}}}</a>\n                        <div class=\"date-display\" data-calendar-els=\"control-display\" style=\"{{controlCSS}}\"></div>\n                        <a class=\"date-move-right\" data-calendar-move=\"right\" style=\"{{controlButtonCSS}}\">{{{right}}}</a>\n                    </div>\n                    {{/control}}\n                    <div class=\"calendar-body\" data-calendar-els=\"body\"></div>\n                </div>\n                `;\n    };\n    var dayTmpl = function (columnKeys) {\n        return `\n                <table data-calendar-table=\"day\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;\">\n                    <thead>\n                        <tr>\n                        {{#weekNames}}\n                            <td class=\"calendar-col-{{col}}\" style=\"height: {{colHeadHeight}}\">\n                            {{label}}\n                            </td>\n                        {{/weekNames}}\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            {{#list}}    \n                            {{#isStartOfWeek}}\n                            {{^@first}}\n                        </tr>\n                        <tr>\n                            {{/@first}}\n                            {{/isStartOfWeek}}\n                            <td class=\"calendar-col-{{col}}\" style=\"{{itemStyles}}\">\n                                <a class=\"calendar-item-day {{addClass}}\" data-calendar-item-date=\"{{thisDate}}\">\n                                    <span class=\"addon addon-header\"></span>\n                                    {{thisDataLabel}}\n                                    <span class=\"addon addon-footer\"></span>\n                                </a>\n                            </td>\n                            {{/list}}\n                        </tr>\n                    </tbody>\n                </table>\n                `;\n    };\n    var monthTmpl = function (columnKeys) {\n        return `\n                <table data-calendar-table=\"month\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;\">\n                    <thead>\n                        <tr>\n                            <td class=\"calendar-col-0\" colspan=\"3\" style=\"height: {{colHeadHeight}}\">\n                            {{colHeadLabel}}\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            {{#list}}    \n                            {{#isStartOfRow}}\n                            {{^@first}}\n                        </tr>\n                        <tr>\n                            {{/@first}}\n                            {{/isStartOfRow}}\n                            <td class=\"calendar-col-{{col}}\" style=\"{{itemStyles}}\">\n                                <a class=\"calendar-item-month {{addClass}}\" data-calendar-item-month=\"{{thisMonth}}\">\n                                    <span class=\"addon\"></span>\n                                    {{thisMonthLabel}}\n                                    <span class=\"lunar\"></span>\n                                </a>\n                            </td>\n                            {{/list}}\n                        </tr>\n                    </tbody>\n                </table>\n                `;\n    };\n    var yearTmpl = function (columnKeys) {\n        return `\n                <table data-calendar-table=\"year\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;\">\n                    <thead>\n                        <tr>\n                            <td class=\"calendar-col-0\" colspan=\"4\" style=\"height: {{colHeadHeight}}\">\n                            {{colHeadLabel}}\n                            </td>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            {{#list}}    \n                            {{#isStartOfRow}}\n                            {{^@first}}\n                        </tr>\n                        <tr>\n                            {{/@first}}\n                            {{/isStartOfRow}}\n                            <td class=\"calendar-col-{{col}}\" style=\"{{itemStyles}}\">\n                                <a class=\"calendar-item-year {{addClass}}\" data-calendar-item-year=\"{{thisYear}}\">\n                                    <span class=\"addon\"></span>\n                                    {{thisYearLabel}}\n                                    <span class=\"lunar\"></span>\n                                </a>\n                            </td>\n                            {{/list}}\n                        </tr>\n                    </tbody>\n                </table>\n                `;\n    };\n\n    CALENDAR.tmpl = {\n        \"frameTmpl\": frameTmpl,\n        \"dayTmpl\": dayTmpl,\n        \"monthTmpl\": monthTmpl,\n        \"yearTmpl\": yearTmpl,\n        \n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(CALENDAR.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();","// ax5.ui.picker\n(function () {\n\n    const UI = ax5.ui;\n    const U = ax5.util;\n    let PICKER;\n\n    UI.addClass({\n        className: \"picker\"\n    }, (function () {\n        /**\n         * @class ax5picker\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * ax5.def.picker.date_leftArrow = '<i class=\"fa fa-chevron-left\"></i>';\n         * ax5.def.picker.date_yearTmpl = '%s';\n         * ax5.def.picker.date_monthTmpl = '%s';\n         * def.picker.date_rightArrow = '<i class=\"fa fa-chevron-right\"></i>';\n         *\n         * var picker = new ax5.ui.picker({\n         *     onStateChanged: function () {\n         *         console.log(this);\n         *     }\n         * });\n         *\n         * picker.bind({\n         *     target: $('[data-picker-date]'),\n         *     direction: \"auto\",\n         *     content: {\n         *         type: 'date',\n         *         formatter: {\n         *             pattern: 'date'\n         *         }\n         *     }\n         * });\n         * ```\n         */\n        return function () {\n            let self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n                theme: 'default',\n                title: '',\n                lang: {\n                    \"ok\": \"ok\",\n                    \"cancel\": \"cancel\"\n                },\n                animateTime: 100,\n                calendar: {\n                    multipleSelect: false,\n                    control: {\n                        left: ax5.def.picker.date_leftArrow || '&#x02190',\n                        yearTmpl: ax5.def.picker.date_yearTmpl || '%s',\n                        monthTmpl: ax5.def.picker.date_monthTmpl || '%s',\n                        right: ax5.def.picker.date_rightArrow || '&#x02192',\n                        yearFirst: true\n                    }\n                },\n                palette: {}\n            };\n            this.queue = [];\n            this.activePicker = null;\n            this.activePickerQueueIndex = -1;\n            this.openTimer = null;\n            this.closeTimer = null;\n\n            cfg = this.config;\n\n            const onStateChanged = function (item, that) {\n                if (item && item.onStateChanged) {\n                    item.onStateChanged.call(that, that);\n                }\n                else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n                return true;\n            };\n            const bindPickerTarget = (function () {\n\n                var pickerEvent = {\n                    'focus': function (queIdx, e) {\n                        this.open(queIdx);\n                    },\n                    'click': function (queIdx, e) {\n                        this.open(queIdx);\n                    }\n                };\n\n                var pickerType = {\n                    '@fn': function (queIdx, _input) {\n                        let item = this.queue[queIdx],\n                            inputLength = _input.length,\n                            config = {\n                                inputLength: inputLength || 1\n                            };\n\n                        if (inputLength > 1) {\n                            config.btns = {\n                                ok: {label: cfg.lang[\"ok\"], theme: cfg.theme}\n                            };\n                        }\n\n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        config = null;\n                        inputLength = null;\n                    },\n                    'date': function (queIdx, _input) {\n                        let item = this.queue[queIdx],\n                            contentWidth = (item.content) ? item.content.width || 270 : 270,\n                            contentMargin = (item.content) ? item.content.margin || 5 : 5,\n                            inputLength = _input.length,\n                            config = {\n                                contentWidth: (contentWidth * inputLength) + ((inputLength - 1) * contentMargin),\n                                content: {width: contentWidth, margin: contentMargin},\n                                inputLength: inputLength || 1\n                            };\n\n                        if (inputLength > 1 && !item.btns) {\n                            config.btns = {\n                                ok: {label: cfg.lang[\"ok\"], theme: cfg.theme}\n                            };\n                        }\n\n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        contentWidth = null;\n                        contentMargin = null;\n                        config = null;\n                        inputLength = null;\n                    },\n                    'secure-num': function (queIdx, _input) {\n                        let item = this.queue[queIdx],\n                            inputLength = _input.length,\n                            config = {\n                                inputLength: inputLength || 1\n                            };\n\n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        config = null;\n                        inputLength = null;\n                    },\n                    'keyboard': function (queIdx, _input) {\n                        let item = this.queue[queIdx],\n                            inputLength = _input.length,\n                            config = {\n                                inputLength: inputLength || 1\n                            };\n\n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        config = null;\n                        inputLength = null;\n                    },\n                    'numpad': function (queIdx, _input) {\n                        let item = this.queue[queIdx],\n                            inputLength = _input.length,\n                            config = {\n                                inputLength: inputLength || 1\n                            };\n\n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        config = null;\n                        inputLength = null;\n                    },\n                    'color': function (queIdx, _input) {\n                        let item = this.queue[queIdx],\n                            contentWidth = (item.content) ? item.content.width || 270 : 270,\n                            contentMargin = (item.content) ? item.content.margin || 5 : 5,\n                            inputLength = _input.length,\n                            config = {\n                                contentWidth: (contentWidth * inputLength) + ((inputLength - 1) * contentMargin),\n                                content: {width: contentWidth, margin: contentMargin},\n                                inputLength: inputLength || 1\n                            },\n                            $colorPreview = item.$target.find('[data-ax5picker-color=\"preview\"]');\n\n                        if ($colorPreview.get(0)) {\n                            $colorPreview.css({\"background-color\": \"#\" + U.color(_input.val() || \"#000000\").getHexValue()});\n                            // 컬러 피커인 경우 input의 값이 변경되면 preview를 수정\n                            _input.on(\"change\", function () {\n                                $colorPreview.css({\"background-color\": \"#\" + U.color(this.value || \"#000000\").getHexValue()});\n                            });\n                        }\n\n                        if (inputLength > 1 && !item.btns) {\n                            config.btns = {\n                                ok: {label: cfg.lang[\"ok\"], theme: cfg.theme}\n                            };\n                        }\n                        \n                        this.queue[queIdx] = jQuery.extend(true, config, item);\n\n                        contentWidth = null;\n                        contentMargin = null;\n                        config = null;\n                        inputLength = null;\n                    }\n                };\n\n                return function (queIdx) {\n                    let item = this.queue[queIdx],\n                        input;\n\n                    if (!item.content) {\n                        console.log(ax5.info.getError(\"ax5picker\", \"501\", \"bind\"));\n                        return this;\n                    }\n\n                    input = (item.$target.get(0).tagName.toUpperCase() == \"INPUT\") ? item.$target : item.$target.find('input[type]');\n\n                    // 함수타입\n                    if (U.isFunction(item.content)) {\n                        pickerType[\"@fn\"].call(this, queIdx, input);\n                    }\n                    else {\n                        for (var key in pickerType) {\n                            if (item.content.type == key) {\n                                pickerType[key].call(this, queIdx, input);\n                                break;\n                            }\n                        }\n                    }\n\n                    input\n                        .unbind('focus.ax5picker')\n                        .unbind('click.ax5picker')\n                        .bind('focus.ax5picker', pickerEvent.focus.bind(this, queIdx))\n                        .bind('click.ax5picker', pickerEvent.click.bind(this, queIdx));\n\n                    item.$target\n                        .find('.input-group-addon')\n                        .unbind('click.ax5picker')\n                        .bind('click.ax5picker', pickerEvent.click.bind(this, queIdx));\n\n                    if (item.content.formatter && ax5.ui.formatter) {\n                        input.ax5formatter(item.content.formatter);\n                    }\n\n                    input = null;\n                    item = null;\n                    queIdx = null;\n                    return this;\n                }\n\n            })();\n            const alignPicker = function (append) {\n                if (!this.activePicker) return this;\n\n                let _alignPicker = function (item) {\n                    var $window = jQuery(window), $body = jQuery(document.body);\n                    var pos = {}, positionMargin = 12,\n                        dim = {}, pickerDim = {},\n                        pickerDirection;\n\n                    pos = item.$target.offset();\n                    dim = {\n                        width: item.$target.outerWidth(),\n                        height: item.$target.outerHeight()\n                    };\n                    pickerDim = {\n                        winWidth: Math.max($window.width(), $body.width()),\n                        winHeight: Math.max($window.height(), $body.height()),\n                        width: this.activePicker.outerWidth(),\n                        height: this.activePicker.outerHeight()\n                    };\n\n                    // picker css(width, left, top) & direction 결정\n\n                    if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n                        // set direction\n                        pickerDirection = \"top\";\n                        if (pos.top - pickerDim.height - positionMargin < 0) {\n                            pickerDirection = \"top\";\n                        } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                            pickerDirection = \"bottom\";\n                        }\n                    } else {\n                        pickerDirection = item.direction;\n                    }\n\n                    if (append) {\n                        this.activePicker\n                            .addClass(\"direction-\" + pickerDirection);\n                    }\n\n                    var positionCSS = (function () {\n                        var css = {left: 0, top: 0};\n                        switch (pickerDirection) {\n                            case \"top\":\n                                css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n                                css.top = pos.top + dim.height + positionMargin;\n                                break;\n                            case \"bottom\":\n                                css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n                                css.top = pos.top - pickerDim.height - positionMargin;\n                                break;\n                            case \"left\":\n                                css.left = pos.left + dim.width + positionMargin;\n                                css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n                                break;\n                            case \"right\":\n                                css.left = pos.left - pickerDim.width - positionMargin;\n                                css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n                                break;\n                        }\n                        return css;\n                    })();\n\n                    (function () {\n                        if (pickerDirection == \"top\" || pickerDirection == \"bottom\") {\n                            if (positionCSS.left < 0) {\n                                positionCSS.left = positionMargin;\n                                this.activePickerArrow.css({left: (pos.left + dim.width / 2) - positionCSS.left});\n                            } else if (positionCSS.left + pickerDim.width > pickerDim.winWidth) {\n                                positionCSS.left = pickerDim.winWidth - pickerDim.width - positionMargin;\n                                this.activePickerArrow.css({left: (pos.left + dim.width / 2) - positionCSS.left});\n                            }\n                        }\n                    }).call(this);\n\n                    this.activePicker\n                        .css(positionCSS);\n                };\n                let item = this.queue[this.activePickerQueueIndex];\n\n                if (append) {\n                    this.activePicker.css({top: -999});\n                    jQuery(document.body).append(this.activePicker);\n                }\n\n                setTimeout((function () {\n                    _alignPicker.call(this, item);\n                }).bind(this));\n            };\n            const onBodyClick = function (e, target) {\n                if (!this.activePicker) return this;\n\n                let item = this.queue[this.activePickerQueueIndex];\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-picker-els\")) {\n                        return true;\n                    }\n                    else if (item.$target.get(0) == target) {\n                        return true;\n                    }\n                });\n                if (!target) {\n                    this.close();\n                    return this;\n                }\n                //console.log(\"i'm picker\");\n                return this;\n            };\n            const onBtnClick = function (e, target) {\n                // console.log('btn click');\n                if (e.srcElement) e.target = e.srcElement;\n\n                target = U.findParentNode(e.target, function (target) {\n                    if (target.getAttribute(\"data-picker-btn\")) {\n                        return true;\n                    }\n                });\n\n                if (target) {\n                    let\n                        item = this.queue[this.activePickerQueueIndex],\n                        k = target.getAttribute(\"data-picker-btn\")\n                        ;\n\n                    if (item.btns && item.btns[k].onClick) {\n                        let that = {\n                            key: k,\n                            value: item.btns[k],\n                            self: this,\n                            item: item\n                        };\n                        item.btns[k].onClick.call(that, k);\n                    }\n                    else {\n                        this.close();\n                    }\n                }\n            };\n            const onBodyKeyup = function (e) {\n                if (e.keyCode == ax5.info.eventKeys.ESC) {\n                    this.close();\n                }\n            };\n            const getQueIdx = function (boundID) {\n                if (!U.isString(boundID)) {\n                    boundID = jQuery(boundID).data(\"data-axpicker-id\");\n                }\n                if (!U.isString(boundID)) {\n                    console.log(ax5.info.getError(\"ax5picker\", \"402\", \"getQueIdx\"));\n                    return;\n                }\n                return U.search(this.queue, function () {\n                    return this.id == boundID;\n                });\n            };\n            /// private end\n\n            /**\n             * Preferences of picker UI\n             * @method ax5picker.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5picker}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n            };\n\n            /**\n             * bind picker UI\n             * @method ax5picker.bind\n             * @param {Object} item\n             * @param {Element} item.target\n             * @param {String} item.direction - top|left|right|bottom|auto\n             * @param {Number} item.contentWidth\n             * @param {Boolean} item.disableChangeTrigger\n             * @param {Function} item.onStateChanged\n             * @param {Object} item.btns\n             * @param {Object} item.content\n             * @param {Number} item.content.width\n             * @param {Number} item.content.margin\n             * @param {String} item.content.type\n             * @param {Object} item.content.config - binded UI config\n             * @param {Object} item.content.formatter\n             * @param {String} item.content.formatter.pattern\n             * @returns {ax5picker}\n             * @example\n             * ```js\n             * var picker = new ax5.ui.picker();\n             * $(document.body).ready(function () {\n             *   picker.bind({\n             *       target: $('[data-ax5picker=\"basic\"]'),\n             *       direction: \"top\",\n             *       content: {\n             *           width: 270,\n             *           margin: 10,\n             *           type: 'date',\n             *           config: {\n             *               control: {\n             *                   left: '<i class=\"fa fa-chevron-left\"></i>',\n             *                   yearTmpl: '%s',\n             *                   monthTmpl: '%s',\n             *                   right: '<i class=\"fa fa-chevron-right\"></i>'\n             *               },\n             *               lang: {\n             *                   yearTmpl: \"%s년\",\n             *                   months: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'],\n             *                   dayTmpl: \"%s\"\n             *               }\n             *           },\n             *           formatter: {\n             *               pattern: 'date'\n             *           }\n             *       },\n             *       onStateChanged: function () {\n             *\n             *       }\n             *   });\n             * });\n             * ```\n             */\n            this.bind = function (item) {\n                let pickerConfig = {},\n                    queIdx;\n\n                item = jQuery.extend(true, pickerConfig, cfg, item);\n\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5picker\", \"401\", \"bind\"));\n                    return this;\n                }\n                item.$target = jQuery(item.target);\n\n                if (!item.$target.get(0)) {\n                    console.log(ax5.info.getError(\"ax5picker\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                if (!item.id) item.id = item.$target.data(\"data-axpicker-id\");\n\n                if (!item.id) {\n                    item.id = 'ax5-picker-' + ax5.getGuid();\n                    item.$target.data(\"data-axpicker-id\", item.id);\n                }\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindPickerTarget.call(this, this.queue.length - 1);\n                }\n                else {\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindPickerTarget.call(this, queIdx);\n                }\n\n                pickerConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * @method ax5picker.setContentValue\n             * @param {String} boundID\n             * @param {Number} inputIndex\n             * @param {String} val\n             * @returns {ax5picker} this\n             */\n            this.setContentValue = (function () {\n\n                var multipleInputProcessor = {\n                    \"date\": function (_item, _inputIndex, _val) {\n                        var values = [],\n                            diffDay, prevInputValue, nextInputValue;\n\n                        if (_item.$target.get(0).tagName.toUpperCase() !== \"INPUT\") {\n                            _item.$target.find('input[type]').each(function () {\n                                values.push(this.value);\n                            });\n                        }\n\n                        if (_inputIndex == 0) {\n                            if (values.length > 1 && values[1] !== \"\") {\n                                // 값 검증\n                                diffDay = ax5.util.dday(values[1], {today: values[0]});\n                                if (diffDay < 0) {\n                                    // 다음날짜 달력을 변경합니다.\n                                    nextInputValue = _val;\n                                } else {\n\n                                }\n                            } else {\n                                nextInputValue = _val;\n                            }\n\n                            if (nextInputValue) {\n                                _item.pickerCalendar[1].ax5uiInstance.setSelection([nextInputValue], false).changeMode(\"d\", nextInputValue);\n                                this.setContentValue(_item.id, 1, nextInputValue);\n                            }\n\n                            return _val;\n\n                        } else if (_inputIndex == 1) {\n\n                            if (values.length > 1) {\n                                // 값 검증\n                                diffDay = ax5.util.dday(values[1], {today: values[0]});\n                                if (diffDay < 0) {\n                                    // 다음날짜 달력을 변경합니다.\n                                    prevInputValue = values[1];\n                                }\n                            }\n\n                            if (prevInputValue) {\n                                _item.pickerCalendar[0].ax5uiInstance.setSelection([prevInputValue], false).changeMode(\"d\", prevInputValue);\n                                this.setContentValue(_item.id, 0, prevInputValue);\n                            }\n\n                            return _val;\n                        }\n                    }\n                };\n\n                return function (boundID, inputIndex, val, _option) {\n\n                    let queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID),\n                        item = this.queue[queIdx],\n                        _input;\n\n                    if(!_option) _option = {};\n\n                    if (item) {\n\n                        _input = (item.$target.get(0).tagName.toUpperCase() == \"INPUT\") ? item.$target : jQuery(item.$target.find('input[type]').get(inputIndex));\n                        _input.val(val);\n\n                        if (!item.disableChangeTrigger) {\n                            _input.trigger(\"change\");\n                        } else {\n                            let $colorPreview = item.$target.find('[data-ax5picker-color=\"preview\"]');\n                            if ($colorPreview.get(0)) {\n                                $colorPreview.css({\"background-color\": val});\n                            }\n                        }\n\n                        // picker의 입력이 2개이상인 경우\n                        //console.log(item.inputLength);\n                        if (item.inputLength > 1) {\n                            // 경우에 따라 첫번 선택에 따라 해야할 일들 처리\n                            if (multipleInputProcessor[item.content.type]) {\n                                val = multipleInputProcessor[item.content.type].call(this, item, inputIndex, val);\n                            }\n                        }\n\n                        var that = {\n                            self: self,\n                            state: \"changeValue\",\n                            item: item,\n                            inputIndex: inputIndex,\n                            value: val,\n                            values: [val]\n                        };\n                        if (item.$target.get(0).tagName.toUpperCase() !== \"INPUT\") {\n                            that.values = [];\n                            item.$target.find('input[type]').each(function () {\n                                that.values.push(this.value);\n                            });\n                        }\n\n                        onStateChanged.call(this, item, that);\n\n                        if (item.inputLength == 1 && !_option.doNotClose) {\n                            this.close();\n                        }\n                    }\n\n                    item = null;\n                    boundID = null;\n                    inputIndex = null;\n                    val = null;\n                    return this;\n                };\n            })();\n\n\n            /**\n             * @method ax5picker.getContentValue\n             * @param {String} boundID\n             * @param {Number} inputIndex\n             * @returns {ax5picker} this\n             */\n            this.getContentValue = (function () {\n                return function (boundID, inputIndex) {\n                    let queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID),\n                        item = this.queue[queIdx],\n                        _input;\n\n                    if (item) {\n                        _input = (item.$target.get(0).tagName.toUpperCase() == \"INPUT\") ? item.$target : jQuery(item.$target.find('input[type]').get(inputIndex));\n                        return _input.val();\n                    }\n\n                    item = null;\n                    boundID = null;\n                    inputIndex = null;\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5picker.open\n             * @param {String} boundObjectId\n             * @returns {ax5picker} this\n             */\n            this.open = (function () {\n\n                let pickerContent = {\n                    '@fn': function (queIdx, callback) {\n                        let item = this.queue[queIdx];\n                        item.content.call(item, function (html) {\n                            callback(html);\n                        });\n                        return true;\n                    },\n                    'date': function (queIdx) {\n                        let item = this.queue[queIdx],\n                            html = [],\n                            calendarConfig = jQuery.extend({}, cfg.calendar, {displayDate: (new Date())}),\n                            input = (item.$target.get(0).tagName.toUpperCase() == \"INPUT\") ? item.$target : item.$target.find('input[type]');\n\n                        for (let i = 0; i < item.inputLength; i++) {\n                            html.push('<div '\n                                + 'style=\"width:' + U.cssNumber(item.content.width) + ';float:left;\" '\n                                + 'class=\"ax-picker-content-box\" '\n                                + 'data-calendar-target=\"' + i + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        // calendar bind\n                        item.pickerCalendar = [];\n                        item.pickerContent.find('[data-calendar-target]').each(function () {\n\n                            // calendarConfig extend ~\n                            let idx = this.getAttribute(\"data-calendar-target\"),\n                                dValue = input.get(idx).value,\n                                d = ax5.util.date(dValue),\n                                dateConvert = {\n                                    \"year\"(_d) {\n                                        return ax5.util.date(_d, {\"return\": \"yyyy\"})\n                                    },\n                                    \"month\"(_d){\n                                        return ax5.util.date(_d, {\"return\": \"yyyy-MM\"})\n                                    },\n                                    \"day\"(_d){\n                                        return _d\n                                    }\n                                };\n\n                            calendarConfig.displayDate = d;\n\n                            if (dValue) calendarConfig.selection = [d];\n\n                            calendarConfig = jQuery.extend(true, calendarConfig, item.content.config || {});\n                            calendarConfig.target = this;\n                            calendarConfig.onClick = function () {\n                                self.setContentValue(item.id, idx, dateConvert[calendarConfig.selectMode || \"day\"](this.date));\n                            };\n\n                            item.pickerCalendar.push({\n                                itemId: item.id,\n                                inputIndex: idx,\n                                ax5uiInstance: new ax5.ui.calendar(calendarConfig)\n                            });\n                        });\n\n                    },\n                    'secure-num': function (queIdx) {\n                        let item = this.queue[queIdx],\n                            html = [];\n                        for (let i = 0; i < item.inputLength; i++) {\n                            html.push('<div '\n                                + 'style=\"width:' + U.cssNumber(item.content.width) + ';float:left;\" '\n                                + 'class=\"ax-picker-content-box\" '\n                                + 'data-secure-num-target=\"' + i + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        // secure-num bind\n                        item.pickerContent.find('[data-secure-num-target]').each(function () {\n                            var idx = this.getAttribute(\"data-secure-num-target\"),\n                                po = [];\n\n                            var numArray = (function (a) {\n                                var j, x, i;\n                                for (i = a.length; i; i -= 1) {\n                                    j = Math.floor(Math.random() * i);\n                                    x = a[i - 1];\n                                    a[i - 1] = a[j];\n                                    a[j] = x;\n                                }\n                                return a;\n                            })([0, 1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\n                            var specialArray = [\n                                {label: \"&#x02190\", fn: \"back\"}, {label: \"C\", fn: \"clear\"}\n                            ];\n\n                            numArray.forEach(function (n) {\n                                po.push('<div style=\"float:left;' + item.content.config.btnWrapStyle + '\">');\n                                po.push('<button class=\"btn btn-default btn-' + item.content.config.btnTheme + '\" '\n                                    + 'style=\"' + item.content.config.btnStyle + '\" data-secure-num-value=\"' + n + '\">' + n + '</button>');\n                                po.push('</div>');\n                            });\n                            specialArray.forEach(function (n) {\n                                po.push('<div style=\"float:left;' + item.content.config.btnWrapStyle + '\">');\n                                po.push('<button class=\"btn btn-default btn-' + item.content.config.specialBtnTheme + '\" '\n                                    + 'style=\"' + item.content.config.btnStyle + '\" data-secure-num-value=\"' + n.fn + '\">' + n.label + '</button>');\n                                po.push('</div>');\n                            });\n\n                            po.push('<div style=\"clear:both;\"></div>');\n\n                            $(this).html(po.join('')).on(\"click\", '[data-secure-num-value]', function () {\n                                var act = this.getAttribute(\"data-secure-num-value\");\n                                var _input = (item.$target.get(0).tagName.toUpperCase() == \"INPUT\") ? item.$target : jQuery(item.$target.find('input[type]').get(idx));\n                                var val = _input.val();\n\n                                if (act == \"back\") {\n                                    _input.val(val.substring(0, val.length - 1));\n                                }\n                                else if (act == \"clear\") {\n                                    _input.val('');\n                                }\n                                else {\n                                    _input.val(val + act);\n                                }\n\n                                onStateChanged.call(this, item, {\n                                    self: self,\n                                    state: \"changeValue\",\n                                    item: item,\n                                    value: _input.val()\n                                });\n                            });\n                        });\n                    },\n                    'keyboard': function (queIdx) {\n                        var item = this.queue[queIdx];\n                        var html = [];\n                        for (var i = 0; i < item.inputLength; i++) {\n                            html.push('<div '\n                                + 'style=\"width:' + U.cssNumber(item.content.width) + ';float:left;\" '\n                                + 'class=\"ax-picker-content-box\" '\n                                + 'data-keyboard-target=\"' + i + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        var keyArray = [\n                            [\n                                {value: \"`\", shiftValue: \"~\"},\n                                {value: \"1\", shiftValue: \"!\"},\n                                {value: \"2\", shiftValue: \"@\"},\n                                {value: \"3\", shiftValue: \"#\"},\n                                {value: \"4\", shiftValue: \"$\"},\n                                {value: \"5\", shiftValue: \"%\"},\n                                {value: \"6\", shiftValue: \"^\"},\n                                {value: \"7\", shiftValue: \"&\"},\n                                {value: \"8\", shiftValue: \"*\"},\n                                {value: \"9\", shiftValue: \"(\"},\n                                {value: \"0\", shiftValue: \")\"},\n                                {value: \"-\", shiftValue: \"_\"},\n                                {value: \"=\", shiftValue: \"+\"},\n                                {label: \"&#x02190\", fn: \"back\"}\n                            ],\n                            [\n                                {value: \"q\", shiftValue: \"Q\"},\n                                {value: \"w\", shiftValue: \"W\"},\n                                {value: \"e\", shiftValue: \"E\"},\n                                {value: \"r\", shiftValue: \"R\"},\n                                {value: \"t\", shiftValue: \"T\"},\n                                {value: \"y\", shiftValue: \"Y\"},\n                                {value: \"u\", shiftValue: \"U\"},\n                                {value: \"i\", shiftValue: \"I\"},\n                                {value: \"o\", shiftValue: \"O\"},\n                                {value: \"p\", shiftValue: \"P\"},\n                                {value: \"[\", shiftValue: \"{\"},\n                                {value: \"]\", shiftValue: \"}\"},\n                                {value: \"\\\\\", shiftValue: \"|\"}\n                            ],\n                            [\n                                {label: \"Clear\", fn: \"clear\"},\n                                {value: \"a\", shiftValue: \"A\"},\n                                {value: \"s\", shiftValue: \"S\"},\n                                {value: \"d\", shiftValue: \"D\"},\n                                {value: \"f\", shiftValue: \"F\"},\n                                {value: \"g\", shiftValue: \"G\"},\n                                {value: \"h\", shiftValue: \"H\"},\n                                {value: \"j\", shiftValue: \"J\"},\n                                {value: \"k\", shiftValue: \"K\"},\n                                {value: \"l\", shiftValue: \"L\"},\n                                {value: \";\", shiftValue: \":\"},\n                                {value: \"'\", shiftValue: \"\\\"\"}\n\n\n                            ],\n                            [\n                                {label: \"Shift\", fn: \"shift\"},\n                                {value: \"z\", shiftValue: \"Z\"},\n                                {value: \"x\", shiftValue: \"X\"},\n                                {value: \"c\", shiftValue: \"C\"},\n                                {value: \"v\", shiftValue: \"V\"},\n                                {value: \"b\", shiftValue: \"B\"},\n                                {value: \"n\", shiftValue: \"N\"},\n                                {value: \"m\", shiftValue: \"M\"},\n                                {value: \",\", shiftValue: \"<\"},\n                                {value: \".\", shiftValue: \">\"},\n                                {value: \"/\", shiftValue: \"?\"},\n                                {label: \"Close\", fn: \"close\"}\n                            ]\n                        ];\n                        var specialArray = [\n                            {label: \"&#x02190\", fn: \"back\"}, {label: \"C\", fn: \"clear\"}\n                        ];\n\n                        var getKeyBoard = function (isShiftKey) {\n                            var po = [];\n                            keyArray.forEach(function (row) {\n                                po.push('<div style=\"display: table;margin:0 auto;\">');\n                                row.forEach(function (n) {\n\n                                    var keyValue, keyLabel, btnWrapStyle, btnTheme, btnStyle;\n                                    if (n.fn) {\n                                        keyValue = n.fn;\n                                        keyLabel = n.label;\n                                        btnWrapStyle = item.content.config.specialBtnWrapStyle;\n                                        btnTheme = item.content.config.specialBtnTheme;\n                                        btnStyle = item.content.config.specialBtnStyle;\n                                    } else {\n                                        keyLabel = keyValue = ((isShiftKey) ? n.shiftValue : n.value);\n                                        btnWrapStyle = item.content.config.btnWrapStyle;\n                                        btnTheme = item.content.config.btnTheme;\n                                        btnStyle = item.content.config.btnStyle;\n                                    }\n\n                                    po.push('<div style=\"display: table-cell;' + btnWrapStyle + '\">');\n                                    po.push('<button class=\"btn btn-default btn-' + btnTheme + '\" '\n                                        + 'style=\"' + btnStyle + '\" data-keyboard-value=\"' + keyValue + '\">' + keyLabel + '</button>');\n                                    po.push('</div>');\n                                });\n                                po.push('</div>');\n                            });\n                            return po.join('');\n                        };\n\n                        // secure-num bind\n                        item.pickerContent.find('[data-keyboard-target]').each(function () {\n                            let idx = this.getAttribute(\"data-keyboard-target\"),\n                                $this = $(this),\n                                isShiftKey = false,\n                                toggleShift = function () {\n                                    isShiftKey = !isShiftKey;\n                                    $this.html(getKeyBoard(isShiftKey));\n                                };\n\n                            $this.html(getKeyBoard(isShiftKey)).on(\"mousedown\", '[data-keyboard-value]', function () {\n                                let act = this.getAttribute(\"data-keyboard-value\"),\n                                    _input = (item.$target.get(0).tagName.toUpperCase() == \"INPUT\") ? item.$target : jQuery(item.$target.find('input[type]').get(idx)),\n                                    val = _input.val();\n\n                                switch (act) {\n                                    case \"back\":\n                                        _input.val(val.substring(0, val.length - 1));\n                                        break;\n                                    case \"clear\":\n                                        _input.val('');\n                                        break;\n                                    case \"shift\":\n                                        toggleShift();\n                                        return false;\n                                        break;\n                                    case \"close\":\n                                        self.close();\n                                        return false;\n                                        break;\n                                    default:\n                                        _input.val(val + act);\n                                }\n\n                                onStateChanged.call(this, item, {\n                                    self: self,\n                                    state: \"changeValue\",\n                                    item: item,\n                                    value: _input.val()\n                                });\n                            });\n                        });\n                    },\n                    'numpad': function (queIdx) {\n                        let item = this.queue[queIdx],\n                            html = [];\n                        for (let i = 0; i < item.inputLength; i++) {\n                            html.push('<div '\n                                + 'style=\"width:' + U.cssNumber(item.content.width) + ';float:left;\" '\n                                + 'class=\"ax-picker-content-box\" '\n                                + 'data-numpad-target=\"' + i + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        // secure-num bind\n                        item.pickerContent.find('[data-numpad-target]').each(function () {\n                            let idx = this.getAttribute(\"data-numpad-target\"),\n                                po = [],\n                                keyArray = item.content.config.keyArray || [\n                                        {value: \"7\"},\n                                        {value: \"8\"},\n                                        {value: \"9\"},\n                                        {label: \"BS\", fn: \"back\"},\n                                        {value: \"4\"},\n                                        {value: \"5\"},\n                                        {value: \"6\"},\n                                        {label: \"CLS\", fn: \"clear\"},\n                                        {value: \"1\"},\n                                        {value: \"2\"},\n                                        {value: \"3\"},\n                                        {value: \"\"},\n                                        {value: \".\"},\n                                        {value: \"0\"},\n                                        {value: \"\"},\n                                        {label: \"OK\", fn: \"enter\"}\n                                    ];\n\n                            keyArray.forEach(function (n) {\n                                let keyValue, keyLabel, btnWrapStyle, btnTheme, btnStyle;\n\n                                if (n.fn) {\n                                    keyValue = n.fn;\n                                    keyLabel = n.label;\n                                    btnTheme = item.content.config.specialBtnTheme;\n                                    btnWrapStyle = item.content.config.specialBtnWrapStyle;\n                                    btnStyle = item.content.config.specialBtnStyle;\n                                } else {\n                                    keyLabel = keyValue = n.value;\n                                    btnTheme = (keyValue) ? item.content.config.btnTheme : \"\";\n                                    btnWrapStyle = item.content.config.btnWrapStyle;\n                                    btnStyle = item.content.config.btnStyle;\n                                }\n\n                                po.push('<div style=\"float:left;' + btnWrapStyle + '\">');\n                                po.push('<button class=\"btn btn-default btn-' + btnTheme + '\" '\n                                    + 'style=\"' + btnStyle + '\" data-numpad-value=\"' + keyValue + '\">' + (keyLabel || \"&nbsp;\") + '</button>');\n                                po.push('</div>');\n                            });\n\n                            po.push('<div style=\"clear:both;\"></div>');\n\n                            $(this).html(po.join('')).on(\"mousedown\", '[data-numpad-value]', function () {\n                                let act = this.getAttribute(\"data-numpad-value\"),\n                                    _input = (item.$target.get(0).tagName.toUpperCase() == \"INPUT\") ? item.$target : jQuery(item.$target.find('input[type]').get(idx)),\n                                    val = _input.val(),\n                                    state = \"\";\n\n                                switch (act) {\n                                    case \"back\":\n                                        state = \"changeValue\";\n                                        _input.val(val.substring(0, val.length - 1));\n                                        break;\n                                    case \"clear\":\n                                        state = \"changeValue\";\n                                        _input.val('');\n                                        break;\n                                    case \"enter\":\n                                        self.close(item, \"enter\");\n                                        return false;\n                                        break;\n                                    case \"close\":\n                                        self.close();\n                                        return false;\n                                        break;\n                                    default:\n                                        state = \"changeValue\";\n                                        _input.val(val + act);\n                                }\n\n                                onStateChanged.call(this, item, {\n                                    self: self,\n                                    state: state,\n                                    item: item,\n                                    value: _input.val()\n                                });\n                            });\n                        });\n                    },\n                    'color': function (queIdx) {\n                        let item = this.queue[queIdx],\n                            html = [],\n                            paletteConfig = jQuery.extend({}, cfg.palette),\n                            input = (item.$target.get(0).tagName.toUpperCase() == \"INPUT\") ? item.$target : item.$target.find('input[type]');\n\n                        for (let i = 0; i < item.inputLength; i++) {\n                            html.push('<div '\n                                + 'style=\"padding: 5px;width:' + U.cssNumber(item.content.width) + ';float:left;\" '\n                                + 'class=\"ax-picker-content-box\" '\n                                + 'data-palette-target=\"' + i + '\" data-ax5palette=\"ax5picker-' + item.id + '\"></div>');\n                            if (i < item.inputLength - 1) html.push('<div style=\"width:' + item.content.margin + 'px;float:left;height: 5px;\"></div>');\n                        }\n                        html.push('<div style=\"clear:both;\"></div>');\n                        item.pickerContent.html(html.join(''));\n\n                        // calendar bind\n                        item.pickerPalette = [];\n\n                        item.pickerContent.find('[data-palette-target]').each(function () {\n                            // calendarConfig extend ~\n                            let idx = this.getAttribute(\"data-palette-target\"),\n                                dColor = input.get(idx).value;\n\n                            paletteConfig.selectedColor = dColor;\n                            paletteConfig = jQuery.extend(true, paletteConfig, item.content.config || {});\n                            paletteConfig.target = this;\n                            paletteConfig.onClick = function (color) {\n                                self.setContentValue(item.id, idx, color);\n                            };\n                            paletteConfig.onUpdateColor = function (color) {\n                                self.setContentValue(item.id, idx, color, {doNotClose: true});\n                            };\n\n                            item.pickerPalette.push({\n                                itemId: item.id,\n                                inputIndex: idx,\n                                ax5uiInstance: new ax5.ui.palette(paletteConfig)\n                            });\n                        });\n\n                    },\n                };\n\n                return function (boundID, tryCount) {\n                    let queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID),\n                        item = this.queue[queIdx];\n\n                    /**\n                     다른 피커가 있는 경우와 다른 피커를 닫고 다시 오픈 명령이 내려진 경우에 대한 예외 처리 구문\n                     */\n                    if (this.openTimer) clearTimeout(this.openTimer);\n                    if (this.activePicker) {\n                        if (this.activePickerQueueIndex == queIdx) {\n                            return this;\n                        }\n\n                        if (tryCount > 2) return this;\n                        this.close();\n                        this.openTimer = setTimeout((function () {\n                            this.open(queIdx, (tryCount || 0) + 1);\n                        }).bind(this), cfg.animateTime);\n                        return this;\n                    }\n\n                    this.activePicker = jQuery(PICKER.tmpl.get.call(this, \"pickerTmpl\", item));\n                    this.activePickerArrow = this.activePicker.find(\".ax-picker-arrow\");\n                    this.activePickerQueueIndex = queIdx;\n                    item.pickerContent = this.activePicker.find('[data-picker-els=\"content\"]');\n\n                    if (U.isFunction(item.content)) {\n                        // 함수타입\n                        item.pickerContent.html(\"Loading..\");\n                        pickerContent[\"@fn\"].call(this, queIdx, function (html) {\n                            item.pickerContent.html(html);\n                        });\n                    }\n                    else {\n                        if (item.content.type in pickerContent) {\n                            pickerContent[item.content.type].call(this, queIdx);\n                        }\n                    }\n\n                    // bind event picker btns\n                    this.activePicker.find(\"[data-picker-btn]\").on(cfg.clickEventName, (function (e) {\n                        onBtnClick.call(this, e || window.event, queIdx);\n                    }).bind(this));\n\n                    alignPicker.call(this, \"append\");\n\n                    jQuery(window).bind(\"resize.ax5picker\", (function () {\n                        alignPicker.call(this);\n                    }).bind(this));\n\n                    // bind key event\n                    jQuery(window).bind(\"keyup.ax5picker\", (function (e) {\n                        e = e || window.event;\n                        onBodyKeyup.call(this, e);\n                        U.stopEvent(e);\n                    }).bind(this));\n\n                    jQuery(window).bind(\"click.ax5picker\", (function (e) {\n                        e = e || window.event;\n                        onBodyClick.call(this, e);\n                        U.stopEvent(e);\n                    }).bind(this));\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"open\",\n                        item: item\n                    });\n\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5picker.close\n             * @returns {ax5picker} this\n             */\n            this.close = function (item, state) {\n                if (this.closeTimer) clearTimeout(this.closeTimer);\n                if (!this.activePicker) return this;\n\n                item = this.queue[this.activePickerQueueIndex];\n\n                this.activePicker.addClass(\"destroy\");\n                jQuery(window).unbind(\"resize.ax5picker\");\n                jQuery(window).unbind(\"click.ax5picker\");\n                jQuery(window).unbind(\"keyup.ax5picker\");\n\n                this.closeTimer = setTimeout((function () {\n                    if (this.activePicker) this.activePicker.remove();\n                    this.activePicker = null;\n                    this.activePickerQueueIndex = -1;\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: state || \"close\"\n                    });\n\n                }).bind(this), cfg.animateTime);\n\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n    })());\n\n    PICKER = ax5.ui.picker;\n})();","\n// ax5.ui.picker.tmpl\n(function () {\n\n    let PICKER = ax5.ui.picker;\n    const U = ax5.util;\n\n    const pickerTmpl = function () {\n        return `\n<div class=\"ax5-ui-picker {{theme}}\" id=\"{{id}}\" data-picker-els=\"root\" {{#zIndex}}style=\"z-index:{{zIndex}};\"{{/zIndex}}>\n    {{#title}}\n        <div class=\"ax-picker-heading\">{{title}}</div>\n    {{/title}}\n    <div class=\"ax-picker-body\">\n        <div class=\"ax-picker-content\" data-picker-els=\"content\" style=\"width:{{contentWidth}}px;\"></div>\n        {{#btns}}\n            <div class=\"ax-picker-buttons\">\n            {{#btns}}\n                {{#@each}}\n                <button data-picker-btn=\"{{@key}}\" class=\"btn btn-default {{@value.theme}}\">{{@value.label}}</button>\n                {{/@each}}\n            {{/btns}}\n            </div>\n        {{/btns}}\n    </div>\n    <div class=\"ax-picker-arrow\"></div>\n</div>\n`;\n    };\n\n    PICKER.tmpl = {\n        \"pickerTmpl\": pickerTmpl,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(PICKER.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();","/**\n * autocomplete jquery extends\n * @namespace jQueryExtends\n */\n\n/**\n * @method jQueryExtends.ax5autocomplete\n * @param {String} methodName\n * @param [arguments]\n * @param [arguments]\n * @example\n * ```html\n * <div data-ax5autocomplete=\"ax1\" data-ax5autocomplete-config='{\n *  multiple: true,\n *  editable: true,\n *  size: \"\",\n *  theme:\"\"\n *  }'></div>\n * <script>\n * jQuery('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete();\n * $('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete(\"getSelectedOption\");\n * $('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete(\"setValue\", {value:\"test\", text:\"test\"});\n * $('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete(\"enable\");\n * $('[data-ax5autocomplete=\"ax1\"]').ax5autocomplete(\"disable\");\n * </script>\n * ```\n */\nax5.ui.autocomplete_instance = new ax5.ui.autocomplete();\njQuery.fn.ax5autocomplete = (function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            var methodName = arguments[0];\n\n            switch (methodName) {\n                case \"open\":\n                    return ax5.ui.autocomplete_instance.open(this);\n                    break;\n                case \"close\":\n                    return ax5.ui.autocomplete_instance.close(this);\n                    break;\n                case \"setValue\":\n                    return ax5.ui.autocomplete_instance.setValue(this, arguments[1], arguments[2], arguments[3], arguments[4] || \"justSetValue\");\n                    break;\n                case \"setText\":\n                    return ax5.ui.autocomplete_instance.setText(this, arguments[1], arguments[2], arguments[3], arguments[4] || \"justSetValue\");\n                    break;\n                case \"getSelectedOption\":\n                    return ax5.ui.autocomplete_instance.getSelectedOption(this);\n                    break;\n                case \"enable\":\n                    return ax5.ui.autocomplete_instance.enable(this);\n                    break;\n                case \"disable\":\n                    return ax5.ui.autocomplete_instance.disable(this);\n                    break;\n                case \"blur\":\n                    return ax5.ui.autocomplete_instance.blur(this);\n                case \"align\":\n                    return ax5.ui.autocomplete_instance.align(this);\n                default:\n                    return this;\n            }\n        }\n        else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                var defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.autocomplete_instance.bind(config);\n            });\n        }\n        return this;\n    }\n})();","// ax5.ui.formatter\n(function() {\n  const UI = ax5.ui;\n  const U = ax5.util;\n  let FORMATTER;\n\n  UI.addClass(\n    {\n      className: \"formatter\"\n    },\n    (function() {\n      const TODAY = new Date();\n      const setSelectionRange = function(input, pos) {\n        if (typeof pos == \"undefined\") {\n          pos = input.value.length;\n        }\n        if (input.setSelectionRange) {\n          input.focus();\n          input.setSelectionRange(pos, pos);\n        } else if (input.createTextRange) {\n          var range = input.createTextRange();\n          range.collapse(true);\n          range.moveEnd(\"character\", pos);\n          range.moveStart(\"character\", pos);\n          range.select();\n        } else if (input.selectionStart) {\n          input.focus();\n          input.selectionStart = pos;\n          input.selectionEnd = pos;\n        }\n      };\n\n      /**\n       * @class ax5formatter\n       * @classdesc\n       * @author tom@axisj.com\n       * @example\n       * ```js\n       * $('#idInputTime').attr('data-ax5formatter', 'time').ax5formatter();\n       * $('#idInputMoney').attr('data-ax5formatter', 'money').ax5formatter();\n       * $('#idInputPhone').attr('data-ax5formatter', 'phone').ax5formatter();\n       * $('#idInputDate').attr('data-ax5formatter', 'date').ax5formatter();\n       *\n       * $('#ax5formatter-custom').ax5formatter({\n       *     pattern: \"custom\",\n       *     getEnterableKeyCodes: function(){\n       *         return {\n       *             '65':'a',\n       *             '66':'b',\n       *             '67':'c',\n       *             '68':'d',\n       *             '69':'e',\n       *             '70':'f'\n       *         };\n       *     },\n       *     getPatternValue: function(obj){\n       *         return obj.value.replace(/./g, \"*\");\n       *     }\n       * });\n       * ```\n       */\n      return function() {\n        var self = this,\n          cfg;\n\n        this.instanceId = ax5.getGuid();\n        this.config = {\n          animateTime: 250\n        };\n\n        this.queue = [];\n        this.openTimer = null;\n        this.closeTimer = null;\n\n        cfg = this.config;\n\n        const formatterEvent = {\n          focus: function(opts, optIdx, e) {\n            if (!opts.$input.data(\"__originValue__\"))\n              opts.$input.data(\"__originValue__\", opts.$input.val());\n          },\n          /* 키 다운 이벤트에서 입력할 수 없는 키 입력을 방어 */\n          keydown: function(opts, optIdx, e) {\n            var isStop = false;\n            if (!opts.enterableKeyCodes) {\n            } else if (e.which && opts.enterableKeyCodes[e.which]) {\n            } else if (!e.metaKey && !e.ctrlKey && !e.shiftKey) {\n              //console.log(e.which, opts.enterableKeyCodes);\n              isStop = true;\n            }\n            if (isStop) ax5.util.stopEvent(e);\n          },\n          /* 키 업 이벤트에서 패턴을 적용 */\n          keyup: function(opts, optIdx, e) {\n            var elem = opts.$input.get(0),\n              elemFocusPosition,\n              beforeValue,\n              newValue,\n              selection,\n              selectionLength;\n\n            if (\"selectionStart\" in elem) {\n              // Standard-compliant browsers\n              elemFocusPosition = elem.selectionStart;\n            } else if (document.selection) {\n              // IE\n              //elem.focus();\n              selection = document.selection.createRange();\n              selectionLength = document.selection.createRange().text.length;\n              selection.moveStart(\"character\", -elem.value.length);\n              elemFocusPosition = selection.text.length - selectionLength;\n            }\n\n            beforeValue = elem.value;\n            if (opts.pattern in FORMATTER.formatter) {\n              newValue = FORMATTER.formatter[opts.pattern].getPatternValue.call(\n                this,\n                opts,\n                optIdx,\n                e,\n                elem.value\n              );\n            } else {\n              newValue = beforeValue;\n            }\n\n            if (newValue != beforeValue) {\n              opts.$input.val(newValue).trigger(\"change\");\n              setSelectionRange(\n                elem,\n                elemFocusPosition + newValue.length - beforeValue.length\n              );\n            }\n          },\n          blur: function(opts, optIdx, e, _force) {\n            var elem = opts.$input.get(0),\n              beforeValue,\n              newValue;\n\n            opts.$input.removeData(\"__originValue__\");\n\n            beforeValue = elem.value;\n            if (opts.pattern in FORMATTER.formatter) {\n              newValue = FORMATTER.formatter[opts.pattern].getPatternValue.call(\n                this,\n                opts,\n                optIdx,\n                e,\n                elem.value,\n                \"blur\"\n              );\n            } else {\n              newValue = beforeValue;\n            }\n\n            if (_force) {\n              opts.$input.val(newValue);\n            } else {\n              if (newValue != beforeValue) {\n                opts.$input.val(newValue).trigger(\"change\");\n              }\n            }\n          }\n        };\n\n        const bindFormatterTarget = function(opts, optIdx) {\n          if (!opts.pattern) {\n            if (opts.$target.get(0).tagName == \"INPUT\") {\n              opts.pattern = opts.$target.attr(\"data-ax5formatter\");\n            } else {\n              opts.pattern = opts.$target\n                .find('input[type=\"text\"]')\n                .attr(\"data-ax5formatter\");\n            }\n            if (!opts.pattern) {\n              console.log(ax5.info.getError(\"ax5formatter\", \"501\", \"bind\"));\n              console.log(opts.target);\n              return this;\n            }\n          }\n\n          var re = /[^\\(^\\))]+/gi,\n            matched = opts.pattern.match(re);\n\n          opts.pattern = matched[0];\n          opts.patternArgument = matched[1] || \"\";\n\n          // 함수타입\n          if (opts.pattern in FORMATTER.formatter) {\n            opts.enterableKeyCodes = FORMATTER.formatter[\n              opts.pattern\n            ].getEnterableKeyCodes.call(this, opts, optIdx);\n          }\n\n          opts.$input\n            .unbind(\"focus.ax5formatter\")\n            .bind(\n              \"focus.ax5formatter\",\n              formatterEvent.focus.bind(this, this.queue[optIdx], optIdx)\n            );\n\n          opts.$input\n            .unbind(\"keydown.ax5formatter\")\n            .bind(\n              \"keydown.ax5formatter\",\n              formatterEvent.keydown.bind(this, this.queue[optIdx], optIdx)\n            );\n\n          opts.$input\n            .unbind(\"keyup.ax5formatter\")\n            .bind(\n              \"keyup.ax5formatter\",\n              formatterEvent.keyup.bind(this, this.queue[optIdx], optIdx)\n            );\n\n          opts.$input\n            .unbind(\"blur.ax5formatter\")\n            .bind(\n              \"blur.ax5formatter\",\n              formatterEvent.blur.bind(this, this.queue[optIdx], optIdx)\n            );\n\n          formatterEvent.blur.call(this, this.queue[optIdx], optIdx);\n\n          return this;\n        };\n\n        const getQueIdx = function(boundID) {\n          if (!U.isString(boundID)) {\n            boundID = jQuery(boundID).data(\"data-formatter\");\n          }\n          /*\n                     if (!U.isString(boundID)) {\n                     console.log(ax5.info.getError(\"ax5formatter\", \"402\", \"getQueIdx\"));\n                     return;\n                     }\n                     */\n          return U.search(this.queue, function() {\n            return this.id == boundID;\n          });\n        };\n\n        /**\n         * Preferences of formatter UI\n         * @method ax5formatter.setConfig\n         * @param {Object} config - 클래스 속성값\n         * @returns {ax5.ui.formatter}\n         * @example\n         * ```\n         * ```\n         */\n        this.init = function() {};\n\n        this.bind = function(opts) {\n          let formatterConfig = {},\n            optIdx;\n\n          jQuery.extend(true, formatterConfig, cfg);\n          if (opts) jQuery.extend(true, formatterConfig, opts);\n          opts = formatterConfig;\n\n          if (!opts.target) {\n            console.log(ax5.info.getError(\"ax5formatter\", \"401\", \"bind\"));\n            return this;\n          }\n          opts.$target = jQuery(opts.target);\n\n          if (opts.$target.get(0).tagName == \"INPUT\") {\n            opts.$input = opts.$target;\n          } else {\n            opts.$input = opts.$target.find('input[type=\"text\"]');\n            if (opts.$input.length > 1) {\n              opts.$input.each(function() {\n                opts.target = this;\n                self.bind(opts);\n              });\n              return this;\n            }\n          }\n\n          opts.$input =\n            opts.$target.get(0).tagName == \"INPUT\"\n              ? opts.$target\n              : opts.$target.find('input[type=\"text\"]');\n          if (!opts.id) opts.id = opts.$input.data(\"ax5-formatter\");\n\n          if (!opts.id) {\n            opts.id = \"ax5-formatter-\" + ax5.getGuid();\n            opts.$input.data(\"ax5-formatter\", opts.id);\n          }\n          optIdx = U.search(this.queue, function() {\n            return this.id == opts.id;\n          });\n\n          if (optIdx === -1) {\n            this.queue.push(opts);\n            bindFormatterTarget.call(\n              this,\n              this.queue[this.queue.length - 1],\n              this.queue.length - 1\n            );\n          } else {\n            this.queue[optIdx] = opts;\n            bindFormatterTarget.call(this, this.queue[optIdx], optIdx);\n          }\n\n          return this;\n        };\n\n        /**\n         * formatter value 를 다시 적용합니다.\n         * @method ax5formatter.formatting\n         * @returns {ax5formatter}\n         * @example\n         * ```js\n         * $('[data-ax5formatter=\"time\"]').ax5formatter(\"formatting\"); // 하나만\n         * $('[data-ax5formatter]').ax5formatter(\"formatting\"); // 모두\n         * ```\n         */\n        this.formatting = function(boundID) {\n          let queIdx = U.isNumber(boundID)\n            ? boundID\n            : getQueIdx.call(this, boundID);\n          if (queIdx === -1) {\n            var i = this.queue.length;\n            while (i--) {\n              formatterEvent.blur.call(this, this.queue[i], i, null, true);\n            }\n          } else {\n            formatterEvent.blur.call(\n              this,\n              this.queue[queIdx],\n              queIdx,\n              null,\n              true\n            );\n          }\n          return this;\n        };\n\n        this.unbind = function() {\n          // 구현해야함.\n        };\n\n        // 클래스 생성자\n        this.main = function() {\n          if (arguments && U.isObject(arguments[0])) {\n            this.setConfig(arguments[0]);\n          }\n        }.apply(this, arguments);\n      };\n    })()\n  );\n\n  FORMATTER = ax5.ui.formatter;\n})();\n","// ax5.ui.formatter.formatter\n(function() {\n  var FORMATTER = ax5.ui.formatter;\n  var U = ax5.util;\n  var TODAY = new Date();\n\n  var ctrlKeys = {\n    \"18\": \"KEY_ALT\",\n    \"8\": \"KEY_BACKSPACE\",\n    \"17\": \"KEY_CONTROL\",\n    \"46\": \"KEY_DELETE\",\n    \"40\": \"KEY_DOWN\",\n    \"35\": \"KEY_END\",\n    \"187\": \"KEY_EQUAL\",\n    \"27\": \"KEY_ESC\",\n    \"36\": \"KEY_HOME\",\n    \"45\": \"KEY_INSERT\",\n    \"37\": \"KEY_LEFT\",\n    \"189\": \"KEY_MINUS\",\n    \"34\": \"KEY_PAGEDOWN\",\n    \"33\": \"KEY_PAGEUP\",\n    // \"190\": \"KEY_PERIOD\",\n    \"13\": \"KEY_RETURN\",\n    \"39\": \"KEY_RIGHT\",\n    \"16\": \"KEY_SHIFT\",\n    // \"32\": \"KEY_SPACE\",\n    \"9\": \"KEY_TAB\",\n    \"38\": \"KEY_UP\",\n    \"91\": \"KEY_WINDOW\"\n    //\"107\" : \"NUMPAD_ADD\",\n    //\"194\" : \"NUMPAD_COMMA\",\n    //\"110\" : \"NUMPAD_DECIMAL\",\n    //\"111\" : \"NUMPAD_DIVIDE\",\n    //\"12\" : \"NUMPAD_EQUAL\",\n    //\"106\" : \"NUMPAD_MULTIPLY\",\n    //\"109\" : \"NUMPAD_SUBTRACT\"\n  };\n  var numKeys = {\n    \"48\": 1,\n    \"49\": 1,\n    \"50\": 1,\n    \"51\": 1,\n    \"52\": 1,\n    \"53\": 1,\n    \"54\": 1,\n    \"55\": 1,\n    \"56\": 1,\n    \"57\": 1,\n    \"96\": 1,\n    \"97\": 1,\n    \"98\": 1,\n    \"99\": 1,\n    \"100\": 1,\n    \"101\": 1,\n    \"102\": 1,\n    \"103\": 1,\n    \"104\": 1,\n    \"105\": 1\n  };\n  var pattern_money = {\n    getEnterableKeyCodes: function(_opts) {\n      var enterableKeyCodes = {\n        \"188\": \",\"\n      };\n      if (_opts.patternArgument == \"int\") {\n        // 소수점 입력 안됨\n      } else {\n        enterableKeyCodes[\"190\"] = \".\"; // 소수점 입력 허용\n      }\n      return jQuery.extend(\n        enterableKeyCodes,\n        FORMATTER.formatter.ctrlKeys,\n        FORMATTER.formatter.numKeys\n      );\n    },\n    getPatternValue: function(_opts, optIdx, e, val, eType) {\n      val = val.replace(/[^0-9^\\.^\\-]/g, \"\");\n      var regExpPattern = new RegExp(\"([0-9])([0-9][0-9][0-9][,.])\"),\n        arrNumber = val.split(\".\"),\n        returnValue;\n\n      arrNumber[0] += \".\";\n\n      do {\n        arrNumber[0] = arrNumber[0].replace(regExpPattern, \"$1,$2\");\n      } while (regExpPattern.test(arrNumber[0]));\n\n      if (arrNumber.length > 1) {\n        if (U.isNumber(_opts.maxRound)) {\n          returnValue = arrNumber[0] + U.left(arrNumber[1], _opts.maxRound);\n        } else {\n          returnValue = arrNumber.join(\"\");\n        }\n      } else {\n        returnValue = arrNumber[0].split(\".\")[0];\n      }\n\n      return returnValue;\n    }\n  };\n\n  var pattern_number = {\n    getEnterableKeyCodes: function getEnterableKeyCodes(_opts) {\n      var enterableKeyCodes = {\n        \"190\": \".\",\n        \"110\": \".\"\n      };\n      return jQuery.extend(\n        enterableKeyCodes,\n        FORMATTER.formatter.ctrlKeys,\n        FORMATTER.formatter.numKeys\n      );\n    },\n    getPatternValue: function(_opts, optIdx, e, val, eType) {\n      val = val.replace(/[^0-9^\\.^\\-]/g, \"\");\n      var arrNumber = val.split(\".\"),\n        returnValue;\n\n      arrNumber[0] += \".\";\n\n      if (arrNumber.length > 1) {\n        if (U.isNumber(_opts.maxRound)) {\n          returnValue = arrNumber[0] + U.left(arrNumber[1], _opts.maxRound);\n        } else {\n          returnValue = arrNumber.join(\"\");\n        }\n      } else {\n        returnValue = arrNumber[0].split(\".\")[0];\n      }\n\n      return returnValue;\n    }\n  };\n\n  var pattern_date = {\n    getEnterableKeyCodes: function(_opts) {\n      var enterableKeyCodes = {\n        \"189\": \"-\",\n        \"191\": \"/\"\n      };\n      return jQuery.extend(\n        enterableKeyCodes,\n        FORMATTER.formatter.ctrlKeys,\n        FORMATTER.formatter.numKeys\n      );\n    },\n    getPatternValue: function(_opts, optIdx, e, val, eType) {\n      val = val.replace(/\\D/g, \"\");\n      if (val == \"\") return val;\n      var regExpPattern = /^([0-9]{4})\\-?([0-9]{1,2})?\\-?([0-9]{1,2})?.*$/;\n\n      if (_opts.patternArgument == \"time\") {\n        regExpPattern = /^([0-9]{4})\\-?([0-9]{1,2})?\\-?([0-9]{1,2})? ?([0-9]{1,2})?:?([0-9]{1,2})?:?([0-9]{1,2})?.*$/;\n      } else if (_opts.patternArgument == \"year\") {\n        regExpPattern = /^([0-9]{0,4})?.*$/;\n      } else if (_opts.patternArgument == \"month\") {\n        regExpPattern = /^([0-9]{4})\\-?([0-9]{1,2})?.*$/;\n      }\n\n      var matchedPattern = val.match(regExpPattern),\n        returnValue = \"\",\n        inspectValue = function(val, format, inspect, data) {\n          var _val = {\n            Y: function(v) {\n              if (typeof v == \"undefined\") v = TODAY.getFullYear();\n              if (v == \"\" || v == \"0000\") v = TODAY.getFullYear();\n              return v.length < 4 ? U.setDigit(v, 4) : v;\n            },\n            M: function(v) {\n              if (typeof v == \"undefined\") v = TODAY.getMonth() + 1;\n              return v > 12 ? 12 : v == 0 ? \"01\" : U.setDigit(v, 2);\n            },\n            D: function(v) {\n              if (typeof v == \"undefined\") v = TODAY.getDate() + 1;\n              var dLen = U.daysOfMonth(data[1], data[2] - 1);\n              return v > dLen ? dLen : v == 0 ? \"01\" : U.setDigit(v, 2);\n            },\n            h: function(v) {\n              if (!v) v = 0;\n              return v > 23 ? 23 : U.setDigit(v, 2);\n            },\n            m: function(v) {\n              if (!v) v = 0;\n              return v > 59 ? 59 : U.setDigit(v, 2);\n            },\n            s: function(v) {\n              if (!v) v = 0;\n              return v > 59 ? 59 : U.setDigit(v, 2);\n            }\n          };\n          return inspect ? _val[format](val) : val;\n        };\n\n      returnValue = val.replace(regExpPattern, function(a, b) {\n        var nval = [];\n\n        if (_opts.patternArgument == \"year\") {\n          nval.push(inspectValue(arguments[1], \"Y\", eType));\n        } else if (_opts.patternArgument == \"month\") {\n          nval.push(inspectValue(arguments[1], \"Y\", eType));\n          if (arguments[2] || eType)\n            nval.push(\"-\" + inspectValue(arguments[2], \"M\", eType));\n        } else if (_opts.patternArgument == \"time\") {\n          nval.push(inspectValue(arguments[1], \"Y\", eType));\n          if (arguments[2] || eType)\n            nval.push(\"-\" + inspectValue(arguments[2], \"M\", eType));\n          if (arguments[3] || eType)\n            nval.push(\"-\" + inspectValue(arguments[3], \"D\", eType, arguments));\n          if (arguments[4] || eType)\n            nval.push(\" \" + inspectValue(arguments[4], \"h\", eType));\n          if (arguments[5] || eType)\n            nval.push(\":\" + inspectValue(arguments[5], \"m\", eType));\n          if (arguments[6] || eType)\n            nval.push(\":\" + inspectValue(arguments[6], \"s\", eType));\n        } else {\n          nval.push(inspectValue(arguments[1], \"Y\", eType));\n          if (arguments[2] || eType)\n            nval.push(\"-\" + inspectValue(arguments[2], \"M\", eType));\n          if (arguments[3] || eType)\n            nval.push(\"-\" + inspectValue(arguments[3], \"D\", eType, arguments));\n        }\n        return nval.join(\"\");\n      });\n\n      if (eType == \"blur\" && !matchedPattern) {\n        returnValue = (function() {\n          var nval = [];\n\n          if (_opts.patternArgument == \"year\") {\n            nval.push(inspectValue(0, \"Y\", eType));\n          } else if (_opts.patternArgument == \"month\") {\n            nval.push(inspectValue(0, \"Y\", eType));\n            nval.push(\"-\" + inspectValue(0, \"M\", eType));\n          } else if (_opts.patternArgument == \"time\") {\n            nval.push(inspectValue(0, \"Y\", eType));\n            nval.push(\"-\" + inspectValue(0, \"M\", eType));\n            nval.push(\"-\" + inspectValue(0, \"D\", eType, arguments));\n            nval.push(\" \" + inspectValue(0, \"h\", eType));\n            nval.push(\":\" + inspectValue(0, \"m\", eType));\n            nval.push(\":\" + inspectValue(0, \"s\", eType));\n          } else {\n            nval.push(inspectValue(0, \"Y\", eType));\n            nval.push(\"-\" + inspectValue(0, \"M\", eType));\n            nval.push(\"-\" + inspectValue(0, \"D\", eType, arguments));\n          }\n          return nval.join(\"\");\n        })();\n      } else if (!matchedPattern)\n        returnValue =\n          returnValue.length > 4 ? U.left(returnValue, 4) : returnValue;\n\n      return returnValue;\n    }\n  };\n\n  var pattern_time = {\n    getEnterableKeyCodes: function(_opts) {\n      var enterableKeyCodes = {\n        \"186\": \":\"\n      };\n      return jQuery.extend(\n        enterableKeyCodes,\n        FORMATTER.formatter.ctrlKeys,\n        FORMATTER.formatter.numKeys\n      );\n    },\n    getPatternValue: function(_opts, optIdx, e, val, eType) {\n      val = val.replace(/\\D/g, \"\");\n      var regExpPattern = /^([0-9]{1,2})?:?([0-9]{1,2})?:?([0-9]{1,2})?.*$/;\n\n      var matchedPattern = val.match(regExpPattern),\n        returnValue = val.replace(regExpPattern, function(a, b) {\n          var nval = [arguments[1]];\n          if (arguments[2]) nval.push(\":\" + arguments[2]);\n          if (arguments[3]) nval.push(\":\" + arguments[3]);\n          return nval.join(\"\");\n        });\n\n      if (!matchedPattern)\n        returnValue =\n          returnValue.length > 2 ? U.left(returnValue, 2) : returnValue;\n\n      return returnValue;\n    }\n  };\n\n  var pattern_bizno = {\n    getEnterableKeyCodes: function(_opts) {\n      var enterableKeyCodes = {\n        \"189\": \"-\"\n      };\n      return jQuery.extend(\n        enterableKeyCodes,\n        FORMATTER.formatter.ctrlKeys,\n        FORMATTER.formatter.numKeys\n      );\n    },\n    getPatternValue: function(_opts, optIdx, e, val, eType) {\n      val = val.replace(/\\D/g, \"\");\n      var regExpPattern = /^([0-9]{3})\\-?([0-9]{1,2})?\\-?([0-9]{1,5})?.*$/,\n        returnValue = val.replace(regExpPattern, function(a, b) {\n          var nval = [arguments[1]];\n          if (arguments[2]) nval.push(arguments[2]);\n          if (arguments[3]) nval.push(arguments[3]);\n          return nval.join(\"-\");\n        });\n\n      return returnValue;\n    }\n  };\n\n  var pattern_phone = {\n    getEnterableKeyCodes: function(_opts) {\n      var enterableKeyCodes = {\n        \"189\": \"-\",\n        \"188\": \",\",\n        \"107\": \"+\",\n        \"187\": \"+\"\n      };\n      return jQuery.extend(\n        enterableKeyCodes,\n        FORMATTER.formatter.ctrlKeys,\n        FORMATTER.formatter.numKeys\n      );\n    },\n    getPatternValue: function(_opts, optIdx, e, _val, eType) {\n      var val = _val.replace(/\\D/g, \"\");\n\n      var regExpPattern3 = /^([0-9]{3})\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?/;\n\n      if (_val.substr(0, 1) == \"+\") {\n        val = \"+\" + _val.replace(/\\D/g, \"\");\n        regExpPattern3 = /^\\+?([0-9]{2}) ?([0-9]{3})\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?/;\n      }\n      if (val.substr(0, 2) == \"02\") {\n        regExpPattern3 = /^([0-9]{2})\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?\\-?([0-9]{1,4})?/;\n      }\n\n      var returnValue = val.replace(regExpPattern3, function(a, b) {\n        console.log(a, b);\n\n        var nval = [arguments[1]];\n        if (arguments[2]) nval.push(arguments[2]);\n        if (arguments[3]) nval.push(arguments[3]);\n        if (arguments[4]) nval.push(arguments[4]);\n        if (arguments[5]) nval.push(arguments[5]);\n        return nval.join(\"-\");\n      });\n      return returnValue;\n    }\n  };\n\n  var pattern_credit = {\n    getEnterableKeyCodes: function(_opts) {\n      var enterableKeyCodes = {\n        \"189\": \"-\"\n      };\n      return jQuery.extend(\n        enterableKeyCodes,\n        FORMATTER.formatter.ctrlKeys,\n        FORMATTER.formatter.numKeys\n      );\n    },\n    getPatternValue: function(_opts, optIdx, e, val, eType) {\n      val = val.replace(/\\D/g, \"\").substring(0, 16);\n\n      var regExpPattern3 = /^([0-9]{4})\\-?([0-9]{4})?\\-?([0-9]{4})?\\-?([0-9]{4})?/,\n        returnValue = val.replace(regExpPattern3, function(a, b) {\n          var nval = [arguments[1]];\n          if (arguments[2]) nval.push(arguments[2]);\n          if (arguments[3]) nval.push(arguments[3]);\n          if (arguments[4]) nval.push(arguments[4]);\n          return nval.join(\"-\");\n        });\n      return returnValue;\n    }\n  };\n\n  var pattern_custom = {\n    getEnterableKeyCodes: function(_opts) {\n      if (_opts.getEnterableKeyCodes) {\n        return _opts.getEnterableKeyCodes.call(_opts, { $input: _opts.$input });\n      } else {\n        return null;\n      }\n    },\n    getPatternValue: function(_opts, optIdx, e, val, eType) {\n      if (_opts.getPatternValue) {\n        return _opts.getPatternValue.call(_opts, {\n          event: e,\n          $input: _opts.$input,\n          value: val\n        });\n      }\n    }\n  };\n\n  FORMATTER.formatter = {\n    ctrlKeys: ctrlKeys,\n    numKeys: numKeys,\n    money: pattern_money,\n    number: pattern_number,\n    date: pattern_date,\n    time: pattern_time,\n    bizno: pattern_bizno,\n    phone: pattern_phone,\n    credit: pattern_credit,\n    custom: pattern_custom\n  };\n})();\n","// ax5.ui.menu\n(function () {\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MENU;\n\n    UI.addClass({\n        className: \"menu\"\n    }, (function () {\n        /**\n         * @class ax5.ui.menu\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var menu = new ax5.ui.menu({\n         *     theme: 'primary',\n         *     iconWidth: 20,\n         *     acceleratorWidth: 100,\n         *     itemClickAndClose: false,\n         *     icons: {\n         *         'arrow': '<i class=\"fa fa-caret-right\"></i>'\n         *     },\n         *     columnKeys: {\n         *         label: 'name',\n         *         items: 'chidren'\n         *     },\n         *     items: [\n         *         {\n         *             icon: '<i class=\"fa fa-archive\"></i>',\n         *             name: \"Menu Parent 0\",\n         *             chidren: [\n         *                 {\n         *                     check: {\n         *                         type: 'checkbox',\n         *                         name: 'A',\n         *                         value: '0',\n         *                         checked: false\n         *                     },\n         *                     name: \"Menu Z\",\n         *                     data: {},\n         *                     role: \"\",\n         *                     accelerator: \"CmdOrCtrl+Z\"\n         *                 },\n         *                 {\n         *                     check: {\n         *                         type: 'checkbox',\n         *                         name: 'A',\n         *                         value: '1',\n         *                         checked: true\n         *                     },\n         *                     name: \"Menu A\",\n         *                     data: {},\n         *                     role: \"\"\n         *                 }\n         *             ],\n         *             filterType: \"A\"\n         *         },\n         *         {\n         *             divide: true,\n         *             filterType: \"A\"\n         *         },\n         *         {\n         *             icon: '<i class=\"fa fa-mixcloud\"></i>',\n         *             name: \"Menu Parent 1\",\n         *             chidren: [\n         *                 {\n         *                     name: \"Menu Z\",\n         *                     data: {},\n         *                     role: \"\",\n         *                     chidren: [\n         *                         {\n         *                             name: \"Menu Z\",\n         *                             data: {},\n         *                             role: \"\"\n         *                         },\n         *                         {\n         *                             name: \"Menu A\",\n         *                             data: {},\n         *                             role: \"\"\n         *                         }\n         *                     ]\n         *                 },\n         *                 {\n         *                     name: \"Menu A\",\n         *                     data: {},\n         *                     role: \"\"\n         *                 }\n         *             ],\n         *             filterType: \"A\"\n         *         },\n         *         {\n         *             check: {\n         *                 type: 'radio',\n         *                 name: 'radioName',\n         *                 value: '1',\n         *                 checked: false\n         *             },\n         *             icon: '<i class=\"fa fa-bluetooth\"></i>',\n         *             name: \"Menu Parent 2\"\n         *         },\n         *         {\n         *             check: {\n         *                 type: 'radio',\n         *                 name: 'radioName',\n         *                 value: '2',\n         *                 checked: false\n         *             },\n         *             name: \"Menu Parent 3\"\n         *         },\n         *         {\n         *             check: {\n         *                 type: 'radio',\n         *                 name: 'radioName',\n         *                 value: '3',\n         *                 checked: false\n         *             },\n         *             name: \"Menu Parent 4\"\n         *         },\n         *         {divide: true},\n         *         {\n         *             html: function () {\n         *                 return '<div style=\"text-align: center;\">' +\n         *                     '<button class=\"btn btn-primary\" data-menu-btn=\"OK\">OK</button> ' +\n         *                     '<button class=\"btn btn-danger\" data-menu-btn=\"CANCEL\">CANCEL</button>' +\n         *                     '</div>';\n         *             }\n         *         }\n         *     ]\n         * });\n         * ```\n         */\n        return function () {\n            let self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: \"default\",\n                iconWidth: 22,\n                acceleratorWidth: 100,\n                menuBodyPadding: 5,\n                //direction: \"top\", // top|bottom\n                offset: {left: 0, top: 0},\n                position: \"fixed\",\n                animateTime: 250,\n                items: [],\n                itemClickAndClose: true,\n                columnKeys: {\n                    label: 'label',\n                    items: 'items'\n                }\n            };\n\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.queue = [];\n            this.menuBar = {};\n            this.state = undefined;\n\n            cfg = this.config;\n\n            const appEventAttach = function (active, opt) {\n                    if (active) {\n                        jQuery(document.body)\n                            .off(\"click.ax5menu-\" + this.instanceId)\n                            .on(\"click.ax5menu-\" + this.instanceId, clickItem.bind(this, opt));\n\n                        jQuery(window)\n                            .off(\"keydown.ax5menu-\" + this.instanceId)\n                            .on(\"keydown.ax5menu-\" + this.instanceId, function (e) {\n                            if (e.which == ax5.info.eventKeys.ESC) {\n                                self.close();\n                            }\n                        });\n\n                        jQuery(window)\n                            .on(\"resize.ax5menu-\" + this.instanceId)\n                            .on(\"resize.ax5menu-\" + this.instanceId, function (e) {\n                            self.close();\n                        });\n                    }\n                    else {\n                        jQuery(document.body).off(\"click.ax5menu-\" + this.instanceId);\n                        jQuery(window).off(\"keydown.ax5menu-\" + this.instanceId);\n                        jQuery(window).off(\"resize.ax5menu-\" + this.instanceId);\n                    }\n            };\n            \n            const onStateChanged = function (opts, that) {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                }\n                else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                self.state = that.state;\n                opts = null;\n                that = null;\n                return true;\n            };\n            \n            const onLoad = function (that) {\n                if (this.onLoad) {\n                    this.onLoad.call(that, that);\n                }\n\n                that = null;\n                return true;\n            };\n            \n            const popup = function (opt, items, depth, path) {\n                let data = opt,\n                    activeMenu,\n                    removed\n                    ;\n\n                data.theme = opt.theme || cfg.theme;\n                data.cfg = {\n                    icons: jQuery.extend({}, cfg.icons),\n                    iconWidth: opt.iconWidth || cfg.iconWidth,\n                    acceleratorWidth: opt.acceleratorWidth || cfg.acceleratorWidth\n                };\n\n                items.forEach(function (n) {\n                    if (n.html || n.divide) {\n                        n['@isMenu'] = false;\n                        if (n.html) {\n                            n['@html'] = n.html.call({\n                                item: n,\n                                config: cfg,\n                                opt: opt\n                            });\n                        }\n                    }\n                    else {\n                        n['@isMenu'] = true;\n                    }\n                });\n\n                data[cfg.columnKeys.items] = items;\n                data['@depth'] = depth;\n                data['@path'] = path || \"root\";\n                data['@hasChild'] = function () {\n                    return this[cfg.columnKeys.items] && this[cfg.columnKeys.items].length > 0;\n                };\n                activeMenu = jQuery(MENU.tmpl.get.call(this, \"tmpl\", data, cfg.columnKeys));\n                jQuery(document.body).append(activeMenu);\n\n                // remove queue\n\n                removed = this.queue.splice(depth);\n                removed.forEach(function (n) {\n                    n.$target.remove();\n                });\n\n                this.queue.push({\n                    '$target': activeMenu,\n                    'data': jQuery.extend({}, data)\n                });\n\n                activeMenu.find('[data-menu-item-index]').bind(\"mouseover\", function () {\n                    let depth = this.getAttribute(\"data-menu-item-depth\"),\n                        index = this.getAttribute(\"data-menu-item-index\"),\n                        path = this.getAttribute(\"data-menu-item-path\"),\n                        $this,\n                        offset,\n                        scrollTop,\n                        childOpt,\n                        _items,\n                        _activeMenu;\n\n                    if (depth != null && typeof depth != \"undefined\") {\n                        _items = self.queue[depth].data[cfg.columnKeys.items][index][cfg.columnKeys.items];\n                        _activeMenu = self.queue[depth].$target;\n                        _activeMenu.find('[data-menu-item-index]').removeClass(\"hover\");\n                        jQuery(this).addClass(\"hover\");\n\n                        if (_activeMenu.attr(\"data-selected-menu-item-index\") != index) {\n                            _activeMenu.attr(\"data-selected-menu-item-index\", index);\n\n                            if (_items && _items.length > 0) {\n\n                                $this = jQuery(this);\n                                offset = $this.offset();\n                                scrollTop = (cfg.position == \"fixed\" ? jQuery(document).scrollTop() : 0);\n                                childOpt = {\n                                    '@parent': {\n                                        left: offset.left,\n                                        top: offset.top,\n                                        width: $this.outerWidth(),\n                                        height: $this.outerHeight()\n                                    },\n                                    left: offset.left + $this.outerWidth() - cfg.menuBodyPadding,\n                                    top: offset.top - cfg.menuBodyPadding - 1 - scrollTop\n                                };\n\n                                childOpt = jQuery.extend(true, opt, childOpt);\n                                popup.call(self, childOpt, _items, (Number(depth) + 1), path);\n                            }\n                            else {\n                                self.queue.splice(Number(depth) + 1).forEach(function (n) {\n                                    n.$target.remove();\n                                });\n                            }\n                        }\n                    }\n\n                    depth = null;\n                    index = null;\n                    path = null;\n                    $this = null;\n                    offset = null;\n                    scrollTop = null;\n                    childOpt = null;\n                    _items = null;\n                    _activeMenu = null;\n                });\n\n                // mouse out\n                activeMenu.find('[data-menu-item-index]').bind(\"mouseout\", function () {\n                    let depth = this.getAttribute(\"data-menu-item-depth\"),\n                        index = this.getAttribute(\"data-menu-item-index\"),\n                        path = this.getAttribute(\"data-menu-item-path\"),\n                        _items;\n\n                    if (path) {\n                        _items = self.queue[depth].data[cfg.columnKeys.items][index][cfg.columnKeys.items];\n                    }\n                    if (_items && _items.length > 0) {\n\n                    } else {\n                        jQuery(this).removeClass(\"hover\");\n                    }\n                });\n\n                // is Root\n                if (depth == 0) {\n                    if (data.direction) activeMenu.addClass(\"direction-\" + data.direction);\n                    onStateChanged.call(this, null, {\n                        self: this,\n                        items: items,\n                        parent: (function (path) {\n                            if (!path) return false;\n                            var item = null;\n                            try {\n                                item = (Function(\"\", \"return this.config.items[\" + path.substring(5).replace(/\\./g, '].items[') + \"];\")).call(self);\n                            } catch (e) {\n\n                            }\n                            return item;\n                        })(data['@path']),\n                        state: \"popup\"\n                    });\n                }\n\n                align.call(this, activeMenu, data);\n                onLoad.call(this, {\n                    self: this,\n                    items: items,\n                    element: activeMenu.get(0)\n                });\n\n                data = null;\n                activeMenu = null;\n                removed = null;\n                opt = null;\n                items = null;\n                depth = null;\n                path = null;\n\n                return this;\n            };\n\n            const clickItem = function (opt, e) {\n                    let target, item;\n\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-menu-item-index\")) {\n                            return true;\n                        }\n                    });\n                    if (target) {\n                        if (typeof opt === \"undefined\") opt = {};\n                        item = (function (path) {\n                            if (!path) return false;\n                            let item;\n\n                            try {\n                                item = (Function(\"\", \"return this[\" + path.substring(5).replace(/\\./g, '].' + cfg.columnKeys.items + '[') + \"];\")).call(opt.items || cfg.items);\n                            } catch (e) {\n                                console.log(ax5.info.getError(\"ax5menu\", \"501\", \"menuItemClick\"));\n                            }\n\n                            try {\n                                return item;\n                            }\n                            finally {\n                                item = null;\n                            }\n                        })(target.getAttribute(\"data-menu-item-path\"));\n\n                        if (!item) return this;\n\n                        if (item.check) {\n                            (function (items) {\n                                var setValue = {\n                                    'checkbox': function (value) {\n                                        this.checked = !value;\n                                    },\n                                    'radio': function (value) {\n                                        var name = this.name;\n                                        items.forEach(function (n) {\n                                            if (n.check && n.check.type === 'radio' && n.check.name == name) {\n                                                n.check.checked = false;\n                                            }\n                                        });\n                                        this.checked = !value;\n                                    }\n                                };\n                                if (setValue[this.type]) setValue[this.type].call(this, this.checked);\n                                setValue = null;\n                            }).call(item.check, cfg.items);\n\n                            if (!cfg.itemClickAndClose) {\n                                self.queue.forEach(function (n) {\n                                    n.$target.find('[data-menu-item-index]').each(function () {\n                                        var item = n.data[cfg.columnKeys.items][this.getAttribute(\"data-menu-item-index\")];\n                                        if (item.check) {\n                                            jQuery(this).find(\".item-checkbox-wrap\").attr(\"data-item-checked\", item.check.checked);\n                                        }\n                                    });\n                                });\n                            }\n                        }\n\n                        if (self.onClick) {\n                            if (self.onClick.call(item, item, opt.param)) {\n                                self.close();\n                            }\n                        }\n                        if ((!item[cfg.columnKeys.items] || item[cfg.columnKeys.items].length == 0) && cfg.itemClickAndClose) self.close();\n                    }\n                    else {\n                        self.close();\n                    }\n\n                    target = null;\n                    item = null;\n                    return this;\n                };\n\n            const align = function (activeMenu, data) {\n                    let $window = jQuery(window),\n                        $document = jQuery(document),\n                        wh = (cfg.position == \"fixed\") ? $window.height() : $document.height(),\n                        ww = $window.width(),\n                        h = activeMenu.outerHeight(),\n                        w = activeMenu.outerWidth(),\n                        l = data.left,\n                        t = data.top,\n                        position = cfg.position || \"fixed\";\n\n                    if (l + w > ww) {\n                        if (data['@parent']) {\n                            l = data['@parent'].left - w + cfg.menuBodyPadding;\n                        }\n                        else {\n                            l = ww - w;\n                        }\n                    }\n\n                    if (t + h > wh) {\n                        t = wh - h;\n                    }\n\n                    activeMenu.css({left: l, top: t, position: position});\n\n                    activeMenu = null;\n                    data = null;\n                    $window = null;\n                    $document = null;\n                    wh = null;\n                    ww = null;\n                    h = null;\n                    w = null;\n                    l = null;\n                    t = null;\n                    position = null;\n                    return this;\n                };\n\n            /// private end\n\n            this.init = function () {\n                /**\n                 * config에 선언된 이벤트 함수들을 this로 이동시켜 주어 나중에 인스턴스.on... 으로 처리 가능 하도록 변경\n                 */\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.onLoad = cfg.onLoad;\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"init\"\n                });\n            };\n\n            /**\n             * @method ax5.ui.menu.popup\n             * @param {Event|Object} e - Event or Object\n             * @param {Object} [opt]\n             * @param {String} [opt.theme]\n             * @param {Function} [opt.filter]\n             * @returns {ax5.ui.menu} this\n             */\n            this.popup = (function () {\n\n                let getOption = {\n                        'event': function (e, opt) {\n                            //var xOffset = Math.max(document.documentElement.scrollLeft, document.body.scrollLeft);\n                            //var yOffset = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n                            //console.log(e.pageY);\n\n                            e = {\n                                left: e.clientX,\n                                top: (cfg.position == \"fixed\") ? e.clientY : e.pageY,\n                                width: cfg.width,\n                                theme: cfg.theme\n                            };\n\n                            e.left -= 5;\n                            e.top -= 5;\n\n                            if (cfg.offset) {\n                                if (cfg.offset.left) e.left += cfg.offset.left;\n                                if (cfg.offset.top) e.top += cfg.offset.top;\n                            }\n                            opt = jQuery.extend(true, e, opt);\n\n                            try {\n                                return opt;\n                            }\n                            finally {\n                                e = null;\n                                //opt = null;\n                            }\n                        },\n                        'object': function (e, opt) {\n                            e = {\n                                left: e.left,\n                                top: e.top,\n                                width: e.width || cfg.width,\n                                theme: e.theme || cfg.theme\n                            };\n\n                            if (cfg.offset) {\n                                if (cfg.offset.left) e.left += cfg.offset.left;\n                                if (cfg.offset.top) e.top += cfg.offset.top;\n                            }\n\n                            opt = jQuery.extend(true, e, opt);\n\n                            try {\n                                return opt;\n                            }\n                            finally {\n                                e = null;\n                                //opt = null;\n                            }\n                        }\n                    },\n                    updateTheme = function (theme) {\n                        if (theme) cfg.theme = theme;\n                    };\n\n                return function (e, opt) {\n\n                    if (!e) return this;\n                    opt = getOption[((typeof e.clientX == \"undefined\") ? \"object\" : \"event\")].call(this, e, opt);\n                    updateTheme(opt.theme);\n\n                    let items = [].concat(cfg.items),\n                        filteringItem;\n                    opt.items = items;\n\n                    if (opt.filter) {\n                        filteringItem = function (_items) {\n                            let arr = [];\n                            _items.forEach(function (n) {\n                                if (n.items && n.items.length > 0) {\n                                    n.items = filteringItem(n.items);\n                                }\n                                if (opt.filter.call(n)) {\n                                    arr.push(n);\n                                }\n                            });\n                            return arr;\n                        };\n                        opt.items = items = filteringItem(items);\n                    }\n\n                    if (items.length) {\n                        appEventAttach.call(this, false);\n                        popup.call(this, opt, items, 0); // 0 is seq of queue\n\n                        if (this.popupEventAttachTimer) clearTimeout(this.popupEventAttachTimer);\n                        this.popupEventAttachTimer = setTimeout((function () {\n                            appEventAttach.call(this, true, opt); // 이벤트 연결\n                        }).bind(this), 500);\n                    }\n\n                    e = null;\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5.ui.menu.attach\n             * @param {Element|jQueryObject} el\n             * @returns {ax5.ui.menu} this\n             */\n            this.attach = (function () {\n\n                var getOption = {\n                    'object': function (e, opt) {\n                        e = {\n                            left: e.left,\n                            top: e.top,\n                            width: e.width || cfg.width,\n                            theme: e.theme || cfg.theme,\n                            direction: e.direction || cfg.direction\n                        };\n                        opt = jQuery.extend(true, opt, e);\n\n                        try {\n                            return opt;\n                        }\n                        finally {\n                            e = null;\n                            opt = null;\n                        }\n                    }\n                };\n\n                var popUpChildMenu = function (target, opt, eType) {\n                    var\n                        $target = jQuery(target),\n                        offset = $target.offset(),\n                        height = $target.outerHeight(),\n                        index = Number(target.getAttribute(\"data-menu-item-index\")),\n                        scrollTop = (cfg.position == \"fixed\") ? jQuery(document).scrollTop() : 0;\n\n                    if (cfg.items && cfg.items[index][cfg.columnKeys.items] && cfg.items[index][cfg.columnKeys.items].length) {\n\n                        if (self.menuBar.openedIndex == index) {\n                            if (eType == \"click\") self.close();\n                            return false;\n                        }\n\n                        self.menuBar.target.find('[data-menu-item-index]').removeClass(\"hover\");\n                        self.menuBar.opened = true;\n                        self.menuBar.openedIndex = index;\n\n                        $target.attr(\"data-menu-item-opened\", \"true\");\n                        $target.addClass(\"hover\");\n\n                        if (cfg.offset) {\n                            if (cfg.offset.left) offset.left += cfg.offset.left;\n                            if (cfg.offset.top) offset.top += cfg.offset.top;\n                        }\n\n                        opt = getOption[\"object\"].call(this, {left: offset.left, top: offset.top + height - scrollTop}, opt);\n\n                        popup.call(self, opt, cfg.items[index][cfg.columnKeys.items], 0, 'root.' + target.getAttribute(\"data-menu-item-index\")); // 0 is seq of queue\n                        appEventAttach.call(self, true, {}); // 이벤트 연결\n                    }\n\n                    target = null;\n                    opt = null;\n                    $target = null;\n                    offset = null;\n                    height = null;\n                    index = null;\n                    scrollTop = null;\n                };\n                var clickParentMenu = function (target, opt, eType) {\n                    var\n                        $target = jQuery(target),\n                        offset = $target.offset(),\n                        height = $target.outerHeight(),\n                        index = Number(target.getAttribute(\"data-menu-item-index\")),\n                        scrollTop = (cfg.position == \"fixed\") ? jQuery(document).scrollTop() : 0;\n                    if (cfg.items && (!cfg.items[index][cfg.columnKeys.items] || cfg.items[index][cfg.columnKeys.items].length == 0)) {\n                        if (self.onClick) {\n                            self.onClick.call(cfg.items[index], cfg.items[index]);\n                        }\n                    }\n                };\n\n                return function (el, opt) {\n                    var\n                        data = {},\n                        items = cfg.items,\n                        activeMenu;\n\n                    if (typeof opt === \"undefined\") opt = {};\n\n                    data.theme = opt.theme || cfg.theme;\n                    data.cfg = {\n                        icons: jQuery.extend({}, cfg.icons),\n                        iconWidth: opt.iconWidth || cfg.iconWidth,\n                        acceleratorWidth: opt.acceleratorWidth || cfg.acceleratorWidth\n                    };\n\n                    items.forEach(function (n) {\n                        if (n.html || n.divide) {\n                            n['@isMenu'] = false;\n                            if (n.html) {\n                                n['@html'] = n.html.call({\n                                    item: n,\n                                    config: cfg,\n                                    opt: opt\n                                });\n                            }\n                        }\n                        else {\n                            n['@isMenu'] = true;\n                        }\n                    });\n\n                    data[cfg.columnKeys.items] = items;\n\n                    activeMenu = jQuery(MENU.tmpl.get.call(this, \"tmplMenubar\", data, cfg.columnKeys));\n                    self.menuBar = {\n                        target: jQuery(el),\n                        opened: false\n                    };\n                    self.menuBar.target.html(activeMenu);\n\n                    // click, mouseover\n                    self.menuBar.target.bind(\"click\", function (e) {\n                        if (!e) return this;\n                        var target = U.findParentNode(e.target, function (target) {\n                            if (target.getAttribute(\"data-menu-item-index\")) {\n                                return true;\n                            }\n                        });\n                        if (target) {\n                            clickParentMenu(target, opt, \"click\");\n                            popUpChildMenu(target, opt, \"click\");\n                        }\n\n                        target = null;\n                    });\n                    self.menuBar.target.bind(\"mouseover\", function (e) {\n                        if (!self.menuBar.opened) return false;\n                        var target = U.findParentNode(e.target, function (target) {\n                            if (target.getAttribute(\"data-menu-item-index\")) {\n                                return true;\n                            }\n                        });\n                        if (target) popUpChildMenu(target, opt, \"mouseover\");\n\n                        target = null;\n                    });\n\n                    el = null;\n                    opt = null;\n                    data = null;\n                    items = null;\n                    activeMenu = null;\n\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5.ui.menu.close\n             * @returns {ax5.ui.menu} this\n             */\n            this.close = function () {\n\n                if (self.menuBar && self.menuBar.target) {\n                    self.menuBar.target.find('[data-menu-item-index]').removeClass(\"hover\");\n                    self.menuBar.opened = false;\n                    self.menuBar.openedIndex = null;\n                }\n\n                appEventAttach.call(this, false); // 이벤트 제거\n\n                this.queue.forEach(function (n) {\n                    n.$target.remove();\n                });\n                this.queue = [];\n\n                onStateChanged.call(this, null, {\n                    self: this,\n                    state: \"close\"\n                });\n\n                return this;\n            };\n\n            /**\n             * @method ax5.ui.menu.getCheckValue\n             * @returns {Object} statusCheckItem\n             */\n            this.getCheckValue = function () {\n                var checkItems = {},\n                    collectItem = function (items) {\n                        var i = items.length;\n                        while (i--) {\n                            if (items[i].check && items[i].check.checked) {\n                                if (!checkItems[items[i].check.name]) checkItems[items[i].check.name] = items[i].check.value;\n                                else {\n                                    if (U.isString(checkItems[items[i].check.name])) checkItems[items[i].check.name] = [checkItems[items[i].check.name]];\n                                    checkItems[items[i].check.name].push(items[i].check.value);\n                                }\n                            }\n                            if (items[i].items && items[i].items.length > 0) collectItem(items[i].items);\n                        }\n                    };\n\n                collectItem(cfg.items);\n\n                try {\n                    return checkItems;\n                }\n                finally {\n                    checkItems = null;\n                    collectItem = null;\n                }\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.menu_instance = UI.menu_instance || [];\n                UI.menu_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n    })());\n\n    MENU = ax5.ui.menu;\n})();\n\n// todo : menu 드랍다운 아이콘 설정 기능 추가","// ax5.ui.menu.tmpl\n(function () {\n    var MENU = ax5.ui.menu;\n    \n    var tmpl = function (columnKeys) {\n        return `\n        <div class=\"ax5-ui-menu {{theme}}\" {{#width}}style=\"width:{{width}}px;\"{{/width}}>\n            <div class=\"ax-menu-body\">\n                {{#${columnKeys.items}}}\n                    {{^@isMenu}}\n                        {{#divide}}\n                        <div class=\"ax-menu-item-divide\" data-menu-item-index=\"{{@i}}\"></div>\n                        {{/divide}}\n                        {{#html}}\n                        <div class=\"ax-menu-item-html\" data-menu-item-index=\"{{@i}}\">{{{@html}}}</div>\n                        {{/html}}\n                    {{/@isMenu}}\n                    {{#@isMenu}}\n                    <div class=\"ax-menu-item\" data-menu-item-depth=\"{{@depth}}\" data-menu-item-index=\"{{@i}}\" data-menu-item-path=\"{{@path}}.{{@i}}\">\n                        <span class=\"ax-menu-item-cell ax-menu-item-checkbox\">\n                            {{#check}}\n                            <span class=\"item-checkbox-wrap useCheckBox\" {{#checked}}data-item-checked=\"true\"{{/checked}}></span>\n                            {{/check}}\n                            {{^check}}\n                            <span class=\"item-checkbox-wrap\"></span>\n                            {{/check}}\n                        </span>\n                        {{#icon}}\n                        <span class=\"ax-menu-item-cell ax-menu-item-icon\" style=\"width:{{cfg.iconWidth}}px;\">{{{.}}}</span>\n                        {{/icon}}\n                        <span class=\"ax-menu-item-cell ax-menu-item-label\">{{{${columnKeys.label}}}}</span>\n                        {{#accelerator}}\n                        <span class=\"ax-menu-item-cell ax-menu-item-accelerator\" style=\"width:{{cfg.acceleratorWidth}}px;\"><span class=\"item-wrap\">{{.}}</span></span>\n                        {{/accelerator}}\n                        {{#@hasChild}}\n                        <span class=\"ax-menu-item-cell ax-menu-item-handle\">{{{cfg.icons.arrow}}}</span>\n                        {{/@hasChild}}\n                    </div>\n                    {{/@isMenu}}\n\n                {{/${columnKeys.items}}}\n            </div>\n            <div class=\"ax-menu-arrow\"></div>\n        </div>\n        `;\n    };\n    var tmplMenubar =  function (columnKeys) {\n        return `\n        <div class=\"ax5-ui-menubar {{theme}}\">\n            <div class=\"ax-menu-body\">\n                {{#${columnKeys.items}}}\n                    {{^@isMenu}}\n                        {{#divide}}\n                        <div class=\"ax-menu-item-divide\" data-menu-item-index=\"{{@i}}\"></div>\n                        {{/divide}}\n                        {{#html}}\n                        <div class=\"ax-menu-item-html\" data-menu-item-index=\"{{@i}}\">{{{@html}}}</div>\n                        {{/html}}\n                    {{/@isMenu}}\n                    {{#@isMenu}}\n                    <div class=\"ax-menu-item\" data-menu-item-index=\"{{@i}}\">\n                        {{#icon}}\n                        <span class=\"ax-menu-item-cell ax-menu-item-icon\" style=\"width:{{cfg.iconWidth}}px;\">{{{.}}}</span>\n                        {{/icon}}\n                        <span class=\"ax-menu-item-cell ax-menu-item-label\">{{{${columnKeys.label}}}}</span>\n                    </div>\n                    {{/@isMenu}}\n                {{/${columnKeys.items}}}\n            </div>\n        </div>\n        `;\n    };\n\n    MENU.tmpl = {\n        \"tmpl\" : tmpl,\n        \"tmplMenubar\" : tmplMenubar,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(MENU.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","// ax5.ui.select\n(function () {\n\n    let UI = ax5.ui,\n        U = ax5.util,\n        SELECT;\n\n    UI.addClass({\n        className: \"select\"\n    }, (function () {\n        /**\n         * @class ax5select\n         * @classdesc\n         * @author tom@axisj.com\n         */\n        let ax5select = function () {\n            let self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 100,\n                lang: {\n                    noSelected: '',\n                    noOptions: 'no options',\n                    loading: 'now loading..',\n                    multipleLabel: '\"{{label}}\"외 {{length}}건'\n                },\n                columnKeys: {\n                    optionValue: 'value',\n                    optionText: 'text',\n                    optionSelected: 'selected'\n                }\n            };\n            this.queue = [];\n            this.activeSelectOptionGroup = null;\n            this.activeSelectQueueIndex = -1;\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.waitOptionsCallback = null;\n            this.keyUpTimer = null;\n            this.xvar = {};\n\n            cfg = this.config;\n\n            let $window = jQuery(window),\n                ctrlKeys = {\n                    \"18\": \"KEY_ALT\",\n                    \"8\": \"KEY_BACKSPACE\",\n                    \"17\": \"KEY_CONTROL\",\n                    \"46\": \"KEY_DELETE\",\n                    \"40\": \"KEY_DOWN\",\n                    \"35\": \"KEY_END\",\n                    \"187\": \"KEY_EQUAL\",\n                    \"27\": \"KEY_ESC\",\n                    \"36\": \"KEY_HOME\",\n                    \"45\": \"KEY_INSERT\",\n                    \"37\": \"KEY_LEFT\",\n                    \"189\": \"KEY_MINUS\",\n                    \"34\": \"KEY_PAGEDOWN\",\n                    \"33\": \"KEY_PAGEUP\",\n                    // \"190\": \"KEY_PERIOD\",\n                    \"13\": \"KEY_RETURN\",\n                    \"39\": \"KEY_RIGHT\",\n                    \"16\": \"KEY_SHIFT\",\n                    // \"32\": \"KEY_SPACE\",\n                    \"9\": \"KEY_TAB\",\n                    \"38\": \"KEY_UP\",\n                    \"91\": \"KEY_WINDOW\"\n                    //\"107\" : \"NUMPAD_ADD\",\n                    //\"194\" : \"NUMPAD_COMMA\",\n                    //\"110\" : \"NUMPAD_DECIMAL\",\n                    //\"111\" : \"NUMPAD_DIVIDE\",\n                    //\"12\" : \"NUMPAD_EQUAL\",\n                    //\"106\" : \"NUMPAD_MULTIPLY\",\n                    //\"109\" : \"NUMPAD_SUBTRACT\"\n                },\n                onStateChanged = function (item, that) {\n                    if (item && item.onStateChanged) {\n                        item.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n\n                    if (that.state == \"changeValue\") {\n                        if (item && item.onChange) {\n                            item.onChange.call(that, that);\n                        }\n                        else if (this.onChange) {\n                            this.onChange.call(that, that);\n                        }\n                    }\n\n                    item = null;\n                    that = null;\n                    return true;\n                },\n                alignSelectDisplay = function () {\n                    let i = this.queue.length, w;\n                    while (i--) {\n                        if (this.queue[i].$display) {\n                            w = Math.max(this.queue[i].$select.outerWidth(), U.number(this.queue[i].minWidth));\n                            this.queue[i].$display.css({\n                                \"min-width\": w\n                            });\n                            if (this.queue[i].reset) {\n                                this.queue[i].$display.find(\".addon-icon-reset\").css({\n                                    \"line-height\": this.queue[i].$display.height() + \"px\"\n                                });\n                            }\n                        }\n                    }\n\n                    i = null;\n                    w = null;\n                    return this;\n                },\n                alignSelectOptionGroup = function (append) {\n                    if (!this.activeSelectOptionGroup) return this;\n\n                    let item = this.queue[this.activeSelectQueueIndex],\n                        pos = {}, positionMargin = 0,\n                        dim = {}, pickerDim = {},\n                        pickerDirection;\n\n                    if (append) jQuery(document.body).append(this.activeSelectOptionGroup);\n\n                    pos = item.$target.offset();\n                    dim = {\n                        width: item.$target.outerWidth(),\n                        height: item.$target.outerHeight()\n                    };\n                    pickerDim = {\n                        winWidth: Math.max($window.width(), jQuery(document.body).width()),\n                        winHeight: Math.max($window.height(), jQuery(document.body).height()),\n                        width: this.activeSelectOptionGroup.outerWidth(),\n                        height: this.activeSelectOptionGroup.outerHeight()\n                    };\n\n                    // picker css(width, left, top) & direction 결정\n                    if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n                        // set direction\n                        pickerDirection = \"top\";\n\n                        if (pos.top - pickerDim.height - positionMargin < 0) {\n                            pickerDirection = \"top\";\n                        } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                            pickerDirection = \"bottom\";\n                        }\n                    } else {\n                        pickerDirection = item.direction;\n                    }\n                    // todo : 표현할 공간이 없다면..\n                    if (append) {\n                        this.activeSelectOptionGroup\n                            .addClass(\"direction-\" + pickerDirection);\n                    }\n                    this.activeSelectOptionGroup\n                        .css((function () {\n                            if (pickerDirection == \"top\") {\n                                if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n\n                                    var newTop = pos.top + dim.height / 2 - pickerDim.height / 2;\n                                    if (newTop + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                                        newTop = 0;\n                                    }\n                                    if (newTop < 0) {\n                                        newTop = 0;\n                                    }\n\n                                    return {\n                                        left: pos.left,\n                                        top: newTop,\n                                        width: dim.width\n                                    }\n                                }\n                                return {\n                                    left: pos.left,\n                                    top: pos.top + dim.height + 1,\n                                    width: dim.width\n                                }\n                            }\n                            else if (pickerDirection == \"bottom\") {\n                                return {\n                                    left: pos.left,\n                                    top: pos.top - pickerDim.height - 1,\n                                    width: dim.width\n                                }\n                            }\n                        }).call(this));\n                },\n                onBodyClick = function (e, target) {\n                    if (!this.activeSelectOptionGroup) return this;\n\n                    let item = this.queue[this.activeSelectQueueIndex],\n                        clickEl = \"display\";\n\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-option-value\") || target.getAttribute(\"data-option-value\") == \"\") {\n                            clickEl = \"optionItem\";\n                            return true;\n                        }\n                        else if (item.$target.get(0) == target) {\n                            clickEl = \"display\";\n                            return true;\n                        }\n                    });\n\n                    if (!target) {\n                        this.close();\n                        return this;\n                    }\n                    else if (clickEl === \"optionItem\") {\n                        this.val(item.id, {\n                            index: {\n                                gindex: target.getAttribute(\"data-option-group-index\"),\n                                index: target.getAttribute(\"data-option-index\")\n                            }\n                        }, undefined, \"internal\");\n                        item.$select.trigger(\"change\");\n                        item.$display.focus();\n                        if (!item.multiple) this.close();\n                    }\n                    else {\n                        //open and display click\n                        //console.log(this.instanceId);\n                    }\n\n                    return this;\n                },\n                onBodyKeyup = function (e) {\n                    if (e.keyCode == ax5.info.eventKeys.ESC) {\n                        this.close();\n                    }\n                    else if (e.which == ax5.info.eventKeys.RETURN) {\n                        if (this.queue[this.activeSelectQueueIndex].optionFocusIndex > -1) { // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                            let $option = this.activeSelectOptionGroup.find('[data-option-focus-index=\"' + this.queue[this.activeSelectQueueIndex].optionFocusIndex + '\"]');\n                            this.val(this.queue[this.activeSelectQueueIndex].id, {\n                                index: {\n                                    gindex: $option.attr(\"data-option-group-index\"),\n                                    index: $option.attr(\"data-option-index\")\n                                }\n                            }, undefined, \"internal\");\n                            this.queue[this.activeSelectQueueIndex].$select.trigger(\"change\");\n                            if (!this.queue[this.activeSelectQueueIndex].multiple) this.close();\n                        } else {\n                            this.close();\n                        }\n                    }\n                },\n                getLabel = function (queIdx) {\n                    let item = this.queue[queIdx],\n                        labels = [];\n\n                    if (U.isArray(item.selected) && item.selected.length > 0) {\n                        item.selected.forEach(function (n) {\n                            if (n.selected) labels.push(n[item.columnKeys.optionText]);\n                        });\n                    }\n                    else {\n                        if (!item.multiple && item.options && item.options[0]) {\n                            if (item.options[0].optgroup) {\n                                labels[0] = item.options[0].options[0][item.columnKeys.optionText];\n                            }\n                            else {\n                                labels[0] = item.options[0][item.columnKeys.optionText];\n                            }\n                        }\n                        else {\n                            labels[0] = item.lang.noSelected;\n                        }\n                    }\n\n                    return (function () {\n                        if (item.multiple && labels.length > 1) {\n                            let data = {\n                                label: labels[0],\n                                length: labels.length - 1\n                            };\n                            return ax5.mustache.render(item.lang.multipleLabel, data);\n                        }\n                        else {\n                            return labels[0];\n                        }\n                    })();\n                },\n                syncLabel = function (queIdx) {\n                    this.queue[queIdx].$displayLabel\n                        .html(getLabel.call(this, queIdx));\n                },\n                focusWord = function (queIdx, searchWord) {\n                    let options = [], i = -1, l = this.queue[queIdx].indexedOptions.length - 1, n;\n                    if (searchWord) {\n                        while (l - i++) {\n                            n = this.queue[queIdx].indexedOptions[i];\n                            if (('' + n.value).toLowerCase() == searchWord.toLowerCase()) {\n                                options = [{'@findex': n['@findex'], optionsSort: 0}];\n                                break;\n                            } else {\n                                let sort = ('' + n.value).toLowerCase().search(searchWord.toLowerCase());\n                                if (sort > -1) {\n                                    options.push({'@findex': n['@findex'], optionsSort: sort});\n                                    if (options.length > 2) break;\n                                }\n                                sort = null;\n                            }\n                        }\n                        options.sort(function (a, b) {\n                            return a.optionsSort - b.optionsSort;\n                        });\n                    }\n                    if (options && options.length > 0) {\n                        focusMove.call(this, queIdx, undefined, options[0]['@findex']);\n                    }\n\n                    try {\n                        return options;\n                    } finally {\n                        options = null;\n                        i = null;\n                        l = null;\n                        n = null;\n                    }\n                },\n                focusMove = function (queIdx, direction, findex) {\n                    let _focusIndex,\n                        _prevFocusIndex,\n                        focusOptionEl,\n                        optionGroupScrollContainer;\n\n                    if (this.activeSelectOptionGroup && this.queue[queIdx].options && this.queue[queIdx].options.length > 0) {\n\n                        if (typeof findex !== \"undefined\") {\n                            _focusIndex = findex\n                        }\n                        else {\n                            _prevFocusIndex = (this.queue[queIdx].optionFocusIndex == -1) ? this.queue[queIdx].optionSelectedIndex || -1 : this.queue[queIdx].optionFocusIndex;\n                            if (_prevFocusIndex == -1) {\n                                _focusIndex = (direction > 0) ? 0 : this.queue[queIdx].optionItemLength - 1;\n                            }\n                            else {\n                                _focusIndex = _prevFocusIndex + direction;\n                                if (_focusIndex < 0) _focusIndex = 0;\n                                else if (_focusIndex > this.queue[queIdx].optionItemLength - 1) _focusIndex = this.queue[queIdx].optionItemLength - 1;\n                            }\n                        }\n\n                        this.queue[queIdx].optionFocusIndex = _focusIndex;\n\n                        this.activeSelectOptionGroup\n                            .find('[data-option-focus-index]')\n                            .removeClass(\"hover\");\n\n                        focusOptionEl = this.activeSelectOptionGroup\n                            .find('[data-option-focus-index=\"' + _focusIndex + '\"]')\n                            .addClass(\"hover\");\n\n                        optionGroupScrollContainer = this.activeSelectOptionGroup.find('[data-els=\"content\"]');\n\n                        let focusOptionElHeight = focusOptionEl.outerHeight(),\n                            optionGroupScrollContainerHeight = optionGroupScrollContainer.innerHeight(),\n                            optionGroupScrollContainerScrollTop = optionGroupScrollContainer.scrollTop(),\n                            focusOptionElTop = focusOptionEl.position().top + optionGroupScrollContainer.scrollTop();\n\n                        if (optionGroupScrollContainerHeight + optionGroupScrollContainerScrollTop < focusOptionElTop + focusOptionElHeight) {\n                            optionGroupScrollContainer.scrollTop(focusOptionElTop + focusOptionElHeight - optionGroupScrollContainerHeight);\n                        }\n                        else if (optionGroupScrollContainerScrollTop > focusOptionElTop) {\n                            optionGroupScrollContainer.scrollTop(focusOptionElTop);\n                        }\n                        // optionGroup scroll check\n                    }\n                },\n                bindSelectTarget = (function () {\n                    let focusWordCall = U.debounce(function (searchWord, queIdx) {\n                        focusWord.call(self, queIdx, searchWord);\n                        self.queue[queIdx].$displayInput.val('');\n                    }, 300);\n\n                    let selectEvent = {\n                        'click': function (queIdx, e) {\n                            var target = U.findParentNode(e.target, function (target) {\n                                if (target.getAttribute(\"data-selected-clear\")) {\n                                    //clickEl = \"clear\";\n                                    return true;\n                                }\n                            });\n\n                            if (target) {\n                                this.val(queIdx, {clear: true});\n                            }\n                            else {\n                                if (self.activeSelectQueueIndex == queIdx) {\n                                    if (this.queue[queIdx].optionFocusIndex == -1) { // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                                        self.close();\n                                    }\n                                }\n                                else {\n                                    self.open(queIdx);\n                                    U.stopEvent(e);\n                                }\n                            }\n                        },\n                        'keyUp': function (queIdx, e) {\n                            if (e.which == ax5.info.eventKeys.SPACE) {\n                                selectEvent.click.call(this, queIdx, e);\n                            }\n                            else if (!ctrlKeys[e.which]) {\n                                // 사용자 입력이 뜸해지면 찾고 검색 값 제거...\n                                focusWordCall(this.queue[queIdx].$displayInput.val(), queIdx);\n                            }\n                        },\n                        'keyDown': function (queIdx, e) {\n                            if (e.which == ax5.info.eventKeys.DOWN) {\n                                focusMove.call(this, queIdx, 1);\n                                U.stopEvent(e);\n                            }\n                            else if (e.which == ax5.info.eventKeys.UP) {\n                                focusMove.call(this, queIdx, -1);\n                                U.stopEvent(e);\n                            }\n                        },\n                        'blur': function (queIdx, e) {\n\n                        },\n                        'selectChange': function (queIdx, e) {\n                            this.val(queIdx, this.queue[queIdx].$select.val(), true);\n                        }\n                    };\n                    return function (queIdx) {\n                        let item = this.queue[queIdx],\n                            data = {};\n\n                        // find selected\n                        item.selected = [];\n                        if(!item.options) item.options = [];\n                        item.options.forEach(function (n) {\n                            if (n[cfg.columnKeys.optionSelected]) item.selected.push(jQuery.extend({}, n));\n                        });\n\n                        if (!item.$display) {\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.instanceId = this.instanceId;\n                            data.id = item.id;\n                            data.name = item.name;\n                            data.theme = item.theme;\n                            data.tabIndex = item.tabIndex;\n                            data.multiple = item.multiple;\n                            data.reset = item.reset;\n\n                            data.label = getLabel.call(this, queIdx);\n                            data.formSize = (function () {\n                                return (item.size) ? \"input-\" + item.size : \"\";\n                            })();\n\n                            item.$display = SELECT.tmpl.get.call(this, \"tmpl\", data);\n                            item.$displayLabel = item.$display.find('[data-ax5select-display=\"label\"]');\n\n                            if (item.$target.find(\"select\").get(0)) {\n                                item.$select = item.$target.find(\"select\");\n                                // select 속성만 변경\n                                item.$select\n                                    .attr(\"tabindex\", \"-1\")\n                                    .attr(\"class\", \"form-control \" + data.formSize);\n                                if (data.name) {\n                                    item.$select.attr(\"name\", \"name\");\n                                }\n                                if (data.multiple) {\n                                    item.$select.attr(\"multiple\", \"multiple\");\n                                }\n                            }\n                            else {\n                                item.$select = SELECT.tmpl.get.call(this, \"selectTmpl\", data);\n                                item.$target.append(item.$select);\n                                // select append\n                            }\n\n                            item.$target.append(item.$display);\n                            item.$displayInput = item.$display.find('[data-ax5select-display=\"input\"]'); // 사용자 입력값을 받기위한 숨음 입력필드\n                            item.options = syncSelectOptions.call(this, queIdx, item.options);\n\n                            alignSelectDisplay.call(this);\n\n                            item.$displayInput\n                                .unbind(\"blur.ax5select\")\n                                .bind(\"blur.ax5select\", selectEvent.blur.bind(this, queIdx))\n                                .unbind('keyup.ax5select')\n                                .bind('keyup.ax5select', selectEvent.keyUp.bind(this, queIdx))\n                                .unbind(\"keydown.ax5select\")\n                                .bind(\"keydown.ax5select\", selectEvent.keyDown.bind(this, queIdx));\n                        }\n                        else {\n                            item.$displayLabel\n                                .html(getLabel.call(this, queIdx));\n                            item.options = syncSelectOptions.call(this, queIdx, item.options);\n\n                            alignSelectDisplay.call(this);\n                        }\n\n                        item.$display\n                            .unbind('click.ax5select')\n                            .bind('click.ax5select', selectEvent.click.bind(this, queIdx))\n                            .unbind('keyup.ax5select')\n                            .bind('keyup.ax5select', selectEvent.keyUp.bind(this, queIdx));\n\n                        // select 태그에 대한 change 이벤트 감시\n                        item.$select\n                            .unbind('change.ax5select')\n                            .bind('change.ax5select', selectEvent.selectChange.bind(this, queIdx));\n\n                        data = null;\n                        item = null;\n                        queIdx = null;\n                        return this;\n                    };\n                })(),\n                syncSelectOptions = (function () {\n                    let setSelected = function (queIdx, O) {\n                        if (!O) {\n                            this.queue[queIdx].selected = [];\n                        }\n                        else {\n                            if (this.queue[queIdx].multiple) this.queue[queIdx].selected.push(jQuery.extend({}, O));\n                            else this.queue[queIdx].selected[0] = jQuery.extend({}, O);\n                        }\n                    };\n\n                    return function (queIdx, options) {\n                        let item = this.queue[queIdx],\n                            po, elementOptions, newOptions, focusIndex = 0;\n\n                        setSelected.call(this, queIdx, false); // item.selected 초기화\n\n                        if (options) {\n                            item.options = options;\n                            item.indexedOptions = [];\n\n                            // select options 태그 생성\n                            po = [];\n                            item.options.forEach(function (O, OIndex) {\n                                if (O.optgroup) {\n\n                                    O['@gindex'] = OIndex;\n                                    O.options.forEach(function (OO, OOIndex) {\n                                        OO['@index'] = OOIndex;\n                                        OO['@findex'] = focusIndex;\n                                        po.push('<option value=\"' + OO[item.columnKeys.optionValue] + '\" '\n                                            + (OO[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : '') + '>'\n                                            + OO[item.columnKeys.optionText] + '</option>');\n                                        if (OO[item.columnKeys.optionSelected]) {\n                                            setSelected.call(self, queIdx, OO);\n                                        }\n\n                                        item.indexedOptions.push({\n                                            '@findex': focusIndex, value: OO[item.columnKeys.optionValue], text: OO[item.columnKeys.optionText]\n                                        });\n                                        focusIndex++;\n                                    });\n                                }\n                                else {\n                                    O['@index'] = OIndex;\n                                    O['@findex'] = focusIndex;\n                                    po.push('<option value=\"' + O[item.columnKeys.optionValue] + '\" '\n                                        + (O[item.columnKeys.optionSelected] ? ' selected=\"selected\"' : '') + '>'\n                                        + O[item.columnKeys.optionText] + '</option>');\n                                    if (O[item.columnKeys.optionSelected]) {\n                                        setSelected.call(self, queIdx, O);\n                                    }\n\n                                    item.indexedOptions.push({\n                                        '@findex': focusIndex, value: O[item.columnKeys.optionValue], text: O[item.columnKeys.optionText]\n                                    });\n                                    focusIndex++;\n                                }\n                            });\n                            item.optionItemLength = focusIndex;\n                            item.$select.html(po.join(''));\n                        }\n                        else {\n                            /// select > options 태그로 스크립트 options를 만들어주는 역할\n                            elementOptions = U.toArray(item.$select.get(0).options);\n                            // select option 스크립트 생성\n                            newOptions = [];\n                            elementOptions.forEach(function (O, OIndex) {\n                                var option = {};\n                                //if (O.value != \"\") {\n                                option[item.columnKeys.optionValue] = O.value;\n                                option[item.columnKeys.optionText] = O.text;\n                                option[item.columnKeys.optionSelected] = O.selected;\n                                option['@index'] = OIndex;\n                                option['@findex'] = OIndex;\n                                if (O.selected) setSelected.call(self, queIdx, option);\n                                newOptions.push(option);\n                                //}\n                                option = null;\n                            });\n                            item.options = newOptions;\n                            item.indexedOptions = newOptions;\n                        }\n\n                        if (!item.multiple && item.selected.length == 0 && item.options && item.options[0]) {\n                            if (item.options[0].optgroup) {\n                                item.options[0].options[0][item.columnKeys.optionSelected] = true;\n                                item.selected.push(jQuery.extend({}, item.options[0].options[0]));\n                            }\n                            else {\n                                item.options[0][item.columnKeys.optionSelected] = true;\n                                item.selected.push(jQuery.extend({}, item.options[0]));\n                            }\n                        }\n\n                        po = null;\n                        elementOptions = null;\n                        newOptions = null;\n                        return item.options;\n                    }\n                })(),\n                getQueIdx = function (boundID) {\n                    if (!U.isString(boundID)) {\n                        boundID = jQuery(boundID).data(\"data-ax5select-id\");\n                    }\n                    if (!U.isString(boundID)) {\n                        console.log(ax5.info.getError(\"ax5select\", \"402\", \"getQueIdx\"));\n                        return;\n                    }\n                    return U.search(this.queue, function () {\n                        return this.id == boundID;\n                    });\n                };\n            /// private end\n\n            /**\n             * Preferences of select UI\n             * @method ax5select.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5select}\n             * @example\n             * ```js\n             * var options = [];\n             * for (var i = 0; i < 20; i++) {\n            *     options.push({value: i, text: \"optionText\" + i});\n            * }\n\n             * var mySelect = new ax5.ui.select({\n            *     theme: \"danger\"\n            * });\n\n             * mySelect.bind({\n            *     theme: \"primary\",\n            *     target: $('[data-ax5select=\"select1\"]'),\n            *     options: options,\n            *     onChange: function () {\n            *         console.log(this);\n            *     },\n            *     onClose: function () {\n            *         console.log(this);\n            *     },\n            *     onStateChanged: function () {\n            *         console.log(this);\n            *     }\n            * });\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onChange = cfg.onChange;\n\n                jQuery(window).bind(\"resize.ax5select-display-\" + this.instanceId, (function () {\n                    alignSelectDisplay.call(this);\n                }).bind(this));\n            };\n\n            /**\n             * bind select\n             * @method ax5select.bind\n             * @param {Object} item\n             * @param {String} [item.id]\n             * @param {String} [item.theme]\n             * @param {Boolean} [item.multiple]\n             * @param {Element} item.target\n             * @param {Object[]} item.options\n             * @returns {ax5select}\n             * @example\n             * ```js\n             * var mySelect = new ax5.ui.select();\n             * mySelect.bind({\n             *  columnKeys: {\n             *      optionValue: \"value\",\n             *      optionText: \"text\"\n             *  },\n             *  target: $('[data-ax5select=\"select1\"]'),\n             *  options: [\n             *      {value: \"\", text: \"\"}\n             *  ],\n             *  onChange: function(){\n             *\n             *  },\n             *  onClose: function(){\n             *\n             *  },\n             *  onStateChanged: function(){\n             *\n             *  }\n             * });\n             * ```\n             */\n            this.bind = function (item) {\n                let selectConfig = {},\n                    queIdx;\n\n                item = jQuery.extend(true, selectConfig, cfg, item);\n\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5select\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                item.$target = jQuery(item.target);\n\n                if (!item.id) item.id = item.$target.data(\"data-ax5select-id\");\n                if (!item.id) {\n                    item.id = 'ax5select-' + ax5.getGuid();\n                    item.$target.data(\"data-ax5select-id\", item.id);\n                }\n                item.name = item.$target.attr(\"data-ax5select\");\n\n                if (item.options) {\n                    item.options = JSON.parse(JSON.stringify(item.options));\n                }\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        item = jQuery.extend(true, item, data);\n                    }\n                })(U.parseJson(item.$target.attr(\"data-ax5select-config\"), true));\n\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindSelectTarget.call(this, this.queue.length - 1);\n                }\n                else {\n                    this.queue[queIdx].selected = [];\n                    this.queue[queIdx].options = item.options;\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindSelectTarget.call(this, queIdx);\n                }\n\n                selectConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * open the optionBox of select\n             * @method ax5select.open\n             * @param {(String|Number|Element)} boundID\n             * @param {Number} [tryCount]\n             * @returns {ax5select}\n             */\n            this.open = (function () {\n\n                let onExpand = function (item) {\n                    item.onExpand.call({\n                        self: this,\n                        item: item\n                    }, (function (O) {\n                        if (this.waitOptionsCallback) {\n                            var data = {};\n                            var item = this.queue[this.activeSelectQueueIndex];\n\n                            /// 현재 selected 검증후 처리\n                            (function (item, O) {\n                                var optionsMap = {};\n                                O.options.forEach(function (_O, _OIndex) {\n                                    _O[\"@index\"] = _OIndex;\n                                    optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                                });\n                                if (U.isArray(item.selected)) {\n                                    item.selected.forEach(function (_O) {\n                                        if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                            O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                        }\n                                    });\n                                }\n                            })(item, O);\n\n\n                            item.$displayLabel\n                                .html(getLabel.call(this, this.activeSelectQueueIndex));\n                            item.options = syncSelectOptions.call(this, this.activeSelectQueueIndex, O.options);\n\n                            alignSelectDisplay.call(this);\n\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.id = item.id;\n                            data.theme = item.theme;\n                            data.size = \"ax5select-option-group-\" + item.size;\n                            data.multiple = item.multiple;\n                            data.lang = item.lang;\n                            data.options = item.options;\n                            this.activeSelectOptionGroup.find('[data-els=\"content\"]').html(SELECT.tmpl.get.call(this, \"optionsTmpl\", data, item.columnKeys));\n                        }\n                    }).bind(this));\n                };\n\n                return function (boundID, tryCount) {\n                    this.waitOptionsCallback = null;\n\n                    /**\n                     * open select from the outside\n                     */\n                    let queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID),\n                        item = this.queue[queIdx],\n                        data = {}, focusTop, selectedOptionEl;\n\n                    if (item.$display.attr(\"disabled\")) return this;\n\n                    if (this.openTimer) clearTimeout(this.openTimer);\n                    if (this.activeSelectOptionGroup) {\n                        if (this.activeSelectQueueIndex == queIdx) {\n                            return this;\n                        }\n\n                        if (tryCount > 2) return this;\n                        this.close();\n                        this.openTimer = setTimeout((function () {\n                            this.open(queIdx, (tryCount || 0) + 1);\n                        }).bind(this), cfg.animateTime);\n\n                        return this;\n                    }\n\n                    item.optionFocusIndex = -1; // optionGroup이 열리면 포커스 인덱스 초기화 -1로\n                    if (item.selected && item.selected.length > 0) {\n                        item.optionSelectedIndex = item.selected[0][\"@findex\"];\n                    }\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5select-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n\n                    data.lang = item.lang;\n                    item.$display.attr(\"data-select-option-group-opened\", \"true\");\n                    //console.log(data.lang);\n\n                    if (item.onExpand) {\n                        // onExpand 인 경우 UI 대기모드 추가\n                        data.waitOptions = true;\n                    }\n\n                    data.options = item.options;\n                    this.activeSelectOptionGroup = SELECT.tmpl.get.call(this, \"optionGroupTmpl\", data);\n                    this.activeSelectOptionGroup.find('[data-els=\"content\"]').html(SELECT.tmpl.get.call(this, \"optionsTmpl\", data, item.columnKeys));\n                    this.activeSelectQueueIndex = queIdx;\n\n                    alignSelectOptionGroup.call(this, \"append\"); // alignSelectOptionGroup 에서 body append\n                    jQuery(window).bind(\"resize.ax5select-\" + this.instanceId, (function () {\n                        alignSelectOptionGroup.call(this);\n                    }).bind(this));\n\n                    if (item.selected && item.selected.length > 0) {\n                        selectedOptionEl = this.activeSelectOptionGroup.find('[data-option-index=\"' + item.selected[0][\"@index\"] + '\"]');\n\n                        if (selectedOptionEl.get(0)) {\n                            focusTop = selectedOptionEl.position().top - this.activeSelectOptionGroup.height() / 3;\n                            this.activeSelectOptionGroup.find('[data-els=\"content\"]')\n                                .stop().animate({scrollTop: focusTop}, item.animateTime, 'swing', function () {\n                            });\n                        }\n                    }\n\n                    /// 사용자 입력으로 옵션을 검색하기 위한 시나리오\n                    // 옵션그룹이 활성화 되면 사용자 입력을 받기위한 input 값 초기화 및 포커스 다른 select가 닫히면서 display focus 이벤트와 충돌하는 문제가 있으므로\n                    // 1밀리세컨 지연후 포커스 처리. input에 포커스가 되므로 input value로 options를 검색 할 수 있게 됩니다.\n                    item.$displayInput.val('');\n\n                    setTimeout((function () {\n                        item.$displayInput.trigger(\"focus\");\n\n                        jQuery(window).bind(\"keyup.ax5select-\" + this.instanceId, (function (e) {\n                            e = e || window.event;\n                            onBodyKeyup.call(this, e);\n                            U.stopEvent(e);\n                        }).bind(this));\n\n                        jQuery(window).bind(\"click.ax5select-\" + this.instanceId, (function (e) {\n                            e = e || window.event;\n                            onBodyClick.call(this, e);\n                            U.stopEvent(e);\n                        }).bind(this));\n\n                    }).bind(this), 300);\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"open\",\n                        item: item\n                    });\n\n                    // waitOption timer\n                    if (item.onExpand) {\n                        this.waitOptionsCallback = true;\n                        onExpand.call(this, item);\n                    }\n\n                    data = null;\n                    focusTop = null;\n                    selectedOptionEl = null;\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5select.update\n             * @param {(Object|String)} item\n             * @returns {ax5select}\n             */\n            this.update = function (_item) {\n                this.bind(_item);\n                return this;\n            };\n\n            /**\n             * @method ax5select.setOptions\n             * @param boundID\n             * @param options\n             * @returns {ax5select}\n             */\n            this.setOptions = function (boundID, options) {\n                let queIdx = getQueIdx.call(this, boundID);\n                this.queue[queIdx].selected = [];\n                this.queue[queIdx].options = options;\n                bindSelectTarget.call(this, queIdx);\n                return this;\n            };\n\n            /**\n             * @method ax5select.val\n             * @param {(String|Number|Element)} boundID\n             * @param {(String|Object|Array)} [value]\n             * @param {Boolean} [selected]\n             * @returns {ax5select}\n             */\n            this.val = (function () {\n\n                // todo : val 함수 리팩토링 필요\n                let getSelected = function (_item, o, selected) {\n                        if (typeof selected === \"undefined\") {\n                            return (_item.multiple) ? !o : true;\n                        } else {\n                            return selected;\n                        }\n                    },\n                    clearSelected = function (queIdx) {\n                        this.queue[queIdx].options.forEach(function (n) {\n                            if (n.optgroup) {\n                                n.options.forEach(function (nn) {\n                                    nn.selected = false;\n                                });\n                            }\n                            else {\n                                n.selected = false;\n                            }\n                        });\n                    },\n                    processor = {\n                        'index': function (queIdx, value, selected) {\n                            // 클래스 내부에서 호출된 형태, 그런 이유로 옵션그룹에 대한 상태를 변경 하고 있다.\n                            let item = this.queue[queIdx];\n\n                            /*\n                             if (U.isArray(value.index)) {\n                             value.index.forEach(function (n) {\n                             item.options[n][item.columnKeys.optionSelected] = getSelected(item, item.options[n][item.columnKeys.optionSelected], selected);\n                             self.activeSelectOptionGroup\n                             .find('[data-option-index=\"' + n + '\"]')\n                             .attr(\"data-option-selected\", item.options[n][item.columnKeys.optionSelected].toString());\n                             });\n                             }\n                             else {\n                             }\n                             */\n                            if (U.isString(value.index.gindex)) {\n                                item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected] = getSelected(item, item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected], selected);\n                                self.activeSelectOptionGroup\n                                    .find('[data-option-group-index=\"' + value.index.gindex + '\"][data-option-index=\"' + value.index.index + '\"]')\n                                    .attr(\"data-option-selected\", item.options[value.index.gindex].options[value.index.index][item.columnKeys.optionSelected].toString());\n                            }\n                            else {\n                                item.options[value.index.index][item.columnKeys.optionSelected] = getSelected(item, item.options[value.index.index][item.columnKeys.optionSelected], selected);\n                                self.activeSelectOptionGroup\n                                    .find('[data-option-index=\"' + value.index.index + '\"]')\n                                    .attr(\"data-option-selected\", item.options[value.index.index][item.columnKeys.optionSelected].toString());\n\n                            }\n\n                            syncSelectOptions.call(this, queIdx, item.options);\n                            syncLabel.call(this, queIdx);\n                            alignSelectOptionGroup.call(this);\n                        },\n                        'arr': function (queIdx, values, selected) {\n                            values.forEach(function (value) {\n                                if (U.isString(value) || U.isNumber(value)) {\n                                    processor.value.call(self, queIdx, value, selected);\n                                }\n                                else {\n                                    for (var key in processor) {\n                                        if (value[key]) {\n                                            processor[key].call(self, queIdx, value, selected);\n                                            break;\n                                        }\n                                    }\n                                }\n                            });\n                        },\n                        'value': function (queIdx, value, selected) {\n                            let item = this.queue[queIdx],\n                                optionIndex = U.search(item.options, function () {\n                                    return this[item.columnKeys.optionValue] == value;\n                                });\n                            if (optionIndex > -1) {\n                                item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                            }\n                            else {\n                                console.log(ax5.info.getError(\"ax5select\", \"501\", \"val\"));\n                                return;\n                            }\n\n                            syncSelectOptions.call(this, queIdx, item.options);\n                            syncLabel.call(this, queIdx);\n                        },\n                        'text': function (queIdx, value, selected) {\n                            let item = this.queue[queIdx],\n                                optionIndex = U.search(item.options, function () {\n                                    return this[item.columnKeys.optionText] == value;\n                                });\n                            if (optionIndex > -1) {\n                                item.options[optionIndex][item.columnKeys.optionSelected] = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n                            }\n                            else {\n                                console.log(ax5.info.getError(\"ax5select\", \"501\", \"val\"));\n                                return;\n                            }\n\n                            syncSelectOptions.call(this, queIdx, item.options);\n                            syncLabel.call(this, queIdx);\n                        },\n                        'clear': function (queIdx) {\n                            clearSelected.call(this, queIdx);\n                            syncSelectOptions.call(this, queIdx, this.queue[queIdx].options);\n                            syncLabel.call(this, queIdx);\n\n                            if (this.activeSelectOptionGroup) {\n                                this.activeSelectOptionGroup\n                                    .find('[data-option-index]')\n                                    .attr(\"data-option-selected\", \"false\");\n                            }\n                        }\n                    };\n\n                return function (boundID, value, selected, internal) {\n                    let queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    if (!this.queue[queIdx]) {\n                        return this;\n                    }\n                    if (typeof value !== \"undefined\" && !this.queue[queIdx].multiple) {\n                        clearSelected.call(this, queIdx);\n                    }\n\n                    if (typeof value == \"undefined\") {\n                        return this.queue[queIdx].selected;\n                    }\n                    else if (U.isArray(value)) {\n                        processor.arr.call(this, queIdx, value, selected);\n                    }\n                    else if (U.isString(value) || U.isNumber(value)) {\n                        processor.value.call(this, queIdx, value, selected);\n                    }\n                    else {\n                        if (value === null) {\n                            processor.clear.call(this, queIdx);\n                        }\n                        else {\n                            for (var key in processor) {\n                                if (value[key]) {\n                                    processor[key].call(this, queIdx, value, selected);\n                                    break;\n                                }\n                            }\n                        }\n                    }\n\n                    if (typeof value !== \"undefined\") {\n                        onStateChanged.call(this, this.queue[queIdx], {\n                            self: this,\n                            item: this.queue[queIdx],\n                            state: (internal) ? \"changeValue\" : \"setValue\",\n                            value: this.queue[queIdx].selected,\n                            internal: internal\n                        });\n                    }\n\n                    boundID = null;\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5select.close\n             * @returns {ax5select}\n             */\n            this.close = function (item) {\n                if (this.closeTimer) clearTimeout(this.closeTimer);\n                if (!this.activeSelectOptionGroup) return this;\n\n                item = this.queue[this.activeSelectQueueIndex];\n                item.optionFocusIndex = -1;\n\n                item.$displayInput.val('').trigger(\"blur\");\n                item.$display.removeAttr(\"data-select-option-group-opened\").trigger(\"focus\");\n\n                this.activeSelectOptionGroup.addClass(\"destroy\");\n\n                jQuery(window)\n                    .unbind(\"resize.ax5select-\" + this.instanceId)\n                    .unbind(\"click.ax5select-\" + this.instanceId)\n                    .unbind(\"keyup.ax5select-\" + this.instanceId);\n\n                this.closeTimer = setTimeout((function () {\n                    if (this.activeSelectOptionGroup) this.activeSelectOptionGroup.remove();\n                    this.activeSelectOptionGroup = null;\n                    this.activeSelectQueueIndex = -1;\n\n                    var that = {\n                        self: this,\n                        item: item,\n                        value: item.selected,\n                        state: \"close\"\n                    };\n\n                    onStateChanged.call(this, item, that);\n\n                    // waitOption timer\n                    if (item.onClose) {\n                        item.onClose.call(that);\n                    }\n                }).bind(this), cfg.animateTime);\n                this.waitOptionsCallback = null;\n                return this;\n            };\n\n            this.enable = function (boundID) {\n                let queIdx = getQueIdx.call(this, boundID);\n                this.queue[queIdx].$display.removeAttr(\"disabled\");\n                this.queue[queIdx].$select.removeAttr(\"disabled\");\n\n                onStateChanged.call(this, this.queue[queIdx], {\n                    self: this,\n                    state: \"enable\"\n                });\n\n                return this;\n            };\n\n            this.disable = function (boundID) {\n                let queIdx = getQueIdx.call(this, boundID);\n                this.queue[queIdx].$display.attr(\"disabled\", \"disabled\");\n                this.queue[queIdx].$select.attr(\"disabled\", \"disabled\");\n\n                onStateChanged.call(this, this.queue[queIdx], {\n                    self: this,\n                    state: \"disable\"\n                });\n\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n                else {\n                    this.init();\n                }\n            }).apply(this, arguments);\n        };\n        return ax5select;\n    })());\n    SELECT = ax5.ui.select;\n})();\n\nax5.ui.select_instance = new ax5.ui.select();\njQuery.fn.ax5select = (function () {\n    return function (config) {\n        if (ax5.util.isString(arguments[0])) {\n            let methodName = arguments[0];\n\n            switch (methodName) {\n                case \"open\":\n                    return ax5.ui.select_instance.open(this);\n                    break;\n                case \"close\":\n                    return ax5.ui.select_instance.close(this);\n                    break;\n                case \"setValue\":\n                    return ax5.ui.select_instance.val(this, arguments[1], arguments[2]);\n                    break;\n                case \"getValue\":\n                    return ax5.ui.select_instance.val(this);\n                    break;\n                case \"enable\":\n                    return ax5.ui.select_instance.enable(this);\n                    break;\n                case \"disable\":\n                    return ax5.ui.select_instance.disable(this);\n                    break;\n                case \"setOptions\":\n                    return ax5.ui.select_instance.setOptions(this, arguments[1]);\n                    break;\n                default:\n                    return this;\n            }\n        }\n        else {\n            if (typeof config == \"undefined\") config = {};\n            jQuery.each(this, function () {\n                let defaultConfig = {\n                    target: this\n                };\n                config = jQuery.extend({}, config, defaultConfig);\n                ax5.ui.select_instance.bind(config);\n            });\n        }\n        return this;\n    }\n\n})();\n\n\n// muliple 속성이 없는 select의 기본 선택 해제 방법.. 결정 필요..\n// onExpand 가 있으면..?","// ax5.ui.select.tmpl\n(function () {\n\n    var SELECT = ax5.ui.select;\n\n    var optionGroupTmpl = function (columnKeys) {\n        return `\n<div class=\"ax5select-option-group {{theme}} {{size}}\" data-ax5select-option-group=\"{{id}}\">\n    <div class=\"ax-select-body\">\n        <div class=\"ax-select-option-group-content\" data-els=\"content\"></div>\n    </div>\n    <div class=\"ax-select-arrow\"></div> \n</div>\n`;\n    };\n    var tmpl = function (columnKeys) {\n            return `\n<a {{^tabIndex}}href=\"#ax5select-{{id}}\" {{/tabIndex}}{{#tabIndex}}tabindex=\"{{tabIndex}}\" {{/tabIndex}}class=\"form-control {{formSize}} ax5select-display {{theme}}\" \ndata-ax5select-display=\"{{id}}\" data-ax5select-instance=\"{{instanceId}}\">\n    <div class=\"ax5select-display-table\" data-els=\"display-table\">\n        <div data-ax5select-display=\"label\">{{label}}</div>\n        <div data-ax5select-display=\"addon\"> \n            {{#multiple}}{{#reset}}\n            <span class=\"addon-icon-reset\" data-selected-clear=\"true\">{{{.}}}</span>\n            {{/reset}}{{/multiple}}\n            {{#icons}}\n            <span class=\"addon-icon-closed\">{{clesed}}</span>\n            <span class=\"addon-icon-opened\">{{opened}}</span>\n            {{/icons}}\n            {{^icons}}\n            <span class=\"addon-icon-closed\"><span class=\"addon-icon-arrow\"></span></span>\n            <span class=\"addon-icon-opened\"><span class=\"addon-icon-arrow\"></span></span>\n            {{/icons}}\n        </div>\n    </div>\n    <input type=\"text\" tabindex=\"-1\" data-ax5select-display=\"input\" \n    style=\"position:absolute;z-index:0;left:0px;top:0px;font-size:1px;opacity: 0;width:1px;border: 0px none;color : transparent;text-indent: -9999em;\" />\n</a>\n`;\n        };\n    var selectTmpl = function (columnKeys) {\n            return `\n<select tabindex=\"-1\" class=\"form-control {{formSize}}\" name=\"{{name}}\" {{#multiple}}multiple=\"multiple\"{{/multiple}}></select>\n`;\n        };\n    var optionsTmpl = function (columnKeys) {\n            return `\n{{#waitOptions}}\n    <div class=\"ax-select-option-item\">\n            <div class=\"ax-select-option-item-holder\">\n                <span class=\"ax-select-option-item-cell ax-select-option-item-label\">\n                    {{{lang.loading}}}\n                </span>\n            </div>\n        </div>\n{{/waitOptions}}\n{{^waitOptions}}\n    {{#options}}\n        {{#optgroup}}\n            <div class=\"ax-select-option-group\">\n                <div class=\"ax-select-option-item-holder\">\n                    <span class=\"ax-select-option-group-label\">\n                        {{{.}}}\n                    </span>\n                </div>\n                {{#options}}\n                <div class=\"ax-select-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-group-index=\"{{@gindex}}\" data-option-index=\"{{@index}}\" \n                data-option-value=\"{{${columnKeys.optionValue}}}\" \n                {{#${columnKeys.optionSelected}}}data-option-selected=\"true\"{{/${columnKeys.optionSelected}}}>\n                    <div class=\"ax-select-option-item-holder\">\n                        {{#multiple}}\n                        <span class=\"ax-select-option-item-cell ax-select-option-item-checkbox\">\n                            <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\n                        </span>\n                        {{/multiple}}\n                        <span class=\"ax-select-option-item-cell ax-select-option-item-label\">{{{${columnKeys.optionText}}}}</span>\n                    </div>\n                </div>\n                {{/options}}\n            </div>                            \n        {{/optgroup}}\n        {{^optgroup}}\n        <div class=\"ax-select-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-index=\"{{@index}}\" data-option-value=\"{{${columnKeys.optionValue}}}\" {{#${columnKeys.optionSelected}}}data-option-selected=\"true\"{{/${columnKeys.optionSelected}}}>\n            <div class=\"ax-select-option-item-holder\">\n                {{#multiple}}\n                <span class=\"ax-select-option-item-cell ax-select-option-item-checkbox\">\n                    <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\n                </span>\n                {{/multiple}}\n                <span class=\"ax-select-option-item-cell ax-select-option-item-label\">{{{${columnKeys.optionText}}}}</span>\n            </div>\n        </div>\n        {{/optgroup}}\n    {{/options}}\n    {{^options}}\n        <div class=\"ax-select-option-item\">\n            <div class=\"ax-select-option-item-holder\">\n                <span class=\"ax-select-option-item-cell ax-select-option-item-label\">\n                    {{{lang.noOptions}}}\n                </span>\n            </div>\n        </div>\n    {{/options}}\n{{/waitOptions}}\n`;\n        };\n\n    SELECT.tmpl = {\n        \"optionGroupTmpl\": optionGroupTmpl,\n        \"tmpl\": tmpl,\n        \"selectTmpl\": selectTmpl,\n        \"optionsTmpl\": optionsTmpl,\n\n        get: function (tmplName, data, columnKeys) {\n            return jQuery(ax5.mustache.render(SELECT.tmpl[tmplName].call(this, columnKeys), data));\n        }\n    };\n\n})();","/*\n * Copyright (c) 2016. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n// ax5.ui.grid\n(function () {\n\n    const UI = ax5.ui;\n    const U = ax5.util;\n    let GRID;\n\n    UI.addClass({\n        className: \"grid\"\n    }, (function () {\n        /**\n         * @class ax5grid\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```\n         * var myGrid = new ax5.ui.grid();\n         * ```\n         */\n        return function () {\n            let self = this,\n                cfg,\n                ctrlKeys = {\n                    \"33\": \"KEY_PAGEUP\",\n                    \"34\": \"KEY_PAGEDOWN\",\n                    \"35\": \"KEY_END\",\n                    \"36\": \"KEY_HOME\",\n                    \"37\": \"KEY_LEFT\",\n                    \"38\": \"KEY_UP\",\n                    \"39\": \"KEY_RIGHT\",\n                    \"40\": \"KEY_DOWN\"\n                };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                debounceTime: 250,\n                appendDebouncer: null,\n                appendDebounceTimes: 0,\n                appendProgressIcon: '...',\n                appendProgress: false,\n\n                // 틀고정 속성\n                frozenColumnIndex: 0,\n                frozenRowIndex: 0,\n                showLineNumber: false,\n                showRowSelector: false,\n                multipleSelect: true,\n                virtualScrollY: true,\n                virtualScrollX: true,\n                headerSelect: true,\n\n                // 스크롤될 때 body 페인팅 딜레이를 주어 성능이 좋은 않은 브라우저에서 반응을 빠르게 할 때 사용하는 옵션들\n                virtualScrollYCountMargin: 0,\n                virtualScrollAccelerated: true,\n                virtualScrollAcceleratedDelayTime: 10,\n\n                height: 0,\n                columnMinWidth: 100,\n                lineNumberColumnWidth: 30,\n                rowSelectorColumnWidth: 26,\n                sortable: undefined,\n                remoteSort: false,\n\n                header: {\n                    display: true,\n                    align: false,\n                    columnHeight: 26,\n                    columnPadding: 3,\n                    columnBorderWidth: 1,\n                    selector: true\n                },\n                body: {\n                    align: false,\n                    columnHeight: 26,\n                    columnPadding: 3,\n                    columnBorderWidth: 1,\n                    grouping: false,\n                    mergeCells: false\n                },\n                rightSum: false,\n                footSum: false,\n                page: {\n                    height: 25,\n                    display: true,\n                    statusDisplay: true,\n                    navigationItemCount: 5\n                },\n                scroller: {\n                    size: 15,\n                    barMinSize: 15,\n                    trackPadding: 4\n                },\n                columnKeys: {\n                    selected: '__selected__',\n                    modified: '__modified__',\n                    deleted: '__deleted__',\n                    disableSelection: '__disable_selection__'\n                },\n                tree: {\n                    use: false,\n                    hashDigit: 8,\n                    indentWidth: 10,\n                    arrowWidth: 15,\n                    iconWidth: 18,\n                    icons: {\n                        openedArrow: '▾',\n                        collapsedArrow: '▸',\n                        groupIcon: '⊚',\n                        collapsedGroupIcon: '⊚',\n                        itemIcon: '⊙'\n                    },\n                    columnKeys: {\n                        parentKey: \"pid\",\n                        selfKey: \"id\",\n                        collapse: \"collapse\",\n                        hidden: \"hidden\",\n                        parentHash: \"__hp__\",\n                        selfHash: \"__hs__\",\n                        children: \"__children__\",\n                        depth: \"__depth__\",\n                    }\n                }\n            };\n            this.xvar = {\n                bodyTrHeight: 0, // 한줄의 높이\n                scrollContentWidth: 0, // 스크롤 될 내용물의 너비 (스크롤 될 내용물 : panel['body-scroll'] 안에 컬럼이 있는)\n                scrollContentHeight: 0, // 스크롤 된 내용물의 높이\n                scrollTimer: null\n            };\n\n            // 그리드 데이터셋\n            this.columns = []; // config.columns에서 복제된 오브젝트\n            this.colGroup = []; // columns를 table태그로 출력하기 좋게 변환한 오브젝트\n            this.footSumColumns = [];\n            this.bodyGrouping = {};\n\n            this.list = []; // 그리드의 데이터\n            this.proxyList = null; // 그리드 데이터의 대리자\n            this.page = null; // 그리드의 페이지 정보\n            this.selectedDataIndexs = [];\n            this.deletedList = [];\n            this.sortInfo = {}; // 그리드의 헤더 정렬 정보\n            this.focusedColumn = {}; // 그리드 바디의 포커스된 셀 정보\n            this.selectedColumn = {}; // 그리드 바디의 선택된 셀 정보\n            this.isInlineEditing = false;\n            this.inlineEditing = {};\n            this.listIndexMap = {}; // tree데이터 사용시 데이터 인덱싱 맵\n            this.contextMenu = null; // contentMenu 의 인스턴스\n\n            // header\n            this.headerTable = {};\n            this.leftHeaderData = {};\n            this.headerData = {};\n            this.rightHeaderData = {};\n\n            // body\n            this.bodyRowTable = {};\n            this.leftBodyRowData = {};\n            this.bodyRowData = {};\n            this.rightBodyRowData = {};\n            this.bodyRowMap = {};\n\n            this.bodyGroupingTable = {};\n            this.leftBodyGroupingData = {};\n            this.bodyGroupingData = {};\n            this.rightBodyGroupingData = {};\n            this.bodyGroupingMap = {};\n\n            // footSum\n            this.footSumTable = {}; // footSum의 출력레이아웃\n            this.leftFootSumData = {}; // frozenColumnIndex 를 기준으로 나누어진 출력 레이아웃 왼쪽\n            this.footSumData = {}; // frozenColumnIndex 를 기준으로 나누어진 출력 레이아웃 오른쪽\n            this.needToPaintSum = true; // 데이터 셋이 변경되어 summary 변경 필요여부\n\n            cfg = this.config;\n\n            const initGrid = function () {\n                // 그리드 템플릿에 전달하고자 하는 데이터를 정리합시다.\n\n                let data = {\n                    instanceId: this.id\n                };\n\n                this.$target.html(GRID.tmpl.get(\"main\", data));\n\n                // 그리드 패널 프레임의 각 엘리먼트를 캐쉬합시다.\n                this.$ = {\n                    \"container\": {\n                        \"hidden\": this.$target.find('[data-ax5grid-container=\"hidden\"]'),\n                        \"root\": this.$target.find('[data-ax5grid-container=\"root\"]'),\n                        \"header\": this.$target.find('[data-ax5grid-container=\"header\"]'),\n                        \"body\": this.$target.find('[data-ax5grid-container=\"body\"]'),\n                        \"page\": this.$target.find('[data-ax5grid-container=\"page\"]'),\n                        \"scroller\": this.$target.find('[data-ax5grid-container=\"scroller\"]')\n                    },\n                    \"panel\": {\n                        \"aside-header\": this.$target.find('[data-ax5grid-panel=\"aside-header\"]'),\n                        \"left-header\": this.$target.find('[data-ax5grid-panel=\"left-header\"]'),\n                        \"header\": this.$target.find('[data-ax5grid-panel=\"header\"]'),\n                        \"header-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"header\"]'),\n                        \"right-header\": this.$target.find('[data-ax5grid-panel=\"right-header\"]'),\n                        \"top-aside-body\": this.$target.find('[data-ax5grid-panel=\"top-aside-body\"]'),\n                        \"top-left-body\": this.$target.find('[data-ax5grid-panel=\"top-left-body\"]'),\n                        \"top-body\": this.$target.find('[data-ax5grid-panel=\"top-body\"]'),\n                        \"top-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"top-body\"]'),\n                        \"top-right-body\": this.$target.find('[data-ax5grid-panel=\"top-right-body\"]'),\n                        \"aside-body\": this.$target.find('[data-ax5grid-panel=\"aside-body\"]'),\n                        \"aside-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"aside-body\"]'),\n                        \"left-body\": this.$target.find('[data-ax5grid-panel=\"left-body\"]'),\n                        \"left-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"left-body\"]'),\n                        \"body\": this.$target.find('[data-ax5grid-panel=\"body\"]'),\n                        \"body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"body\"]'),\n                        \"right-body\": this.$target.find('[data-ax5grid-panel=\"right-body\"]'),\n                        \"right-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"right-body\"]'),\n                        \"bottom-aside-body\": this.$target.find('[data-ax5grid-panel=\"bottom-aside-body\"]'),\n                        \"bottom-left-body\": this.$target.find('[data-ax5grid-panel=\"bottom-left-body\"]'),\n                        \"bottom-body\": this.$target.find('[data-ax5grid-panel=\"bottom-body\"]'),\n                        \"bottom-body-scroll\": this.$target.find('[data-ax5grid-panel-scroll=\"bottom-body\"]'),\n                        \"bottom-right-body\": this.$target.find('[data-ax5grid-panel=\"bottom-right-body\"]')\n                    },\n                    \"livePanelKeys\": [], // 현재 사용중인 패널들 (grid-body repaint에서 수집하여 처리)\n                    \"scroller\": {\n                        \"vertical\": this.$target.find('[data-ax5grid-scroller=\"vertical\"]'),\n                        \"vertical-bar\": this.$target.find('[data-ax5grid-scroller=\"vertical-bar\"]'),\n                        \"horizontal\": this.$target.find('[data-ax5grid-scroller=\"horizontal\"]'),\n                        \"horizontal-bar\": this.$target.find('[data-ax5grid-scroller=\"horizontal-bar\"]'),\n                        \"corner\": this.$target.find('[data-ax5grid-scroller=\"corner\"]')\n                    },\n                    \"page\": {\n                        \"navigation\": this.$target.find('[data-ax5grid-page=\"navigation\"]'),\n                        \"status\": this.$target.find('[data-ax5grid-page=\"status\"]')\n                    },\n                    \"form\": {\n                        \"clipboard\": this.$target.find('[data-ax5grid-form=\"clipboard\"]')\n                    },\n                    \"resizer\": {\n                        \"vertical\": this.$target.find('[data-ax5grid-resizer=\"vertical\"]'),\n                        \"horizontal\": this.$target.find('[data-ax5grid-resizer=\"horizontal\"]')\n                    }\n                };\n\n                this.$[\"container\"][\"root\"].css({height: this.config.height || this.config._height});\n\n                return this;\n            };\n            const initColumns = function (_columns) {\n                if(!U.isArray(_columns)) _columns = [];\n                this.columns = U.deepCopy(_columns);\n\n                this.headerTable = GRID.util.makeHeaderTable.call(this, this.columns);\n                this.xvar.frozenColumnIndex = cfg.frozenColumnIndex || 0;\n\n                this.bodyRowTable = GRID.util.makeBodyRowTable.call(this, this.columns);\n                this.bodyRowMap = GRID.util.makeBodyRowMap.call(this, this.bodyRowTable);\n                // 바디에 표현될 한줄의 높이를 계산합니다.\n                this.xvar.bodyTrHeight = this.bodyRowTable.rows.length * this.config.body.columnHeight;\n\n                let colGroupMap = {};\n                for (let r = 0, rl = this.headerTable.rows.length; r < rl; r++) {\n                    let row = this.headerTable.rows[r];\n                    for (let c = 0, cl = row.cols.length; c < cl; c++) {\n                        colGroupMap[row.cols[c].colIndex] = jQuery.extend({}, row.cols[c]);\n                    }\n                }\n\n                this.colGroup = [];\n                for (var k in colGroupMap) {\n                    this.colGroup.push(colGroupMap[k]);\n                }\n\n                return this;\n            };\n            const onResetColumns = function () {\n                initColumns.call(this, this.config.columns);\n                resetColGroupWidth.call(this);\n                if (this.config.footSum) {\n                    initFootSum.call(this, this.config.footSum);\n                    this.needToPaintSum = true;\n                }\n                if (this.config.body.grouping) initBodyGroup.call(this, this.config.body.grouping);\n                alignGrid.call(this, true);\n                GRID.header.repaint.call(this, true);\n                GRID.body.repaint.call(this, true);\n                GRID.scroller.resize.call(this);\n            };\n            const resetColGroupWidth = function () {\n                /// !! 그리드 target의 크기가 변경되면 이 함수를 호출하려 this.colGroup의 _width 값을 재 계산 하여야 함. [tom]\n                let CT_WIDTH = this.$[\"container\"][\"root\"].width() - (function () {\n                            let width = 0;\n                            if (cfg.showLineNumber) width += cfg.lineNumberColumnWidth;\n                            if (cfg.showRowSelector) width += cfg.rowSelectorColumnWidth;\n                            width += cfg.scroller.size;\n                            return width;\n                        })(),\n                    totalWidth = 0, computedWidth, autoWidthColgroupIndexs = [],\n                    colGroup = this.colGroup,\n                    i, l;\n\n                for (i = 0, l = colGroup.length; i < l; i++) {\n                    if (U.isNumber(colGroup[i].width)) {\n                        totalWidth += colGroup[i]._width = colGroup[i].width;\n                    } else if (colGroup[i].width === \"*\") {\n                        autoWidthColgroupIndexs.push(i);\n                    } else if (U.right(colGroup[i].width, 1) === \"%\") {\n                        totalWidth += colGroup[i]._width = CT_WIDTH * U.left(colGroup[i].width, \"%\") / 100;\n                    }\n                }\n                if (autoWidthColgroupIndexs.length > 0) {\n                    computedWidth = (CT_WIDTH - totalWidth) / autoWidthColgroupIndexs.length;\n                    for (i = 0, l = autoWidthColgroupIndexs.length; i < l; i++) {\n                        colGroup[autoWidthColgroupIndexs[i]]._width = computedWidth;\n                    }\n                }\n            };\n            const initFootSum = function (_footSum) {\n                if (U.isArray(_footSum)) {\n                    this.footSumTable = GRID.util.makeFootSumTable.call(this, this.footSumColumns = _footSum);\n                } else {\n                    this.footSumColumns = [];\n                    this.footSumTable = {};\n                }\n            };\n            const initBodyGroup = function (_grouping) {\n                let grouping = jQuery.extend({}, _grouping);\n                if (\"by\" in grouping && \"columns\" in grouping) {\n                    this.bodyGrouping = {\n                        by: grouping.by,\n                        columns: grouping.columns\n                    };\n                    this.bodyGroupingTable = GRID.util.makeBodyGroupingTable.call(this, this.bodyGrouping.columns);\n                    this.sortInfo = (function () {\n                        let sortInfo = {};\n                        for (let k = 0, kl = this.bodyGrouping.by.length; k < kl; k++) {\n                            sortInfo[this.bodyGrouping.by[k]] = {\n                                orderBy: \"asc\",\n                                seq: k,\n                                fixed: true\n                            };\n                            for (let c = 0, cl = this.colGroup.length; c < cl; c++) {\n                                if (this.colGroup[c].key === this.bodyGrouping.by[k]) {\n                                    this.colGroup[c].sort = \"asc\";\n                                    this.colGroup[c].sortFixed = true;\n                                }\n                            }\n                        }\n                        return sortInfo;\n                    }).call(this);\n                } else {\n                    cfg.body.grouping = false;\n                }\n            };\n            const alignGrid = function (_isFirst) {\n                let list = (this.proxyList) ? this.proxyList : this.list;\n                // 대상이 크기가 컬럼의 최소 크기 보다 작업 금지\n                if (Math.min(this.$target.innerWidth(), this.$target.innerHeight()) < 5) {\n                    return false;\n                }\n\n                if (!this.config.height) {\n                    this.$[\"container\"][\"root\"].css({height: this.config._height = this.$target.height()});\n                }\n\n                let CT_WIDTH = this.$[\"container\"][\"root\"].width(),\n                    CT_HEIGHT = this.$[\"container\"][\"root\"].height(),\n                    CT_INNER_WIDTH = CT_WIDTH,\n                    CT_INNER_HEIGHT = CT_HEIGHT,\n                    asidePanelWidth = cfg.asidePanelWidth = (function () {\n                        let width = 0;\n                        if (cfg.showLineNumber) width += cfg.lineNumberColumnWidth;\n                        if (cfg.showRowSelector) width += cfg.rowSelectorColumnWidth;\n                        return width;\n                    })(),\n                    frozenPanelWidth = cfg.frozenPanelWidth = (function (colGroup, endIndex) {\n                        let width = 0;\n                        for (let i = 0, l = endIndex; i < l; i++) {\n                            width += colGroup[i]._width;\n                        }\n                        return width;\n                    })(this.colGroup, cfg.frozenColumnIndex),\n                    verticalScrollerWidth, horizontalScrollerHeight, bodyHeight;\n\n                // todo : 우측 함계컬럼 너비 계산\n                let rightPanelWidth = 0,\n                    frozenRowHeight = (function (bodyTrHeight) {\n                        return cfg.frozenRowIndex * bodyTrHeight;\n                    })(this.xvar.bodyTrHeight),\n                    footSumHeight = (function (bodyTrHeight) {\n                        return this.footSumColumns.length * bodyTrHeight;\n                    }).call(this, this.xvar.bodyTrHeight),\n                    headerHeight = (cfg.header.display) ? this.headerTable.rows.length * cfg.header.columnHeight : 0,\n                    pageHeight = (cfg.page.display) ? cfg.page.height : 0;\n\n                (function () {\n                    verticalScrollerWidth = ((CT_HEIGHT - headerHeight - pageHeight - footSumHeight) < list.length * this.xvar.bodyTrHeight) ? this.config.scroller.size : 0;\n                    // 남은 너비가 colGroup의 너비보다 넓을때. 수평 스크롤 활성화.\n                    horizontalScrollerHeight = (function () {\n                        let totalColGroupWidth = 0;\n                        // aside 빼고 너비\n                        // 수직 스크롤이 있으면 또 빼고 비교\n                        let bodyWidth = CT_WIDTH - asidePanelWidth - verticalScrollerWidth;\n                        for (let i = 0, l = this.colGroup.length; i < l; i++) {\n                            totalColGroupWidth += this.colGroup[i]._width;\n                        }\n                        return (totalColGroupWidth > bodyWidth) ? this.config.scroller.size : 0;\n                    }).call(this);\n\n                    if (horizontalScrollerHeight > 0) {\n                        verticalScrollerWidth = ((CT_HEIGHT - headerHeight - pageHeight - footSumHeight - horizontalScrollerHeight) < list.length * this.xvar.bodyTrHeight) ? this.config.scroller.size : 0;\n                    }\n                }).call(this);\n\n                // 수평 너비 결정\n                CT_INNER_WIDTH = CT_WIDTH - verticalScrollerWidth;\n                // 수직 스크롤러의 높이 결정.\n                CT_INNER_HEIGHT = CT_HEIGHT - pageHeight - horizontalScrollerHeight;\n\n                bodyHeight = CT_INNER_HEIGHT - headerHeight;\n\n                let panelDisplayProcess = function (panel, vPosition, hPosition, containerType) {\n                    let css = {},\n                        isHide = false;\n\n                    switch (hPosition) {\n                        case \"aside\":\n                            if (asidePanelWidth === 0) {\n                                isHide = true;\n                            } else {\n                                css[\"left\"] = 0;\n                                css[\"width\"] = asidePanelWidth;\n                            }\n                            break;\n                        case \"left\":\n                            if (cfg.frozenColumnIndex === 0) {\n                                isHide = true;\n                            } else {\n                                css[\"left\"] = asidePanelWidth;\n                                css[\"width\"] = frozenPanelWidth;\n                            }\n                            break;\n                        case \"right\":\n                            if (!cfg.rightSum) {\n                                isHide = true;\n                            } else {\n\n                            }\n                            break;\n                        default:\n                            if (containerType !== \"page\") {\n                                if (cfg.frozenColumnIndex === 0) {\n                                    css[\"left\"] = asidePanelWidth;\n                                } else {\n                                    css[\"left\"] = frozenPanelWidth + asidePanelWidth;\n                                }\n                                css[\"width\"] = CT_INNER_WIDTH - asidePanelWidth - frozenPanelWidth - rightPanelWidth;\n                            }\n                            break;\n                    }\n\n                    if (isHide) {\n                        panel.hide();\n                        // 프로세스 중지\n                        return this;\n                    }\n\n                    if (containerType === \"body\") {\n                        switch (vPosition) {\n                            case \"top\":\n                                if (cfg.frozenRowIndex == 0) {\n                                    isHide = true;\n                                } else {\n                                    css[\"top\"] = 0;\n                                    css[\"height\"] = frozenRowHeight;\n                                }\n                                break;\n                            case \"bottom\":\n                                if (!cfg.footSum) {\n                                    isHide = true;\n                                } else {\n                                    css[\"top\"] = bodyHeight - footSumHeight;\n                                    css[\"height\"] = footSumHeight; // footSum height\n                                }\n                                break;\n                            default:\n                                css[\"top\"] = frozenRowHeight;\n                                css[\"height\"] = bodyHeight - frozenRowHeight - footSumHeight;\n\n                                break;\n                        }\n                    } else if (containerType === \"header\") {\n                        css[\"height\"] = headerHeight;\n                    } else if (containerType === \"page\") {\n                        if (pageHeight == 0) {\n                            isHide = true;\n                        } else {\n                            css[\"height\"] = pageHeight;\n\n                        }\n                    }\n\n                    if (isHide) {\n                        panel.hide();\n                        // 프로세스 중지\n                        return this;\n                    }\n\n                    panel.show().css(css);\n                    return this;\n                };\n                let scrollerDisplayProcess = function (panel, scrollerWidth, scrollerHeight, containerType) {\n                    let css = {},\n                        isHide = false;\n\n                    switch (containerType) {\n                        case \"vertical\":\n                            if (scrollerWidth > 0) {\n                                css[\"width\"] = scrollerWidth;\n                                css[\"height\"] = CT_INNER_HEIGHT;\n                                css[\"bottom\"] = scrollerHeight + pageHeight;\n                            } else {\n                                isHide = true;\n                            }\n                            break;\n                        case \"horizontal\":\n                            if (scrollerHeight > 0) {\n                                css[\"width\"] = CT_INNER_WIDTH;\n                                css[\"height\"] = scrollerHeight;\n                                css[\"right\"] = scrollerWidth;\n                                css[\"bottom\"] = pageHeight;\n                            } else {\n                                isHide = true;\n                            }\n                            break;\n                        case \"corner\":\n                            if (scrollerWidth > 0 && scrollerHeight > 0) {\n                                css[\"width\"] = scrollerWidth;\n                                css[\"height\"] = scrollerHeight;\n                                css[\"bottom\"] = pageHeight;\n                            } else {\n                                isHide = true;\n                            }\n                            break;\n                    }\n\n                    if (isHide) {\n                        panel.hide();\n                        // 프로세스 중지\n                        return this;\n                    }\n\n                    panel.show().css(css);\n                };\n\n                this.$[\"container\"][\"header\"].css({height: headerHeight});\n                this.$[\"container\"][\"body\"].css({height: bodyHeight});\n\n                // 각 패널들의 크기 표시여부를 결정합니다\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"aside-header\"], \"\", \"aside\", \"header\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"left-header\"], \"\", \"left\", \"header\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"header\"], \"\", \"\", \"header\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"right-header\"], \"\", \"right\", \"header\");\n\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"top-aside-body\"], \"top\", \"aside\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"top-left-body\"], \"top\", \"left\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"top-body\"], \"top\", \"\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"top-right-body\"], \"top\", \"right\", \"body\");\n\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"aside-body\"], \"\", \"aside\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"left-body\"], \"\", \"left\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"body\"], \"\", \"\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"right-body\"], \"\", \"right\", \"body\");\n\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-aside-body\"], \"bottom\", \"aside\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-left-body\"], \"bottom\", \"left\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-body\"], \"bottom\", \"\", \"body\");\n                panelDisplayProcess.call(this, this.$[\"panel\"][\"bottom-right-body\"], \"bottom\", \"right\", \"body\");\n\n\n                scrollerDisplayProcess.call(this, this.$[\"scroller\"][\"vertical\"], verticalScrollerWidth, horizontalScrollerHeight, \"vertical\");\n                scrollerDisplayProcess.call(this, this.$[\"scroller\"][\"horizontal\"], verticalScrollerWidth, horizontalScrollerHeight, \"horizontal\");\n                scrollerDisplayProcess.call(this, this.$[\"scroller\"][\"corner\"], verticalScrollerWidth, horizontalScrollerHeight, \"corner\");\n\n                panelDisplayProcess.call(this, this.$[\"container\"][\"page\"], \"\", \"\", \"page\");\n\n                // 각 패널의 사이즈 결정\n                /// 다른 패널의 사이즈 정보가 필요한 경우 여기서 정의해주고 사용함.\n                this.xvar.bodyHeight = this.$.panel[\"body\"].height();\n                this.xvar.bodyWidth = this.$.panel[\"body\"].width();\n                // scrollContentWidth 는 grid-header repaint에서 결정합니다. 까먹지 맙시다. > this.xvar.scrollContentWidth\n\n                return true;\n            };\n            const sortColumns = function (_sortInfo) {\n                GRID.header.repaint.call(this);\n\n                if (U.isFunction(this.config.remoteSort)) {\n                    let that = {sortInfo: []};\n                    for (let k in _sortInfo) {\n                        that.sortInfo.push({\n                            key: k,\n                            orderBy: _sortInfo[k].orderBy,\n                            seq: _sortInfo[k].seq\n                        });\n                    }\n                    that.sortInfo.sort(function (a, b) {\n                        return a.seq > b.seq;\n                    });\n                    this.config.remoteSort.call(that, that);\n                } else {\n                    if (this.config.body.grouping) {\n                        this.list = GRID.data.initData.call(this,\n                            GRID.data.sort.call(this,\n                                _sortInfo,\n                                GRID.data.clearGroupingData.call(this,\n                                    this.list\n                                )\n                            )\n                        );\n                    }\n                    else {\n                        this.list = GRID.data.sort.call(this, _sortInfo,\n                            GRID.data.clearGroupingData.call(this,\n                                this.list\n                            ),\n                            {resetLineNumber: true}\n                        );\n                    }\n                    GRID.body.repaint.call(this, true);\n                    GRID.scroller.resize.call(this);\n                }\n            };\n            /// private end\n\n            /**\n            /**\n             * Preferences of grid UI\n             * @method ax5grid.setConfig\n             * @param {Object} _config - 클래스 속성값\n             * @param {Element} _config.target\n             * @param {Number} [_config.frozenColumnIndex=0]\n             * @param {Number} [_config.frozenRowIndex=0]\n             * @param {Boolean} [_config.showLineNumber=false]\n             * @param {Boolean} [_config.showRowSelector=false]\n             * @param {Boolean} [_config.multipleSelect=true]\n             * @param {Number} [_config.columnMinWidth=100]\n             * @param {Number} [_config.lineNumberColumnWidth=30]\n             * @param {Number} [_config.rowSelectorColumnWidth=25]\n             * @param {Boolean} [_config.sortable=false]\n             * @param {Boolean} [_config.multiSort=false]\n             * @param {Function} [_config.remoteSort=false]\n             * @param {Boolean} [_config.virtualScrollY=true] - 세로축 가상스크롤 처리여부\n             * @param {Boolean} [_config.virtualScrollX=true] - 가로축 가상스크롤 처리여부\n             * @param {Object} [_config.header]\n             * @param {Object} [_config.header.selector=true] - 헤더 checkbox 표시여부\n             * @param {String} [_config.header.align]\n             * @param {Number} [_config.header.columnHeight=25]\n             * @param {Number} [_config.header.columnPadding=3]\n             * @param {Number} [_config.header.columnBorderWidth=1]\n             * @param {Object} [_config.body]\n             * @param {Function} [_config.body.onClick]\n             * @param {Function} [_config.body.onDBLClick]\n             * @param {Function} [_config.body.onDataChanged]\n             * @param {String|Array} [_config.body.mergeCells=false] -\n             * @param {String} [_config.body.align]\n             * @param {Number} [_config.body.columnHeight=25]\n             * @param {Number} [_config.body.columnPadding=3]\n             * @param {Number} [_config.body.columnBorderWidth=1]\n             * @param {Object} [_config.body.grouping]\n             * @param {Array} [_config.body.grouping.by] - list grouping keys\n             * @param {Array} [_config.body.grouping.columns] - list grouping columns\n             * @param {(String|Function)} [_config.body.trStyleClass]\n             *\n             * @param {Object} [_config.page]\n             * @param {Number} [_config.page.height=25]\n             * @param {Boolean} [_config.page.display=true] - grid page display\n             * @param {Boolean} [_config.page.statusDisplay=true] - grid status display\n             * @param {Number} [_config.page.navigationItemCount=5]\n             * @param {Object} [_config.scroller]\n             * @param {Number} [_config.scroller.size=15]\n             * @param {Number} [_config.scroller.barMinSize=15]\n             * @param {Number} [_config.scroller.trackPadding=4]\n             * @param {Object} [_config.columnKeys]\n             * @param {String} [_config.columnKeys.selected=\"_SELECTED\"]\n             * @param {Object[]} _config.columns\n             * @param {String} _config.columns[].key\n             * @param {String} _config.columns[].label\n             * @param {Number} _config.columns[].width\n             * @param {(String|Function)} _config.columns[].styleClass\n             * @param {(String|Function)} _config.columns[].headerStyleClass\n             * @param {Boolean} _config.columns[].enableFilter\n             * @param {Boolean} _config.columns[].sortable\n             * @param {String} _config.columns[].align\n             * @param {(String|Function)} _config.columns[].formatter\n             * @param {Object} _config.columns[].editor\n             * @param {String} _config.columns[].editor.type - text,number,money,date\n             * @param {Object} _config.columns[].editor.config\n             * @param {Array} _config.columns[].editor.updateWith\n             * @param {Function} _config.columns[].editor.disabled - disable editor\n             * @param {Boolean} [_config.columns[].multiLine=false]\n             * @param {Object} [_config.tree]\n             * @param {Boolean} [_config.tree.use=false] - Whether tree-type data is used\n             * @param {Number} [_config.tree.hashDigit=8]\n             * @param {Number} [_config.tree.indentWidth=10]\n             * @param {Number} [_config.tree.arrowWidth=15]\n             * @param {Number} [_config.tree.iconWidth=18]\n             * @param {Object} [_config.tree.icons]\n             * @param {String} [_config.tree.icons.openedArrow='▾']\n             * @param {String} [_config.tree.icons.collapsedArrow='▸']\n             * @param {String} [_config.tree.icons.groupIcon='⊚']\n             * @param {String} [_config.tree.icons.collapsedGroupIcon='⊚']\n             * @param {String} [_config.tree.icons.itemIcon='⊙']\n             * @param {Object} [_config.tree.columnKeys]\n             * @param {String} [_config.tree.columnKeys.parentKey=\"pid\"]\n             * @param {String} [_config.tree.columnKeys.selfKey=\"id\"]\n             * @param {String} [_config.tree.columnKeys.collapse=\"collapse\"]\n             * @param {String} [_config.tree.columnKeys.hidden=\"hidden\"]\n             * @param {String} [_config.tree.columnKeys.parentHash=\"__hp__\"]\n             * @param {String} [_config.tree.columnKeys.selfHash=\"__hs__\"]\n             * @param {String} [_config.tree.columnKeys.children=\"__children__\"]\n             * @param {String} [_config.tree.columnKeys.depth=\"__depth__\"]\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * var firstGrid = new ax5.ui.grid();\n             *\n             * ax5.ui.grid.formatter[\"myType\"] = function () {\n             *     return \"myType\" + (this.value || \"\");\n             * };\n             * ax5.ui.grid.formatter[\"capital\"] = function(){\n             *     return (''+this.value).toUpperCase();\n             * };\n             *\n             * ax5.ui.grid.collector[\"myType\"] = function () {\n             *     return \"myType\" + (this.value || \"\");\n             * };\n             *\n             * var sampleData = [\n             *     {a: \"A\", b: \"A01\", price: 1000, amount: 12, cost: 12000, saleDt: \"2016-08-29\", customer: \"장기영\", saleType: \"A\"},\n             *     {companyJson: {\"대표자명\":\"abcd\"}, a: \"A\", b: \"B01\", price: 1100, amount: 11, cost: 12100, saleDt: \"2016-08-28\", customer: \"장서우\", saleType: \"B\"},\n             *     {companyJson: {\"대표자명\":\"abcd\"}, a: \"A\", b: \"C01\", price: 1200, amount: 10, cost: 12000, saleDt: \"2016-08-27\", customer: \"이영희\", saleType: \"A\"},\n             *     {companyJson: {\"대표자명\":\"위세라\"}, a: \"A\", b: \"A01\", price: 1300, amount: 8, cost: 10400, saleDt: \"2016-08-25\", customer: \"황인서\", saleType: \"C\"},\n             *     {companyJson: {\"대표자명\":\"abcd\"}, a: \"A\", b: \"B01\", price: 1400, amount: 5, cost: 7000, saleDt: \"2016-08-29\", customer: \"황세진\", saleType: \"D\"},\n             *     {companyJson: {\"대표자명\":\"abcd\"}, a: \"A\", b: \"A01\", price: 1500, amount: 2, cost: 3000, saleDt: \"2016-08-26\", customer: \"이서연\", saleType: \"A\"}\n             * ];\n             *\n             * var gridView = {\n             *     initView: function () {\n             *         firstGrid.setConfig({\n             *             target: $('[data-ax5grid=\"first-grid\"]'),\n             *             columns: [\n             *                 {\n             *                     key: \"companyJson['대표자명']\",\n             *                     label: \"필드A\",\n             *                     width: 80,\n             *                     styleClass: function () {\n             *                         return \"ABC\";\n             *                     },\n             *                     enableFilter: true,\n             *                     align: \"center\",\n             *                     editor: {type:\"text\"}\n             *                 },\n             *                 {key: \"b\", label: \"필드B\", align: \"center\"},\n             *                 {\n             *                     key: undefined, label: \"필드C\", columns: [\n             *                         {key: \"price\", label: \"단가\", formatter: \"money\", align: \"right\"},\n             *                         {key: \"amount\", label: \"수량\", formatter: \"money\", align: \"right\"},\n             *                         {key: \"cost\", label: \"금액\", align: \"right\", formatter: \"money\"}\n             *                     ]\n             *                 },\n             *                 {key: \"saleDt\", label: \"판매일자\", align: \"center\"},\n             *                 {key: \"customer\", label: \"고객명\"},\n             *                 {key: \"saleType\", label: \"판매타입\"}\n             *             ]\n             *         });\n             *         return this;\n             *     },\n             *     setData: function (_pageNo) {\n             *         firstGrid.setData(sampleData);\n             *         return this;\n             *     }\n             * };\n             *\n             * // onClick, onDBLClick, onDataChanged\n             * firstGrid.setConfig({\n             *      target: $('[data-ax5grid=\"first-grid\"]'),\n             *      columns: [...],\n             *      body: {\n             *          onClick: function(){\n             *              console.log(this);\n             *          },\n             *          onDBLClick: function(){\n             *              console.log(this);\n             *              // If the column does not have an editor attribute, an event is raised.\n             *          },\n             *          onDataChanged: function(){\n             *              console.log(this);\n             *              // If change Data\n             *          }\n             *      }\n             * });\n             * ```\n             */\n            this.init = function (_config) {\n                cfg = jQuery.extend(true, {}, cfg, _config);\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5grid\", \"401\", \"init\"));\n                    return this;\n                }\n\n                // 그리드의 이벤트 정의 구간\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                //this.onDblClick = cfg.onDblClick;\n                this.onLoad = cfg.onLoad;\n                this.onDataChanged = cfg.body.onDataChanged;\n                // todo event에 대한 추가 정의 필요\n\n                this.$target = jQuery(cfg.target);\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        cfg = jQuery.extend(true, cfg, data);\n                    }\n                }).call(this, U.parseJson(this.$target.attr(\"data-ax5grid-config\"), true));\n\n                let grid = this.config = cfg;\n\n                if (!this.config.height) {\n                    this.config._height = this.$target.height();\n                }\n\n                if (!this.id) this.id = this.$target.data(\"data-ax5grid-id\");\n                if (!this.id) {\n                    //this.id = 'ax5grid-' + ax5.getGuid();\n                    this.id = 'ax5grid-' + this.instanceId;\n                    this.$target.data(\"data-ax5grid-id\", grid.id);\n                }\n\n\n                GRID.data.init.call(this);\n\n                if (this.config.tree.use) { // 트리라면\n                    this.sortInfo = {};\n                    this.sortInfo[this.config.tree.columnKeys.selfHash] = {orderBy: \"asc\", seq: 0, fixed: true};\n                }\n\n                ///========\n                // 그리드를 그리기 위한 가장 기초적인 작업 뼈대와 틀을 준비합니다. 이 메소드는 초기화 시 한번만 호출 되게 됩니다.\n                initGrid.call(this);\n\n                // columns데이터를 분석하여 미리 처리해야하는 데이터를 정리합니다.\n                initColumns.call(this, grid.columns);\n                resetColGroupWidth.call(this);\n\n                // footSum 데이터를 분석하여 미리 처리해야 하는 데이터를 정리\n                if (grid.footSum) initFootSum.call(this, grid.footSum);\n\n                // bodyGrouping 데이터를 분석하여 미리 처리해야 하는 데이터를 정리\n                if (grid.body.grouping) initBodyGroup.call(this, grid.body.grouping);\n\n                // 그리드의 각 요소의 크기를 맞춤니다.\n                alignGrid.call(this, true);\n\n                // columns의 데이터로 header데이터를 만들고\n                GRID.header.init.call(this);\n                // header를 출력합니다.\n                GRID.header.repaint.call(this);\n\n                // columns의 데이터로 body데이터를 만들고\n                GRID.body.init.call(this);\n                // body를 출력합니다.\n                GRID.body.repaint.call(this);\n\n                // scroller\n                GRID.scroller.init.call(this);\n                GRID.scroller.resize.call(this);\n\n                jQuery(window).bind(\"resize.ax5grid-\" + this.id, function () {\n                    alignGrid.call(self);\n                    GRID.scroller.resize.call(self);\n                    GRID.body.repaint.call(self);  // window resize시 repaint 함수 호출\n                });\n\n                jQuery(document.body).on(\"click.ax5grid-\" + this.id, (function (e) {\n                    let isPickerClick = false,\n                        target = U.findParentNode(e.target, function (_target) {\n                            if (isPickerClick = _target.getAttribute(\"data-ax5grid-inline-edit-picker\")) {\n                                return true;\n                            }\n                            return _target.getAttribute(\"data-ax5grid-container\") === \"root\";\n                        });\n\n                    if (target && target.getAttribute(\"data-ax5grid-instance\") === this.id) {\n                        self.focused = true;\n                    } else {\n                        self.focused = false;\n                        GRID.body.blur.call(this);\n                    }\n                }).bind(this));\n\n                jQuery(window).on(\"keydown.ax5grid-\" + this.instanceId, function (e) {\n                    if (self.focused) {\n                        if (self.isInlineEditing) {\n\n                            if (e.which == ax5.info.eventKeys.ESC) {\n                                self.keyDown(\"ESC\", e.originalEvent);\n                            }\n                            else if (e.which == ax5.info.eventKeys.RETURN) {\n                                self.keyDown(\"RETURN\", e.originalEvent);\n                            }\n                            else if (e.which == ax5.info.eventKeys.TAB) {\n                                self.keyDown(\"TAB\", e.originalEvent);\n                                U.stopEvent(e);\n                            }\n                            else if (e.which == ax5.info.eventKeys.UP) {\n                                self.keyDown(\"RETURN\", {shiftKey: true});\n                            }\n                            else if (e.which == ax5.info.eventKeys.DOWN) {\n                                self.keyDown(\"RETURN\", {});\n                            }\n\n                        }\n                        else {\n\n                            if (e.metaKey || e.ctrlKey) {\n                                if (e.which == 67) { // c\n                                    self.copySelect();\n                                }\n                            } else {\n                                if (ctrlKeys[e.which]) {\n                                    self.keyDown(ctrlKeys[e.which], e.originalEvent); // 키다운 이벤트 호출\n                                    U.stopEvent(e);\n                                } else if (e.which == ax5.info.eventKeys.ESC) {\n                                    if (self.focused) {\n                                        GRID.body.blur.call(self);\n                                    }\n                                } else if (e.which == ax5.info.eventKeys.RETURN || e.which == ax5.info.eventKeys.SPACE) {\n                                    self.keyDown(\"RETURN\", e.originalEvent);\n                                } else if (e.which == ax5.info.eventKeys.TAB) {\n                                    //self.keyDown(\"RETURN\", e.originalEvent);\n                                    U.stopEvent(e);\n                                } else if (Object.keys(self.focusedColumn).length) {\n                                    /*\n                                    self.keyDown(\"INLINE_EDIT\", e.originalEvent);\n                                    */\n                                }\n                            }\n                        }\n                    }\n                });\n\n                jQuery(window).on(\"keyup.ax5grid-\" + this.instanceId, function (e) {\n                    if (self.focused) {\n                        if (self.isInlineEditing) {\n\n                        }\n                        else {\n                            if (e.metaKey || e.ctrlKey) {\n\n                            } else {\n                                if (ctrlKeys[e.which]) {\n\n                                } else if (e.which == ax5.info.eventKeys.ESC) {\n\n                                } else if (e.which == ax5.info.eventKeys.RETURN || e.which == ax5.info.eventKeys.SPACE) {\n\n                                } else if (e.which == ax5.info.eventKeys.TAB) {\n\n                                } else if (Object.keys(self.focusedColumn).length) {\n                                    self.keyDown(\"INLINE_EDIT\", e.originalEvent);\n                                }\n                            }\n                        }\n                    }\n                });\n\n                // 그리드 레이아웃이 모든 준비를 마친시점에 onLoad존재 여부를 확인하고 호출하여 줍니다.\n                setTimeout((function () {\n                    if (this.onLoad) {\n                        this.onLoad.call({\n                            self: this\n                        });\n                    }\n                }).bind(this));\n                return this;\n            };\n\n            /**\n             * align grid size\n             * @method ax5grid.align\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.repaint();\n             * ```\n             */\n            this.align = function () {\n                if (alignGrid.call(this)) {\n                    GRID.body.repaint.call(this);\n                    GRID.scroller.resize.call(this);\n                }\n                return this;\n            };\n\n            /**\n             * repaint grid\n             * @method ax5grid.repaint\n             * @return {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.repaint();\n             * ```\n             */\n            this.repaint = function () {\n                GRID.header.repaint.call(this);\n                GRID.body.repaint.call(this, true); // 강제로 다시 그리기\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.keyDown\n             * @param {String} _keyName\n             * @param {Event|Object} _data\n             * @return {ax5grid}\n             */\n            this.keyDown = (function () {\n                let processor = {\n                    \"KEY_UP\": function () {\n                        GRID.body.moveFocus.call(this, \"UP\");\n                    },\n                    \"KEY_DOWN\": function () {\n                        GRID.body.moveFocus.call(this, \"DOWN\");\n                    },\n                    \"KEY_LEFT\": function () {\n                        GRID.body.moveFocus.call(this, \"LEFT\");\n                    },\n                    \"KEY_RIGHT\": function () {\n                        GRID.body.moveFocus.call(this, \"RIGHT\");\n                    },\n                    \"KEY_HOME\": function () {\n                        GRID.body.moveFocus.call(this, \"HOME\");\n                    },\n                    \"KEY_END\": function () {\n                        GRID.body.moveFocus.call(this, \"END\");\n                    },\n                    \"INLINE_EDIT\": function (_e) {\n                        GRID.body.inlineEdit.active.call(this, this.focusedColumn, _e);\n                        if (!/[0-9a-zA-Z]/.test(_e.key)) {\n                            U.stopEvent(_e);\n                        }\n                    },\n                    \"ESC\": function (_e) {\n                        GRID.body.inlineEdit.keydown.call(this, \"ESC\");\n                    },\n                    \"RETURN\": function (_e) {\n                        var activeEditLength = 0;\n                        for (var columnKey in this.inlineEditing) {\n                            activeEditLength++;\n\n                            if(!GRID.body.inlineEdit.keydown.call(this, \"RETURN\", columnKey)){\n                                return false;\n                                U.stopEvent(_e);\n                            }\n                            // next focus\n                            if (activeEditLength == 1) {\n                                if (GRID.body.moveFocus.call(this, (_e.shiftKey) ? \"UP\" : \"DOWN\")) {\n                                    GRID.body.inlineEdit.keydown.call(this, \"RETURN\");\n                                }\n                            }\n                        }\n                        if (activeEditLength == 0) {\n                            GRID.body.inlineEdit.keydown.call(this, \"RETURN\");\n                            U.stopEvent(_e);\n                        } else {\n\n                        }\n                    },\n                    \"TAB\": function (_e) {\n\n                        var activeEditLength = 0;\n                        for (var columnKey in this.inlineEditing) {\n                            activeEditLength++;\n\n                            GRID.body.inlineEdit.keydown.call(this, \"RETURN\", columnKey, {moveFocus: true});\n                            // next focus\n                            if (activeEditLength == 1) {\n                                if (GRID.body.moveFocus.call(this, (_e.shiftKey) ? \"LEFT\" : \"RIGHT\")) {\n                                    GRID.body.inlineEdit.keydown.call(this, \"RETURN\", undefined, {moveFocus: true});\n                                }\n                            }\n                        }\n                    }\n                };\n                return function (_act, _data) {\n                    if (_act in processor) processor[_act].call(this, _data);\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5grid.copySelect\n             * @returns {Boolean} copysuccess\n             */\n            this.copySelect = function () {\n                let copysuccess,\n                    $clipBoard = this.$[\"form\"][\"clipboard\"],\n                    copyTextArray = [], copyText = \"\",\n                    _rowIndex, _colIndex, _dindex, _di = 0;\n\n\n                for (let c in this.selectedColumn) {\n                    let _column = this.selectedColumn[c];\n\n                    if (_column) {\n                        if (typeof _dindex === \"undefined\") {\n                            _dindex = _column.dindex;\n                            _rowIndex = _column.rowIndex;\n                            _colIndex = _column.rowIndex;\n                        }\n\n                        if (_dindex != _column.dindex || _rowIndex != _column.rowIndex) {\n                            _di++;\n                        }\n\n                        if (!copyTextArray[_di]) {\n                            copyTextArray[_di] = [];\n                        }\n                        let originalColumn = this.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex];\n                        if (originalColumn) {\n                            if (this.list[_column.dindex].__isGrouping) {\n                                copyTextArray[_di].push(this.list[_column.dindex][_column.colIndex]);\n                            } else {\n                                copyTextArray[_di].push(this.list[_column.dindex][originalColumn.key]);\n                            }\n                        } else {\n                            copyTextArray[_di].push(\"\");\n                        }\n\n                        _dindex = _column.dindex;\n                        _rowIndex = _column.rowIndex;\n                    }\n                }\n\n                copyTextArray.forEach(function (r) {\n                    copyText += r.join('\\t') + \"\\n\";\n                });\n\n                $clipBoard.get(0).value = copyText;\n                $clipBoard.select();\n\n                try {\n                    copysuccess = document.execCommand(\"copy\");\n                } catch (e) {\n                    copysuccess = false;\n                }\n                return copysuccess;\n            };\n\n            /**\n             * @method ax5grid.setData\n             * @param {Array} _data\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.setData({\n             *  list: [],\n             *  page: {\n             *      currentPage: 0,\n             *      pageSize: 50,\n             *      totalElements: 500,\n             *      totalPages: 100\n             *  }\n             * });\n             *\n             * // onlyList\n             * ax5Grid.setData([]);\n             * ```\n             */\n            this.setData = function (_data) {\n                let isFirstPaint = (typeof this.xvar.paintStartRowIndex === \"undefined\");\n\n                GRID.data.set.call(this, _data);\n                GRID.body.repaint.call(this);\n                if (!isFirstPaint) GRID.body.scrollTo.call(this, {top: 0});\n\n                // 가로/세로 스크롤바 show/hide 처리\n                alignGrid.call(this);\n                // 가로세로 스크롤바의 크기 재 계산.\n                GRID.scroller.resize.call(this);\n                GRID.page.navigationUpdate.call(this);\n\n                isFirstPaint = null;\n                return this;\n            };\n\n            /**\n             * @method ax5grid.getList\n             * @param {String} _type - selected|modified|deleted\n             * @returns {Array}\n             * @example\n             * ```js\n             * ax5Grid.getList();\n             * ax5Grid.getList(\"selected\");\n             * ax5Grid.getList(\"modified\");\n             * ax5Grid.getList(\"deleted\");\n             * ```\n             */\n            this.getList = function (_type) {\n                return GRID.data.getList.call(this, _type);\n            };\n\n            /**\n             * @method ax5grid.setHeight\n             * @param {Number} _height\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.setHeight(height);\n             * ```\n             */\n            this.setHeight = function (_height) {\n                //console.log(this.$target);\n                if (_height == \"100%\") {\n                    _height = this.$target.offsetParent().innerHeight();\n                }\n                this.$target.css({height: _height});\n                this.$[\"container\"][\"root\"].css({height: _height});\n                alignGrid.call(this);\n                GRID.body.repaint.call(this, \"reset\");\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.addRow\n             * @param {Object} _row\n             * @param {Number|String} [_dindex=last]\n             * @param {Object} [_options] - options of addRow\n             * @param {Boolean} [_options.sort] - sortData\n             * @param {Number|String} [_options.focus] - HOME|END|[dindex]\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.addRow($.extend({}, {...}), \"first\");\n             * ax5Grid.addRow($.extend({}, {...}), \"last\", {focus: \"END\"});\n             * ax5Grid.addRow($.extend({}, {...}), \"last\", {focus: \"HOME\"});\n             * ax5Grid.addRow($.extend({}, {...}), \"last\", {focus: 10});\n             * ```\n             */\n            this.addRow = function (_row, _dindex, _options) {\n                GRID.data.add.call(this, _row, _dindex, _options);\n                alignGrid.call(this);\n                GRID.body.repaint.call(this, \"reset\");\n\n                if(_options && _options.focus) {\n                    //GRID.body.moveFocus.call(this, (this.config.body.grouping) ? \"START\" : \"END\");\n                    setTimeout(() => {\n                        GRID.body.moveFocus.call(this, _options.focus);\n                    }, 1);\n                }else{\n                    GRID.scroller.resize.call(this);\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5grid.appendToList\n             * @param _list\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.appendToList([{},{},{}]);\n             * ax5Grid.appendToList([{},{},{}]);\n             * ```\n             */\n            this.appendToList = function (_list) {\n                GRID.data.append.call(this, _list, (function () {\n                    alignGrid.call(this);\n                    GRID.body.repaint.call(this);\n                    GRID.scroller.resize.call(this);\n                }).bind(this));\n                return this;\n            };\n\n            /**\n             * @method ax5grid.removeRow\n             * @param {Number|String} [_dindex=last]\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.removeRow();\n             * ax5Grid.removeRow(\"first\");\n             * ax5Grid.removeRow(\"last\");\n             * ax5Grid.removeRow(1);\n             * ax5Grid.removeRow(\"selected\");\n             * ```\n             */\n            this.removeRow = function (_dindex) {\n                GRID.data.remove.call(this, _dindex);\n                alignGrid.call(this);\n                GRID.body.repaint.call(this, \"reset\");\n                GRID.body.moveFocus.call(this, (this.config.body.grouping) ? \"START\" : \"END\");\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.updateRow\n             * @param {Object} _row\n             * @param {Number} _dindex\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.updateRow({price: 100, amount: 100, cost: 10000}, 1);\n             * ```\n             */\n            this.updateRow = function (_row, _dindex) {\n                GRID.data.update.call(this, _row, _dindex);\n                // todo : mergeCells 옵션에 따라 예외처리\n\n                GRID.body.repaintRow.call(this, _dindex);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.updateChildRows\n             * @param {Number} _dindex\n             * @param {Object} _updateData\n             * @param {Object} [_options]\n             * @param {Function} [_options.filter]\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * onDataChanged: function () {\n             *      this.self.updateChildRows(this.dindex, {isChecked: this.item.isChecked});\n             * }\n             *\n             * onDataChanged: function () {\n             *      this.self.updateChildRows(this.dindex, {isChecked: this.item.isChecked}, {filter: function(){\n             *          return this.item.type == \"A\";\n             *      });\n             * }\n             * ```\n             */\n            this.updateChildRows = function (_dindex, _updateData, _options) {\n                GRID.data.updateChild.call(this, _dindex, _updateData, _options);\n                this.xvar.paintStartRowIndex = undefined;\n                this.xvar.paintStartColumnIndex = undefined;\n                GRID.body.repaint.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.deleteRow\n             * @param {Number|String} _dindex\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.deleteRow(\"first\");\n             * ax5Grid.deleteRow(\"last\");\n             * ax5Grid.deleteRow(1);\n             * ax5Grid.deleteRow(\"selected\");\n             * ```\n             */\n            this.deleteRow = function (_dindex) {\n                GRID.data.deleteRow.call(this, _dindex);\n                alignGrid.call(this);\n                GRID.body.repaint.call(this, \"reset\");\n                // 삭제시엔 포커스 ?\n                // GRID.body.moveFocus.call(this, (this.config.body.grouping) ? \"START\" : \"END\");\n                GRID.scroller.resize.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.setValue\n             * @param _dindex\n             * @param _key\n             * @param _value\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5Grid.setValue(0, \"price\", 100);\n             * ```\n             */\n            this.setValue = function (_dindex, _key, _value) {\n                // getPanelname;\n                // let doindex = (typeof _doindex === \"undefined\") ? _dindex : _doindex;\n                // setValue를 doindex로 처리하는 상황이 아직 발생전으므로 선언만 하고 넘어감\n                let doindex;\n\n                if (GRID.data.setValue.call(this, _dindex, doindex, _key, _value)) {\n                    let repaintCell = function (_panelName, _rows, __dindex, __doindex, __key, __value) {\n                        for (let r = 0, rl = _rows.length; r < rl; r++) {\n                            for (let c = 0, cl = _rows[r].cols.length; c < cl; c++) {\n                                if (_rows[r].cols[c].key == __key) {\n                                    if (this.xvar.frozenRowIndex > __dindex) {\n                                        GRID.body.repaintCell.call(this, \"top-\" + _panelName, __dindex, __doindex, r, c, __value);\n                                    } else {\n                                        GRID.body.repaintCell.call(this, _panelName + \"-scroll\", __dindex, __doindex, r, c, __value);\n                                    }\n                                }\n                            }\n                        }\n                    };\n\n                    repaintCell.call(this, \"left-body\", this.leftBodyRowData.rows, _dindex, doindex, _key, _value);\n                    repaintCell.call(this, \"body\", this.bodyRowData.rows, _dindex, doindex, _key, _value);\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5grid.addColumn\n             * @param {Object} _column\n             * @param {Number|String} [_cindex=last]\n             * @returns {ax5grid}\n             */\n            this.addColumn = (function () {\n                let processor = {\n                    \"first\": function (_column) {\n                        this.config.columns = [].concat(_column).concat(this.config.columns);\n                    },\n                    \"last\": function (_column) {\n                        this.config.columns = this.config.columns.concat([].concat(_column));\n                    }\n                };\n\n                return function (_column, _cindex) {\n                    if (typeof _column === \"undefined\") throw '_column must not be null';\n                    if (typeof _cindex === \"undefined\") _cindex = \"last\";\n                    if (_cindex in processor) {\n                        processor[_cindex].call(this, _column);\n                    } else {\n                        if (!U.isNumber(_cindex)) {\n                            throw 'invalid argument _cindex';\n                        }\n                        if (U.isArray(_column)) {\n                            for (let _i = 0, _l = _column.length; _i < _l; _i++) {\n                                this.config.columns.splice(_cindex + _i, 0, _column[_i]);\n                            }\n                        } else {\n                            this.config.columns.splice(_cindex, 0, _column);\n                        }\n                    }\n                    onResetColumns.call(this); // 컬럼이 변경되었을 때.\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5grid.removeColumn\n             * @param {Number|String} [_cindex=last]\n             * @returns {ax5grid}\n             */\n            this.removeColumn = (function () {\n                let processor = {\n                    \"first\": function (_cindex) {\n                        this.config.columns.splice(_cindex, 1);\n                    },\n                    \"last\": function () {\n                        this.config.columns.splice(this.config.columns.length - 1, 1);\n                    }\n                };\n                return function (_cindex) {\n                    if (typeof _cindex === \"undefined\") _cindex = \"last\";\n                    if (_cindex in processor) {\n                        processor[_cindex].call(this, _cindex);\n                    } else {\n                        if (!U.isNumber(_cindex)) {\n                            throw 'invalid argument _cindex';\n                        }\n                        //\n                        this.config.columns.splice(_cindex, 1);\n                    }\n                    onResetColumns.call(this); // 컬럼이 변경되었을 때.\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5grid.updateColumn\n             * @param {Object} _column\n             * @param {Number} _cindex\n             * @returns {ax5grid}\n             */\n            this.updateColumn = function (_column, _cindex) {\n                if (!U.isNumber(_cindex)) {\n                    throw 'invalid argument _cindex';\n                }\n                //\n                this.config.columns.splice(_cindex, 1, _column);\n                onResetColumns.call(this); // 컬럼이 변경되었을 때.\n                return this;\n            };\n\n            /**\n             * @method ax5grid.setColumnWidth\n             * @param {Number} _width\n             * @param {Number} _cindex\n             * @returns {ax5grid}\n             */\n            this.setColumnWidth = function (_width, _cindex) {\n                this.colGroup[this.xvar.columnResizerIndex]._width = _width;\n                this.needToPaintSum = true;\n\n                // 컬럼너비 변경사항 적용.\n                GRID.header.repaint.call(this);\n                GRID.body.repaint.call(this, true);\n                GRID.scroller.resize.call(this);\n\n                alignGrid.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.getColumnSortInfo\n             * @returns {Object} sortInfo\n             */\n            this.getColumnSortInfo = function () {\n                let that = {sortInfo: []};\n                for (let k in this.sortInfo) {\n                    that.sortInfo.push({\n                        key: k,\n                        orderBy: this.sortInfo[k].orderBy,\n                        seq: this.sortInfo[k].seq\n                    });\n                }\n                that.sortInfo.sort(function (a, b) {\n                    return a.seq > b.seq;\n                });\n                return that.sortInfo;\n            };\n\n            /**\n             * @method ax5grid.setColumnSort\n             * @param {Object} _sortInfo\n             * @param {Object} _sortInfo.key\n             * @param {Number} _sortInfo.key.seq - seq of sortOrder\n             * @param {String} _sortInfo.key.orderBy - \"desc\"|\"asc\"\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * ax5grid.setColumnSort({a:{seq:0, orderBy:\"desc\"}, b:{seq:1, orderBy:\"asc\"}});\n             * ```\n             */\n            this.setColumnSort = function (_sortInfo) {\n                if (typeof _sortInfo !== \"undefined\") {\n                    this.sortInfo = _sortInfo;\n                    GRID.header.applySortStatus.call(this, _sortInfo);\n                }\n\n                sortColumns.call(this, _sortInfo || this.sortInfo);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.select\n             * @param {Number|Object} _selectObject\n             * @param {Number} _selectObject.index - index of row\n             * @param {Number} _selectObject.rowIndex - rowIndex of columns\n             * @param {Number} _selectObject.conIndex - colIndex of columns\n             * @param {Object} _options\n             * @param {Boolean} _options.selectedClear\n             * @param {Boolean} _options.selected\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.select(0);\n             * firstGrid.select(0, {selected: true});\n             * firstGrid.select(0, {selected: false});\n             * firstGrid.select(0, {selectedClear: true});\n             * ```\n             */\n            this.select = function (_selectObject, _options) {\n                if (U.isNumber(_selectObject)) {\n                    let dindex = _selectObject;\n\n                    if (!this.config.multipleSelect) {\n                        this.clearSelect();\n                    } else {\n                        if (_options && _options.selectedClear) {\n                            this.clearSelect();\n                        }\n                    }\n\n                    GRID.data.select.call(this, dindex, undefined, _options && _options.selected);\n                    GRID.body.updateRowState.call(this, [\"selected\"], dindex, undefined);\n                }\n                return this;\n            };\n\n            /**\n             * @method firstGrid.clickBody\n             * @param {Number} _dindex\n             * @returns {ax5grid}\n             */\n            this.clickBody = function (_dindex) {\n                GRID.body.click.call(this, _dindex);\n                return this;\n            };\n\n            /**\n             * @method firstGrid.DBLClickBody\n             * @param {Number} _dindex\n             * @returns {ax5grid}\n             */\n            this.DBLClickBody = function (_dindex) {\n                GRID.body.dblClick.call(this, _dindex);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.clearSelect\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.clearSelect();\n             * ```\n             */\n            this.clearSelect = function () {\n                GRID.body.updateRowState.call(this, [\"selectedClear\"]);\n                GRID.data.clearSelect.call(this);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.selectAll\n             * @param {Object} _options\n             * @param {Boolean} _options.selected\n             * @param {Function} _options.filter\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.selectAll();\n             * firstGrid.selectAll({selected: true});\n             * firstGrid.selectAll({selected: false});\n             * firstGrid.selectAll({filter: function(){\n             *      return this[\"b\"] == \"A01\";\n             * });\n             * firstGrid.selectAll({selected: true, filter: function(){\n             *      return this[\"b\"] == \"A01\";\n             * });\n             * ```\n             */\n            this.selectAll = function (_options) {\n                GRID.data.selectAll.call(this, _options && _options.selected, _options);\n                GRID.body.updateRowStateAll.call(this, [\"selected\"]);\n                return this;\n            };\n\n            /**\n             * @method ax5grid.exportExcel\n             * @param {String} _fileName\n             * @returns {ax5grid|String}\n             * @example\n             * ```js\n             * firstGrid.exportExcel(\"grid-to-excel.xls\");\n             * console.log(firstGrid.exportExcel());\n             * ```\n             */\n            this.exportExcel = function (_fileName) {\n                let table = [];\n                table.push('<table border=\"1\">');\n                table.push(GRID.header.getExcelString.call(this));\n                table.push(GRID.body.getExcelString.call(this));\n                table.push('</table>');\n\n                if (typeof _fileName === \"undefined\") {\n                    return table.join('');\n                }\n                else {\n                    GRID.excel.export.call(this, [table.join('')], _fileName);\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5grid.focus\n             * @param {String|Number} _pos - UP, DOWN, LEFT, RIGHT, HOME, END\n             * @returns {ax5grid}\n             * @example\n             * ```js\n             * firstGrid.focus(\"UP\");\n             * firstGrid.focus(\"DOWN\");\n             * firstGrid.focus(\"HOME\");\n             * firstGrid.focus(\"END\");\n             * ```\n             */\n            this.focus = function (_pos) {\n\n                if (GRID.body.moveFocus.call(this, _pos)) {\n                    let focusedColumn;\n                    for (let c in this.focusedColumn) {\n                        focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n                        break;\n                    }\n                    if (focusedColumn) {\n                        this.select(focusedColumn.dindex, {selectedClear: true});\n                    }\n                }\n                else {\n                    if (typeof this.selectedDataIndexs[0] === \"undefined\") {\n                        this.select(0);\n                    } else {\n                        let selectedIndex = this.selectedDataIndexs[0];\n\n                        let processor = {\n                            \"UP\": function () {\n                                if (selectedIndex > 0) {\n                                    this.select(selectedIndex - 1, {selectedClear: true});\n                                    GRID.body.moveFocus.call(this, selectedIndex - 1);\n                                }\n                            },\n                            \"DOWN\": function () {\n                                if (selectedIndex < this.list.length - 1) {\n                                    this.select(selectedIndex + 1, {selectedClear: true});\n                                    GRID.body.moveFocus.call(this, selectedIndex + 1);\n                                }\n                            },\n                            \"HOME\": function () {\n                                this.select(0, {selectedClear: true});\n                                GRID.body.moveFocus.call(this, 0);\n                            },\n                            \"END\": function () {\n                                this.select(this.list.length - 1, {selectedClear: true});\n                                GRID.body.moveFocus.call(this, this.list.length - 1);\n                            }\n                        };\n\n                        if (_pos in processor) {\n                            processor[_pos].call(this);\n                        }\n                    }\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5grid.destroy\n             * @returns {null}\n             */\n            this.destroy = function () {\n                const instanceId = this.instanceId;\n                this.$target.empty();\n                this.list = [];\n                UI.grid_instance = ax5.util.filter(UI.grid_instance, function () {\n                    return this.instanceId != instanceId;\n                });\n                return null;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n                UI.grid_instance = UI.grid_instance || [];\n                UI.grid_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n    })());\n\n    GRID = ax5.ui.grid;\n})();\n\n// todo : filter\n// todo : column reorder\n// todo : editor 필수값 속성 지정","// ax5.ui.grid.body\n(function () {\n\n    const GRID = ax5.ui.grid;\n\n    const U = ax5.util;\n\n    const columnSelect = {\n        focusClear: function () {\n            let self = this, _column;\n            for (let c in self.focusedColumn) {\n                _column = self.focusedColumn[c];\n                if (_column) {\n                    self.$.panel[_column.panelName]\n                        .find('[data-ax5grid-tr-data-index=\"' + _column.dindex + '\"]')\n                        .find('[data-ax5grid-column-rowindex=\"' + _column.rowIndex + '\"][data-ax5grid-column-colindex=\"' + _column.colIndex + '\"]')\n                        .removeAttr('data-ax5grid-column-focused');\n                }\n            }\n            self.focusedColumn = {};\n        },\n        clear: function () {\n            let self = this, _column;\n            for (let c in self.selectedColumn) {\n                _column = self.selectedColumn[c];\n                if (_column) {\n                    self.$.panel[_column.panelName]\n                        .find('[data-ax5grid-tr-data-index=\"' + _column.dindex + '\"]')\n                        .find('[data-ax5grid-column-rowindex=\"' + _column.rowIndex + '\"][data-ax5grid-column-colindex=\"' + _column.colIndex + '\"]')\n                        .removeAttr('data-ax5grid-column-selected');\n                }\n            }\n            self.selectedColumn = {};\n        },\n        init: function (column) {\n            let self = this;\n            if (this.isInlineEditing) {\n                for (let editKey in this.inlineEditing) {\n                    if (editKey == column.dindex + \"_\" + column.colIndex + \"_\" + column.rowIndex) {\n                        return this;\n                    }\n                }\n            }\n\n            // focus\n            columnSelect.focusClear.call(self);\n            self.focusedColumn[column.dindex + \"_\" + column.colIndex + \"_\" + column.rowIndex] = {\n                panelName: column.panelName,\n                dindex: column.dindex,\n                doindex: column.doindex,\n                rowIndex: column.rowIndex,\n                colIndex: column.colIndex,\n                colspan: column.colspan\n            };\n\n            // select\n            columnSelect.clear.call(self);\n            self.xvar.selectedRange = {\n                start: [column.dindex, column.rowIndex, column.colIndex, column.colspan - 1],\n                end: null\n            };\n            self.selectedColumn[column.dindex + \"_\" + column.colIndex + \"_\" + column.rowIndex] = (function (data) {\n                if (data) {\n                    return false;\n                } else {\n                    return {\n                        panelName: column.panelName,\n                        dindex: column.dindex,\n                        doindex: column.doindex,\n                        rowIndex: column.rowIndex,\n                        colIndex: column.colIndex,\n                        colspan: column.colspan\n                    }\n                }\n            })(self.selectedColumn[column.dindex + \"_\" + column.colIndex + \"_\" + column.rowIndex]);\n\n            this.$.panel[column.panelName]\n                .find('[data-ax5grid-tr-data-index=\"' + column.dindex + '\"]')\n                .find('[data-ax5grid-column-rowindex=\"' + column.rowIndex + '\"][data-ax5grid-column-colindex=\"' + column.colIndex + '\"]')\n                .attr('data-ax5grid-column-focused', \"true\")\n                .attr('data-ax5grid-column-selected', \"true\");\n\n            if (this.isInlineEditing) {\n                GRID.body.inlineEdit.deActive.call(this, \"RETURN\");\n            }\n        },\n        update: function (column) {\n            const self = this;\n            let dindex, doindex, colIndex, rowIndex, trl;\n\n            self.xvar.selectedRange[\"end\"] = [column.dindex, column.rowIndex, column.colIndex, column.colspan - 1];\n            columnSelect.clear.call(self);\n\n            let range = {\n                r: {\n                    s: Math.min(self.xvar.selectedRange[\"start\"][0], self.xvar.selectedRange[\"end\"][0]),\n                    e: Math.max(self.xvar.selectedRange[\"start\"][0], self.xvar.selectedRange[\"end\"][0])\n                },\n                c: {\n                    s: Math.min(self.xvar.selectedRange[\"start\"][2], self.xvar.selectedRange[\"end\"][2]),\n                    e: Math.max(self.xvar.selectedRange[\"start\"][2] + self.xvar.selectedRange[\"start\"][3], self.xvar.selectedRange[\"end\"][2] + self.xvar.selectedRange[\"end\"][3])\n                }\n            };\n\n            dindex = range.r.s;\n            for (; dindex <= range.r.e; dindex++) {\n\n\n                trl = this.bodyRowTable.rows.length;\n                rowIndex = 0;\n                for (; rowIndex < trl; rowIndex++) {\n                    colIndex = range.c.s;\n                    for (; colIndex <= range.c.e; colIndex++) {\n                        var _panels = [],\n                            panelName = \"\";\n\n                        if (self.xvar.frozenRowIndex > dindex) _panels.push(\"top\");\n                        if (self.xvar.frozenColumnIndex > colIndex) _panels.push(\"left\");\n                        _panels.push(\"body\");\n                        if (_panels[0] !== \"top\") _panels.push(\"scroll\");\n                        panelName = _panels.join(\"-\");\n\n                        self.selectedColumn[dindex + \"_\" + colIndex + \"_\" + rowIndex] = {\n                            panelName: panelName,\n                            dindex: dindex,\n                            rowIndex: rowIndex,\n                            colIndex: colIndex,\n                            colspan: column.colspan\n                        };\n\n                        _panels = null;\n                        panelName = null;\n                    }\n                }\n            }\n            dindex = null;\n            doindex = null;\n            colIndex = null;\n            rowIndex = null;\n\n            for (var c in self.selectedColumn) {\n                var _column = self.selectedColumn[c];\n                if (_column) {\n                    self.$.panel[_column.panelName]\n                        .find('[data-ax5grid-tr-data-index=\"' + _column.dindex + '\"]')\n                        .find('[data-ax5grid-column-rowindex=\"' + _column.rowIndex + '\"][data-ax5grid-column-colindex=\"' + _column.colIndex + '\"]')\n                        .attr('data-ax5grid-column-selected', 'true');\n                }\n            }\n\n        }\n    };\n\n    const columnSelector = {\n        \"on\": function (cell) {\n            let self = this;\n\n            if (this.inlineEditing[cell.dindex + \"_\" + cell.colIndex + \"_\" + cell.rowIndex]) {\n                return;\n            }\n\n            columnSelect.init.call(self, cell);\n\n            this.$[\"container\"][\"body\"]\n                .on(\"mousemove.ax5grid-\" + this.instanceId, '[data-ax5grid-column-attr=\"default\"]', function (e) {\n                    if (this.getAttribute(\"data-ax5grid-column-rowIndex\")) {\n                        columnSelect.update.call(self, {\n                            panelName: this.getAttribute(\"data-ax5grid-panel-name\"),\n                            dindex: Number(this.getAttribute(\"data-ax5grid-data-index\")),\n                            doindex: Number(this.getAttribute(\"data-ax5grid-data-o-index\")),\n                            rowIndex: Number(this.getAttribute(\"data-ax5grid-column-rowIndex\")),\n                            colIndex: Number(this.getAttribute(\"data-ax5grid-column-colIndex\")),\n                            colspan: Number(this.getAttribute(\"colspan\"))\n                        });\n                        U.stopEvent(e);\n                    }\n                })\n                .on(\"mouseup.ax5grid-\" + this.instanceId, function () {\n                    columnSelector.off.call(self);\n                })\n                .on(\"mouseleave.ax5grid-\" + this.instanceId, function () {\n                    columnSelector.off.call(self);\n                });\n\n            jQuery(document.body)\n                .attr('unselectable', 'on')\n                .css('user-select', 'none')\n                .on('selectstart', false);\n        },\n        \"off\": function () {\n\n            this.$[\"container\"][\"body\"]\n                .off(\"mousemove.ax5grid-\" + this.instanceId)\n                .off(\"mouseup.ax5grid-\" + this.instanceId)\n                .off(\"mouseleave.ax5grid-\" + this.instanceId);\n\n            jQuery(document.body)\n                .removeAttr('unselectable')\n                .css('user-select', 'auto')\n                .off('selectstart');\n        }\n    };\n\n    const updateRowState = function (_states, _dindex, _doindex, _data) {\n        let self = this,\n            cfg = this.config,\n            processor = {\n                \"selected\": function (_dindex, _doindex) {\n                    if (this.list[_doindex]) {\n                        let i = this.$.livePanelKeys.length;\n                        while (i--) {\n                            this.$.panel[this.$.livePanelKeys[i]]\n                                .find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]')\n                                .attr(\"data-ax5grid-selected\", this.list[_doindex][cfg.columnKeys.selected]);\n                        }\n                    }\n                },\n                \"selectedClear\": function () {\n                    let di = this.list.length;\n                    let pi;\n\n                    if (!this.proxyList) {\n                        while (di--) {\n                            if (this.list[di][cfg.columnKeys.selected]) {\n                                pi = this.$.livePanelKeys.length;\n                                while (pi--) {\n                                    this.$.panel[this.$.livePanelKeys[pi]]\n                                        .find('[data-ax5grid-tr-data-index=\"' + di + '\"]')\n                                        .attr(\"data-ax5grid-selected\", false);\n                                }\n                            }\n                            this.list[di][cfg.columnKeys.selected] = false;\n                        }\n                    } else {\n                        while (di--) {\n                            this.list[di][cfg.columnKeys.selected] = false;\n                        }\n                        di = this.proxyList.length;\n                        while (di--) {\n                            if (this.list[doi][cfg.columnKeys.selected]) {\n                                pi = this.$.livePanelKeys.length;\n                                while (pi--) {\n                                    this.$.panel[this.$.livePanelKeys[pi]]\n                                        .find('[data-ax5grid-tr-data-index=\"' + di + '\"]')\n                                        .attr(\"data-ax5grid-selected\", false);\n                                }\n                            }\n\n                            this.proxyList[di][cfg.columnKeys.selected] = false;\n                            let doi = this.proxyList[di].__original_index__;\n                        }\n                    }\n                },\n                \"cellChecked\": function (_dindex, _doindex, _data) {\n                    let key = _data.key,\n                        rowIndex = _data.rowIndex,\n                        colIndex = _data.colIndex;\n\n                    let panelName = (function () {\n                        let _panels = [];\n                        if (this.xvar.frozenRowIndex > _dindex) _panels.push(\"top\");\n                        if (this.xvar.frozenColumnIndex > colIndex) _panels.push(\"left\");\n                        _panels.push(\"body\");\n                        if (_panels[0] !== \"top\") _panels.push(\"scroll\");\n                        return _panels.join(\"-\");\n                    }).call(this);\n\n                    this.$.panel[panelName]\n                        .find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]')\n                        .find('[data-ax5grid-column-rowIndex=\"' + rowIndex + '\"][data-ax5grid-column-colIndex=\"' + colIndex + '\"]')\n                        .find('[data-ax5grid-editor=\"checkbox\"]')\n                        .attr(\"data-ax5grid-checked\", '' + _data.checked);\n                }\n            };\n\n        if (typeof _doindex === \"undefined\") _doindex = _dindex;\n\n        _states.forEach(function (_state) {\n            if (!processor[_state]) throw 'invaild state name';\n            processor[_state].call(self, _dindex, _doindex, _data);\n        });\n    };\n\n    const updateRowStateAll = function (_states, _data) {\n        let self = this,\n            cfg = this.config,\n            processor = {\n                \"selected\": function (_dindex) {\n                    GRID.body.repaint.call(this, true);\n                }\n            };\n\n        _states.forEach(function (_state) {\n            if (!processor[_state]) throw 'invaild state name';\n            processor[_state].call(self, _data);\n        });\n    };\n\n    const init = function () {\n        let self = this;\n\n        this.$[\"container\"][\"body\"].on(\"click\", '[data-ax5grid-column-attr]', function (e) {\n            let panelName, attr,\n                row, col, dindex, doindex, rowIndex, colIndex, disableSelection,\n                targetClick = {\n                    \"default\": function (_column) {\n                        let column = self.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex],\n                            that = {\n                                self: self,\n                                page: self.page,\n                                list: self.list,\n                                item: self.list[_column.doindex],\n                                dindex: _column.dindex,\n                                doindex: _column.doindex,\n                                rowIndex: _column.rowIndex,\n                                colIndex: _column.colIndex,\n                                column: column,\n                                value: self.list[_column.dindex][column.key]\n                            };\n\n                        if (column.editor && column.editor.type === \"checkbox\") { // todo : GRID.inlineEditor에서 처리 할수 있도록 구문 변경 필요.\n                            let value = GRID.data.getValue.call(self, _column.dindex, _column.doindex, column.key),\n                                checked, newValue;\n\n                            if (column.editor.config && column.editor.config.trueValue) {\n                                if (checked = !(value == column.editor.config.trueValue)) {\n                                    newValue = column.editor.config.trueValue;\n                                } else {\n                                    newValue = column.editor.config.falseValue;\n                                }\n                            } else {\n                                newValue = checked = (value == false || value == \"false\" || value < \"1\") ? \"true\" : \"false\";\n                            }\n\n                            GRID.data.setValue.call(self, _column.dindex, _column.doindex, column.key, newValue);\n\n                            updateRowState.call(self, [\"cellChecked\"], _column.dindex, _column.doindex, {\n                                key: column.key, rowIndex: _column.rowIndex, colIndex: _column.colIndex,\n                                editorConfig: column.editor.config, checked: checked\n                            });\n                        }\n\n                        if (self.config.body.onClick) {\n                            self.config.body.onClick.call(that, that, e);\n                        }\n                    },\n                    \"rowSelector\": function (_column) {\n                        let item = self.list[_column.doindex];\n                        if (item[self.config.columnKeys.disableSelection]) {\n                            return false;\n                        }\n\n                        if (!self.config.multipleSelect && self.selectedDataIndexs[0] !== _column.doindex) {\n                            updateRowState.call(self, [\"selectedClear\"]);\n                            GRID.data.clearSelect.call(self);\n                        }\n\n                        GRID.data.select.call(self, _column.dindex, _column.doindex, undefined, {\n                            internalCall: true\n                        });\n                        updateRowState.call(self, [\"selected\"], _column.dindex, _column.doindex);\n                    },\n                    \"lineNumber\": function (_column) {\n\n                    },\n                    \"tree-control\": function (_column, _el) {\n                        //console.log(_column);\n                        toggleCollapse.call(self, _column.dindex, _column.doindex);\n                    }\n                };\n\n            panelName = this.getAttribute(\"data-ax5grid-panel-name\");\n            attr = this.getAttribute(\"data-ax5grid-column-attr\");\n            row = Number(this.getAttribute(\"data-ax5grid-column-row\"));\n            col = Number(this.getAttribute(\"data-ax5grid-column-col\"));\n            rowIndex = Number(this.getAttribute(\"data-ax5grid-column-rowIndex\"));\n            colIndex = Number(this.getAttribute(\"data-ax5grid-column-colIndex\"));\n            dindex = Number(this.getAttribute(\"data-ax5grid-data-index\"));\n            doindex = Number(this.getAttribute(\"data-ax5grid-data-o-index\"));\n\n            if (attr in targetClick) {\n                targetClick[attr]({\n                    panelName: panelName,\n                    attr: attr,\n                    row: row,\n                    col: col,\n                    dindex: dindex,\n                    doindex: doindex,\n                    rowIndex: rowIndex,\n                    colIndex: colIndex\n                }, this);\n            }\n        });\n        this.$[\"container\"][\"body\"].on(\"dblclick\", '[data-ax5grid-column-attr]', function (e) {\n            let panelName, attr,\n                row, col, dindex, doindex, rowIndex, colIndex,\n                targetDBLClick = {\n                    \"default\": function (_column) {\n                        if (self.isInlineEditing) {\n                            for (let columnKey in self.inlineEditing) {\n                                if (columnKey == _column.dindex + \"_\" + _column.colIndex + \"_\" + _column.rowIndex) {\n                                    return this;\n                                }\n                            }\n                        }\n\n                        let column = self.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex], value = \"\";\n                        if (column) {\n                            if (!self.list[dindex].__isGrouping) {\n                                value = GRID.data.getValue.call(self, dindex, doindex, column.key);\n                            }\n                        }\n\n                        let editor = self.colGroup[_column.colIndex].editor;\n                        if (U.isObject(editor)) {\n                            GRID.body.inlineEdit.active.call(self, self.focusedColumn, e, value);\n                        } else {\n                            // 더블클릭 실행\n                            if (self.config.body.onDBLClick) {\n                                let that = {\n                                    self: self,\n                                    page: self.page,\n                                    list: self.list,\n                                    item: self.list[_column.dindex],\n                                    dindex: _column.dindex,\n                                    doindex: _column.doindex,\n                                    rowIndex: _column.rowIndex,\n                                    colIndex: _column.colIndex,\n                                    column: column,\n                                    value: self.list[_column.dindex][column.key]\n                                };\n                                self.config.body.onDBLClick.call(that);\n                            }\n                        }\n                    },\n                    \"rowSelector\": function (_column) {\n\n                    },\n                    \"lineNumber\": function (_column) {\n\n                    }\n                };\n\n            panelName = this.getAttribute(\"data-ax5grid-panel-name\");\n            attr = this.getAttribute(\"data-ax5grid-column-attr\");\n            row = Number(this.getAttribute(\"data-ax5grid-column-row\"));\n            col = Number(this.getAttribute(\"data-ax5grid-column-col\"));\n            rowIndex = Number(this.getAttribute(\"data-ax5grid-column-rowIndex\"));\n            colIndex = Number(this.getAttribute(\"data-ax5grid-column-colIndex\"));\n            dindex = Number(this.getAttribute(\"data-ax5grid-data-index\"));\n            doindex = Number(this.getAttribute(\"data-ax5grid-data-o-index\"));\n\n            if (attr in targetDBLClick) {\n                targetDBLClick[attr]({\n                    panelName: panelName,\n                    attr: attr,\n                    row: row,\n                    col: col,\n                    dindex: dindex,\n                    doindex: doindex,\n                    rowIndex: rowIndex,\n                    colIndex: colIndex\n                });\n            }\n        });\n\n        if (this.config.contextMenu) {\n            this.$[\"container\"][\"body\"].on(\"contextmenu\", function (e) {\n                let target, dindex, doindex, rowIndex, colIndex, item, column, param = {};\n\n                target = U.findParentNode(e.target, function (t) {\n                    if (t.getAttribute(\"data-ax5grid-column-attr\")) {\n                        return true;\n                    }\n                });\n\n                if (target) {\n                    // item 찾기\n                    rowIndex = Number(target.getAttribute(\"data-ax5grid-column-rowIndex\"));\n                    colIndex = Number(target.getAttribute(\"data-ax5grid-column-colIndex\"));\n                    dindex = Number(target.getAttribute(\"data-ax5grid-data-index\"));\n                    doindex = Number(target.getAttribute(\"data-ax5grid-data-o-index\"));\n                    column = self.bodyRowMap[rowIndex + \"_\" + colIndex];\n                    item = self.list[dindex];\n                }\n\n                if (!self.contextMenu) {\n                    self.contextMenu = new ax5.ui.menu();\n                }\n\n                self.contextMenu.setConfig(self.config.contextMenu);\n\n                param = {\n                    element: target,\n                    dindex: dindex,\n                    doindex: doindex,\n                    rowIndex: rowIndex,\n                    colIndex: colIndex,\n                    item: item,\n                    column: column,\n                    gridSelf: self\n                };\n\n                self.contextMenu.popup(e, {\n                    filter: function () {\n                        return self.config.contextMenu.popupFilter.call(this, this, param);\n                    },\n                    param: param\n                });\n\n                U.stopEvent(e.originalEvent);\n                target = null;\n                dindex = null;\n                doindex = null;\n                rowIndex = null;\n                colIndex = null;\n                item = null;\n                column = null;\n                param = null;\n            });\n        }\n\n        this.$[\"container\"][\"body\"]\n            .on(\"mousedown\", '[data-ax5grid-column-attr=\"default\"]', function (e) {\n                if (self.xvar.touchmoved) return false;\n                if (this.getAttribute(\"data-ax5grid-column-rowIndex\")) {\n                    columnSelector.on.call(self, {\n                        panelName: this.getAttribute(\"data-ax5grid-panel-name\"),\n                        dindex: Number(this.getAttribute(\"data-ax5grid-data-index\")),\n                        doindex: Number(this.getAttribute(\"data-ax5grid-data-o-index\")),\n                        rowIndex: Number(this.getAttribute(\"data-ax5grid-column-rowIndex\")),\n                        colIndex: Number(this.getAttribute(\"data-ax5grid-column-colIndex\")),\n                        colspan: Number(this.getAttribute(\"colspan\"))\n                    });\n                }\n            })\n            .on(\"dragstart\", function (e) {\n                U.stopEvent(e);\n                return false;\n            });\n\n        resetFrozenColumn.call(this);\n\n        // 그리드 바디에 출력할 여유 카운트\n        this.xvar.paintRowCountMargin = this.config.virtualScrollYCountMargin;\n        this.xvar.paintRowCountTopMargin = this.config.virtualScrollYCountMargin - Math.floor(this.config.virtualScrollYCountMargin / 2);\n\n        if (this.config.virtualScrollAccelerated) {\n            this.__throttledScroll = U.throttle(function (css, opts) {\n                if (this.config.virtualScrollY && !opts.noRepaint && \"top\" in css) {\n                    repaint.call(this);\n                } else if (this.config.virtualScrollX && !opts.noRepaint && \"left\" in css) {\n                    repaint.call(this);\n                }\n                if (opts.callback) {\n                    opts.callback();\n                }\n            }, this.config.virtualScrollAcceleratedDelayTime);\n        } else {\n            this.__throttledScroll = false;\n        }\n    };\n\n    const resetFrozenColumn = function () {\n        let cfg = this.config,\n            dividedBodyRowObj = GRID.util.divideTableByFrozenColumnIndex(this.bodyRowTable, this.xvar.frozenColumnIndex);\n\n\n        this.asideBodyRowData = (function (dataTable) {\n            let data = {rows: []};\n            for (let i = 0, l = dataTable.rows.length; i < l; i++) {\n                data.rows[i] = {cols: []};\n                if (i === 0) {\n                    let col = {\n                        label: \"\",\n                        colspan: 1,\n                        rowspan: dataTable.rows.length,\n                        colIndex: null\n                    }, _col = {};\n\n                    if (cfg.showLineNumber) {\n                        _col = jQuery.extend({}, col, {\n                            width: cfg.lineNumberColumnWidth,\n                            _width: cfg.lineNumberColumnWidth,\n                            columnAttr: \"lineNumber\",\n                            label: \"&nbsp;\", key: \"__d-index__\"\n                        });\n                        data.rows[i].cols.push(_col);\n                    }\n                    if (cfg.showRowSelector) {\n                        _col = jQuery.extend({}, col, {\n                            width: cfg.rowSelectorColumnWidth,\n                            _width: cfg.rowSelectorColumnWidth,\n                            columnAttr: \"rowSelector\",\n                            label: \"\", key: \"__d-checkbox__\"\n                        });\n                        data.rows[i].cols.push(_col);\n                    }\n                }\n            }\n\n            return data;\n        }).call(this, this.bodyRowTable);\n\n        //console.log(dividedBodyRowObj);\n\n        this.leftBodyRowData = dividedBodyRowObj.leftData;\n        this.bodyRowData = dividedBodyRowObj.rightData;\n\n        if (cfg.body.grouping) {\n            let dividedBodyGroupingObj = GRID.util.divideTableByFrozenColumnIndex(this.bodyGroupingTable, this.xvar.frozenColumnIndex);\n            this.asideBodyGroupingData = (function (dataTable) {\n                let data = {rows: []};\n                for (let i = 0, l = dataTable.rows.length; i < l; i++) {\n                    data.rows[i] = {cols: []};\n                    if (i === 0) {\n                        let col = {\n                            label: \"\",\n                            colspan: 1,\n                            rowspan: dataTable.rows.length,\n                            colIndex: null\n                        }, _col = {};\n\n                        if (cfg.showLineNumber) {\n                            _col = jQuery.extend({}, col, {\n                                width: cfg.lineNumberColumnWidth,\n                                _width: cfg.lineNumberColumnWidth,\n                                columnAttr: \"lineNumber\",\n                                label: \"&nbsp;\", key: \"__d-index__\"\n                            });\n                            data.rows[i].cols.push(_col);\n                        }\n                        if (cfg.showRowSelector) {\n                            _col = jQuery.extend({}, col, {\n                                width: cfg.rowSelectorColumnWidth,\n                                _width: cfg.rowSelectorColumnWidth,\n                                columnAttr: \"rowSelector\",\n                                label: \"\", key: \"__d-checkbox__\"\n                            });\n                            data.rows[i].cols.push(_col);\n                        }\n                    }\n                }\n\n                return data;\n            }).call(this, this.bodyGroupingTable);\n            this.leftBodyGroupingData = dividedBodyGroupingObj.leftData;\n            this.bodyGroupingData = dividedBodyGroupingObj.rightData;\n\n            this.bodyGroupingMap = GRID.util.makeBodyRowMap.call(this, this.bodyGroupingTable);\n        }\n\n        this.leftFootSumData = {};\n        this.footSumData = {};\n        if (this.config.footSum) {\n            let dividedFootSumObj = GRID.util.divideTableByFrozenColumnIndex(this.footSumTable, this.xvar.frozenColumnIndex);\n            this.leftFootSumData = dividedFootSumObj.leftData;\n            this.footSumData = dividedFootSumObj.rightData;\n        }\n    };\n\n    const getFieldValue = function (_list, _item, _index, _col, _value, _returnPlainText) {\n\n        let _key = _col.key, tagsToReplace = {\n            '<': '&lt;',\n            '>': '&gt;'\n        };\n\n        if (_key === \"__d-index__\") {\n            return (typeof _item[\"__index\"] !== \"undefined\") ? _item[\"__index\"] + 1 : \"\";\n        }\n        else if (_key === \"__d-checkbox__\") {\n            return `<div class=\"checkBox\" style=\"max-height: ${_col.width - 10}px;min-height: ${_col.width - 10}px;\"></div>`;\n        }\n        else {\n            if (_col.editor && (function (_editor) {\n                    if (_editor.type in GRID.inlineEditor) {\n                        return (GRID.inlineEditor[_editor.type].editMode == \"inline\");\n                    }\n                    return false;\n                })(_col.editor)) { // editor가 inline타입이라면\n\n                _value = _value || GRID.data.getValue.call(this, _index, _item.__origin_index__, _key);\n\n                if (U.isFunction(_col.editor.disabled)) {\n                    if (_col.editor.disabled.call({\n                            list: _list,\n                            dindex: _index,\n                            item: _list[_index],\n                            key: _key,\n                            value: _value\n                        })) {\n                        return _value;\n                    }\n                }\n\n                // print editor\n                return _returnPlainText ? _value : GRID.inlineEditor[_col.editor.type].getHtml(this, _col.editor, _value);\n            }\n\n            const valueProcessor = {\n                \"formatter\": function () {\n                    let that = {\n                        key: _key,\n                        value: _value || GRID.data.getValue.call(this, _index, _item.__origin_index__, _key),\n                        dindex: _index,\n                        item: _item,\n                        list: _list\n                    };\n                    if (U.isFunction(_col.formatter)) {\n                        return _col.formatter.call(that);\n                    } else {\n                        return GRID.formatter[_col.formatter].call(that);\n                    }\n                },\n                \"default\": function () {\n                    let returnValue = \"\";\n\n                    if (typeof _value !== \"undefined\") {\n                        returnValue = _value;\n                    } else {\n                        if (/[\\.\\[\\]]/.test(_key)) {\n                            _value = GRID.data.getValue.call(this, _index, _item.__origin_index__, _key);\n                        } else {\n                            _value = _item[_key];\n                        }\n\n                        if (_value !== null && typeof _value !== \"undefined\") returnValue = _value;\n                    }\n\n                    // 키값이 Boolean일때 오류 발생하여 수정.\n                    return (typeof returnValue !== \"string\") ? returnValue : returnValue.replace(/[<>]/g, function (tag) {\n                        return tagsToReplace[tag] || tag;\n                    });\n                },\n                \"treeControl\": function (__value) {\n                    let cfg = this.config,\n                        keys = this.config.tree.columnKeys,\n                        indentNodeHtml = '';\n\n                    if (_item[keys.children].length) {\n                        indentNodeHtml += '<a ' +\n                            'data-ax5grid-data-index=\"' + _index + '\" ' +\n                            'data-ax5grid-column-attr=\"tree-control\" ' +\n                            'data-ax5grid-tnode-arrow=\"\" ' +\n                            'style=\"width: ' + cfg.tree.arrowWidth + 'px;padding-left:' + (_item[keys.depth] * cfg.tree.indentWidth) + 'px;\"' +\n                            '>';\n                        indentNodeHtml += (_item[keys.collapse]) ? cfg.tree.icons.collapsedArrow : cfg.tree.icons.openedArrow;\n                        indentNodeHtml += '</a>';\n                    } else {\n                        indentNodeHtml += '<span ' +\n                            'data-ax5grid-tnode-arrow=\"\" ' +\n                            'style=\"width: ' + cfg.tree.arrowWidth + 'px;padding-left:' + (_item[keys.depth] * cfg.tree.indentWidth) + 'px;\"' +\n                            '>&nbsp;</span>';\n                    }\n\n                    indentNodeHtml += '<span ' +\n                        'data-ax5grid-tnode-item=\"' + ((_item[keys.children].length) ? 'group' : 'item') + '\" ' +\n                        'style=\"width: ' + cfg.tree.iconWidth + 'px;\"' +\n                        '>';\n                    indentNodeHtml += (_item[keys.children].length) ? (_item[keys.collapse]) ? cfg.tree.icons.collapsedGroupIcon : cfg.tree.icons.groupIcon : cfg.tree.icons.itemIcon;\n                    indentNodeHtml += '</span>';\n\n                    return indentNodeHtml + __value;\n                }\n            };\n\n            let returnValue = (_col.formatter) ? valueProcessor.formatter.call(this) : valueProcessor.default.call(this);\n            if (this.config.tree.use && _col.treeControl) {\n                returnValue = valueProcessor.treeControl.call(this, returnValue);\n            }\n\n            return returnValue;\n        }\n\n    };\n\n    const getGroupingValue = function (_item, _index, _col) {\n        let value, that, _key = _col.key, _label = _col.label;\n\n        if (typeof _key === \"undefined\") {\n            that = {\n                key: _key,\n                list: _item.__groupingList,\n                groupBy: _item.__groupingBy\n            };\n            if (U.isFunction(_label)) {\n                value = _label.call(that);\n            } else {\n                value = _label;\n            }\n            _item[_col.colIndex] = value;\n            return value;\n        }\n        else if (_key === \"__d-index__\") {\n            return '';\n        }\n        else if (_key === \"__d-checkbox__\") {\n            return '';\n        }\n        else {\n            if (_col.collector) {\n                that = {\n                    key: _key,\n                    list: _item.__groupingList\n                };\n                if (U.isFunction(_col.collector)) {\n                    value = _col.collector.call(that);\n                } else {\n                    value = GRID.collector[_col.collector].call(that);\n                }\n                _item[_col.colIndex] = value;\n\n                if (_col.formatter) {\n                    that.value = value;\n                    if (U.isFunction(_col.formatter)) {\n                        return _col.formatter.call(that);\n                    } else {\n                        return GRID.formatter[_col.formatter].call(that);\n                    }\n                } else {\n                    return value;\n                }\n            } else {\n                return \"&nbsp;\";\n            }\n        }\n    };\n\n    const getSumFieldValue = function (_list, _col) {\n        let _key = _col.key, _label = _col.label;\n        //, _collector, _formatter\n        if (typeof _key === \"undefined\") {\n            return _label;\n        }\n        else if (_key === \"__d-index__\" || _key === \"__d-checkbox__\") {\n            return '&nbsp;';\n        }\n        else {\n            if (_col.collector) {\n                let that = {\n                        key: _key,\n                        list: _list\n                    },\n                    value;\n\n                if (U.isFunction(_col.collector)) {\n                    value = _col.collector.call(that);\n                } else {\n                    value = GRID.collector[_col.collector].call(that);\n                }\n\n                if (_col.formatter) {\n                    that.value = value;\n                    if (U.isFunction(_col.formatter)) {\n                        return _col.formatter.call(that);\n                    } else {\n                        return GRID.formatter[_col.formatter].call(that);\n                    }\n                } else {\n                    return value;\n                }\n\n            } else {\n                return \"&nbsp;\";\n            }\n        }\n    };\n\n    const repaint = function (_reset) {\n        // debugger;\n        let cfg = this.config, list = (this.proxyList) ? this.proxyList : this.list;\n\n        /// repaint reset 타입이면 고정컬럼을 재조정\n        if (_reset) {\n            resetFrozenColumn.call(this);\n            // 틀고정 이 변경되면 출력 시작 인덱스 값을 초기화\n            this.xvar.paintStartRowIndex = undefined;\n            this.xvar.paintStartColumnIndex = undefined;\n        }\n\n        /// 출력시작 인덱스\n        let paintStartRowIndex, virtualPaintStartRowIndex;\n\n        if (this.config.virtualScrollY) {\n            virtualPaintStartRowIndex = paintStartRowIndex = Math.floor(-(this.$.panel[\"body-scroll\"].position().top) / this.xvar.bodyTrHeight) + this.xvar.frozenRowIndex;\n            if (this.xvar.paintRowCountTopMargin < paintStartRowIndex) {\n                paintStartRowIndex -= this.xvar.paintRowCountTopMargin;\n            }\n        }\n        else {\n            paintStartRowIndex = this.xvar.frozenRowIndex;\n        }\n\n        if (isNaN(paintStartRowIndex)) return this;\n\n        let paintStartColumnIndex = 0, paintEndColumnIndex = 0, nopaintLeftColumnsWidth = null, nopaintRightColumnsWidth = null;\n        let bodyScrollLeft = -(this.$.panel[\"body-scroll\"].position().left);\n\n        if (this.config.virtualScrollX) { // 페인트 시작컬럼위치와 종료컬럼위치 구하기\n            for (let ci = this.xvar.frozenColumnIndex; ci < this.colGroup.length; ci++) {\n                // bodyScrollLeft\n                this.colGroup[ci]._sx = (ci == this.xvar.frozenColumnIndex) ? 0 : this.colGroup[ci - 1]._ex;\n                this.colGroup[ci]._ex = this.colGroup[ci]._sx + this.colGroup[ci]._width;\n\n                if (this.colGroup[ci]._sx <= bodyScrollLeft && this.colGroup[ci]._ex >= bodyScrollLeft) {\n                    paintStartColumnIndex = ci;\n                }\n                if (this.colGroup[ci]._sx <= (bodyScrollLeft + this.xvar.bodyWidth) && this.colGroup[ci]._ex >= (bodyScrollLeft + this.xvar.bodyWidth)) {\n                    paintEndColumnIndex = ci;\n\n                    if (nopaintLeftColumnsWidth === null) nopaintLeftColumnsWidth = this.colGroup[paintStartColumnIndex]._sx;\n                    if (nopaintRightColumnsWidth === null) nopaintRightColumnsWidth = this.xvar.scrollContentWidth - this.colGroup[ci]._ex;\n                }\n            }\n\n            if (nopaintLeftColumnsWidth === null) nopaintLeftColumnsWidth = 0;\n            if (nopaintRightColumnsWidth === null) nopaintRightColumnsWidth = 0;\n            this.$.panel[\"top-body-scroll\"].css({\"padding-left\": nopaintLeftColumnsWidth, \"padding-right\": nopaintRightColumnsWidth});\n            this.$.panel[\"body-scroll\"].css({\"padding-left\": nopaintLeftColumnsWidth, \"padding-right\": nopaintRightColumnsWidth});\n            this.$.panel[\"bottom-body-scroll\"].css({\"padding-left\": nopaintLeftColumnsWidth, \"padding-right\": nopaintRightColumnsWidth});\n        }\n\n        let isFirstPaint = (typeof this.xvar.paintStartRowIndex === \"undefined\"),\n            headerColGroup = this.headerColGroup,\n            asideBodyRowData = this.asideBodyRowData,\n            leftBodyRowData = this.leftBodyRowData,\n            bodyRowData = this.bodyRowData,\n            leftFootSumData = this.leftFootSumData,\n            footSumData = this.footSumData,\n            asideBodyGroupingData = this.asideBodyGroupingData,\n            leftBodyGroupingData = this.leftBodyGroupingData,\n            bodyGroupingData = this.bodyGroupingData,\n            bodyAlign = cfg.body.align,\n            paintRowCount, virtualPaintRowCount;\n\n        if (!this.config.virtualScrollY) {\n            virtualPaintRowCount = paintRowCount = list.length;\n        } else {\n            virtualPaintRowCount = Math.ceil(this.xvar.bodyHeight / this.xvar.bodyTrHeight);\n            paintRowCount = virtualPaintRowCount + (this.xvar.paintRowCountMargin || 1);\n        }\n\n        // 여유범위 안에 있으면 페인팅 안할수 있게 paintStartRowIndex 변경하지 않음.\n        if (this.xvar.paintRowCountTopMargin < paintStartRowIndex && Math.abs(this.xvar.paintStartRowIndex - paintStartRowIndex) <= this.xvar.paintRowCountTopMargin) {\n            paintStartRowIndex = this.xvar.paintStartRowIndex;\n        }\n\n        if (\n            this.xvar.dataRowCount === list.length\n            && this.xvar.paintStartRowIndex === paintStartRowIndex\n            && this.xvar.paintRowCount === paintRowCount\n            && this.xvar.paintStartColumnIndex === paintStartColumnIndex\n            && this.xvar.paintEndColumnIndex === paintEndColumnIndex\n        ) return this; // 스크롤 포지션 변경 여부에 따라 프로세스 진행여부 결정\n\n        // bodyRowData 수정 : 페인트 컬럼 포지션이 달라지므로\n        if (nopaintLeftColumnsWidth || nopaintRightColumnsWidth) {\n            headerColGroup = [].concat(headerColGroup).splice(paintStartColumnIndex - this.xvar.frozenColumnIndex, paintEndColumnIndex - paintStartColumnIndex + 1 + this.xvar.frozenColumnIndex);\n            bodyRowData = GRID.util.getTableByStartEndColumnIndex(bodyRowData, paintStartColumnIndex, paintEndColumnIndex);\n\n            if (cfg.body.grouping) {\n                bodyGroupingData = GRID.util.getTableByStartEndColumnIndex(bodyGroupingData, paintStartColumnIndex, paintEndColumnIndex);\n            }\n            if (cfg.footSum) {\n                footSumData = GRID.util.getTableByStartEndColumnIndex(footSumData, paintStartColumnIndex, paintEndColumnIndex);\n            }\n            if (this.xvar.paintStartColumnIndex !== paintStartColumnIndex || this.xvar.paintEndColumnIndex !== paintEndColumnIndex) {\n                this.needToPaintSum = true;\n            }\n        }\n\n        /// 스크롤 컨텐츠의 높이 : 그리드 스크롤의 실제 크기와는 관계 없이 데이터 갯수에 따라 스크롤 컨텐츠 높이값 구해서 저장해두기.\n        // todo scrollContentHeight\n        this.xvar.scrollContentHeight = this.xvar.bodyTrHeight * (list.length - this.xvar.frozenRowIndex);\n        if (this.xvar.scrollContentHeight < 0) this.xvar.scrollContentHeight = 0;\n\n        /// 사용된 패널들의 키 모음\n        this.$.livePanelKeys = [];\n\n        // 그리드 바디 영역 페인트 함수\n        /**\n         * @param _elTargetKey\n         * @param _colGroup\n         * @param _bodyRow\n         * @param _groupRow\n         * @param _list\n         * @param [_scrollConfig]\n         * @returns {boolean}\n         */\n        let repaintBody = function (_elTargetKey, _colGroup, _bodyRow, _groupRow, _list, _scrollConfig) {\n            let _elTarget = this.$.panel[_elTargetKey];\n\n            if (!isFirstPaint && !_scrollConfig) {\n                this.$.livePanelKeys.push(_elTargetKey); // 사용중인 패널키를 모아둠. (뷰의 상태 변경시 사용하려고)\n                return false;\n            }\n\n            let SS = [],\n                cgi, cgl, di, dl, tri, trl, ci, cl, col,\n                cellHeight,\n                colAlign,\n                isScrolled = (function () {\n                    // 스크롤값이 변경되거나 처음 호출되었습니까?\n                    if (typeof _scrollConfig === \"undefined\" || typeof _scrollConfig['paintStartRowIndex'] === \"undefined\") {\n                        _scrollConfig = {\n                            paintStartRowIndex: 0,\n                            paintRowCount: _list.length\n                        };\n                        return false;\n                    } else {\n                        return true;\n                    }\n                })(),\n                stripeString = '#fff 0px, #fff ' + (cfg.body.columnHeight - cfg.body.columnBorderWidth) + 'px, #eee ' + (cfg.body.columnHeight - cfg.body.columnBorderWidth) + 'px, #eee ' + (cfg.body.columnHeight) + 'px';\n\n            if (isScrolled) {\n                SS.push('<div style=\"background:repeating-linear-gradient(to top, ' + stripeString + ');' +\n                    'font-size:0;' +\n                    'line-height:0;height: ' + (_scrollConfig.paintStartRowIndex - this.xvar.frozenRowIndex) * _scrollConfig.bodyTrHeight + 'px;\"></div>');\n            }\n\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            di = _scrollConfig.paintStartRowIndex;\n\n            for (dl = (function () {\n                let len;\n                len = _list.length;\n                if (_scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex < len) {\n                    len = _scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex;\n                }\n                return len;\n            })(); di < dl; di++) {\n\n                if (_list[di]) {\n                    let isGroupingRow = false, rowTable, odi = (typeof _list[di].__origin_index__ !== \"undefined\") ? _list[di].__origin_index__ : di;\n                    if (_groupRow && \"__isGrouping\" in _list[di]) {\n                        rowTable = _groupRow;\n                        isGroupingRow = true;\n                    } else {\n                        rowTable = _bodyRow;\n                    }\n\n                    for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n\n                        SS.push('<tr class=\"tr-' + (di % 4) + '', (cfg.body.trStyleClass) ? (U.isFunction(cfg.body.trStyleClass)) ? ' ' + cfg.body.trStyleClass.call({\n                                item: _list[di],\n                                index: di\n                            }, _list[di], di) : ' ' + cfg.body.trStyleClass : '', '\"',\n\n                            (isGroupingRow) ? ' data-ax5grid-grouping-tr=\"true\"' : '',\n                            ' data-ax5grid-tr-data-index=\"' + di + '\"',\n                            ' data-ax5grid-tr-data-o-index=\"' + odi + '\"',\n                            ' data-ax5grid-selected=\"' + (_list[di][cfg.columnKeys.selected] || \"false\") + '\"',\n                            ' data-ax5grid-disable-selection=\"' + (_list[di][cfg.columnKeys.disableSelection] || \"false\") + '\"',\n                            '>');\n\n                        for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                            col = rowTable.rows[tri].cols[ci];\n                            cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                            colAlign = col.align || bodyAlign;\n\n                            SS.push('<td ',\n                                'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ',\n                                'data-ax5grid-data-index=\"' + di + '\" ',\n                                'data-ax5grid-data-o-index=\"' + odi + '\" ',\n                                'data-ax5grid-column-row=\"' + tri + '\" ',\n                                'data-ax5grid-column-col=\"' + ci + '\" ',\n                                'data-ax5grid-column-rowIndex=\"' + col.rowIndex + '\" ',\n                                'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ',\n                                'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ',\n                                (function (_focusedColumn, _selectedColumn) {\n                                    let attrs = \"\";\n                                    if (_focusedColumn) {\n                                        attrs += 'data-ax5grid-column-focused=\"true\" ';\n                                    }\n                                    if (_selectedColumn) {\n                                        attrs += 'data-ax5grid-column-selected=\"true\" ';\n                                    }\n                                    return attrs;\n                                })(this.focusedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex], this.selectedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex]),\n                                'colspan=\"' + col.colspan + '\" ',\n                                'rowspan=\"' + col.rowspan + '\" ',\n                                'class=\"' + (function (_col) {\n                                    let tdCSS_class = \"\";\n                                    if (_col.styleClass) {\n                                        if (U.isFunction(_col.styleClass)) {\n                                            tdCSS_class += _col.styleClass.call({\n                                                column: _col,\n                                                key: _col.key,\n                                                item: _list[di],\n                                                index: di\n                                            }) + \" \";\n                                        } else {\n                                            tdCSS_class += _col.styleClass + \" \";\n                                        }\n                                    }\n                                    if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                                    if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                                    return tdCSS_class;\n                                }).call(this, col) + '\" ',\n                                'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                            SS.push((function (_cellHeight) {\n                                // let lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2);\n                                // if (!col.multiLine) {\n                                //     _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                                // }\n                                return '<span data-ax5grid-cellHolder=\"' + ((col.multiLine) ? 'multiLine' : '') + '\" ' +\n                                    ((colAlign) ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') +\n                                    '\" >';\n\n                            })(cellHeight), (isGroupingRow) ? getGroupingValue.call(this, _list[di], di, col) : getFieldValue.call(this, _list, _list[di], di, col), '</span>');\n\n                            SS.push('</td>');\n                        }\n                        SS.push('<td ',\n                            'data-ax5grid-column-row=\"null\" ',\n                            'data-ax5grid-column-col=\"null\" ',\n                            'data-ax5grid-data-index=\"' + di + '\" ',\n                            'data-ax5grid-data-o-index=\"' + odi + '\" ',\n                            'data-ax5grid-column-attr=\"' + (\"default\") + '\" ',\n                            'style=\"height: ' + (cfg.body.columnHeight) + 'px;min-height: 1px;\" ',\n                            '></td>');\n                        SS.push('</tr>');\n                    }\n                }\n            }\n            SS.push('</table>');\n\n            if (isScrolled && _list.length) {\n                SS.push('<div style=\"background:repeating-linear-gradient(to bottom, ' + stripeString + ');' +\n                    'font-size:0;' +\n                    'line-height:0;height: ' + (_list.length - di) * _scrollConfig.bodyTrHeight + 'px;\"></div>');\n            }\n\n\n            _elTarget.empty();\n            SS = SS.join('');\n\n            _elTarget.get(0).innerHTML = SS;\n\n            this.$.livePanelKeys.push(_elTargetKey); // 사용중인 패널키를 모아둠. (뷰의 상태 변경시 사용하려고)\n            return true;\n        };\n\n        /**\n         * @param _elTargetKey\n         * @param _colGroup\n         * @param _bodyRow\n         * @param _list\n         * @param [_scrollConfig]\n         * @returns {boolean}\n         */\n        let repaintSum = function (_elTargetKey, _colGroup, _bodyRow, _list, _scrollConfig) {\n            let _elTarget = this.$.panel[_elTargetKey];\n\n            if (!isFirstPaint && !_scrollConfig) {\n                this.$.livePanelKeys.push(_elTargetKey); // 사용중인 패널키를 모아둠. (뷰의 상태 변경시 사용하려고)\n                return false;\n            }\n\n            let SS = [], cgi, cgl, tri, trl, ci, cl, col, cellHeight, colAlign;\n\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('<tr class=\"tr-sum\">');\n                for (ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    col = _bodyRow.rows[tri].cols[ci];\n                    cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                    colAlign = col.align || bodyAlign;\n\n                    SS.push('<td ',\n                        'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ',\n                        'data-ax5grid-column-row=\"' + tri + '\" ',\n                        'data-ax5grid-column-col=\"' + ci + '\" ',\n                        'data-ax5grid-column-rowIndex=\"' + tri + '\" ',\n                        'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ',\n                        'data-ax5grid-column-attr=\"' + (col.columnAttr || \"sum\") + '\" ',\n                        (function (_focusedColumn, _selectedColumn) {\n                            var attrs = \"\";\n                            if (_focusedColumn) {\n                                attrs += 'data-ax5grid-column-focused=\"true\" ';\n                            }\n                            if (_selectedColumn) {\n                                attrs += 'data-ax5grid-column-selected=\"true\" ';\n                            }\n                            return attrs;\n                        })(this.focusedColumn[\"sum_\" + col.colIndex + \"_\" + tri], this.selectedColumn[\"sum_\" + col.colIndex + \"_\" + tri]),\n                        'colspan=\"' + col.colspan + '\" ',\n                        'rowspan=\"' + col.rowspan + '\" ',\n                        'class=\"' + (function (_col) {\n                            var tdCSS_class = \"\";\n                            if (_col.styleClass) {\n                                if (U.isFunction(_col.styleClass)) {\n                                    tdCSS_class += _col.styleClass.call({\n                                        column: _col,\n                                        key: _col.key,\n                                        isFootSum: true\n                                    }) + \" \";\n                                } else {\n                                    tdCSS_class += _col.styleClass + \" \";\n                                }\n                            }\n                            if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                            if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                            return tdCSS_class;\n                        }).call(this, col) + '\" ',\n                        'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push((function (_cellHeight) {\n                        // let lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                        // if (!col.multiLine) {\n                        //     _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                        // }\n                        return '<span data-ax5grid-cellHolder=\"' + ((col.multiLine) ? 'multiLine' : '') + '\" ' +\n                            ((colAlign) ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') +\n                            '\" >';\n\n                    })(cellHeight), getSumFieldValue.call(this, _list, col), '</span>');\n\n                    SS.push('</td>');\n                }\n                SS.push('<td ',\n                    'data-ax5grid-column-row=\"null\" ',\n                    'data-ax5grid-column-col=\"null\" ',\n                    'data-ax5grid-column-attr=\"' + (\"sum\") + '\" ',\n                    'style=\"height: ' + (cfg.body.columnHeight) + 'px;min-height: 1px;\" ',\n                    '></td>');\n                SS.push('</tr>');\n            }\n\n            SS.push('</table>');\n\n            _elTarget.empty();\n            SS = SS.join('');\n\n            _elTarget.get(0).innerHTML = SS;\n\n            this.$.livePanelKeys.push(_elTargetKey); // 사용중인 패널키를 모아둠. (뷰의 상태 변경시 사용하려고)\n            return true;\n        };\n\n        /**\n         * @param _elTargetKey\n         * @param _colGroup\n         * @param _bodyRow\n         * @param _list\n         * @param [_scrollConfig]\n         * @returns {boolean}\n         */\n        let mergeCellsBody = function (_elTargetKey, _colGroup, _bodyRow, _list, _scrollConfig) {\n            let tblRowMaps = [];\n            let _elTarget = this.$.panel[_elTargetKey];\n            let token = {}, hasMergeTd;\n\n            // 테이블의 td들을 수잡하여 저장해두고 스크립트로 반복하여 정리.\n            let tableTrs = _elTarget.find(\"tr\");\n            for (let ri = 0, rl = tableTrs.length; ri < rl; ri++) {\n                let tableTrTds, trMaps;\n                tableTrTds = tableTrs[ri].childNodes;\n                trMaps = [];\n\n                for (let ci = 0, cl = tableTrTds.length; ci < cl; ci++) {\n                    let tdObj = {\n                        \"$\": jQuery(tableTrTds[ci])\n                    };\n\n                    if (tdObj[\"$\"].attr(\"data-ax5grid-column-col\") != \"null\") {\n                        tdObj.dindex = tdObj[\"$\"].attr(\"data-ax5grid-data-index\");\n                        tdObj.tri = tdObj[\"$\"].attr(\"data-ax5grid-column-row\");\n                        tdObj.ci = tdObj[\"$\"].attr(\"data-ax5grid-column-col\");\n                        tdObj.rowIndex = tdObj[\"$\"].attr(\"data-ax5grid-column-rowIndex\");\n                        tdObj.colIndex = tdObj[\"$\"].attr(\"data-ax5grid-column-colIndex\");\n                        tdObj.rowspan = tdObj[\"$\"].attr(\"rowspan\");\n                        tdObj.text = tdObj[\"$\"].text();\n                        trMaps.push(tdObj);\n                    }\n\n                    tdObj = null;\n                }\n                tblRowMaps.push(trMaps);\n            }\n\n            // 두줄이상 일 때 의미가 있으니.\n            if (tblRowMaps.length > 1) {\n                hasMergeTd = false;\n                for (let ri = 0, rl = tblRowMaps.length; ri < rl; ri++) {\n                    let prevTokenColIndexs = [];\n\n                    for (let ci = 0, cl = tblRowMaps[ri].length; ci < cl; ci++) {\n                        // 적용 하려는 컬럼에 editor 속성이 없다면 머지 대상입니다.\n\n                        if (!_colGroup[ci].editor && (() => {\n                                if (U.isArray(cfg.body.mergeCells)) {\n                                    return ax5.util.search(cfg.body.mergeCells, _colGroup[ci].key) > -1;\n                                } else {\n                                    return true;\n                                }\n                            })()) {\n\n                            // 앞줄과 값이 같다면.\n                            if (token[ci] && (() => {\n                                    if (prevTokenColIndexs.length > 0) {\n                                        let hasFalse = true;\n                                        prevTokenColIndexs.forEach(function (ti) {\n                                            if (tblRowMaps[ri - 1][ti].text != tblRowMaps[ri][ti].text) {\n                                                hasFalse = false;\n                                            }\n                                        });\n                                        return hasFalse;\n                                    } else {\n                                        return true;\n                                    }\n                                })() && token[ci].text == tblRowMaps[ri][ci].text) {\n                                tblRowMaps[ri][ci].rowspan = 0;\n                                tblRowMaps[token[ci].ri][ci].rowspan++;\n                                hasMergeTd = true;\n                            } else {\n                                token[ci] = {\n                                    ri: ri,\n                                    ci: ci,\n                                    text: tblRowMaps[ri][ci].text\n                                };\n                            }\n\n                            prevTokenColIndexs.push(ci);\n                        }\n                    }\n                }\n\n                // rowspan을 다 구했으면 적용합니다.\n                if (hasMergeTd) {\n                    for (let ri = 0, rl = tblRowMaps.length; ri < rl; ri++) {\n                        for (let ci = 0, cl = tblRowMaps[ri].length; ci < cl; ci++) {\n                            if (tblRowMaps[ri][ci].rowspan == 0) {\n                                tblRowMaps[ri][ci][\"$\"].remove();\n                            } else if (tblRowMaps[ri][ci].rowspan > 1) {\n                                tblRowMaps[ri][ci][\"$\"]\n                                    .attr(\"rowspan\", tblRowMaps[ri][ci].rowspan)\n                                    .addClass(\"merged\");\n                            }\n                        }\n                    }\n                }\n            }\n        };\n\n        let scrollConfig = {\n            paintStartRowIndex: paintStartRowIndex,\n            paintRowCount: paintRowCount,\n            paintStartColumnIndex: paintStartColumnIndex,\n            paintEndColumnIndex: paintEndColumnIndex,\n            nopaintLeftColumnsWidth: nopaintLeftColumnsWidth,\n            nopaintRightColumnsWidth: nopaintRightColumnsWidth,\n            bodyTrHeight: this.xvar.bodyTrHeight,\n            virtualScrollX: this.config.virtualScrollX,\n            virtualScrollY: this.config.virtualScrollY,\n        };\n        let frozenScrollConfig = jQuery.extend({}, scrollConfig, {\n            paintStartRowIndex: 0,\n            paintRowCount: this.xvar.frozenRowIndex\n        });\n\n        // aside\n        if (cfg.asidePanelWidth > 0) {\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                repaintBody.call(this, \"top-aside-body\", this.asideColGroup, asideBodyRowData, asideBodyGroupingData, list.slice(0, this.xvar.frozenRowIndex), frozenScrollConfig);\n            }\n\n            repaintBody.call(this, \"aside-body-scroll\", this.asideColGroup, asideBodyRowData, asideBodyGroupingData, list, scrollConfig);\n\n            if (cfg.footSum) {\n                // 바닥 요약 (footSum에 대한 aside 사용안함)\n                repaintSum.call(this, \"bottom-aside-body\", this.asideColGroup, asideBodyRowData, null, this.list);\n            }\n        }\n\n        // left\n        if (this.xvar.frozenColumnIndex > 0) {\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                repaintBody.call(this, \"top-left-body\", this.leftHeaderColGroup, leftBodyRowData, leftBodyGroupingData, list.slice(0, this.xvar.frozenRowIndex), frozenScrollConfig);\n            }\n\n            repaintBody.call(this, \"left-body-scroll\", this.leftHeaderColGroup, leftBodyRowData, leftBodyGroupingData, list, scrollConfig);\n\n            if (cfg.footSum && this.needToPaintSum) {\n                // 바닥 요약\n                repaintSum.call(this, \"bottom-left-body\", this.leftHeaderColGroup, leftFootSumData, this.list);\n            }\n        }\n\n        // body\n        if (this.xvar.frozenRowIndex > 0) {\n            // 상단 행고정\n            repaintBody.call(this, \"top-body-scroll\", headerColGroup, bodyRowData, bodyGroupingData, list.slice(0, this.xvar.frozenRowIndex), frozenScrollConfig);\n        }\n        repaintBody.call(this, \"body-scroll\", headerColGroup, bodyRowData, bodyGroupingData, list, scrollConfig);\n\n        // 바닥 요약\n        if (cfg.footSum && this.needToPaintSum) {\n            repaintSum.call(this, \"bottom-body-scroll\", headerColGroup, footSumData, this.list, scrollConfig);\n        }\n        // right\n        if (cfg.rightSum) {\n            // todo : right 표현 정리\n        }\n\n        /// mergeCells\n        if (cfg.body.mergeCells && list.length) {\n            // left\n            if (this.xvar.frozenColumnIndex > 0) {\n                if (this.xvar.frozenRowIndex > 0) { // 상단 행고정\n                    // console.log(this.leftHeaderColGroup, leftBodyRowData);\n                    mergeCellsBody.call(this, \"top-left-body\", this.leftHeaderColGroup, leftBodyRowData, list.slice(0, this.xvar.frozenRowIndex));\n                }\n                mergeCellsBody.call(this, \"left-body-scroll\", this.leftHeaderColGroup, leftBodyRowData, list, scrollConfig);\n            }\n\n            // body\n            if (this.xvar.frozenRowIndex > 0) { // 상단 행고정\n                mergeCellsBody.call(this, \"top-body-scroll\", this.headerColGroup, bodyRowData, list.slice(0, this.xvar.frozenRowIndex));\n            }\n            mergeCellsBody.call(this, \"body-scroll\", this.headerColGroup, bodyRowData, list, scrollConfig);\n        }\n\n        this.xvar.virtualPaintStartRowIndex = virtualPaintStartRowIndex;\n        this.xvar.paintStartRowIndex = paintStartRowIndex;\n        this.xvar.paintRowCount = paintRowCount;\n        this.xvar.virtualPaintRowCount = virtualPaintRowCount;\n        this.xvar.paintStartColumnIndex = paintStartColumnIndex;\n        this.xvar.paintEndColumnIndex = paintEndColumnIndex;\n        this.xvar.nopaintLeftColumnsWidth = nopaintLeftColumnsWidth;\n        this.xvar.nopaintRightColumnsWidth = nopaintRightColumnsWidth;\n        this.xvar.dataRowCount = list.length;\n        this.needToPaintSum = false;\n\n        GRID.page.statusUpdate.call(this);\n    };\n\n    const repaintCell = function (_panelName, _dindex, _doindex, _rowIndex, _colIndex, _newValue) {\n        let self = this,\n            cfg = this.config,\n            list = this.list;\n\n        let updateCell = this.$[\"panel\"][_panelName]\n                .find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]')\n                .find('[data-ax5grid-column-rowindex=\"' + _rowIndex + '\"][data-ax5grid-column-colindex=\"' + _colIndex + '\"]')\n                .find('[data-ax5grid-cellholder]'),\n            colGroup = this.colGroup,\n            col = colGroup[_colIndex];\n\n        updateCell.html(getFieldValue.call(this, list, list[_dindex], _dindex, col));\n\n        if (col.editor && col.editor.updateWith) {\n            col.editor.updateWith.forEach(function (updateColumnKey) {\n                colGroup.forEach(function (col) {\n                    if (col.key == updateColumnKey) {\n                        let rowIndex = col.rowIndex, colIndex = col.colIndex,\n                            panelName = GRID.util.findPanelByColumnIndex.call(self, _dindex, colIndex, rowIndex).panelName,\n                            updateWithCell = self.$[\"panel\"][panelName]\n                                .find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]')\n                                .find('[data-ax5grid-column-rowindex=\"' + rowIndex + '\"][data-ax5grid-column-colindex=\"' + colIndex + '\"]')\n                                .find('[data-ax5grid-cellholder]');\n\n                        updateWithCell.html(getFieldValue.call(self, list, list[_dindex], _dindex, col));\n                    }\n                });\n            });\n        }\n\n        /// ~~~~~~\n\n        let paintStartRowIndex = Math.floor(Math.abs(this.$.panel[\"body-scroll\"].position().top) / this.xvar.bodyTrHeight) + this.xvar.frozenRowIndex,\n            headerColGroup = this.headerColGroup,\n            leftFootSumData = this.leftFootSumData,\n            footSumData = this.footSumData,\n            leftBodyGroupingData = this.leftBodyGroupingData,\n            bodyGroupingData = this.bodyGroupingData,\n            bodyAlign = cfg.body.align,\n            paintRowCount = Math.ceil(this.$.panel[\"body\"].height() / this.xvar.bodyTrHeight) + 1,\n            scrollConfig = {\n                paintStartRowIndex: paintStartRowIndex,\n                paintRowCount: paintRowCount,\n                bodyTrHeight: this.xvar.bodyTrHeight\n            };\n\n        if (this.xvar.nopaintLeftColumnsWidth || this.xvar.nopaintRightColumnsWidth) {\n            headerColGroup = [].concat(headerColGroup).splice(this.xvar.paintStartColumnIndex, this.xvar.paintEndColumnIndex - this.xvar.paintStartColumnIndex + 1);\n            if (cfg.body.grouping) {\n                bodyGroupingData = GRID.util.getTableByStartEndColumnIndex(bodyGroupingData, this.xvar.paintStartColumnIndex, this.xvar.paintEndColumnIndex);\n            }\n            if (cfg.footSum) {\n                footSumData = GRID.util.getTableByStartEndColumnIndex(footSumData, this.xvar.paintStartColumnIndex, this.xvar.paintEndColumnIndex);\n            }\n        }\n\n        let repaintSum = function (_elTargetKey, _colGroup, _bodyRow, _list, _scrollConfig) {\n            let _elTarget = this.$.panel[_elTargetKey],\n                SS = [],\n                cgi, cgl, tri, trl, ci, cl, col, cellHeight, colAlign;\n\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('<tr class=\"tr-sum\">');\n                for (ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    col = _bodyRow.rows[tri].cols[ci];\n                    cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                    colAlign = col.align || bodyAlign;\n\n                    SS.push('<td ',\n                        'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ',\n                        'data-ax5grid-column-row=\"' + tri + '\" ',\n                        'data-ax5grid-column-col=\"' + ci + '\" ',\n                        'data-ax5grid-column-rowIndex=\"' + tri + '\" ',\n                        'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ',\n                        'data-ax5grid-column-attr=\"' + (col.columnAttr || \"sum\") + '\" ',\n                        (function (_focusedColumn, _selectedColumn) {\n                            var attrs = \"\";\n                            if (_focusedColumn) {\n                                attrs += 'data-ax5grid-column-focused=\"true\" ';\n                            }\n                            if (_selectedColumn) {\n                                attrs += 'data-ax5grid-column-selected=\"true\" ';\n                            }\n                            return attrs;\n                        })(this.focusedColumn[\"sum_\" + col.colIndex + \"_\" + tri], this.selectedColumn[\"sum_\" + col.colIndex + \"_\" + tri]),\n                        'colspan=\"' + col.colspan + '\" ',\n                        'rowspan=\"' + col.rowspan + '\" ',\n                        'class=\"' + (function (_col) {\n                            let tdCSS_class = \"\";\n                            if (_col.styleClass) {\n                                if (U.isFunction(_col.styleClass)) {\n                                    tdCSS_class += _col.styleClass.call({\n                                        column: _col,\n                                        key: _col.key,\n                                        isFootSum: true\n                                    }) + \" \";\n                                } else {\n                                    tdCSS_class += _col.styleClass + \" \";\n                                }\n                            }\n                            if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                            if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                            return tdCSS_class;\n                        }).call(this, col) + '\" ',\n                        'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push((function (_cellHeight) {\n                        // let lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                        // if (!col.multiLine) {\n                        //     _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                        // }\n\n                        return '<span data-ax5grid-cellHolder=\"' + ((col.multiLine) ? 'multiLine' : '') + '\" ' +\n                            ((colAlign) ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') +\n                            '\" >';\n\n                    })(cellHeight), getSumFieldValue.call(this, _list, col), '</span>');\n\n                    SS.push('</td>');\n                }\n                SS.push('<td ',\n                    'data-ax5grid-column-row=\"null\" ',\n                    'data-ax5grid-column-col=\"null\" ',\n                    'data-ax5grid-column-attr=\"' + (\"sum\") + '\" ',\n                    'style=\"height: ' + (cfg.body.columnHeight) + 'px;min-height: 1px;\" ',\n                    '></td>');\n                SS.push('</tr>');\n            }\n\n            SS.push('</table>');\n\n            _elTarget.empty().get(0).innerHTML = SS.join('');\n            return true;\n        };\n        let replaceGroupTr = function (_elTargetKey, _colGroup, _groupRow, _list, _scrollConfig) {\n            let _elTarget = this.$.panel[_elTargetKey],\n                SS = [],\n                di, dl, tri, trl, ci, cl,\n                col, cellHeight, colAlign;\n\n            for (di = _scrollConfig.paintStartRowIndex, dl = (function () {\n                let len;\n                len = _list.length;\n                if (_scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex < len) {\n                    len = _scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex;\n                }\n                return len;\n            })(); di < dl; di++) {\n                if (_list[di] && _groupRow && \"__isGrouping\" in _list[di]) {\n                    let rowTable = _groupRow;\n                    SS = [];\n                    for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n                        for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                            col = rowTable.rows[tri].cols[ci];\n                            cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                            colAlign = col.align || bodyAlign;\n\n                            SS.push('<td ',\n                                'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ',\n                                'data-ax5grid-data-index=\"' + di + '\" ',\n                                'data-ax5grid-column-row=\"' + tri + '\" ',\n                                'data-ax5grid-column-col=\"' + ci + '\" ',\n                                'data-ax5grid-column-rowIndex=\"' + col.rowIndex + '\" ',\n                                'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ',\n                                'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ',\n                                (function (_focusedColumn, _selectedColumn) {\n                                    let attrs = \"\";\n                                    if (_focusedColumn) {\n                                        attrs += 'data-ax5grid-column-focused=\"true\" ';\n                                    }\n                                    if (_selectedColumn) {\n                                        attrs += 'data-ax5grid-column-selected=\"true\" ';\n                                    }\n                                    return attrs;\n                                })(this.focusedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex], this.selectedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex]),\n                                'colspan=\"' + col.colspan + '\" ',\n                                'rowspan=\"' + col.rowspan + '\" ',\n                                'class=\"' + (function (_col) {\n                                    let tdCSS_class = \"\";\n                                    if (_col.styleClass) {\n                                        if (U.isFunction(_col.styleClass)) {\n                                            tdCSS_class += _col.styleClass.call({\n                                                column: _col,\n                                                key: _col.key,\n                                                item: _list[di],\n                                                index: di\n                                            }) + \" \";\n                                        } else {\n                                            tdCSS_class += _col.styleClass + \" \";\n                                        }\n                                    }\n                                    if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                                    if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                                    return tdCSS_class;\n                                }).call(this, col) + '\" ',\n                                'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                            SS.push((function (_cellHeight) {\n                                // let lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                                // if (!col.multiLine) {\n                                //     _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                                // }\n\n                                return '<span data-ax5grid-cellHolder=\"' + ((col.multiLine) ? 'multiLine' : '') + '\" ' +\n                                    ((colAlign) ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') +\n                                    '\" >';\n\n                            })(cellHeight), getGroupingValue.call(this, _list[di], di, col), '</span>');\n\n                            SS.push('</td>');\n                        }\n                        SS.push('<td ',\n                            'data-ax5grid-column-row=\"null\" ',\n                            'data-ax5grid-column-col=\"null\" ',\n                            'data-ax5grid-data-index=\"' + di + '\" ',\n                            'data-ax5grid-column-attr=\"' + (\"default\") + '\" ',\n                            'style=\"height: ' + (cfg.body.columnHeight) + 'px;min-height: 1px;\" ',\n                            '></td>');\n                    }\n                    _elTarget.find('tr[data-ax5grid-tr-data-index=\"' + di + '\"]').empty().get(0).innerHTML = SS.join('');\n                }\n            }\n        };\n\n        // body.grouping tr 다시 그리기..\n        if (cfg.body.grouping) {\n            // left\n            if (this.xvar.frozenColumnIndex > 0) {\n                if (this.xvar.frozenRowIndex > 0) {\n                    // 상단 행고정\n                    replaceGroupTr.call(this, \"top-left-body\", headerColGroup, leftBodyGroupingData, list.slice(0, this.xvar.frozenRowIndex), {\n                        paintStartRowIndex: 0,\n                        paintRowCount: this.xvar.frozenRowIndex,\n                        bodyTrHeight: this.xvar.bodyTrHeight\n                    });\n                }\n                replaceGroupTr.call(this, \"left-body-scroll\", headerColGroup, leftBodyGroupingData, list, scrollConfig);\n            }\n\n            // body\n            if (this.xvar.frozenRowIndex > 0) {\n                // 상단 행고정\n                replaceGroupTr.call(this, \"top-body-scroll\", headerColGroup, bodyGroupingData, list.slice(0, this.xvar.frozenRowIndex), {\n                    paintStartRowIndex: 0,\n                    paintRowCount: this.xvar.frozenRowIndex,\n                    bodyTrHeight: this.xvar.bodyTrHeight\n                });\n            }\n\n            replaceGroupTr.call(this, \"body-scroll\", headerColGroup, bodyGroupingData, list, scrollConfig);\n        }\n\n        if (this.xvar.frozenColumnIndex > 0) {\n            if (cfg.footSum && this.needToPaintSum) {\n                // 바닥 요약\n                repaintSum.call(this, \"bottom-left-body\", headerColGroup, leftFootSumData, list);\n            }\n        }\n\n        if (cfg.footSum && this.needToPaintSum) {\n            // 바닥 요약\n            repaintSum.call(this, \"bottom-body-scroll\", headerColGroup, footSumData, list, scrollConfig);\n        }\n    };\n\n    const repaintRow = function (_dindex) {\n        let self = this,\n            cfg = this.config,\n            list = this.list;\n        /// ~~~~~~\n\n        let paintStartRowIndex = Math.floor(Math.abs(this.$.panel[\"body-scroll\"].position().top) / this.xvar.bodyTrHeight) + this.xvar.frozenRowIndex,\n            asideBodyRowData = this.asideBodyRowData,\n            leftBodyRowData = this.leftBodyRowData,\n            bodyRowData = this.bodyRowData,\n            leftFootSumData = this.leftFootSumData,\n            footSumData = this.footSumData,\n            asideBodyGroupingData = this.asideBodyGroupingData,\n            leftBodyGroupingData = this.leftBodyGroupingData,\n            bodyGroupingData = this.bodyGroupingData,\n            bodyAlign = cfg.body.align,\n            paintRowCount = Math.ceil(this.$.panel[\"body\"].height() / this.xvar.bodyTrHeight) + 1,\n            scrollConfig = {\n                paintStartRowIndex: paintStartRowIndex,\n                paintRowCount: paintRowCount,\n                bodyTrHeight: this.xvar.bodyTrHeight\n            };\n\n        let repaintSum = function (_elTargetKey, _colGroup, _bodyRow, _list) {\n            let _elTarget = this.$.panel[_elTargetKey],\n                SS = [],\n                cgi, cgl, tri, trl, ci, cl, col, cellHeight, colAlign;\n\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('<tr class=\"tr-sum\">');\n                for (ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    col = _bodyRow.rows[tri].cols[ci];\n                    cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                    colAlign = col.align || bodyAlign;\n\n                    SS.push('<td ',\n                        'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ',\n                        'data-ax5grid-column-row=\"' + tri + '\" ',\n                        'data-ax5grid-column-col=\"' + ci + '\" ',\n                        'data-ax5grid-column-rowIndex=\"' + tri + '\" ',\n                        'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ',\n                        'data-ax5grid-column-attr=\"' + (col.columnAttr || \"sum\") + '\" ',\n                        (function (_focusedColumn, _selectedColumn) {\n                            var attrs = \"\";\n                            if (_focusedColumn) {\n                                attrs += 'data-ax5grid-column-focused=\"true\" ';\n                            }\n                            if (_selectedColumn) {\n                                attrs += 'data-ax5grid-column-selected=\"true\" ';\n                            }\n                            return attrs;\n                        })(this.focusedColumn[\"sum_\" + col.colIndex + \"_\" + tri], this.selectedColumn[\"sum_\" + col.colIndex + \"_\" + tri]),\n                        'colspan=\"' + col.colspan + '\" ',\n                        'rowspan=\"' + col.rowspan + '\" ',\n                        'class=\"' + (function (_col) {\n                            var tdCSS_class = \"\";\n                            if (_col.styleClass) {\n                                if (U.isFunction(_col.styleClass)) {\n                                    tdCSS_class += _col.styleClass.call({\n                                        column: _col,\n                                        key: _col.key,\n                                        isFootSum: true\n                                    }) + \" \";\n                                } else {\n                                    tdCSS_class += _col.styleClass + \" \";\n                                }\n                            }\n                            if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                            if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                            return tdCSS_class;\n                        }).call(this, col) + '\" ',\n                        'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                    SS.push((function (_cellHeight) {\n                        // var lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                        // if (!col.multiLine) {\n                        //     _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                        // }\n\n                        return '<span data-ax5grid-cellHolder=\"' + ((col.multiLine) ? 'multiLine' : '') + '\" ' +\n                            ((colAlign) ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') +\n                            '\" >';\n\n                    })(cellHeight), getSumFieldValue.call(this, _list, col), '</span>');\n\n                    SS.push('</td>');\n                }\n                SS.push('<td ',\n                    'data-ax5grid-column-row=\"null\" ',\n                    'data-ax5grid-column-col=\"null\" ',\n                    'data-ax5grid-column-attr=\"' + (\"sum\") + '\" ',\n                    'style=\"height: ' + (cfg.body.columnHeight) + 'px;min-height: 1px;\" ',\n                    '></td>');\n                SS.push('</tr>');\n            }\n\n            SS.push('</table>');\n\n            _elTarget.empty().get(0).innerHTML = SS.join('');\n            return true;\n        };\n        let replaceGroupTr = function (_elTargetKey, _colGroup, _groupRow, _list, _scrollConfig) {\n            let _elTarget = this.$.panel[_elTargetKey],\n                SS = [],\n                di, dl, tri, trl, ci, cl, col, cellHeight, colAlign;\n\n            if (typeof _scrollConfig === \"undefined\" || typeof _scrollConfig['paintStartRowIndex'] === \"undefined\") {\n                _scrollConfig = {\n                    paintStartRowIndex: 0,\n                    paintRowCount: _list.length\n                };\n            }\n\n            for (di = _scrollConfig.paintStartRowIndex, dl = (function () {\n                let len;\n                len = _list.length;\n                if (_scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex < len) {\n                    len = _scrollConfig.paintRowCount + _scrollConfig.paintStartRowIndex;\n                }\n                return len;\n            })(); di < dl; di++) {\n                if (_list[di] && _groupRow && \"__isGrouping\" in _list[di]) {\n                    let rowTable = _groupRow;\n                    SS = [];\n                    for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n                        for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                            col = rowTable.rows[tri].cols[ci];\n                            cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                            colAlign = col.align || bodyAlign;\n\n                            SS.push('<td ',\n                                'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ',\n                                'data-ax5grid-data-index=\"' + di + '\" ',\n                                'data-ax5grid-column-row=\"' + tri + '\" ',\n                                'data-ax5grid-column-col=\"' + ci + '\" ',\n                                'data-ax5grid-column-rowIndex=\"' + col.rowIndex + '\" ',\n                                'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ',\n                                'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ',\n                                (function (_focusedColumn, _selectedColumn) {\n                                    let attrs = \"\";\n                                    if (_focusedColumn) {\n                                        attrs += 'data-ax5grid-column-focused=\"true\" ';\n                                    }\n                                    if (_selectedColumn) {\n                                        attrs += 'data-ax5grid-column-selected=\"true\" ';\n                                    }\n                                    return attrs;\n                                })(this.focusedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex], this.selectedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex]),\n                                'colspan=\"' + col.colspan + '\" ',\n                                'rowspan=\"' + col.rowspan + '\" ',\n                                'class=\"' + (function (_col) {\n                                    let tdCSS_class = \"\";\n                                    if (_col.styleClass) {\n                                        if (U.isFunction(_col.styleClass)) {\n                                            tdCSS_class += _col.styleClass.call({\n                                                column: _col,\n                                                key: _col.key,\n                                                item: _list[di],\n                                                index: di\n                                            }) + \" \";\n                                        } else {\n                                            tdCSS_class += _col.styleClass + \" \";\n                                        }\n                                    }\n                                    if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                                    if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                                    return tdCSS_class;\n                                }).call(this, col) + '\" ',\n                                'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                            SS.push((function (_cellHeight) {\n                                // let lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                                // if (!col.multiLine) {\n                                //     _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                                // }\n\n                                return '<span data-ax5grid-cellHolder=\"' + ((col.multiLine) ? 'multiLine' : '') + '\" ' +\n                                    ((colAlign) ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') +\n                                    '\" >';\n\n                            })(cellHeight), getGroupingValue.call(this, _list[di], di, col), '</span>');\n\n                            SS.push('</td>');\n                        }\n                        SS.push('<td ',\n                            'data-ax5grid-column-row=\"null\" ',\n                            'data-ax5grid-column-col=\"null\" ',\n                            'data-ax5grid-data-index=\"' + di + '\" ',\n                            'data-ax5grid-column-attr=\"' + (\"default\") + '\" ',\n                            'style=\"height: ' + (cfg.body.columnHeight) + 'px;min-height: 1px;\" ',\n                            '></td>');\n                    }\n                    _elTarget.find('tr[data-ax5grid-tr-data-index=\"' + di + '\"]').empty().get(0).innerHTML = SS.join('');\n                }\n            }\n        };\n        let replaceTr = function (_elTargetKey, _colGroup, _bodyRow, _list, di) {\n            let _elTarget = this.$.panel[_elTargetKey],\n                SS = [],\n                tri, trl, ci, cl, col, cellHeight, colAlign, rowTable = _bodyRow,\n                odi = (typeof _list[di].__origin_index__ !== \"undefined\") ? _list[di].__origin_index__ : di;\n\n            let tr_element = _elTarget.find('tr[data-ax5grid-tr-data-index=\"' + di + '\"]').empty().get(0);\n            if (tr_element) {\n                for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n                    for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                        col = rowTable.rows[tri].cols[ci];\n                        cellHeight = cfg.body.columnHeight * col.rowspan - cfg.body.columnBorderWidth;\n                        colAlign = col.align || bodyAlign;\n\n                        SS.push('<td ',\n                            'data-ax5grid-panel-name=\"' + _elTargetKey + '\" ',\n                            'data-ax5grid-data-index=\"' + di + '\" ',\n                            'data-ax5grid-data-o-index=\"' + odi + '\" ',\n                            'data-ax5grid-column-row=\"' + tri + '\" ',\n                            'data-ax5grid-column-col=\"' + ci + '\" ',\n                            'data-ax5grid-column-rowIndex=\"' + col.rowIndex + '\" ',\n                            'data-ax5grid-column-colIndex=\"' + col.colIndex + '\" ',\n                            'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ',\n                            (function (_focusedColumn, _selectedColumn) {\n                                let attrs = \"\";\n                                if (_focusedColumn) {\n                                    attrs += 'data-ax5grid-column-focused=\"true\" ';\n                                }\n                                if (_selectedColumn) {\n                                    attrs += 'data-ax5grid-column-selected=\"true\" ';\n                                }\n                                return attrs;\n                            })(this.focusedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex], this.selectedColumn[di + \"_\" + col.colIndex + \"_\" + col.rowIndex]),\n                            'colspan=\"' + col.colspan + '\" ',\n                            'rowspan=\"' + col.rowspan + '\" ',\n                            'class=\"' + (function (_col) {\n                                let tdCSS_class = \"\";\n                                if (_col.styleClass) {\n                                    if (U.isFunction(_col.styleClass)) {\n                                        tdCSS_class += _col.styleClass.call({\n                                            column: _col,\n                                            key: _col.key,\n                                            item: _list[di],\n                                            index: di\n                                        }) + \" \";\n                                    } else {\n                                        tdCSS_class += _col.styleClass + \" \";\n                                    }\n                                }\n                                if (cfg.body.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                                if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                                return tdCSS_class;\n                            }).call(this, col) + '\" ',\n                            'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n\n                        SS.push((function (_cellHeight) {\n                            // let lineHeight = (cfg.body.columnHeight - cfg.body.columnPadding * 2 - cfg.body.columnBorderWidth);\n                            // if (!col.multiLine) {\n                            //     _cellHeight = cfg.body.columnHeight - cfg.body.columnBorderWidth;\n                            // }\n                            return '<span data-ax5grid-cellHolder=\"' + ((col.multiLine) ? 'multiLine' : '') + '\" ' +\n                                ((colAlign) ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') +\n                                '\" >';\n\n                        })(cellHeight), getFieldValue.call(this, _list, _list[di], di, col), '</span>');\n                        SS.push('</td>');\n                    }\n                    SS.push('<td ',\n                        'data-ax5grid-column-row=\"null\" ',\n                        'data-ax5grid-column-col=\"null\" ',\n                        'data-ax5grid-data-index=\"' + di + '\" ',\n                        'data-ax5grid-column-attr=\"' + (\"default\") + '\" ',\n                        'style=\"height: ' + (cfg.body.columnHeight) + 'px;min-height: 1px;\" ',\n                        '></td>');\n                }\n                tr_element.innerHTML = SS.join('');\n            }\n        };\n\n        // left\n        if (this.xvar.frozenColumnIndex > 0) {\n            if (this.xvar.frozenRowIndex > _dindex) {\n                // 상단 행고정\n                replaceTr.call(this, \"top-left-body\", this.leftHeaderColGroup, leftBodyRowData, list.slice(0, this.xvar.frozenRowIndex), _dindex);\n            } else {\n                replaceTr.call(this, \"left-body-scroll\", this.leftHeaderColGroup, leftBodyRowData, list, _dindex);\n            }\n        }\n\n        // body\n        if (this.xvar.frozenRowIndex > _dindex) {\n            // 상단 행고정\n            replaceTr.call(this, \"top-body-scroll\", this.headerColGroup, bodyRowData, list.slice(0, this.xvar.frozenRowIndex), _dindex);\n        } else {\n            replaceTr.call(this, \"body-scroll\", this.headerColGroup, bodyRowData, list, _dindex);\n        }\n\n        // body.grouping tr 다시 그리기..\n        if (cfg.body.grouping) {\n            // left\n            if (this.xvar.frozenColumnIndex > 0) {\n                if (this.xvar.frozenRowIndex > _dindex) {\n                    // 상단 행고정\n                    replaceGroupTr.call(this, \"top-left-body\", this.leftHeaderColGroup, leftBodyGroupingData, list.slice(0, this.xvar.frozenRowIndex));\n                }\n                else {\n                    replaceGroupTr.call(this, \"left-body-scroll\", this.leftHeaderColGroup, leftBodyGroupingData, list, scrollConfig);\n                }\n            }\n\n            // body\n            if (this.xvar.frozenRowIndex > _dindex) {\n                // 상단 행고정\n                replaceGroupTr.call(this, \"top-body-scroll\", this.headerColGroup, bodyGroupingData, list.slice(0, this.xvar.frozenRowIndex));\n            }\n            else {\n                replaceGroupTr.call(this, \"body-scroll\", this.headerColGroup, bodyGroupingData, list, scrollConfig);\n            }\n        }\n\n        if (this.xvar.frozenColumnIndex > 0) {\n            if (cfg.footSum && this.needToPaintSum) {\n                // 바닥 요약\n                repaintSum.call(this, \"bottom-left-body\", this.leftHeaderColGroup, leftFootSumData, list);\n            }\n        }\n\n        if (cfg.footSum && this.needToPaintSum) {\n            // 바닥 요약\n            repaintSum.call(this, \"bottom-body-scroll\", this.headerColGroup, footSumData, list, scrollConfig);\n        }\n    };\n\n    const scrollTo = function (css, opts) {\n        if (typeof opts === \"undefined\") opts = {timeoutUnUse: false};\n        if (this.isInlineEditing) {\n            for (var key in this.inlineEditing) {\n                //if(this.inlineEditing[key].editor.type === \"select\") {}\n                // 인라인 에디팅 인데 스크롤 이벤트가 발생하면 디액티브 처리\n                GRID.body.inlineEdit.deActive.call(this, \"ESC\", key);\n            }\n        }\n\n        if (this.config.asidePanelWidth > 0 && \"top\" in css) {\n            this.$.panel[\"aside-body-scroll\"].css({top: css.top});\n        }\n        if (this.xvar.frozenColumnIndex > 0 && \"top\" in css) {\n            this.$.panel[\"left-body-scroll\"].css({top: css.top});\n        }\n        if (this.xvar.frozenRowIndex > 0 && \"left\" in css) {\n            this.$.panel[\"top-body-scroll\"].css({left: css.left});\n        }\n\n        this.$.panel[\"body-scroll\"].css(css);\n\n        if (this.config.footSum && \"left\" in css) {\n            this.$.panel[\"bottom-body-scroll\"].css({left: css.left});\n        }\n\n        // 바디 리페인팅 this.__throttledScroll 은 body init 에서 초기화\n        if (this.__throttledScroll) {\n            this.__throttledScroll(css, opts);\n        } else {\n            if (this.config.virtualScrollY && !opts.noRepaint && \"top\" in css) {\n                repaint.call(this);\n            } else if (this.config.virtualScrollX && !opts.noRepaint && \"left\" in css) {\n                repaint.call(this);\n            }\n            if (opts.callback) {\n                opts.callback();\n            }\n        }\n    };\n\n    const blur = function () {\n        columnSelect.focusClear.call(this);\n        columnSelect.clear.call(this);\n        if (this.isInlineEditing) {\n            inlineEdit.deActive.call(this);\n        }\n    };\n\n    const moveFocus = function (_position) {\n        let focus = {\n            \"UD\": function (_dy) {\n                let moveResult = true,\n                    focusedColumn, originalColumn, while_i,\n                    nPanelInfo;\n\n                for (let c in this.focusedColumn) {\n                    focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n                    break;\n                }\n\n                if (!focusedColumn) return false;\n\n                originalColumn = this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex];\n                columnSelect.focusClear.call(this);\n                columnSelect.clear.call(this);\n\n                if (_dy > 0) {\n                    // 아래로\n                    if (focusedColumn.rowIndex + (originalColumn.rowspan - 1) + _dy > this.bodyRowTable.rows.length - 1) {\n                        focusedColumn.dindex = focusedColumn.dindex + _dy;\n                        focusedColumn.doindex = focusedColumn.doindex + _dy;\n                        focusedColumn.rowIndex = 0;\n                        if (focusedColumn.dindex > this.list.length - 1) {\n                            focusedColumn.dindex = focusedColumn.doindex = this.list.length - 1;\n                            moveResult = false;\n                        }\n                    } else {\n                        focusedColumn.rowIndex = focusedColumn.rowIndex + _dy;\n                    }\n                }\n                else {\n                    // 위로\n                    if (focusedColumn.rowIndex + _dy < 0) {\n                        focusedColumn.dindex = focusedColumn.dindex + _dy;\n                        focusedColumn.doindex = focusedColumn.doindex + _dy;\n                        focusedColumn.rowIndex = this.bodyRowTable.rows.length - 1;\n                        if (focusedColumn.dindex < 0) {\n                            focusedColumn.dindex = focusedColumn.doindex = 0;\n                            moveResult = false;\n                        }\n                    } else {\n                        focusedColumn.rowIndex = focusedColumn.rowIndex + _dy;\n                    }\n                }\n\n                while_i = 0;\n                while (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                    if (focusedColumn.rowIndex == 0 || while_i % 2 == ((_dy > 0) ? 0 : 1)) {\n                        focusedColumn.colIndex--;\n                    } else {\n                        focusedColumn.rowIndex--;\n                    }\n\n                    if (focusedColumn.rowIndex <= 0 && focusedColumn.colIndex <= 0) {\n                        // find fail\n                        moveResult = false;\n                        break;\n                    }\n                    while_i++;\n                }\n\n                nPanelInfo = GRID.util.findPanelByColumnIndex.call(this, focusedColumn.dindex, focusedColumn.colIndex);\n\n                // if mergeCells\n                if (this.config.body.mergeCells && this.list.length) {\n                    while (!this.$.panel[nPanelInfo.panelName]\n                        .find('[data-ax5grid-tr-data-index=\"' + focusedColumn.dindex + '\"]')\n                        .find('[data-ax5grid-column-rowindex=\"' + focusedColumn.rowIndex + '\"][data-ax5grid-column-colindex=\"' + focusedColumn.colIndex + '\"]').get(0)) {\n\n                        if (_dy > 0) {\n                            focusedColumn.dindex++;\n                        } else {\n                            focusedColumn.dindex--;\n                        }\n\n                        if (focusedColumn.dindex < 0 || focusedColumn.dindex > this.list.length - 1) {\n                            break;\n                        }\n                    }\n                    nPanelInfo = GRID.util.findPanelByColumnIndex.call(this, focusedColumn.dindex, focusedColumn.colIndex);\n                }\n\n                focusedColumn.panelName = nPanelInfo.panelName;\n\n                // 포커스 컬럼의 위치에 따라 스크롤 처리.ㅊㅇ\n\n                if (focusedColumn.dindex + 1 > this.xvar.frozenRowIndex) {\n                    if (focusedColumn.dindex <= this.xvar.virtualPaintStartRowIndex) {\n                        let newTop = (focusedColumn.dindex - this.xvar.frozenRowIndex - 1) * this.xvar.bodyTrHeight;\n                        if (newTop < 0) newTop = 0;\n                        scrollTo.call(this, {top: -newTop, timeoutUnUse: false});\n                        GRID.scroller.resize.call(this);\n                    }\n                    else if (focusedColumn.dindex + 1 > this.xvar.virtualPaintStartRowIndex + (this.xvar.virtualPaintRowCount - 2)) {\n                        scrollTo.call(this, {top: (this.xvar.virtualPaintRowCount - 2 - focusedColumn.dindex) * this.xvar.bodyTrHeight, timeoutUnUse: false});\n                        GRID.scroller.resize.call(this);\n                    }\n                }\n\n                this.focusedColumn[focusedColumn.dindex + \"_\" + focusedColumn.colIndex + \"_\" + focusedColumn.rowIndex] = focusedColumn;\n                this.$.panel[focusedColumn.panelName]\n                    .find('[data-ax5grid-tr-data-index=\"' + focusedColumn.dindex + '\"]')\n                    .find('[data-ax5grid-column-rowindex=\"' + focusedColumn.rowIndex + '\"][data-ax5grid-column-colindex=\"' + focusedColumn.colIndex + '\"]')\n                    .attr('data-ax5grid-column-focused', \"true\");\n\n                return moveResult;\n            },\n            \"LR\": function (_dx) {\n                let moveResult = true,\n                    focusedColumn, originalColumn,\n                    while_i = 0, isScrollPanel = false, containerPanelName = \"\", nPanelInfo;\n\n                for (var c in this.focusedColumn) {\n                    focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n                    break;\n                }\n                if (!focusedColumn) return false;\n\n                originalColumn = this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex];\n\n                columnSelect.focusClear.call(this);\n                columnSelect.clear.call(this);\n\n                if (_dx < 0) {\n                    focusedColumn.colIndex = focusedColumn.colIndex + _dx;\n                    if (focusedColumn.colIndex < 0) {\n                        focusedColumn.colIndex = 0;\n                        moveResult = false;\n                    }\n                }\n                else {\n                    focusedColumn.colIndex = focusedColumn.colIndex + _dx;\n                    if (focusedColumn.colIndex > this.colGroup.length - 1) {\n                        focusedColumn.colIndex = this.colGroup.length - 1;\n                        moveResult = false;\n                    }\n                }\n\n                if (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                    focusedColumn.rowIndex = 0;\n                }\n\n                if (this.list[focusedColumn.dindex] && this.list[focusedColumn.dindex].__isGrouping) {\n                    if (_dx < 0) {\n                        while (typeof this.bodyGroupingMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                            focusedColumn.colIndex--;\n                            if (focusedColumn.colIndex <= 0) {\n                                // find fail\n                                moveResult = false;\n                                break;\n                            }\n                        }\n                    } else {\n                        while (typeof this.bodyGroupingMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                            focusedColumn.colIndex++;\n                            if (focusedColumn.colIndex >= this.colGroup.length) {\n                                // find fail\n                                moveResult = false;\n                                break;\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (_dx < 0) {\n                        while (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                            focusedColumn.colIndex--;\n                            if (focusedColumn.colIndex <= 0) {\n                                // find fail\n                                moveResult = false;\n                                break;\n                            }\n                        }\n                    } else {\n                        while (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                            focusedColumn.colIndex++;\n                            if (focusedColumn.colIndex >= this.colGroup.length) {\n                                // find fail\n                                moveResult = false;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                nPanelInfo = GRID.util.findPanelByColumnIndex.call(this, focusedColumn.dindex, focusedColumn.colIndex);\n\n                // if mergeCells\n                if (this.config.body.mergeCells && this.list.length && focusedColumn.dindex >= 1) {\n                    while (!this.$.panel[nPanelInfo.panelName]\n                        .find('[data-ax5grid-tr-data-index=\"' + focusedColumn.dindex + '\"]')\n                        .find('[data-ax5grid-column-rowindex=\"' + focusedColumn.rowIndex + '\"][data-ax5grid-column-colindex=\"' + focusedColumn.colIndex + '\"]').get(0)) {\n\n                        focusedColumn.dindex--;\n\n                        if (focusedColumn.dindex < 0 || focusedColumn.dindex > this.list.length - 1) {\n                            break;\n                        }\n                    }\n                    nPanelInfo = GRID.util.findPanelByColumnIndex.call(this, focusedColumn.dindex, focusedColumn.colIndex);\n                }\n\n                focusedColumn.panelName = nPanelInfo.panelName;\n\n                // 포커스 컬럼의 위치에 따라 스크롤 처리\n                let isScrollTo = (function () {\n                    if (!this.config.virtualScrollX) return false;\n                    let scrollLeft = 0;\n                    if (focusedColumn.colIndex + 1 > this.xvar.frozenColumnIndex) {\n                        if (focusedColumn.colIndex <= this.xvar.paintStartColumnIndex && this.colGroup[focusedColumn.colIndex]) {\n                            scrollLeft = -this.colGroup[Number(focusedColumn.colIndex)]._sx;\n                            scrollTo.call(this, {left: scrollLeft});\n                            GRID.header.scrollTo.call(this, {left: scrollLeft});\n                            GRID.scroller.resize.call(this);\n                            return true;\n                        }\n                        else if (focusedColumn.colIndex >= this.xvar.paintEndColumnIndex && this.colGroup[Number(focusedColumn.colIndex)]) {\n                            if (this.colGroup[Number(focusedColumn.colIndex)]._ex > this.xvar.bodyWidth) {\n                                scrollLeft = (this.colGroup[Number(focusedColumn.colIndex)]._ex - this.xvar.bodyWidth);\n                                scrollTo.call(this, {left: -scrollLeft});\n                                GRID.header.scrollTo.call(this, {left: -scrollLeft});\n                                GRID.scroller.resize.call(this);\n                            }\n                            return true;\n                        }\n                    }\n                    scrollLeft = null;\n                    return false;\n                }).call(this);\n\n                containerPanelName = nPanelInfo.containerPanelName;\n                isScrollPanel = nPanelInfo.isScrollPanel;\n\n                this.focusedColumn[focusedColumn.dindex + \"_\" + focusedColumn.colIndex + \"_\" + focusedColumn.rowIndex] = focusedColumn;\n\n                var $column = this.$.panel[focusedColumn.panelName]\n                    .find('[data-ax5grid-tr-data-index=\"' + focusedColumn.dindex + '\"]')\n                    .find('[data-ax5grid-column-rowindex=\"' + focusedColumn.rowIndex + '\"][data-ax5grid-column-colindex=\"' + focusedColumn.colIndex + '\"]')\n                    .attr('data-ax5grid-column-focused', \"true\");\n\n                if (!isScrollTo && $column && isScrollPanel) {// 스크롤 패널 이라면~\n                    // todo : 컬럼이동할 때에도 scrollTo 체크\n                    var newLeft = (function () {\n                        if ($column.position().left + $column.outerWidth() > Math.abs(this.$.panel[focusedColumn.panelName].position().left) + this.$.panel[containerPanelName].width()) {\n                            return $column.position().left + $column.outerWidth() - this.$.panel[containerPanelName].width();\n                        } else if (Math.abs(this.$.panel[focusedColumn.panelName].position().left) > $column.position().left) {\n                            return $column.position().left;\n                        } else {\n                            return;\n                        }\n                    }).call(this);\n\n                    if (typeof newLeft !== \"undefined\") {\n                        GRID.header.scrollTo.call(this, {left: -newLeft});\n                        scrollTo.call(this, {left: -newLeft});\n                        GRID.scroller.resize.call(this);\n                    }\n                }\n\n                return moveResult;\n            },\n            \"INDEX\": function (_dindex) {\n                let moveResult = true,\n                    focusedColumn, originalColumn,\n                    while_i;\n\n                for (let c in this.focusedColumn) {\n                    focusedColumn = jQuery.extend({}, this.focusedColumn[c], true);\n                    break;\n                }\n                if (!focusedColumn) {\n                    focusedColumn = {\n                        rowIndex: 0,\n                        colIndex: 0\n                    }\n                }\n                originalColumn = this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex];\n\n                columnSelect.focusClear.call(this);\n                columnSelect.clear.call(this);\n\n\n                if (_dindex == \"end\") {\n                    _dindex = this.list.length - 1;\n                }\n\n                focusedColumn.dindex = _dindex;\n                focusedColumn.rowIndex = 0;\n\n                while_i = 0;\n                while (typeof this.bodyRowMap[focusedColumn.rowIndex + \"_\" + focusedColumn.colIndex] === \"undefined\") {\n                    if (focusedColumn.rowIndex == 0 || while_i % 2 == ((_dy > 0) ? 0 : 1)) {\n                        focusedColumn.colIndex--;\n                    } else {\n                        focusedColumn.rowIndex--;\n                    }\n\n                    if (focusedColumn.rowIndex <= 0 && focusedColumn.colIndex <= 0) {\n                        // find fail\n                        break;\n                    }\n                    while_i++;\n                }\n\n                let nPanelInfo = GRID.util.findPanelByColumnIndex.call(this, focusedColumn.dindex, focusedColumn.colIndex);\n                focusedColumn.panelName = nPanelInfo.panelName;\n\n                // 포커스 컬럼의 위치에 따라 스크롤 처리.\n                {\n                    if (focusedColumn.dindex + 1 > this.xvar.frozenRowIndex) {\n                        let virtualPaintStartRowIndex = this.xvar.virtualPaintStartRowIndex || 0;\n\n                        if (focusedColumn.dindex < virtualPaintStartRowIndex) {\n                            scrollTo.call(this, {top: -(focusedColumn.dindex - this.xvar.frozenRowIndex) * this.xvar.bodyTrHeight});\n                            GRID.scroller.resize.call(this);\n                        }\n                        else if (focusedColumn.dindex + 1 > virtualPaintStartRowIndex + (this.xvar.virtualPaintRowCount - 2)) {\n                            //debugger;\n                            //console.log((focusedColumn.dindex - this.xvar.frozenRowIndex - this.xvar.virtualPaintRowCount + 3));\n                            let scrollTopValue = (!this.config.virtualScrollY) ? focusedColumn.dindex - this.xvar.frozenRowIndex : (focusedColumn.dindex - this.xvar.frozenRowIndex - this.xvar.virtualPaintRowCount + 3);\n                            scrollTo.call(this, {top: -scrollTopValue * this.xvar.bodyTrHeight});\n                            GRID.scroller.resize.call(this);\n                        }\n                    }\n                }\n\n                this.focusedColumn[focusedColumn.dindex + \"_\" + focusedColumn.colIndex + \"_\" + focusedColumn.rowIndex] = focusedColumn;\n                this.$.panel[focusedColumn.panelName]\n                    .find('[data-ax5grid-tr-data-index=\"' + focusedColumn.dindex + '\"]')\n                    .find('[data-ax5grid-column-rowindex=\"' + focusedColumn.rowIndex + '\"][data-ax5grid-column-colindex=\"' + focusedColumn.colIndex + '\"]')\n                    .attr('data-ax5grid-column-focused', \"true\");\n\n                return moveResult;\n            }\n        };\n\n        let processor = {\n            \"UP\": function () {\n                return focus[\"UD\"].call(this, -1);\n            },\n            \"DOWN\": function () {\n                return focus[\"UD\"].call(this, 1);\n            },\n            \"LEFT\": function () {\n                return focus[\"LR\"].call(this, -1);\n            },\n            \"RIGHT\": function () {\n                return focus[\"LR\"].call(this, 1);\n            },\n            \"HOME\": function () {\n                return focus[\"INDEX\"].call(this, 0);\n            },\n            \"END\": function () {\n                return focus[\"INDEX\"].call(this, \"end\");\n            },\n            \"position\": function (_position) {\n                return focus[\"INDEX\"].call(this, _position);\n            }\n        };\n\n        if (_position in processor) {\n            return processor[_position].call(this);\n        } else {\n            return processor[\"position\"].call(this, _position);\n        }\n    };\n\n    const inlineEdit = {\n        active(_focusedColumn, _e, _initValue) {\n            let self = this,\n                dindex, doindex, colIndex, rowIndex, panelName, colspan,\n                col, editor;\n\n            for (var key in _focusedColumn) {\n                panelName = _focusedColumn[key].panelName;\n                dindex = _focusedColumn[key].dindex;\n                doindex = _focusedColumn[key].doindex;\n                colIndex = _focusedColumn[key].colIndex;\n                rowIndex = _focusedColumn[key].rowIndex;\n                colspan = _focusedColumn[key].colspan;\n\n                // 인라인 에디팅을 멈춰야 하는 경우 조건\n                col = this.colGroup[colIndex];\n                if (!(editor = col.editor)) return this;\n\n                // editor disabled 체크\n                if (U.isFunction(editor.disabled)) {\n                    if (editor.disabled.call({\n                            list: this.list,\n                            dindex: dindex,\n                            item: this.list[dindex],\n                            key: col.key,\n                            value: _initValue\n                        })) {\n                        return this;\n                    }\n                }\n\n                // 조건에 맞지 않는 에디팅 타입이면 반응 없음.\n                if (!(function (_editor, _type) {\n                        if (_editor.type in GRID.inlineEditor) {\n                            return (GRID.inlineEditor[_editor.type].editMode == \"popup\");\n                        }\n                    })(editor)) {\n                    // 체크 박스 타입이면 값 변경 시도\n                    if (editor.type == \"checkbox\") {\n                        let checked, newValue;\n                        if (editor.config && editor.config.trueValue) {\n                            if (checked = !(_initValue == editor.config.trueValue)) {\n                                newValue = editor.config.trueValue;\n                            } else {\n                                newValue = editor.config.falseValue;\n                            }\n                        } else {\n                            newValue = checked = (_initValue == false || _initValue == \"false\" || _initValue < \"1\") ? \"true\" : \"false\";\n                        }\n\n                        GRID.data.setValue.call(self, dindex, doindex, col.key, newValue);\n                        updateRowState.call(self, [\"cellChecked\"], dindex, doindex, {\n                            key: col.key, rowIndex: rowIndex, colIndex: colIndex,\n                            editorConfig: col.editor.config, checked: checked\n                        });\n                    }\n                    return this;\n                }\n\n                if (this.list[dindex].__isGrouping) {\n                    return false;\n                }\n                if (key in this.inlineEditing) {\n                    return false;\n                }\n\n                this.inlineEditing[key] = {\n                    editor: editor,\n                    panelName: panelName,\n                    columnKey: key,\n                    column: _focusedColumn[key],\n                    useReturnToSave: GRID.inlineEditor[editor.type].useReturnToSave\n                };\n                this.isInlineEditing = true;\n            }\n            if (this.isInlineEditing) {\n\n                let originalValue = GRID.data.getValue.call(self, dindex, doindex, col.key),\n                    initValue = (function (__value, __editor) {\n                        if (U.isNothing(__value)) {\n                            __value = U.isNothing(originalValue) ? \"\" : originalValue;\n                        }\n\n                        if (__editor.type == \"money\") {\n                            return U.number(__value, {\"money\": true});\n                        }\n                        else {\n                            return __value;\n                        }\n                    }).call(this, _initValue, editor);\n\n                this.inlineEditing[key].$inlineEditorCell = this.$[\"panel\"][panelName]\n                    .find('[data-ax5grid-tr-data-index=\"' + dindex + '\"]')\n                    .find('[data-ax5grid-column-rowindex=\"' + rowIndex + '\"][data-ax5grid-column-colindex=\"' + colIndex + '\"]')\n                    .find('[data-ax5grid-cellholder]');\n\n                this.inlineEditing[key].$inlineEditor = GRID.inlineEditor[editor.type].init(this, key, editor, this.inlineEditing[key].$inlineEditorCell, initValue);\n\n                return true;\n            }\n        },\n        deActive(_msg, _key, _value) {\n            // console.log(this.inlineEditing.column.dindex, this.inlineEditing.$inlineEditor.val());\n            if (!this.inlineEditing[_key]) return this;\n\n            let panelName = this.inlineEditing[_key].panelName,\n                dindex = this.inlineEditing[_key].column.dindex,\n                doindex = this.inlineEditing[_key].column.doindex,\n                rowIndex = this.inlineEditing[_key].column.rowIndex,\n                colIndex = this.inlineEditing[_key].column.colIndex,\n                column = this.bodyRowMap[this.inlineEditing[_key].column.rowIndex + \"_\" + this.inlineEditing[_key].column.colIndex],\n                editorValue = (function ($inlineEditor) {\n                    if (typeof _value === \"undefined\") {\n                        if ($inlineEditor.get(0).tagName == \"SELECT\" || $inlineEditor.get(0).tagName == \"INPUT\" || $inlineEditor.get(0).tagName == \"TEXTAREA\") {\n                            return $inlineEditor.val();\n                        } else {\n                            _msg = \"CANCEL\";\n                            return false;\n                        }\n                    } else {\n                        return _value;\n                    }\n                })(this.inlineEditing[_key].$inlineEditor),\n                newValue = (function (__value, __editor) {\n                    if (__editor.type == \"money\") {\n                        return U.number(__value);\n                    }\n                    else {\n                        return __value;\n                    }\n                }).call(this, editorValue, column.editor);\n\n            let action = {\n                \"CANCEL\"(_dindex, _column, _newValue) {\n                    action[\"__clear\"].call(this);\n                },\n                \"RETURN\"(_dindex, _doindex, _column, _newValue) {\n                    if (GRID.data.setValue.call(this, _dindex, _doindex, _column.key, _newValue)) {\n                        action[\"__clear\"].call(this);\n                        GRID.body.repaintCell.call(this, panelName, _dindex, _doindex, rowIndex, colIndex, _newValue);\n                    } else {\n                        action[\"__clear\"].call(this);\n                    }\n                },\n                \"__clear\"() {\n                    this.isInlineEditing = false;\n\n                    if (this.inlineEditing[_key] && this.inlineEditing[_key].$inlineEditor) {\n                        let bindedAx5ui = this.inlineEditing[_key].$inlineEditor.data(\"binded-ax5ui\");\n                        if (bindedAx5ui == \"ax5picker\") {\n                            this.inlineEditing[_key].$inlineEditor.ax5picker(\"close\");\n                        } else if (bindedAx5ui == \"ax5select\") {\n                            this.inlineEditing[_key].$inlineEditor.ax5select(\"close\");\n                        }\n                        this.inlineEditing[_key].$inlineEditor.remove();\n                        this.inlineEditing[_key].$inlineEditor = null;\n                        this.inlineEditing[_key].$inlineEditorCell = null;\n                    }\n\n                    this.inlineEditing[_key] = undefined;\n                    delete this.inlineEditing[_key]; // delete 지원안하는 브라우저 테스트..\n                }\n            };\n\n            if (_msg in action) {\n                action[_msg || \"RETURN\"].call(this, dindex, doindex, column, newValue);\n            } else {\n                action[\"__clear\"].call(this);\n            }\n        },\n        keydown(key, columnKey, _options) {\n            let processor = {\n                \"ESC\"() {\n                    for (var columnKey in this.inlineEditing) {\n                        inlineEdit.deActive.call(this, \"CANCEL\", columnKey);\n                    }\n                },\n                \"RETURN\"() {\n                    if (this.isInlineEditing) {\n                        if (this.inlineEditing[columnKey] && this.inlineEditing[columnKey].useReturnToSave) { // todo : 네이밍 검증 할 필요있음.\n                            inlineEdit.deActive.call(this, \"RETURN\", columnKey);\n                        } else {\n                            return false;\n                        }\n                    } else {\n\n                        for (var k in this.focusedColumn) {\n                            let _column = this.focusedColumn[k],\n                                column = this.bodyRowMap[_column.rowIndex + \"_\" + _column.colIndex],\n                                dindex = _column.dindex,\n                                doindex = _column.doindex,\n                                value = \"\",\n                                col = this.colGroup[_column.colIndex];\n\n                            if (column) {\n                                if (!this.list[dindex].__isGrouping) {\n                                    value = GRID.data.getValue.call(this, dindex, doindex, column.key);\n                                }\n                            }\n\n                            if (col.editor && GRID.inlineEditor[col.editor.type].editMode === \"inline\") {\n                                if (_options && _options.moveFocus) {\n\n                                }\n                                else {\n                                    if (column.editor && column.editor.type == \"checkbox\") {\n                                        value = GRID.data.getValue.call(this, dindex, doindex, column.key);\n\n                                        let checked, newValue;\n                                        if (column.editor.config && column.editor.config.trueValue) {\n                                            // console.log(value, column.editor.config.trueValue);\n\n                                            if (value != column.editor.config.trueValue) {\n                                                newValue = column.editor.config.trueValue;\n                                                checked = true;\n                                            } else {\n                                                newValue = column.editor.config.falseValue;\n                                                checked = false;\n                                            }\n                                        } else {\n                                            newValue = checked = (value == false || value == \"false\" || value < \"1\") ? \"true\" : \"false\";\n                                        }\n\n                                        GRID.data.setValue.call(this, dindex, doindex, column.key, newValue);\n                                        updateRowState.call(this, [\"cellChecked\"], dindex, doindex, {\n                                            key: column.key, rowIndex: _column.rowIndex, colIndex: _column.colIndex,\n                                            editorConfig: column.editor.config, checked: checked\n                                        });\n                                    }\n                                }\n                            } else {\n                                GRID.body.inlineEdit.active.call(this, this.focusedColumn, null, value);\n                            }\n                        }\n                    }\n                    return true;\n                }\n            };\n\n            if (key in processor) {\n                processor[key].call(this, key, columnKey, _options);\n            }\n        }\n    };\n\n    const getExcelString = function () {\n        let cfg = this.config,\n            list = this.list,\n            bodyRowData = this.bodyRowTable,\n            footSumData = this.footSumTable,\n            bodyGroupingData = this.bodyGroupingTable;\n\n        // body-scroll 의 포지션에 의존적이므로..\n        let getBody = function (_colGroup, _bodyRow, _groupRow, _list) {\n            let SS = [],\n                di, dl,\n                tri, trl,\n                ci, cl,\n                col, val;\n\n            //SS.push('<table border=\"1\">');\n            for (di = 0, dl = _list.length; di < dl; di++) {\n                let isGroupingRow = false, rowTable;\n\n                if (_groupRow && \"__isGrouping\" in _list[di]) {\n                    rowTable = _groupRow;\n                    isGroupingRow = true;\n                } else {\n                    rowTable = _bodyRow;\n                }\n\n                for (tri = 0, trl = rowTable.rows.length; tri < trl; tri++) {\n                    SS.push('\\n<tr>');\n                    for (ci = 0, cl = rowTable.rows[tri].cols.length; ci < cl; ci++) {\n                        col = rowTable.rows[tri].cols[ci];\n                        SS.push('<td ',\n                            'colspan=\"' + col.colspan + '\" ',\n                            'rowspan=\"' + col.rowspan + '\" ',\n                            '>', ((isGroupingRow ? getGroupingValue.call(this, _list[di], di, col) : getFieldValue.call(this, _list, _list[di], di, col, val, \"text\")) || '&nbsp;'), '</td>');\n                    }\n                    SS.push('\\n</tr>');\n                }\n            }\n            //SS.push('</table>');\n            return SS.join('');\n        };\n        let getSum = function (_colGroup, _bodyRow, _list) {\n            let SS = [],\n                tri, trl,\n                ci, cl,\n                col;\n\n            //SS.push('<table border=\"1\">');\n            for (tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                SS.push('\\n<tr>');\n                for (ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    col = _bodyRow.rows[tri].cols[ci];\n                    SS.push('<td ',\n                        'colspan=\"' + col.colspan + '\" ',\n                        'rowspan=\"' + col.rowspan + '\" ',\n                        '>', getSumFieldValue.call(this, _list, col), '</td>');\n                }\n                SS.push('\\n</tr>');\n            }\n            //SS.push('</table>');\n\n            return SS.join('');\n        };\n\n        let po = [];\n        po.push(getBody.call(this, this.headerColGroup, bodyRowData, bodyGroupingData, list));\n        if (cfg.footSum) {\n            // 바닥 요약\n            po.push(getSum.call(this, this.headerColGroup, footSumData, list));\n        }\n\n        // right\n        if (cfg.rightSum) {\n            // todo : right 표현 정리\n        }\n\n        return po.join('');\n    };\n\n    const toggleCollapse = function (_dindex, _doindex, _collapse) {\n        if (GRID.data.toggleCollapse.call(this, _dindex, _doindex, _collapse)) {\n            this.proxyList = GRID.data.getProxyList.call(this, this.list);\n            this.align();\n        }\n    };\n\n    // todo : tree에서 dindex만으로 구현 했을 때 오류 발생 해결. (_doindex 이용)\n    const click = function (_dindex, _doindex) {\n        let that = {\n            self: this,\n            page: this.page,\n            list: this.list,\n            item: this.list[_dindex],\n            dindex: _dindex\n        };\n\n        moveFocus.call(this, _dindex);\n        if (this.config.body.onClick) {\n            this.config.body.onClick.call(that, that);\n        }\n\n        that = null;\n        // console.log(this.$[\"panel\"][\"body-scroll\"].find('[data-ax5grid-tr-data-index=\"' + _dindex + '\"]>td:first-child'));\n    };\n\n    const dblClick = function (_dindex, _doindex) {\n        let that = {\n            self: this,\n            page: this.page,\n            list: this.list,\n            item: this.list[_dindex],\n            dindex: _dindex\n        };\n\n        moveFocus.call(this, _dindex);\n\n        if (this.config.body.onDBLClick) {\n            this.config.body.onDBLClick.call(that);\n        }\n\n        that = null;\n    };\n\n\n    GRID.body = {\n        init: init,\n        repaint: repaint,\n        repaintCell: repaintCell,\n        repaintRow: repaintRow,\n        updateRowState: updateRowState,\n        updateRowStateAll: updateRowStateAll,\n        scrollTo: scrollTo,\n        blur: blur,\n        moveFocus: moveFocus,\n        inlineEdit: inlineEdit,\n        getExcelString: getExcelString,\n        toggleCollapse: toggleCollapse,\n        click: click,\n        dblClick: dblClick\n    };\n})();","// ax5.ui.grid.collector\n(function () {\n\n    const GRID = ax5.ui.grid;\n\n    const U = ax5.util;\n\n    let sum = function () {\n        let value = 0,\n            i = this.list.length;\n        while (i--) {\n            if (!(\"__groupingList\" in this.list[i])) {\n                value += U.number(this.list[i][this.key]);\n            }\n        }\n        return value;\n    };\n\n    let avg = function () {\n        let value = 0,\n            i = this.list.length, listLength = 0;\n        while (i--) {\n            if (!(\"__groupingList\" in this.list[i])) {\n                value += U.number(this.list[i][this.key]);\n                listLength++;\n            }\n        }\n        return U.number(value / (listLength || 1), {\"round\": 2});\n    };\n\n    GRID.collector = {\n        sum: sum,\n        avg: avg\n    };\n\n})();","// ax5.ui.grid.layout\n(function () {\n\n    let GRID = ax5.ui.grid,\n        U = ax5.util;\n\n    const init = function () {\n\n    };\n\n    const clearGroupingData = function (_list) {\n        let i = 0, l = _list.length, returnList = [];\n        for (; i < l; i++) {\n            if (_list[i] && !_list[i][\"__isGrouping\"]) {\n                if (_list[i][this.config.columnKeys.selected]) {\n                    this.selectedDataIndexs.push(i);\n                }\n                returnList.push(jQuery.extend({}, _list[i]));\n            }\n        }\n        return returnList;\n    };\n\n    const initData = function (_list) {\n        this.selectedDataIndexs = [];\n        // this.deletedList = [];\n        // todo : deletedList 초기화 시점이 언제로 하는게 좋은가. set 메소드에서 초기화 하는 것으로 수정\n\n        let i = 0, l = _list.length,\n            returnList = [],\n            appendIndex = 0,\n            dataRealRowCount = 0,\n            lineNumber = 0;\n\n        if (this.config.body.grouping) {\n\n            let groupingKeys = U.map(this.bodyGrouping.by, function () {\n                return {\n                    key: this,\n                    compareString: \"\",\n                    grouping: false,\n                    list: []\n                }\n            });\n\n            let gi = 0, gl = groupingKeys.length, compareString, appendRow = [], ari;\n            for (; i < l + 1; i++) {\n                gi = 0;\n\n                if (_list[i] && _list[i][this.config.columnKeys.deleted]) {\n                    this.deletedList.push(_list[i]);\n                }\n                else {\n                    compareString = \"\"; // 그룹핑 구문검사용\n                    appendRow = []; // 현재줄 앞에 추가해줘야 하는 줄\n\n                    // 그룹핑 구문검사\n                    for (; gi < gl; gi++) {\n                        if (_list[i]) {\n                            compareString += \"$|$\" + _list[i][groupingKeys[gi].key];\n                        }\n\n                        if (appendIndex > 0 && compareString != groupingKeys[gi].compareString) {\n                            let appendRowItem = {keys: [], labels: [], list: groupingKeys[gi].list};\n                            for (let ki = 0; ki < gi + 1; ki++) {\n                                appendRowItem.keys.push(groupingKeys[ki].key);\n                                appendRowItem.labels.push(_list[i - 1][groupingKeys[ki].key]);\n                            }\n                            appendRow.push(appendRowItem);\n                            groupingKeys[gi].list = [];\n                        }\n\n                        groupingKeys[gi].list.push(_list[i]);\n                        groupingKeys[gi].compareString = compareString;\n                    }\n\n                    // 새로 추가해야할 그룹핑 row\n                    ari = appendRow.length;\n                    while (ari--) {\n                        returnList.push({__isGrouping: true, __groupingList: appendRow[ari].list, __groupingBy: {keys: appendRow[ari].keys, labels: appendRow[ari].labels}});\n                    }\n                    //~ 그룹핑 구문 검사 완료\n\n                    if (_list[i]) {\n                        if (_list[i][this.config.columnKeys.selected]) {\n                            this.selectedDataIndexs.push(i);\n                        }\n                        // 그룹핑이 적용된 경우 오리지널 인덱스 의미 없음 : 정렬보다 그룹핑이 더 중요하므로.\n                        _list[i][\"__original_index\"] = _list[i][\"__index\"] = lineNumber;\n                        returnList.push(_list[i]);\n\n                        dataRealRowCount++;\n                        appendIndex++;\n                        lineNumber++;\n                    }\n                }\n            }\n        }\n        else {\n            for (; i < l; i++) {\n                if (_list[i]) {\n                    if (_list[i][this.config.columnKeys.deleted]) {\n                        this.deletedList.push(_list[i]);\n                    } else {\n\n                        if (_list[i][this.config.columnKeys.selected]) {\n                            this.selectedDataIndexs.push(i);\n                        }\n\n                        // __original_index 인덱스 키가 없다면 추가.\n                        if(typeof _list[i][\"__original_index\"] === \"undefined\"){\n                            _list[i][\"__original_index\"] = lineNumber;\n                        }\n                        _list[i][\"__index\"] = lineNumber;\n                        dataRealRowCount++;\n                        lineNumber++;\n                        returnList.push(_list[i]);\n                    }\n                }\n            }\n        }\n\n        // 원본 데이터의 갯수\n        // grouping은 제외하고 수집됨.\n        this.xvar.dataRealRowCount = dataRealRowCount;\n        return returnList;\n    };\n\n    const arrangeData4tree = function (_list) {\n        this.selectedDataIndexs = [];\n        this.deletedList = [];\n        let i = 0, seq = 0,\n            appendIndex = 0,\n            dataRealRowCount = 0,\n            lineNumber = 0;\n\n        let li = _list.length;\n        let keys = this.config.tree.columnKeys;\n        let hashDigit = this.config.tree.hashDigit;\n        let listIndexMap = {};\n\n        while (li--) {\n            delete _list[li][keys.parentHash];\n            delete _list[li][keys.selfHash];\n            //delete _list[li][keys.childrenLength];\n        }\n\n        /// 루트 아이템 수집\n        i = 0;\n        seq = 0;\n        li = _list.length;\n        for (; i < li; i++) {\n            if (_list[i]) {\n                listIndexMap[_list[i][keys.selfKey]] = i; // 인덱싱\n\n                if (U.isNothing(_list[i][keys.parentKey]) || _list[i][keys.parentKey] === \"top\") { // 최상위 아이템인 경우\n                    _list[i][keys.parentKey] = \"top\";\n                    _list[i][keys.children] = [];\n                    _list[i][keys.parentHash] = U.setDigit(\"0\", hashDigit);\n                    _list[i][keys.selfHash] = U.setDigit(\"0\", hashDigit) + \".\" + U.setDigit(seq, hashDigit);\n                    _list[i][keys.depth] = 0;\n                    _list[i][keys.hidden] = false;\n\n                    seq++;\n                }\n            }\n        }\n\n        /// 자식 아이템 수집\n        i = 0;\n        lineNumber = 0;\n        for (; i < li; i++) {\n            let _parent, _parentHash;\n            if (_list[i] && _list[i][keys.parentKey] !== \"top\" && typeof _list[i][keys.parentHash] === \"undefined\") {\n\n                if (_parent = _list[listIndexMap[_list[i][keys.parentKey]]]) {\n                    _parentHash = _parent[keys.selfHash];\n                    _list[i][keys.children] = [];\n                    _list[i][keys.parentHash] = _parentHash;\n                    _list[i][keys.selfHash] = _parentHash + \".\" + U.setDigit(_parent[keys.children].length, hashDigit);\n                    _list[i][keys.depth] = _parent[keys.depth] + 1;\n                    if (_parent[keys.collapse] || _parent[keys.hidden]) _list[i][keys.hidden] = true;\n                    _parent[keys.children].push(_list[i][keys.selfKey]);\n                } else {\n                    _list[i][keys.parentKey] = \"top\";\n                    _list[i][keys.children] = [];\n                    _list[i][keys.parentHash] = U.setDigit(\"0\", hashDigit);\n                    _list[i][keys.selfHash] = U.setDigit(\"0\", hashDigit) + \".\" + U.setDigit(seq, hashDigit);\n                    _list[i][keys.hidden] = false;\n\n                    seq++;\n                }\n            }\n\n            if (_list[i]) {\n                if (_list[i][this.config.columnKeys.deleted]) {\n                    this.deletedList.push(_list[i]);\n                    _list[i][keys.hidden] = true;\n                }\n                else if (_list[i][this.config.columnKeys.selected]) {\n                    this.selectedDataIndexs.push(i);\n                }\n\n                _list[i][\"__index\"] = lineNumber;\n                dataRealRowCount++;\n                lineNumber++;\n            }\n        }\n\n        this.listIndexMap = listIndexMap;\n        this.xvar.dataRealRowCount = dataRealRowCount;\n\n        return _list;\n    };\n\n    const getProxyList = function (_list) {\n        let i = 0, l = _list.length, returnList = [];\n        for (; i < l; i++) {\n\n            if (_list[i] && !_list[i][this.config.tree.columnKeys.hidden]) {\n                _list[i].__origin_index__ = i;\n                returnList.push(_list[i]);\n            }\n        }\n        return returnList;\n    };\n\n    const set = function (data) {\n\n        let list;\n        if (U.isArray(data)) {\n            this.page = null;\n            list = data;\n        } else if (\"page\" in data) {\n            this.page = jQuery.extend({}, data.page);\n            list = data.list;\n        }\n\n        // console.log(this.list.length);\n\n        if (this.config.tree.use) {\n            this.list = arrangeData4tree.call(this, list);\n            this.proxyList = getProxyList.call(this, sort.call(this, this.sortInfo, this.list));\n        } else {\n            this.proxyList = null;\n            this.list = initData.call(this,\n                (!this.config.remoteSort && Object.keys(this.sortInfo).length) ? sort.call(this, this.sortInfo, list) : list\n            );\n        }\n        this.selectedDataIndexs = [];\n        this.deletedList = [];\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = (this.config.frozenRowIndex > this.list.length) ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        this.xvar.virtualPaintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n\n        if (this.config.body.grouping) {\n\n        }\n        return this;\n    };\n\n    const get = function (_type) {\n        return {\n            list: this.list,\n            page: this.page\n        };\n    };\n\n    const getList = function (_type) {\n        let returnList = [];\n        //let list = (this.proxyList) ? this.proxyList : this.list;\n        let list = this.list;\n        let i = 0, l = list.length;\n        switch (_type) {\n            case \"modified\":\n                for (; i < l; i++) {\n                    if (list[i] && !list[i][\"__isGrouping\"] && list[i][this.config.columnKeys.modified]) {\n                        returnList.push(jQuery.extend({}, list[i]));\n                    }\n                }\n                break;\n            case \"selected\":\n                for (; i < l; i++) {\n                    if (list[i] && !list[i][\"__isGrouping\"] && list[i][this.config.columnKeys.selected]) {\n                        returnList.push(jQuery.extend({}, list[i]));\n                    }\n                }\n                break;\n            case \"deleted\":\n                //_list = GRID.data.clearGroupingData(this.list);\n                returnList = [].concat(this.deletedList);\n                break;\n            default:\n                returnList = GRID.data.clearGroupingData.call(this, list);\n        }\n        return returnList;\n    };\n\n    const add = function (_row, _dindex, _options) {\n        let list = (this.config.body.grouping) ? clearGroupingData.call(this, this.list) : this.list;\n        let processor = {\n            \"first\"() {\n                list = [].concat(_row).concat(list);\n            },\n            \"last\"() {\n                list = list.concat([].concat(_row));\n            }\n        };\n\n        if (this.config.tree.use) {\n            let list = this.list.concat([].concat(_row));\n\n            this.list = arrangeData4tree.call(this, list);\n            this.proxyList = getProxyList.call(this, sort.call(this, this.sortInfo, this.list));\n        }\n        else {\n            if (typeof _dindex === \"undefined\") _dindex = \"last\";\n            if (_dindex in processor) {\n                _row[this.config.columnKeys.modified] = true;\n                processor[_dindex].call(this, _row);\n            } else {\n                if (!U.isNumber(_dindex)) {\n                    throw 'invalid argument _dindex';\n                }\n                if (U.isArray(_row)) {\n                    for (let _i = 0, _l = _row.length; _i < _l; _i++) {\n                        list.splice(_dindex + _i, 0, _row[_i]);\n                    }\n                } else {\n                    list.splice(_dindex, 0, _row);\n                }\n            }\n\n            if (this.config.body.grouping) {\n                list = initData.call(this,\n                    sort.call(this,\n                        this.sortInfo,\n                        list\n                    )\n                );\n            }\n            else if (_options && _options.sort && Object.keys(this.sortInfo).length) {\n                list = initData.call(this,\n                    sort.call(this,\n                        this.sortInfo,\n                        list\n                    )\n                );\n            }\n            else {\n                list = initData.call(this, list);\n            }\n\n            this.list = list;\n        }\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = (this.config.frozenRowIndex > this.list.length) ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        this.xvar.virtualPaintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n        return this;\n    };\n\n    /**\n     * list에서 완전 제거 하는 경우 사용.\n     * ax5grid.data.remove\n     */\n    const remove = function (_dindex) {\n        let list = (this.config.body.grouping) ? clearGroupingData.call(this, this.list) : this.list;\n        let processor = {\n            \"first\": function () {\n                if (this.config.tree.use) {\n                    processor.tree.call(this, 0);\n                } else {\n                    list.splice(0, 1);\n                }\n            },\n            \"last\": function () {\n                if (this.config.tree.use) {\n                    processor.tree.call(this, list.length - 1);\n                } else {\n                    list.splice(list.length - 1, 1);\n                }\n            },\n            \"index\": function (_dindex) {\n                if (this.config.tree.use) {\n                    processor.tree.call(this, _dindex);\n                } else {\n                    list.splice(_dindex, 1);\n                }\n            },\n            \"selected\": function () {\n                if (this.config.tree.use) {\n                    processor.tree.call(this, \"selected\");\n                } else {\n                    let __list = [], i, l;\n\n                    for (i = 0, l = list.length; i < l; i++) {\n                        if (!list[i][this.config.columnKeys.selected]) {\n                            __list.push(list[i]);\n                        }\n                    }\n                    list = __list;\n                    __list = null;\n                    i = null;\n                }\n            },\n            \"tree\": function (_dindex) {\n                let treeKeys = this.config.tree.columnKeys, selfHash = list[_dindex][this.config.tree.columnKeys.selfHash];\n                list = U.filter(list, function () {\n                    return this[treeKeys.selfHash].substr(0, selfHash.length) != selfHash;\n                });\n                treeKeys = null;\n                selfHash = null;\n            },\n        };\n\n        if (typeof _dindex === \"undefined\") _dindex = \"last\";\n        if (_dindex in processor) {\n            processor[_dindex].call(this, _dindex);\n        } else {\n            if (!U.isNumber(_dindex)) {\n                throw 'invalid argument _dindex';\n            }\n            processor[\"index\"].call(this, _dindex);\n        }\n\n        if (this.config.tree.use) {\n            this.list = arrangeData4tree.call(this, list);\n            this.proxyList = getProxyList.call(this, sort.call(this, this.sortInfo, this.list));\n        }\n        else {\n            if (this.config.body.grouping) {\n                list = initData.call(this,\n                    sort.call(this,\n                        this.sortInfo,\n                        list\n                    )\n                );\n            } else if (Object.keys(this.sortInfo).length) {\n                list = initData.call(this,\n                    sort.call(this,\n                        this.sortInfo,\n                        list\n                    )\n                );\n            } else {\n                list = initData.call(this, list);\n            }\n            this.list = list;\n        }\n\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = (this.config.frozenRowIndex > this.list.length) ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        this.xvar.virtualPaintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n        return this;\n    };\n\n\n    /**\n     * list에서 deleted 처리 repaint\n     * ax5grid.data.deleteRow\n     */\n    const deleteRow = function (_dindex) {\n        let list = (this.config.body.grouping) ? clearGroupingData.call(this, this.list) : this.list;\n        let processor = {\n            \"first\": function () {\n                if (this.config.tree.use) {\n                    processor.tree.call(this, 0);\n                } else {\n                    list[0][this.config.columnKeys.deleted] = true;\n                }\n            },\n            \"last\": function () {\n                if (this.config.tree.use) {\n                    processor.tree.call(this, list.length - 1);\n                } else {\n                    list[list.length - 1][this.config.columnKeys.deleted] = true;\n                }\n            },\n            \"selected\": function () {\n                if (this.config.tree.use) {\n                    processor.tree.call(this, \"selected\");\n                } else {\n                    let i = list.length;\n                    while (i--) {\n                        if (list[i][this.config.columnKeys.selected]) {\n                            list[i][this.config.columnKeys.deleted] = true;\n                        }\n                    }\n                    i = null;\n                }\n            },\n            \"tree\": function (_dindex) {\n                let keys = this.config.columnKeys,\n                    treeKeys = this.config.tree.columnKeys;\n\n                if (_dindex === \"selected\") {\n\n                    let i = list.length;\n                    while (i--) {\n                        if (list[i][this.config.columnKeys.selected]) {\n                            list[i][this.config.columnKeys.deleted] = true;\n\n                            let selfHash = list[i][treeKeys.selfHash];\n                            let ii = list.length;\n\n                            while (ii--) {\n                                if (list[ii][treeKeys.selfHash].substr(0, selfHash.length) === selfHash) {\n                                    list[ii][keys.deleted] = true;\n                                }\n                            }\n\n                            selfHash = null;\n                            ii = null;\n                        }\n                    }\n                    i = null;\n\n                } else {\n                    let selfHash = list[_dindex][treeKeys.selfHash];\n                    let i = list.length;\n                    while (i--) {\n                        if (list[i][treeKeys.selfHash].substr(0, selfHash.length) !== selfHash) {\n                            list[i][keys.deleted] = true;\n                        }\n                    }\n                    selfHash = null;\n                    i = null;\n                }\n\n                keys = null;\n                treeKeys = null;\n            },\n        };\n\n        if (typeof _dindex === \"undefined\") _dindex = \"last\";\n\n        if (_dindex in processor) {\n            processor[_dindex].call(this, _dindex);\n        } else {\n            if (!U.isNumber(_dindex)) {\n                throw 'invalid argument _dindex';\n            }\n            list[_dindex][this.config.columnKeys.deleted] = true;\n        }\n\n        if (this.config.tree.use) {\n            this.list = arrangeData4tree.call(this, list);\n            this.proxyList = getProxyList.call(this, sort.call(this, this.sortInfo, this.list));\n        }\n        else {\n            if (this.config.body.grouping) {\n                list = initData.call(this,\n                    sort.call(this,\n                        this.sortInfo,\n                        list\n                    )\n                );\n            } else if (Object.keys(this.sortInfo).length) {\n                list = initData.call(this,\n                    sort.call(this,\n                        this.sortInfo,\n                        list\n                    )\n                );\n            } else {\n                list = initData.call(this, list);\n            }\n\n            this.list = list;\n        }\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = (this.config.frozenRowIndex > this.list.length) ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        this.xvar.virtualPaintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n        return this;\n    };\n\n    const update = function (_row, _dindex) {\n        if (!U.isNumber(_dindex)) {\n            throw 'invalid argument _dindex';\n        }\n        //\n        this.needToPaintSum = true;\n        this.list.splice(_dindex, 1, _row);\n\n        if (this.config.body.grouping) {\n            this.list = initData.call(this, clearGroupingData.call(this, this.list));\n        }\n    };\n\n    const updateChild = function (_dindex, _updateData, _options) {\n        let keys = this.config.tree.columnKeys, selfHash, originIndex;\n\n        if (typeof _dindex === \"undefined\") return false;\n        originIndex = this.proxyList[_dindex].__origin_index__;\n\n        if (this.list[originIndex][keys.children]) {\n            this.proxyList = []; // 리셋 프록시\n\n            if (_options && _options.filter) {\n                if (_options.filter.call({item: this.list[originIndex], dindex: originIndex}, this.list[originIndex])) {\n                    for (let _k in _updateData) {\n                        this.list[originIndex][_k] = _updateData[_k];\n                    }\n                }\n            }\n            else {\n                for (let _k in _updateData) {\n                    this.list[originIndex][_k] = _updateData[_k];\n                }\n            }\n\n            selfHash = this.list[originIndex][keys.selfHash];\n\n            let i = 0, l = this.list.length;\n            for (; i < l; i++) {\n                if (this.list[i]) {\n                    if (this.list[i][keys.parentHash].substr(0, selfHash.length) === selfHash) {\n\n                        if (_options && _options.filter) {\n                            if (_options.filter.call({item: this.list[i], dindex: i}, this.list[i])) {\n                                for (let _k in _updateData) {\n                                    this.list[i][_k] = _updateData[_k];\n                                }\n                            }\n                        }\n                        else {\n                            for (let _k in _updateData) {\n                                this.list[i][_k] = _updateData[_k];\n                            }\n                        }\n                    }\n\n                    if (!this.list[i][keys.hidden]) {\n                        this.proxyList.push(this.list[i]);\n                    }\n                }\n            }\n\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    const setValue = function (_dindex, _doindex, _key, _value) {\n        let originalValue = getValue.call(this, _dindex, _doindex, _key);\n        let list = this.list;\n        let listIndex = (typeof _doindex === \"undefined\") ? _dindex : _doindex;\n        this.needToPaintSum = true;\n\n        if (originalValue !== _value) {\n            if (/[\\.\\[\\]]/.test(_key)) {\n                try {\n                    list[listIndex][this.config.columnKeys.modified] = true;\n                    (Function(\"val\", \"this\" + GRID.util.getRealPathForDataItem(_key) + \" = val;\")).call(list[listIndex], _value);\n                } catch (e) {\n\n                }\n            } else {\n                list[listIndex][this.config.columnKeys.modified] = true;\n                list[listIndex][_key] = _value;\n            }\n\n            if (this.onDataChanged) {\n                this.onDataChanged.call({\n                    self: this,\n                    list: this.list,\n                    dindex: _dindex,\n                    doindex: _doindex,\n                    item: this.list[_dindex],\n                    key: _key,\n                    value: _value\n                });\n            }\n        }\n\n        return true;\n    };\n\n    let getValue = function (_dindex, _doindex, _key, _value) {\n        let list = this.list;\n        let listIndex = (typeof _doindex === \"undefined\") ? _dindex : _doindex;\n\n        if (/[\\.\\[\\]]/.test(_key)) {\n            try {\n                _value = (Function(\"\", \"return this\" + GRID.util.getRealPathForDataItem(_key) + \";\")).call(list[listIndex]);\n            } catch (e) {\n\n            }\n        } else {\n            _value = list[listIndex][_key];\n        }\n        return _value;\n    };\n\n    const clearSelect = function () {\n        this.selectedDataIndexs = [];\n    };\n\n    const select = function (_dindex, _doindex, _selected, _options) {\n        let cfg = this.config;\n\n        if(typeof _doindex === \"undefined\") _doindex = _dindex;\n\n        if (!this.list[_doindex]) return false;\n        if (this.list[_doindex].__isGrouping) return false;\n        if (this.list[_doindex][cfg.columnKeys.disableSelection]) return false;\n\n        if (typeof _selected === \"undefined\") {\n            if (this.list[_doindex][cfg.columnKeys.selected] = !this.list[_doindex][cfg.columnKeys.selected]) {\n                this.selectedDataIndexs.push(_doindex);\n            } else {\n                this.selectedDataIndexs.splice(U.search(this.selectedDataIndexs, function () {\n                    return this == _doindex;\n                }), 1);\n            }\n        } else {\n            if (this.list[_doindex][cfg.columnKeys.selected] = _selected) {\n                this.selectedDataIndexs.push(_doindex);\n            } else {\n                this.selectedDataIndexs.splice(U.search(this.selectedDataIndexs, function () {\n                    return this == _doindex;\n                }), 1);\n            }\n        }\n\n        if (this.onDataChanged && _options && _options.internalCall) {\n            this.onDataChanged.call({\n                self: this,\n                list: this.list,\n                dindex: _dindex,\n                doindex: _doindex,\n                item: this.list[_doindex],\n                key: cfg.columnKeys.selected,\n                value: this.list[_doindex][cfg.columnKeys.selected]\n            });\n        }\n\n        return this.list[_doindex][cfg.columnKeys.selected];\n    };\n\n    const selectAll = function (_selected, _options) {\n        let cfg = this.config,\n            dindex = this.list.length;\n\n        this.selectedDataIndexs = [];\n\n        if (typeof _selected === \"undefined\") {\n            while (dindex--) {\n                if (this.list[dindex].__isGrouping) continue;\n                if (_options && _options.filter) {\n                    if (_options.filter.call(this.list[dindex]) !== true) {\n                        continue;\n                    }\n                }\n                if (this.list[dindex][cfg.columnKeys.disableSelection]) continue;\n\n                if (this.list[dindex][cfg.columnKeys.selected] = !this.list[dindex][cfg.columnKeys.selected]) {\n                    this.selectedDataIndexs.push(dindex);\n                }\n            }\n        } else {\n            while (dindex--) {\n                if (this.list[dindex].__isGrouping) continue;\n                if (_options && _options.filter) {\n                    if (_options.filter.call(this.list[dindex]) !== true) {\n                        continue;\n                    }\n                }\n                if (this.list[dindex][cfg.columnKeys.disableSelection]) continue;\n\n                if (this.list[dindex][cfg.columnKeys.selected] = _selected) {\n                    this.selectedDataIndexs.push(dindex);\n                }\n            }\n        }\n\n        if (this.onDataChanged && _options && _options.internalCall) {\n            this.onDataChanged.call({\n                self: this,\n                list: this.list\n            });\n        }\n\n        return this.list;\n    };\n\n    const sort = function (_sortInfo, _list, _options) {\n        let self = this, list = _list || this.list, sortInfoArray = [], lineNumber = 0;\n        let getKeyValue = function (_item, _key, _value) {\n            if (/[\\.\\[\\]]/.test(_key)) {\n                try {\n                    _value = (Function(\"\", \"return this\" + GRID.util.getRealPathForDataItem(_key) + \";\")).call(_item);\n                } catch (e) {\n                }\n            } else {\n                _value = _item[_key];\n            }\n            return _value;\n        };\n\n        for (let k in _sortInfo) {\n            sortInfoArray[_sortInfo[k].seq] = {key: k, order: _sortInfo[k].orderBy};\n        }\n        sortInfoArray = U.filter(sortInfoArray, function () {\n            return typeof this !== \"undefined\";\n        });\n\n        // 정렬조건이 없으면 original_index값을 이용하여 정렬처리\n        if(_options && _options.resetLineNumber && sortInfoArray.length === 0) {\n            sortInfoArray[0] = {key: '__original_index', order: \"asc\"}\n        }\n\n        let i = 0, l = sortInfoArray.length, _a_val, _b_val;\n\n        list.sort(function (_a, _b) {\n            for (i = 0; i < l; i++) {\n                _a_val = getKeyValue(_a, sortInfoArray[i].key);\n                _b_val = getKeyValue(_b, sortInfoArray[i].key);\n\n                if (typeof _a_val !== typeof _b_val) {\n                    _a_val = '' + _a_val;\n                    _b_val = '' + _b_val;\n                }\n                if (_a_val < _b_val) {\n                    return (sortInfoArray[i].order === \"asc\") ? -1 : 1;\n                } else if (_a_val > _b_val) {\n                    return (sortInfoArray[i].order === \"asc\") ? 1 : -1;\n                }\n            }\n        });\n\n        if(_options && _options.resetLineNumber) {\n            i = 0, l = list.length, lineNumber = 0;\n            for (; i < l; i++) {\n                if (_list[i] && !_list[i][\"__isGrouping\"]) {\n                    _list[i][\"__index\"] = lineNumber++;\n                }\n            }\n        }\n\n        if (_list) {\n            return list;\n        } else {\n            this.xvar.frozenRowIndex = (this.config.frozenRowIndex > this.list.length) ? this.list.length : this.config.frozenRowIndex;\n            this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n            this.xvar.virtualPaintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n            GRID.page.navigationUpdate.call(this);\n            return this;\n        }\n    };\n\n    const append = function (_list, _callback) {\n        let self = this;\n\n        if (this.config.tree.use) {\n            let list = this.list.concat([].concat(_list));\n\n            this.list = arrangeData4tree.call(this, list);\n            this.proxyList = getProxyList.call(this, sort.call(this, this.sortInfo, this.list));\n            list = null;\n        } else {\n            this.list = this.list.concat([].concat(_list));\n        }\n\n        this.appendProgress = true;\n        GRID.page.statusUpdate.call(this);\n\n        if (this.appendDebouncer) {\n            if (self.appendDebounceTimes < this.config.debounceTime / 10) {\n                clearTimeout(this.appendDebouncer);\n                self.appendDebounceTimes++;\n            } else {\n                self.appendDebounceTimes = 0;\n                appendIdle.call(self);\n                _callback();\n                return false;\n            }\n        }\n\n        this.appendDebouncer = setTimeout(function () {\n            self.appendDebounceTimes = 0;\n            appendIdle.call(self);\n            _callback();\n        }, this.config.debounceTime);\n\n        // todo : append bounce animation\n    };\n\n    const appendIdle = function () {\n        this.appendProgress = false;\n        if (this.config.body.grouping) {\n            this.list = initData.call(this,\n                sort.call(this,\n                    this.sortInfo,\n                    this.list\n                )\n            );\n        } else {\n            this.list = initData.call(this, this.list);\n        }\n\n        this.needToPaintSum = true;\n        this.xvar.frozenRowIndex = (this.config.frozenRowIndex > this.list.length) ? this.list.length : this.config.frozenRowIndex;\n        this.xvar.paintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        this.xvar.virtualPaintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        GRID.page.navigationUpdate.call(this);\n    };\n\n    const toggleCollapse = function (_dindex, _doindx, _collapse) {\n        let keys = this.config.tree.columnKeys, selfHash, originIndex;\n\n        if (typeof _dindex === \"undefined\") return false;\n        originIndex = this.proxyList[_dindex].__origin_index__;\n\n        if (this.list[originIndex][keys.children]) {\n            this.proxyList = []; // 리셋 프록시\n            if (typeof _collapse == \"undefined\") {\n                _collapse = !(this.list[originIndex][keys.collapse] || false);\n            }\n\n            this.list[originIndex][keys.collapse] = _collapse;\n            selfHash = this.list[originIndex][keys.selfHash];\n\n            let i = this.list.length;\n            while (i--) {\n                if (this.list[i]) {\n                    // console.log(this.list[i][keys.parentHash].substr(0, selfHash.length), selfHash);\n                    if (this.list[i][keys.parentHash].substr(0, selfHash.length) === selfHash) {\n                        this.list[i][keys.hidden] = _collapse;\n                    }\n\n                    if (!this.list[i][keys.hidden]) {\n                        this.proxyList.push(this.list[i]);\n                    }\n                }\n            }\n\n            return true;\n        } else {\n            return false;\n        }\n    };\n\n    GRID.data = {\n        init: init,\n        set: set,\n        get: get,\n        getList: getList,\n        getProxyList: getProxyList,\n        setValue: setValue,\n        getValue: getValue,\n        clearSelect: clearSelect,\n        select: select,\n        selectAll: selectAll,\n        add: add,\n        remove: remove,\n        deleteRow: deleteRow,\n        update: update,\n        updateChild: updateChild,\n        sort: sort,\n        initData: initData,\n        clearGroupingData: clearGroupingData,\n        append: append,\n        toggleCollapse: toggleCollapse\n    };\n})();","/*\n * Copyright (c) 2016. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n// ax5.ui.grid.excel\n(function () {\n\n    const GRID = ax5.ui.grid;\n\n    const U = ax5.util;\n\n    const base64 = function (s) {\n        return window.btoa(unescape(encodeURIComponent(s)));\n    };\n\n    const uri = \"data:application/vnd.ms-excel;base64,\";\n\n    const getExcelTmpl = function () {\n        return `\\ufeff\n{{#tables}}{{{body}}}{{/tables}}\n`;\n    };\n\n    const tableToExcel = function (table, fileName) {\n        let link, a, output,\n            tables = [].concat(table);\n\n        output = ax5.mustache.render(getExcelTmpl(), {\n            worksheet: (function () {\n                var arr = [];\n                tables.forEach(function (t, ti) {\n                    arr.push({name: \"Sheet\" + (ti + 1)});\n                });\n                return arr;\n            })(),\n            tables: (function () {\n                var arr = [];\n                tables.forEach(function (t, ti) {\n                    arr.push({body: t});\n                });\n                return arr;\n            })()\n        });\n\n        let isChrome = navigator.userAgent.indexOf(\"Chrome\") > -1,\n            isSafari = !isChrome && navigator.userAgent.indexOf(\"Safari\") > -1,\n            isIE = /*@cc_on!@*/false || !!document.documentMode; // this works with IE10 and IE11 both :)\n\n        let blob1, blankWindow, $iframe, iframe, anchor;\n\n        if (navigator.msSaveOrOpenBlob) {\n            blob1 = new Blob([output], {type: \"text/html\"});\n            window.navigator.msSaveOrOpenBlob(blob1, fileName);\n        }\n        else if (isSafari) {\n            // 사파리는 지원이 안되므로 그냥 테이블을 클립보드에 복사처리\n            //tables\n            blankWindow = window.open('about:blank', this.id + '-excel-export', 'width=600,height=400');\n            blankWindow.document.write(output);\n            blankWindow = null;\n        }\n        else {\n            if (isIE && typeof Blob === \"undefined\") {\n                //otherwise use the iframe and save\n                //requires a blank iframe on page called txtArea1\n                $iframe = jQuery('<iframe id=\"' + this.id + '-excel-export\" style=\"display:none\"></iframe>');\n                jQuery(document.body).append($iframe);\n\n                iframe = window[this.id + '-excel-export'];\n                iframe.document.open(\"text/html\", \"replace\");\n                iframe.document.write(output);\n                iframe.document.close();\n                iframe.focus();\n                iframe.document.execCommand(\"SaveAs\", true, fileName);\n                $iframe.remove();\n            } else {\n                // Attempt to use an alternative method\n                anchor = document.body.appendChild(\n                    document.createElement(\"a\")\n                );\n\n                // If the [download] attribute is supported, try to use it\n                if (\"download\" in anchor) {\n                    anchor.download = fileName;\n                    anchor.href = URL.createObjectURL(new Blob([output], { type: 'text/csv' }));\n                    anchor.click();\n                    document.body.removeChild(anchor);\n                }\n            }\n        }\n\n        return true;\n    };\n\n    GRID.excel = {\n        export: tableToExcel\n    };\n})();","// ax5.ui.grid.formatter\n(function () {\n\n    const GRID = ax5.ui.grid;\n\n    const U = ax5.util;\n\n    const money = function () {\n        if (typeof this.value !== \"undefined\") {\n            let val = ('' + this.value).replace(/[^0-9^\\.^\\-]/g, \"\"),\n                regExpPattern = new RegExp('([0-9])([0-9][0-9][0-9][,.])'),\n                arrNumber = val.split('.'),\n                returnValue;\n\n            arrNumber[0] += '.';\n\n            do {\n                arrNumber[0] = arrNumber[0].replace(regExpPattern, '$1,$2');\n            } while (regExpPattern.test(arrNumber[0]));\n\n            return (arrNumber.length > 1) ? arrNumber[0] + U.left(arrNumber[1], 2) : arrNumber[0].split('.')[0];\n        } else {\n            return \"\";\n        }\n    };\n\n    GRID.formatter = {\n        money: money\n    };\n\n})();","// ax5.ui.grid.header\n(function () {\n\n    const GRID = ax5.ui.grid;\n\n    const U = ax5.util;\n\n    const columnResizerEvent = {\n        \"on\": function (_columnResizer, _colIndex) {\n            var self = this;\n            var $columnResizer = $(_columnResizer);\n            var columnResizerPositionLeft = $columnResizer.offset().left;\n            var gridTargetOffsetLeft = self.$[\"container\"][\"root\"].offset().left;\n            self.xvar.columnResizerIndex = _colIndex;\n            var resizeRange = {\n                min: -self.colGroup[_colIndex]._width + 2,\n                max: self.$[\"container\"][\"root\"].width() - self.colGroup[_colIndex]._width,\n            };\n\n            jQuery(document.body)\n                .bind(GRID.util.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                    var mouseObj = GRID.util.getMousePosition(e);\n                    self.xvar.__da = mouseObj.clientX - self.xvar.mousePosition.clientX;\n\n                    if (resizeRange.min > self.xvar.__da) {\n                        self.xvar.__da = resizeRange.min;\n                    } else if (resizeRange.max < self.xvar.__da) {\n                        self.xvar.__da = resizeRange.max;\n                    }\n\n                    if (!self.xvar.columnResizerLived) {\n                        self.$[\"resizer\"][\"horizontal\"].addClass(\"live\");\n                    }\n                    self.xvar.columnResizerLived = true;\n                    self.$[\"resizer\"][\"horizontal\"].css({\n                        left: columnResizerPositionLeft + self.xvar.__da - gridTargetOffsetLeft\n                    });\n                })\n                .bind(GRID.util.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                    columnResizerEvent.off.call(self);\n                    U.stopEvent(e);\n                })\n                .bind(\"mouseleave.ax5grid-\" + this.instanceId, function (e) {\n                    columnResizerEvent.off.call(self);\n                    U.stopEvent(e);\n                });\n\n            jQuery(document.body)\n                .attr('unselectable', 'on')\n                .css('user-select', 'none')\n                .on('selectstart', false);\n        },\n        \"off\": function () {\n            this.$[\"resizer\"][\"horizontal\"].removeClass(\"live\");\n            this.xvar.columnResizerLived = false;\n\n            if (typeof this.xvar.__da === \"undefined\") {\n\n            }\n            else {\n                this.setColumnWidth(this.colGroup[this.xvar.columnResizerIndex]._width + this.xvar.__da, this.xvar.columnResizerIndex);\n            }\n\n            jQuery(document.body)\n                .unbind(GRID.util.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId)\n                .unbind(GRID.util.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId)\n                .unbind(\"mouseleave.ax5grid-\" + this.instanceId);\n\n            jQuery(document.body)\n                .removeAttr('unselectable')\n                .css('user-select', 'auto')\n                .off('selectstart');\n        }\n    };\n\n    const init = function () {\n        // 헤더 초기화\n        const self = this;\n\n        this.$[\"container\"][\"header\"].on(\"click\", '[data-ax5grid-column-attr]', function (e) {\n            let key = this.getAttribute(\"data-ax5grid-column-key\"),\n                colIndex = this.getAttribute(\"data-ax5grid-column-colindex\"),\n                //rowIndex = this.getAttribute(\"data-ax5grid-column-rowindex\"),\n                col = self.colGroup[colIndex];\n\n            if (key === \"__checkbox_header__\" && self.config.header.selector) {\n                let selected = this.getAttribute(\"data-ax5grid-selected\");\n                selected = (U.isNothing(selected)) ? true : (selected !== \"true\");\n\n                $(this).attr(\"data-ax5grid-selected\", selected);\n                self.selectAll({selected: selected});\n\n                selected = null;\n            }\n            else {\n                if (key && col && col.sortable !== false && !col.sortFixed) {\n                    if (col.sortable === true || self.config.sortable === true) {\n                        toggleSort.call(self, col.key);\n                    }\n                }\n            }\n\n            GRID.body.blur.call(self);\n\n            key = null;\n            colIndex = null;\n            col = null;\n        });\n        this.$[\"container\"][\"header\"]\n            .on(\"mousedown\", '[data-ax5grid-column-resizer]', function (e) {\n                let colIndex = this.getAttribute(\"data-ax5grid-column-resizer\");\n\n                self.xvar.mousePosition = GRID.util.getMousePosition(e);\n                columnResizerEvent.on.call(self, this, Number(colIndex));\n                U.stopEvent(e);\n\n                colIndex = null;\n            })\n            .on(\"dragstart\", function (e) {\n                U.stopEvent(e);\n                return false;\n            });\n\n        resetFrozenColumn.call(this);\n    };\n\n    const resetFrozenColumn = function () {\n        let cfg = this.config,\n            dividedHeaderObj = GRID.util.divideTableByFrozenColumnIndex(this.headerTable, this.xvar.frozenColumnIndex);\n\n        this.asideHeaderData = (function (dataTable) {\n            let colGroup = [];\n            let data = {rows: []};\n            for (let i = 0, l = dataTable.rows.length; i < l; i++) {\n                data.rows[i] = {cols: []};\n                if (i === 0) {\n                    let col = {\n                        label: \"\",\n                        colspan: 1,\n                        rowspan: dataTable.rows.length,\n                        colIndex: null\n                    }, _col = {};\n\n                    if (cfg.showLineNumber) {\n                        _col = jQuery.extend({}, col, {\n                            width: cfg.lineNumberColumnWidth,\n                            _width: cfg.lineNumberColumnWidth,\n                            columnAttr: \"lineNumber\",\n                            key: \"__index_header__\", label: \"&nbsp;\"\n                        });\n                        colGroup.push(_col);\n                        data.rows[i].cols.push(_col);\n                    }\n                    if (cfg.showRowSelector) {\n                        _col = jQuery.extend({}, col, {\n                            width: cfg.rowSelectorColumnWidth,\n                            _width: cfg.rowSelectorColumnWidth,\n                            columnAttr: \"rowSelector\",\n                            key: \"__checkbox_header__\", label: \"\"\n                        });\n                        colGroup.push(_col);\n                        data.rows[i].cols.push(_col);\n                    }\n\n                    col = null;\n                }\n            }\n\n            this.asideColGroup = colGroup;\n            return data;\n        }).call(this, this.headerTable);\n\n        this.leftHeaderData = dividedHeaderObj.leftData;\n        this.headerData = dividedHeaderObj.rightData;\n    };\n\n    const getFieldValue = function (_col) {\n        return (_col.key === \"__checkbox_header__\")\n            ? ((this.config.header.selector) ? `<div class=\"checkBox\" style=\"max-height: ${_col.width - 10}px;min-height: ${_col.width - 10}px;\"></div>` : \"&nbsp;\")\n            : (_col.label || \"&nbsp;\");\n    };\n\n    const repaint = function (_reset) {\n        let cfg = this.config,\n            colGroup = this.colGroup;\n\n        if (_reset) {\n            resetFrozenColumn.call(this);\n            this.xvar.paintStartRowIndex = undefined;\n            this.xvar.virtualPaintStartRowIndex = undefined; // 스크롤 포지션 저장변수 초기화\n        }\n        let asideHeaderData = this.asideHeaderData,\n            leftHeaderData = this.leftHeaderData,\n            headerData = this.headerData,\n            headerAlign = cfg.header.align;\n\n        // this.asideColGroup : asideHeaderData에서 처리 함.\n        this.leftHeaderColGroup = colGroup.slice(0, this.config.frozenColumnIndex);\n        this.headerColGroup = colGroup.slice(this.config.frozenColumnIndex);\n\n        var repaintHeader = function (_elTarget, _colGroup, _bodyRow) {\n            let tableWidth = 0,\n                SS = [];\n            SS.push('<table border=\"0\" cellpadding=\"0\" cellspacing=\"0\">');\n            SS.push('<colgroup>');\n            for (var cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                SS.push('<col style=\"width:' + _colGroup[cgi]._width + 'px;\"  />');\n                tableWidth += _colGroup[cgi]._width;\n            }\n            SS.push('<col  />');\n            SS.push('</colgroup>');\n\n            for (var tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                var trCSS_class = \"\";\n                SS.push('<tr class=\"' + trCSS_class + '\">');\n                for (var ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                    var col = _bodyRow.rows[tri].cols[ci];\n                    var cellHeight = cfg.header.columnHeight * col.rowspan - cfg.header.columnBorderWidth;\n                    var colAlign = headerAlign || col.align;\n                    SS.push('<td ',\n                        'data-ax5grid-column-attr=\"' + (col.columnAttr || \"default\") + '\" ',\n                        'data-ax5grid-column-row=\"' + tri + '\" ',\n                        'data-ax5grid-column-col=\"' + ci + '\" ',\n                        (function () {\n                            return (typeof col.key !== \"undefined\") ? 'data-ax5grid-column-key=\"' + col.key + '\" ' : '';\n                        })(),\n                        'data-ax5grid-column-colindex=\"' + col.colIndex + '\" ',\n                        'data-ax5grid-column-rowindex=\"' + col.rowIndex + '\" ',\n                        'colspan=\"' + col.colspan + '\" ',\n                        'rowspan=\"' + col.rowspan + '\" ',\n                        'class=\"' + (function (_col) {\n                            var tdCSS_class = \"\";\n                            if (_col.headerStyleClass) {\n                                if (U.isFunction(_col.headerStyleClass)) {\n                                    tdCSS_class += _col.headerStyleClass.call({\n                                            column: _col,\n                                            key: _col.key\n                                        }) + \" \";\n                                } else {\n                                    tdCSS_class += _col.headerStyleClass + \" \";\n                                }\n                            }\n                            if (cfg.header.columnBorderWidth) tdCSS_class += \"hasBorder \";\n                            if (ci == cl - 1) tdCSS_class += \"isLastColumn \";\n                            return tdCSS_class;\n                        }).call(this, col) + '\" ',\n                        'style=\"height: ' + cellHeight + 'px;min-height: 1px;\">');\n                    \n                    SS.push((function () {\n                        // var lineHeight = (cfg.header.columnHeight - cfg.header.columnPadding * 2);\n                        return '<span data-ax5grid-cellHolder=\"\" ' +\n                            ((colAlign) ? 'data-ax5grid-text-align=\"' + colAlign + '\"' : '') +\n                            ' >';\n                    })(), (function () {\n                        var _SS = \"\";\n\n                        if (!U.isNothing(col.key) && !U.isNothing(col.colIndex) && (cfg.sortable === true || col.sortable === true) && col.sortable !== false) {\n                            _SS += '<span data-ax5grid-column-sort=\"' + col.colIndex + '\" data-ax5grid-column-sort-order=\"' + (colGroup[col.colIndex].sort || \"\") + '\" />';\n                        }\n                        return _SS;\n                    })(), getFieldValue.call(this, col), '</span>');\n\n                    if (!U.isNothing(col.colIndex)) {\n                        if (cfg.enableFilter) {\n                            SS.push('<span data-ax5grid-column-filter=\"' + col.colIndex + '\" data-ax5grid-column-filter-value=\"\"  />');\n                        }\n                    }\n\n                    SS.push('</td>');\n                }\n                SS.push('<td ',\n                    'data-ax5grid-column-row=\"null\" ',\n                    'data-ax5grid-column-col=\"null\" ',\n                    'style=\"height: ' + (cfg.header.columnHeight) + 'px;min-height: 1px;\" ',\n                    '></td>');\n                SS.push('</tr>');\n            }\n            SS.push('</table>');\n            _elTarget.html(SS.join(''));\n\n            /// append column-resizer\n            (function () {\n                let resizerHeight = cfg.header.columnHeight * _bodyRow.rows.length - cfg.header.columnBorderWidth,\n                    resizerLeft = 0,\n                    AS = [];\n\n                for (var cgi = 0, cgl = _colGroup.length; cgi < cgl; cgi++) {\n                    var col = _colGroup[cgi];\n                    if (!U.isNothing(col.colIndex)) {\n                        //_colGroup[cgi]._width\n                        resizerLeft += col._width;\n                        AS.push('<div data-ax5grid-column-resizer=\"' + col.colIndex + '\" style=\"height:' + resizerHeight + 'px;left: ' + (resizerLeft - 4) + 'px;\"  />');\n                    }\n                }\n                _elTarget.append(AS);\n            }).call(this);\n\n\n            return tableWidth;\n        };\n\n        if (cfg.asidePanelWidth > 0) {\n            repaintHeader.call(this, this.$.panel[\"aside-header\"], this.asideColGroup, asideHeaderData);\n        }\n        if (cfg.frozenColumnIndex > 0) {\n            repaintHeader.call(this, this.$.panel[\"left-header\"], this.leftHeaderColGroup, leftHeaderData);\n        }\n\n        this.xvar.scrollContentWidth = repaintHeader.call(this, this.$.panel[\"header-scroll\"], this.headerColGroup, headerData);\n\n        if (cfg.rightSum) {\n\n        }\n    };\n\n    const scrollTo = function (css) {\n        this.$.panel[\"header-scroll\"].css(css);\n        return this;\n    };\n\n    const toggleSort = function (_key) {\n        let sortOrder = \"\",\n            sortInfo = {},\n            seq = 0;\n\n        for (var k in this.sortInfo) {\n            if (this.sortInfo[k].fixed) {\n                sortInfo[k] = this.sortInfo[k];\n                seq++;\n            }\n        }\n\n        for (var i = 0, l = this.colGroup.length; i < l; i++) {\n            if (this.colGroup[i].key == _key) {\n                if (sortOrder == \"\") {\n                    if (typeof this.colGroup[i].sort === \"undefined\") {\n                        sortOrder = \"desc\";\n                    }\n                    else if (this.colGroup[i].sort === \"desc\") {\n                        sortOrder = \"asc\";\n                    }\n                    else {\n                        sortOrder = undefined;\n                    }\n                }\n                this.colGroup[i].sort = sortOrder;\n            } else if (!this.config.multiSort) {\n                this.colGroup[i].sort = undefined;\n            }\n\n            if (typeof this.colGroup[i].sort !== \"undefined\") {\n                if (!sortInfo[this.colGroup[i].key]) {\n                    sortInfo[this.colGroup[i].key] = {\n                        seq: seq++,\n                        orderBy: this.colGroup[i].sort\n                    };\n                }\n            }\n        }\n\n        this.setColumnSort(sortInfo);\n        return this;\n    };\n\n    const applySortStatus = function (_sortInfo) {\n        for (var i = 0, l = this.colGroup.length; i < l; i++) {\n            for (var _key in _sortInfo) {\n                if (this.colGroup[i].key == _key) {\n                    this.colGroup[i].sort = _sortInfo[_key].orderBy;\n                }\n            }\n        }\n        return this;\n    };\n\n    const select = function (_options) {\n        GRID.data.select.call(this, dindex, _options && _options.selected);\n        GRID.body.updateRowState.call(this, [\"selected\"], dindex);\n    };\n\n    const getExcelString = function () {\n        let cfg = this.config,\n            colGroup = this.colGroup,\n            headerData = this.headerTable,\n            getHeader = function (_colGroup, _bodyRow) {\n                var SS = [];\n                //SS.push('<table border=\"1\">');\n                for (var tri = 0, trl = _bodyRow.rows.length; tri < trl; tri++) {\n                    SS.push('<tr>');\n                    for (var ci = 0, cl = _bodyRow.rows[tri].cols.length; ci < cl; ci++) {\n                        var col = _bodyRow.rows[tri].cols[ci];\n                        SS.push('<td ',\n                            'colspan=\"' + col.colspan + '\" ',\n                            'rowspan=\"' + col.rowspan + '\" ',\n                            '>', getFieldValue.call(this, col), '</td>');\n                    }\n                    SS.push('</tr>');\n                }\n                //SS.push('</table>');\n\n                return SS.join('');\n            };\n\n        return getHeader.call(this, colGroup, headerData);\n    };\n\n    GRID.header = {\n        init: init,\n        repaint: repaint,\n        scrollTo: scrollTo,\n        toggleSort: toggleSort,\n        applySortStatus: applySortStatus,\n        getExcelString: getExcelString\n    };\n\n})();","// ax5.ui.grid.inlineEditor\n(function () {\n\n    const GRID = ax5.ui.grid;\n\n    const edit_text = {\n        useReturnToSave: true,\n        editMode: \"popup\",\n        getHtml: function (_root, _columnKey, _editor, _value) {\n            if(typeof _editor.attributes !== \"undefined\"){\n                var attributesText  = \"\";\n                for (var k in _editor.attributes){\n                    attributesText += ` ${k}='${_editor.attributes[k]}'`;\n                }\n            }\n            return `<input type=\"text\" data-ax5grid-editor=\"text\" value=\"${_value}\" ${attributesText}>`;\n        },\n        init: function (_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            $el.on(\"blur\", function () {\n                GRID.body.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey);\n            });\n            return $el;\n        },\n        bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n            _$el.focus().select();\n        }\n    };\n\n    const edit_money = {\n        useReturnToSave: true,\n        editMode: \"popup\",\n        getHtml: function (_root, _columnKey, _editor, _value) {\n            let attributesText = \"\";\n            if(typeof _editor.attributes !== \"undefined\"){\n                for (let k in _editor.attributes){\n                    attributesText += ` ${k}='${_editor.attributes[k]}'`;\n                }\n            }\n            return '<input type=\"text\" data-ax5grid-editor=\"money\" value=\"' + _value + '\" ' + attributesText + '\" />';\n        },\n        init: function (_root, _columnKey, _editor, _$parent, _value) {\n            let $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            $el.on(\"blur\", function () {\n                GRID.body.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey);\n            });\n            return $el;\n        },\n        bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n            _$el.data(\"binded-ax5ui\", \"ax5formater\");\n            _$el.ax5formatter($.extend(true, {\n                pattern: \"money\"\n            }, _editor.config));\n            _$el.focus().select();\n        }\n    };\n\n    const edit_number = {\n        useReturnToSave: true,\n        editMode: \"popup\",\n        getHtml: function (_root, _columnKey, _editor, _value) {\n            let attributesText = \"\";\n            if(typeof _editor.attributes !== \"undefined\"){\n                for (let k in _editor.attributes){\n                    attributesText += ` ${k}='${_editor.attributes[k]}'`;\n                }\n            }\n            return '<input type=\"text\" data-ax5grid-editor=\"number\" value=\"' + _value + '\" ' + attributesText + '\" />';\n        },\n        init: function (_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            $el.on(\"blur\", function () {\n                GRID.body.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey);\n            });\n            return $el;\n        },\n        bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n            _$el.data(\"binded-ax5ui\", \"ax5formater\");\n            _$el.ax5formatter($.extend(true, {\n                pattern: \"number\"\n            }, _editor.config));\n            _$el.focus().select();\n        }\n    };\n\n    const edit_date = {\n        useReturnToSave: true,\n        editMode: \"popup\",\n        getHtml: function (_root, _columnKey, _editor, _value) {\n            return '<input type=\"text\" data-ax5grid-editor=\"calendar\" value=\"' + _value + '\" >';\n        },\n        init: function (_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            return $el;\n        },\n        bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n            var self = _root;\n            _$el.data(\"binded-ax5ui\", \"ax5picker\");\n\n            _$el.ax5picker($.extend(true, {\n                direction: \"auto\",\n                content: {\n                    type: 'date',\n                    formatter: {\n                        pattern: 'date'\n                    }\n                },\n                onStateChanged: function () {\n                    if (this.state == \"open\") {\n                        this.self.activePicker.attr(\"data-ax5grid-inline-edit-picker\", \"date\");\n                    } else if (this.state == \"close\") {\n                        GRID.body.inlineEdit.deActive.call(self, \"RETURN\", _columnKey);\n                    }\n                }\n            }, _editor.config));\n\n            _$el.focus().select();\n        }\n    };\n\n    const edit_select = {\n        useReturnToSave: false,\n        editMode: \"popup\",\n        getHtml: function (_root, _columnKey, _editor, _value) {\n            var po = [];\n            po.push('<div data-ax5select=\"ax5grid-editor\" data-ax5select-config=\"{}\">');\n            po.push('</div>');\n\n            return po.join('');\n        },\n        init: function (_root, _columnKey, _editor, _$parent, _value) {\n            var $el;\n            _$parent.append($el = jQuery(this.getHtml(_root, _columnKey, _editor, _value)));\n            this.bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            return $el;\n        },\n        bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n            var eConfig = {\n                columnKeys: {\n                    optionValue: \"value\",\n                    optionText: \"text\",\n                    optionSelected: \"selected\"\n                }\n            };\n            jQuery.extend(true, eConfig, _editor.config);\n\n            eConfig.options.forEach(function (n) {\n                if (n[eConfig.columnKeys.optionValue] == _value) n[eConfig.columnKeys.optionSelected] = true;\n            });\n\n            var self = _root;\n            _$el.data(\"binded-ax5ui\", \"ax5select\");\n            _$el.ax5select($.extend(true, {\n                tabIndex: 1,\n                direction: \"auto\",\n                columnKeys: eConfig.columnKeys,\n                options: eConfig.options,\n                onStateChanged: function () {\n                    if (this.state == \"open\") {\n                        this.self.activeSelectOptionGroup.attr(\"data-ax5grid-inline-edit-picker\", \"select\");\n                    } else if (this.state == \"changeValue\") {\n                        GRID.body.inlineEdit.deActive.call(self, \"RETURN\", _columnKey, this.value[0][eConfig.columnKeys.optionValue]);\n                    } else if (this.state == \"close\") {\n                        GRID.body.inlineEdit.deActive.call(self, \"ESC\", _columnKey);\n                    }\n                }\n            }, _editor.config));\n            _$el.ax5select(\"open\");\n            _$el.ax5select(\"setValue\", _value);\n            _$el.find(\"a\").focus();\n        }\n    };\n\n    const edit_checkbox = {\n        editMode: \"inline\",\n        getHtml: function (_root, _editor, _value) {\n\n            var lineHeight = (_root.config.body.columnHeight - _root.config.body.columnPadding * 2 - _root.config.body.columnBorderWidth);\n            var checked;\n            if (_editor.config && _editor.config.trueValue) {\n                checked = (_value == _editor.config.trueValue) ? \"true\" : \"false\";\n            } else {\n                checked = (_value == false || _value == \"false\" || _value < \"1\") ? \"false\" : \"true\";\n            }\n\n            var eConfig = {\n                marginTop: 2,\n                height: lineHeight - 4\n            };\n            jQuery.extend(true, eConfig, _editor.config);\n            eConfig.marginTop = (lineHeight - eConfig.height) / 2;\n\n            return '<div data-ax5grid-editor=\"checkbox\" data-ax5grid-checked=\"' + checked + '\" style=\"height:' + eConfig.height + 'px;width:' + eConfig.height + 'px;\"></div>';\n        }\n    };\n\n    const edit_textarea = {\n        useReturnToSave: false,\n        editMode: \"popup\",\n        _getHtml: function (_root, _columnKey, _editor, _value) {\n            // init 에서 사용하게 될 HTML 태그를 만들어 줍니다.\n            return `<div data-ax5grid-editor=\"textarea\"></div>`;\n        },\n        _bindUI: function (_root, _columnKey, _$el, _editor, _$parent, _value) {\n            // 위치와 크기를 구합니다.\n            let offset = _$el.offset();\n            let box = {\n                width: _$el.width()\n            };\n            let editorHeight = 150;\n            let buttonHeight = 30;\n\n            // 새로운 엘리먼트 생성\n            let $newDiv = jQuery(`<div data-ax5grid-popup=\"textarea\" style=\"z-index: 9999;\">\n    <textarea style=\"width:100%;height:${editorHeight-buttonHeight}px;\" class=\"form-control\">${_value}</textarea>\n    <div style=\"height:${buttonHeight}px;padding:5px;text-align: right;\">\n        <button class=\"btn btn-default\">OK</button>\n    </div>\n</div>`);\n            let $newTextarea = $newDiv.find(\"textarea\");\n            // 엘리먼트에 CSS 적용\n            $newDiv.css({\n                position: \"absolute\",\n                left: offset.left,\n                top: offset.top,\n                width: box.width,\n                height: editorHeight\n            });\n            $newDiv.find(\"textarea\");\n\n            // 새로운 엘리먼트를 document.body에 append\n            jQuery(document.body).append($newDiv);\n            $newTextarea.focus().select();\n\n            $newTextarea.on(\"blur\", function (e) {\n                GRID.body.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey, this.value);\n                $newDiv.remove();\n                ax5.util.stopEvent(e.originalEvent);\n            });\n            $newTextarea.on(\"keydown\", function (e) {\n                if(e.which == ax5.info.eventKeys.ESC){\n                    GRID.body.inlineEdit.deActive.call(_root, \"ESC\", _columnKey);\n                    $newDiv.remove();\n                    ax5.util.stopEvent(e.originalEvent);\n                }\n            });\n\n            /// 값 변경\n            /// GRID.body.inlineEdit.deActive.call(_root, \"RETURN\", _columnKey, this.value[0][eConfig.columnKeys.optionValue]);\n            /// 에디팅 취소\n            /// GRID.body.inlineEdit.deActive.call(_root, \"ESC\", _columnKey);\n        },\n\n        init: function (_root, _columnKey, _editor, _$parent, _value) {\n            // 인라인 에디팅 활성화 시작\n            /**\n             * _root : gridInstance\n             * _columnKey : di + \"_\" + col.colIndex + \"_\" + col.rowIndex\n             * _editor : col.editor\n             * _$parent : 셀\n             * _value : 값\n             */\n            let $el;\n            _$parent.append($el = jQuery(this._getHtml(_root, _columnKey, _editor, _value)));\n            // 셀에 HTML 컨텐츠 추가\n\n            this._bindUI(_root, _columnKey, $el, _editor, _$parent, _value);\n            // 이벤트 바인딩\n\n            return $el;\n        },\n    };\n\n    GRID.inlineEditor = {\n        \"text\": edit_text,\n        \"money\": edit_money,\n        \"number\": edit_number,\n        \"date\": edit_date,\n        \"select\": edit_select,\n        \"checkbox\": edit_checkbox,\n        \"textarea\": edit_textarea\n    };\n\n})();","// ax5.ui.grid.page\n(function () {\n\n    const GRID = ax5.ui.grid;\n\n    const U = ax5.util;\n\n    const onclickPageMove = function (_act) {\n        var callback = function (_pageNo) {\n            if (this.page.currentPage != _pageNo) {\n                this.page.selectPage = _pageNo;\n                if (this.config.page.onChange) {\n                    this.config.page.onChange.call({\n                        self: this,\n                        page: this.page,\n                        data: this.data\n                    });\n                }\n            }\n        };\n        var processor = {\n            \"first\": function () {\n                callback.call(this, 0);\n            },\n            \"prev\": function () {\n                var pageNo = this.page.currentPage - 1;\n                if (pageNo < 0) pageNo = 0;\n                callback.call(this, pageNo);\n            },\n            \"next\": function () {\n                var pageNo = this.page.currentPage + 1;\n                if (pageNo > this.page.totalPages - 1) pageNo = this.page.totalPages - 1;\n                callback.call(this, pageNo);\n            },\n            \"last\": function () {\n                callback.call(this, this.page.totalPages - 1);\n            }\n        };\n\n        if (_act in processor) {\n            processor[_act].call(this);\n        }\n        else {\n            callback.call(this, _act - 1);\n        }\n    };\n\n    const navigationUpdate = function () {\n        let self = this;\n        if (this.page) {\n            let page = {\n                hasPage: false,\n                currentPage: this.page.currentPage,\n                pageSize: this.page.pageSize,\n                totalElements: this.page.totalElements,\n                totalPages: this.page.totalPages,\n                firstIcon: this.config.page.firstIcon,\n                prevIcon: this.config.page.prevIcon || \"«\",\n                nextIcon: this.config.page.nextIcon || \"»\",\n                lastIcon: this.config.page.lastIcon,\n            };\n            let navigationItemCount = this.config.page.navigationItemCount;\n\n            page[\"@paging\"] = (function () {\n                let returns = [], startI, endI;\n\n                startI = page.currentPage - Math.floor(navigationItemCount / 2);\n                if (startI < 0) startI = 0;\n                endI = page.currentPage + navigationItemCount;\n                if (endI > page.totalPages) endI = page.totalPages;\n\n                if (endI - startI > navigationItemCount) {\n                    endI = startI + navigationItemCount;\n                }\n\n                if (endI - startI < navigationItemCount) {\n                    startI = endI - navigationItemCount;\n                }\n                if (startI < 0) startI = 0;\n\n                for (let p = startI, l = endI; p < l; p++) {\n                    returns.push({'pageNo': (p + 1), 'selected': page.currentPage == p});\n                }\n                return returns;\n            })();\n\n            if (page[\"@paging\"].length > 0) {\n                page.hasPage = true;\n            }\n\n            this.$[\"page\"][\"navigation\"].html(GRID.tmpl.get(\"page_navigation\", page));\n            this.$[\"page\"][\"navigation\"].find(\"[data-ax5grid-page-move]\").on(\"click\", function () {\n                onclickPageMove.call(self, this.getAttribute(\"data-ax5grid-page-move\"));\n            });\n\n        } else {\n            this.$[\"page\"][\"navigation\"].empty();\n        }\n    };\n\n    const statusUpdate = function () {\n        if (!this.config.page.statusDisplay) {\n            return;\n        }\n\n        let toRowIndex, rangeCount = Math.min(this.xvar.dataRowCount, this.xvar.virtualPaintRowCount);\n        let data = {};\n\n        toRowIndex = this.xvar.virtualPaintStartRowIndex + rangeCount;\n\n        if (toRowIndex > this.xvar.dataRowCount) {\n            toRowIndex = this.xvar.dataRowCount;\n        }\n\n        data.fromRowIndex = U.number(this.xvar.virtualPaintStartRowIndex + 1, {\"money\": true});\n        data.toRowIndex = U.number(toRowIndex, {\"money\": true});\n        data.totalElements = false;\n        data.dataRealRowCount = (this.xvar.dataRowCount !== this.xvar.dataRealRowCount) ? U.number(this.xvar.dataRealRowCount, {\"money\": true}) : false;\n        data.dataRowCount = U.number(this.xvar.dataRowCount, {\"money\": true});\n        data.progress = (this.appendProgress) ? this.config.appendProgressIcon : \"\";\n\n        if (this.page) {\n            data.fromRowIndex_page = U.number(this.xvar.virtualPaintStartRowIndex + (this.page.currentPage * this.page.pageSize) + 1, {\"money\": true});\n            data.toRowIndex_page = U.number(this.xvar.virtualPaintStartRowIndex + rangeCount + (this.page.currentPage * this.page.pageSize), {\"money\": true});\n            data.totalElements = U.number(this.page.totalElements, {\"money\": true});\n\n            if (data.toRowIndex_page > this.page.totalElements) {\n                data.toRowIndex_page = this.page.totalElements;\n            }\n        }\n\n        this.$[\"page\"][\"status\"].html(\n            GRID.tmpl.get(\"page_status\", data)\n        );\n    };\n\n    GRID.page = {\n        navigationUpdate: navigationUpdate,\n        statusUpdate: statusUpdate\n    };\n\n})();","// ax5.ui.grid.scroller\n(function () {\n\n    const GRID = ax5.ui.grid;\n\n    const U = ax5.util;\n\n    const convertScrollPosition = {\n        \"vertical\": function (css, _var) {\n            let _content_height = _var._content_height - _var._panel_height,\n                _scroller_height = _var._vertical_scroller_height - _var.verticalScrollBarHeight,\n                top = (_content_height * css.top) / _scroller_height;\n\n            if (top < 0) top = 0;\n            else if (_content_height < top) {\n                top = _content_height;\n            }\n            return {\n                top: -top\n            }\n        },\n        \"horizontal\": function (css, _var) {\n            let _content_width = _var._content_width - _var._panel_width,\n                _scroller_width = _var._horizontal_scroller_width - _var.horizontalScrollBarWidth,\n                left = (_content_width * css.left) / _scroller_width;\n\n            if (left < 0) left = 0;\n            else if (_content_width < left) {\n                left = _content_width;\n            }\n            return {\n                left: -left\n            }\n        }\n    };\n\n    const convertScrollBarPosition = {\n        \"vertical\": function (_top, _var) {\n\n            let self = this,\n                type = \"vertical\",\n                _content_height = _var._content_height - _var._panel_height,\n                _scroller_height = _var._vertical_scroller_height - _var.verticalScrollBarHeight,\n                top = (_scroller_height * _top) / _content_height,\n                scrollPositon;\n\n            if (-top > _scroller_height) {\n                top = -_scroller_height;\n\n                scrollPositon = convertScrollPosition[type].call(this, {top: -top}, {\n                    _content_width: _var._content_width,\n                    _content_height: _var._content_height,\n                    _panel_width: _var._panel_width,\n                    _panel_height: _var._panel_height,\n                    _horizontal_scroller_width: _var._horizontal_scroller_width,\n                    _vertical_scroller_height: _var._vertical_scroller_height,\n                    verticalScrollBarHeight: _var.verticalScrollBarHeight,\n                    horizontalScrollBarWidth: _var.horizontalScrollBarWidth\n                });\n\n                GRID.body.scrollTo.call(self, scrollPositon);\n            }\n\n            return -top\n        },\n        \"horizontal\": function (_left, _var) {\n            let self = this,\n                type = \"horizontal\",\n                _content_width = _var._content_width - _var._panel_width,\n                _scroller_width = _var._horizontal_scroller_width - _var.horizontalScrollBarWidth,\n                left = (_scroller_width * _left) / _content_width,\n                scrollPositon;\n\n            if (-left > _scroller_width) {\n                left = -_scroller_width;\n                scrollPositon = convertScrollPosition[type].call(this, {left: -left}, {\n                    _content_width: _var._content_width,\n                    _content_height: _var._content_height,\n                    _panel_width: _var._panel_width,\n                    _panel_height: _var._panel_height,\n                    _horizontal_scroller_width: _var._horizontal_scroller_width,\n                    _vertical_scroller_height: _var._vertical_scroller_height,\n                    verticalScrollBarHeight: _var.verticalScrollBarHeight,\n                    horizontalScrollBarWidth: _var.horizontalScrollBarWidth\n                });\n\n                GRID.header.scrollTo.call(self, scrollPositon);\n                GRID.body.scrollTo.call(self, scrollPositon);\n            }\n\n            return -left\n        }\n    };\n\n    const scrollBarMover = {\n        \"click\": function (track, bar, type, e) {\n\n            // 마우스 무브 완료 타임과 클릭타임 차이가 20 보다 작으면 클릭이벤트 막기.\n            if ((new Date()).getTime() - GRID.scroller.moveout_timer < 20) {\n                return false;\n            }\n\n            let self = this,\n                trackOffset = track.offset(),\n                barBox = {\n                    width: bar.outerWidth(), height: bar.outerHeight()\n                },\n                trackBox = {\n                    width: track.innerWidth(), height: track.innerHeight()\n                },\n                _vertical_scroller_height = self.$[\"scroller\"][\"vertical\"].innerHeight(),\n                _panel_height = self.$[\"panel\"][\"body\"].height(),\n                _horizontal_scroller_width = self.$[\"scroller\"][\"horizontal\"].innerWidth(),\n                _panel_width = self.$[\"panel\"][\"body\"].width(),\n                _content_height = self.xvar.scrollContentHeight,\n                _content_width = self.xvar.scrollContentWidth,\n                verticalScrollBarHeight = self.$[\"scroller\"][\"vertical-bar\"].outerHeight(),\n                horizontalScrollBarWidth = self.$[\"scroller\"][\"horizontal-bar\"].outerWidth(),\n                getScrollerPosition = {\n                    \"vertical\": function (e) {\n                        let mouseObj = GRID.util.getMousePosition(e);\n                        // track을 벗어 나지 안도록 범위 체크\n                        let newTop = mouseObj.clientY - trackOffset.top;\n                        if (newTop < 0) {\n                            newTop = 0;\n                        }\n                        else if ((newTop + barBox.height) > trackBox.height) {\n                            newTop = trackBox.height - barBox.height;\n                        }\n                        return {top: newTop};\n                    },\n                    \"horizontal\": function (e) {\n                        let mouseObj = GRID.util.getMousePosition(e);\n                        // track을 벗어 나지 안도록 범위 체크\n                        let newLeft = mouseObj.clientX - trackOffset.left;\n                        if (newLeft < 0) {\n                            newLeft = 0;\n                        }\n                        else if ((newLeft + barBox.width) > trackBox.width) {\n                            newLeft = trackBox.width - barBox.width;\n                        }\n                        return {left: newLeft};\n                    }\n                },\n                css = getScrollerPosition[type](e);\n\n            bar.css(css);\n\n            let scrollPositon = convertScrollPosition[type].call(self, css, {\n                _content_width: _content_width,\n                _content_height: _content_height,\n                _panel_width: _panel_width,\n                _panel_height: _panel_height,\n                _horizontal_scroller_width: _horizontal_scroller_width,\n                _vertical_scroller_height: _vertical_scroller_height,\n                verticalScrollBarHeight: verticalScrollBarHeight,\n                horizontalScrollBarWidth: horizontalScrollBarWidth\n            });\n            if (type === \"horizontal\") GRID.header.scrollTo.call(self, scrollPositon);\n            GRID.body.scrollTo.call(self, scrollPositon);\n\n            scrollPositon = null;\n        },\n        \"on\": function (track, bar, type, e) {\n            let self = this,\n                barOffset = bar.position(),\n                barBox = {\n                    width: bar.outerWidth(), height: bar.outerHeight()\n                },\n                trackBox = {\n                    width: track.innerWidth(), height: track.innerHeight()\n                },\n\n                _vertical_scroller_height = self.$[\"scroller\"][\"vertical\"].innerHeight(),\n                _panel_height = self.$[\"panel\"][\"body\"].height(),\n                _horizontal_scroller_width = self.$[\"scroller\"][\"horizontal\"].innerWidth(),\n                _panel_width = self.$[\"panel\"][\"body\"].width(),\n                _content_height = self.xvar.scrollContentHeight,\n                _content_width = self.xvar.scrollContentWidth,\n                verticalScrollBarHeight = self.$[\"scroller\"][\"vertical-bar\"].outerHeight(),\n                horizontalScrollBarWidth = self.$[\"scroller\"][\"horizontal-bar\"].outerWidth(),\n\n                getScrollerPosition = {\n                    \"vertical\": function (e) {\n                        var mouseObj = GRID.util.getMousePosition(e);\n                        self.xvar.__da = mouseObj.clientY - self.xvar.mousePosition.clientY;\n                        // track을 벗어 나지 안도록 범위 체크\n                        var newTop = barOffset.top + self.xvar.__da;\n                        if (newTop < 0) {\n                            newTop = 0;\n                        }\n                        else if ((newTop + barBox.height) > trackBox.height) {\n                            newTop = trackBox.height - barBox.height;\n                        }\n                        return {top: newTop};\n                    },\n                    \"horizontal\": function (e) {\n                        var mouseObj = GRID.util.getMousePosition(e);\n                        self.xvar.__da = mouseObj.clientX - self.xvar.mousePosition.clientX;\n                        // track을 벗어 나지 안도록 범위 체크\n                        var newLeft = barOffset.left + self.xvar.__da;\n                        if (newLeft < 0) {\n                            newLeft = 0;\n                        }\n                        else if ((newLeft + barBox.width) > trackBox.width) {\n                            newLeft = trackBox.width - barBox.width;\n                        }\n                        return {left: newLeft};\n                    }\n                };\n\n            self.xvar.__da = 0; // 이동량 변수 초기화 (계산이 잘못 될까바)\n\n            jQuery(document.body)\n                .bind(GRID.util.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                    let css = getScrollerPosition[type](e);\n                    bar.css(css);\n\n                    let scrollPositon = convertScrollPosition[type].call(self, css, {\n                        _content_width: _content_width,\n                        _content_height: _content_height,\n                        _panel_width: _panel_width,\n                        _panel_height: _panel_height,\n                        _horizontal_scroller_width: _horizontal_scroller_width,\n                        _vertical_scroller_height: _vertical_scroller_height,\n                        verticalScrollBarHeight: verticalScrollBarHeight,\n                        horizontalScrollBarWidth: horizontalScrollBarWidth\n                    });\n\n                    if (type === \"horizontal\") GRID.header.scrollTo.call(self, scrollPositon);\n\n                    GRID.body.scrollTo.call(self, scrollPositon);\n                })\n                .bind(GRID.util.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId, function (e) {\n                    scrollBarMover.off.call(self, e);\n                })\n                .bind(\"mouseleave.ax5grid-\" + this.instanceId, function (e) {\n                    scrollBarMover.off.call(self, e);\n                });\n\n            jQuery(document.body)\n                .attr('unselectable', 'on')\n                .css('user-select', 'none')\n                .on('selectstart', false);\n\n        },\n        \"off\": function (e) {\n            ax5.util.stopEvent(e.originalEvent);\n            GRID.scroller.moveout_timer = (new Date()).getTime();\n\n            jQuery(document.body)\n                .unbind(GRID.util.ENM[\"mousemove\"] + \".ax5grid-\" + this.instanceId)\n                .unbind(GRID.util.ENM[\"mouseup\"] + \".ax5grid-\" + this.instanceId)\n                .unbind(\"mouseleave.ax5grid-\" + this.instanceId);\n\n            jQuery(document.body)\n                .removeAttr('unselectable')\n                .css('user-select', 'auto')\n                .off('selectstart');\n        }\n    };\n\n    const scrollContentMover = {\n        \"wheel\": function (delta) {\n            let self = this,\n                _body_scroll_position = self.$[\"panel\"][\"body-scroll\"].position(),\n                _panel_height = self.xvar.body_panel_height,\n                _panel_width = self.xvar.body_panel_width,\n                _content_height = self.xvar.scrollContentHeight,\n                _content_width = self.xvar.scrollContentWidth;\n\n            if (isNaN(_content_height) || isNaN(_content_width)) {\n                return false;\n            }\n\n            let newLeft, newTop,\n                _top_is_end = false,\n                _left_is_end = false;\n\n            newLeft = _body_scroll_position.left - delta.x;\n            newTop = _body_scroll_position.top - delta.y;\n\n            // newTop이 범위를 넘었는지 체크\n            if (newTop >= 0) {\n                newTop = 0;\n                _top_is_end = true;\n            } else if (newTop <= _panel_height - _content_height) {\n                newTop = _panel_height - _content_height;\n                if (newTop >= 0) newTop = 0;\n                _top_is_end = true;\n            } else {\n                if (delta.y == 0) _top_is_end = true;\n            }\n\n            // newLeft이 범위를 넘었는지 체크\n            if (newLeft >= 0) {\n                newLeft = 0;\n                _left_is_end = true;\n            } else if (newLeft <= _panel_width - _content_width) {\n                newLeft = _panel_width - _content_width;\n                if (newLeft >= 0) newLeft = 0;\n                _left_is_end = true;\n            } else {\n                if (delta.x == 0) _left_is_end = true;\n            }\n\n            GRID.header.scrollTo.call(self, {left: newLeft});\n            GRID.body.scrollTo.call(self, {left: newLeft, top: newTop}, {\n                callback: function () {\n                    resize.call(self);\n                }\n            });\n\n            return !_top_is_end || !_left_is_end;\n        },\n        \"on\": function () {\n            let self = this,\n                _body_scroll_position = self.$[\"panel\"][\"body-scroll\"].position(),\n                _panel_height = self.xvar.body_panel_height,\n                _panel_width = self.xvar.body_panel_width,\n                _content_height = self.xvar.scrollContentHeight,\n                _content_width = self.xvar.scrollContentWidth,\n                getContentPosition = function (e) {\n                    let mouseObj = GRID.util.getMousePosition(e), newLeft, newTop;\n\n                    self.xvar.__x_da = mouseObj.clientX - self.xvar.mousePosition.clientX;\n                    self.xvar.__y_da = mouseObj.clientY - self.xvar.mousePosition.clientY;\n\n                    newLeft = _body_scroll_position.left + self.xvar.__x_da;\n                    newTop = _body_scroll_position.top + self.xvar.__y_da;\n\n                    // newTop이 범위를 넘었는지 체크\n                    if (newTop >= 0) {\n                        newTop = 0;\n                    } else if (newTop <= _panel_height - _content_height) {\n                        newTop = _panel_height - _content_height;\n                        if (newTop >= 0) newTop = 0;\n                    }\n\n                    // newLeft이 범위를 넘었는지 체크\n                    if (newLeft >= 0) {\n                        newLeft = 0;\n                    } else if (newLeft <= _panel_width - _content_width) {\n                        newLeft = _panel_width - _content_width;\n                        if (newLeft >= 0) newLeft = 0;\n                    }\n\n                    return {\n                        left: newLeft, top: newTop\n                    }\n                };\n\n            this.xvar.__x_da = 0; // 이동량 변수 초기화\n            this.xvar.__y_da = 0; // 계산이 잘못 될까바\n            this.xvar.touchmoved = false;\n\n            jQuery(document.body)\n                .on(\"touchmove\" + \".ax5grid-\" + this.instanceId, function (e) {\n                    let css = getContentPosition(e);\n\n                    resize.call(self);\n                    GRID.header.scrollTo.call(self, {left: css.left});\n                    GRID.body.scrollTo.call(self, css, {noRepaint: \"noRepaint\"});\n                    U.stopEvent(e.originalEvent);\n                    self.xvar.touchmoved = true;\n                })\n                .on(\"touchend\" + \".ax5grid-\" + this.instanceId, function (e) {\n                    if (self.xvar.touchmoved) {\n                        let css = getContentPosition(e);\n\n                        resize.call(self);\n                        GRID.header.scrollTo.call(self, {left: css.left});\n                        GRID.body.scrollTo.call(self, css);\n                        U.stopEvent(e.originalEvent);\n                        scrollContentMover.off.call(self);\n                    }\n                });\n\n            jQuery(document.body)\n                .attr('unselectable', 'on')\n                .css('user-select', 'none')\n                .on('selectstart', false);\n        },\n        \"off\": function () {\n\n            jQuery(document.body)\n                .off(\"touchmove\" + \".ax5grid-\" + this.instanceId)\n                .off(\"touchend\" + \".ax5grid-\" + this.instanceId);\n\n            jQuery(document.body)\n                .removeAttr('unselectable')\n                .css('user-select', 'auto')\n                .off('selectstart');\n        }\n    };\n\n    const init = function () {\n        let self = this,\n            margin = this.config.scroller.trackPadding;\n\n        if (margin == 0) {\n            this.$[\"scroller\"][\"vertical-bar\"].css({width: this.config.scroller.size, left: -1});\n            this.$[\"scroller\"][\"horizontal-bar\"].css({height: this.config.scroller.size, top: -1});\n        } else {\n            this.$[\"scroller\"][\"vertical-bar\"].css({width: this.config.scroller.size - (margin + 1), left: margin / 2});\n            this.$[\"scroller\"][\"horizontal-bar\"].css({height: this.config.scroller.size - (margin + 1), top: margin / 2});\n        }\n\n        this.$[\"scroller\"][\"vertical-bar\"]\n            .on(GRID.util.ENM[\"mousedown\"], (function (e) {\n                this.xvar.mousePosition = GRID.util.getMousePosition(e);\n                scrollBarMover.on.call(this, this.$[\"scroller\"][\"vertical\"], this.$[\"scroller\"][\"vertical-bar\"], \"vertical\", e);\n            }).bind(this))\n            .on(\"dragstart\", function (e) {\n                U.stopEvent(e);\n                return false;\n            });\n\n        this.$[\"scroller\"][\"vertical\"]\n            .on(\"click\", (function (e) {\n                if (e.target.getAttribute(\"data-ax5grid-scroller\") == \"vertical\") {\n                    scrollBarMover.click.call(this, this.$[\"scroller\"][\"vertical\"], this.$[\"scroller\"][\"vertical-bar\"], \"vertical\", e);\n                }\n            }).bind(this));\n\n        this.$[\"scroller\"][\"horizontal-bar\"]\n            .on(GRID.util.ENM[\"mousedown\"], (function (e) {\n                this.xvar.mousePosition = GRID.util.getMousePosition(e);\n                scrollBarMover.on.call(this, this.$[\"scroller\"][\"horizontal\"], this.$[\"scroller\"][\"horizontal-bar\"], \"horizontal\", e);\n            }).bind(this))\n            .on(\"dragstart\", function (e) {\n                U.stopEvent(e);\n                return false;\n            });\n\n        this.$[\"scroller\"][\"horizontal\"]\n            .on(\"click\", (function (e) {\n                if (e.target.getAttribute(\"data-ax5grid-scroller\") == \"horizontal\") {\n                    scrollBarMover.click.call(this, this.$[\"scroller\"][\"horizontal\"], this.$[\"scroller\"][\"horizontal-bar\"], \"horizontal\", e);\n                }\n            }).bind(this));\n\n        this.$[\"container\"][\"body\"].on('mousewheel DOMMouseScroll', (function (e) {\n            let E = e.originalEvent, delta = {x: 0, y: 0};\n\n            if (E.detail) {\n                delta.y = E.detail * 10;\n            } else {\n                if (typeof E.deltaY === \"undefined\") {\n                    delta.y = -E.wheelDelta;\n                    delta.x = 0;\n                } else {\n                    delta.y = E.deltaY;\n                    delta.x = E.deltaX;\n                }\n            }\n\n            if (scrollContentMover.wheel.call(this, delta)) {\n                U.stopEvent(e);\n            }\n        }).bind(this));\n\n        if (ax5.info.supportTouch) {\n            this.$[\"container\"][\"body\"]\n                .on(\"touchstart\", '[data-ax5grid-panel]', function (e) {\n                    self.xvar.mousePosition = GRID.util.getMousePosition(e);\n                    scrollContentMover.on.call(self);\n                });\n        }\n\n        this.xvar.body_panel_height = this.$[\"panel\"][\"body\"].height();\n        this.xvar.body_panel_width = this.$[\"panel\"][\"body\"].width();\n    };\n\n    const resize = function () {\n        let _vertical_scroller_height = this.$[\"scroller\"][\"vertical\"].height(),\n            _horizontal_scroller_width = this.$[\"scroller\"][\"horizontal\"].width(),\n            _panel_height = this.$[\"panel\"][\"body\"].height(),\n            _panel_width = this.$[\"panel\"][\"body\"].width(),\n            _content_height = this.xvar.scrollContentHeight,\n            _content_width = this.xvar.scrollContentWidth,\n            verticalScrollBarHeight = _panel_height * _vertical_scroller_height / _content_height,\n            horizontalScrollBarWidth = _panel_width * _horizontal_scroller_width / _content_width;\n\n        if (verticalScrollBarHeight < this.config.scroller.barMinSize) verticalScrollBarHeight = this.config.scroller.barMinSize;\n        if (horizontalScrollBarWidth < this.config.scroller.barMinSize) horizontalScrollBarWidth = this.config.scroller.barMinSize;\n\n        this.$[\"scroller\"][\"vertical-bar\"].css({\n            top: convertScrollBarPosition.vertical.call(this, this.$.panel[\"body-scroll\"].position().top, {\n                _content_width: _content_width,\n                _content_height: _content_height,\n                _panel_width: _panel_width,\n                _panel_height: _panel_height,\n                _horizontal_scroller_width: _horizontal_scroller_width,\n                _vertical_scroller_height: _vertical_scroller_height,\n                verticalScrollBarHeight: verticalScrollBarHeight,\n                horizontalScrollBarWidth: horizontalScrollBarWidth\n            }),\n            height: verticalScrollBarHeight\n        });\n\n        this.$[\"scroller\"][\"horizontal-bar\"].css({\n            left: convertScrollBarPosition.horizontal.call(this, this.$.panel[\"body-scroll\"].position().left, {\n                _content_width: _content_width,\n                _content_height: _content_height,\n                _panel_width: _panel_width,\n                _panel_height: _panel_height,\n                _horizontal_scroller_width: _horizontal_scroller_width,\n                _vertical_scroller_height: _vertical_scroller_height,\n                verticalScrollBarHeight: verticalScrollBarHeight,\n                horizontalScrollBarWidth: horizontalScrollBarWidth\n            }),\n            width: horizontalScrollBarWidth\n        });\n\n        this.xvar.body_panel_height = _panel_height;\n        this.xvar.body_panel_width = _panel_width;\n\n        _vertical_scroller_height = null;\n        _horizontal_scroller_width = null;\n        _panel_height = null;\n        _panel_width = null;\n        _content_height = null;\n        _content_width = null;\n        verticalScrollBarHeight = null;\n        horizontalScrollBarWidth = null;\n    };\n\n    GRID.scroller = {\n        // 타이머\n        moveout_timer: (new Date()).getTime(),\n        init: init,\n        resize: resize\n    };\n\n})();","// ax5.ui.grid.tmpl\n(function () {\n\n    const GRID = ax5.ui.grid;\n\n    const main = function () {\n        return `<div data-ax5grid-container=\"root\" data-ax5grid-instance=\"{{instanceId}}\">\n            <div data-ax5grid-container=\"hidden\">\n                <textarea data-ax5grid-form=\"clipboard\"></textarea>\n            </div>\n            <div data-ax5grid-container=\"header\">\n                <div data-ax5grid-panel=\"aside-header\"></div>\n                <div data-ax5grid-panel=\"left-header\"></div>\n                <div data-ax5grid-panel=\"header\">\n                    <div data-ax5grid-panel-scroll=\"header\"></div>\n                </div>\n                <div data-ax5grid-panel=\"right-header\"></div>\n            </div>\n            <div data-ax5grid-container=\"body\">\n                <div data-ax5grid-panel=\"top-aside-body\"></div>\n                <div data-ax5grid-panel=\"top-left-body\"></div>\n                <div data-ax5grid-panel=\"top-body\">\n                    <div data-ax5grid-panel-scroll=\"top-body\"></div>\n                </div>\n                <div data-ax5grid-panel=\"top-right-body\"></div>\n                <div data-ax5grid-panel=\"aside-body\">\n                    <div data-ax5grid-panel-scroll=\"aside-body\"></div>\n                </div>\n                <div data-ax5grid-panel=\"left-body\">\n                    <div data-ax5grid-panel-scroll=\"left-body\"></div>\n                </div>\n                <div data-ax5grid-panel=\"body\">\n                    <div data-ax5grid-panel-scroll=\"body\"></div>\n                </div>\n                <div data-ax5grid-panel=\"right-body\">\n                  <div data-ax5grid-panel-scroll=\"right-body\"></div>\n                </div>\n                <div data-ax5grid-panel=\"bottom-aside-body\"></div>\n                <div data-ax5grid-panel=\"bottom-left-body\"></div>\n                <div data-ax5grid-panel=\"bottom-body\">\n                    <div data-ax5grid-panel-scroll=\"bottom-body\"></div>\n                </div>\n                <div data-ax5grid-panel=\"bottom-right-body\"></div>\n            </div>\n            <div data-ax5grid-container=\"page\">\n                <div data-ax5grid-page=\"holder\">\n                    <div data-ax5grid-page=\"navigation\"></div>\n                    <div data-ax5grid-page=\"status\"></div>\n                </div>\n            </div>\n            <div data-ax5grid-container=\"scroller\">\n                <div data-ax5grid-scroller=\"vertical\">\n                    <div data-ax5grid-scroller=\"vertical-bar\"></div>    \n                </div>\n                <div data-ax5grid-scroller=\"horizontal\">\n                    <div data-ax5grid-scroller=\"horizontal-bar\"></div>\n                </div>\n                <div data-ax5grid-scroller=\"corner\"></div>\n            </div>\n            <div data-ax5grid-resizer=\"vertical\"></div>\n            <div data-ax5grid-resizer=\"horizontal\"></div>\n        </div>`;\n    };\n\n    const page_navigation = function(){\n        return `<div data-ax5grid-page-navigation=\"holder\">\n            {{#hasPage}}\n            <div data-ax5grid-page-navigation=\"cell\">    \n                {{#firstIcon}}<button type=\"button\" data-ax5grid-page-move=\"first\">{{{firstIcon}}}</button>{{/firstIcon}}\n                <button type=\"button\" data-ax5grid-page-move=\"prev\">{{{prevIcon}}}</button>\n            </div>\n            <div data-ax5grid-page-navigation=\"cell-paging\">\n                {{#@paging}}\n                <button type=\"button\" data-ax5grid-page-move=\"{{pageNo}}\" data-ax5grid-page-selected=\"{{selected}}\">{{pageNo}}</button>\n                {{/@paging}}\n            </div>\n            <div data-ax5grid-page-navigation=\"cell\">\n                <button type=\"button\" data-ax5grid-page-move=\"next\">{{{nextIcon}}}</button>\n                {{#lastIcon}}<button type=\"button\" data-ax5grid-page-move=\"last\">{{{lastIcon}}}</button>{{/lastIcon}}\n            </div>\n            {{/hasPage}}\n        </div>`;\n    };\n\n    const page_status = function(){\n        return `<span>{{{progress}}} {{fromRowIndex}} - {{toRowIndex}} of {{dataRowCount}} {{#totalElements}}&nbsp; Total {{.}}{{/totalElements}}</span>`;\n    };\n\n    GRID.tmpl = {\n        \"main\": main,\n        \"page_navigation\": page_navigation,\n        \"page_status\": page_status,\n\n        get: function (tmplName, data, columnKeys) {\n            let template = GRID.tmpl[tmplName].call(this, columnKeys);\n            ax5.mustache.parse(template);\n            return ax5.mustache.render(template, data);\n        }\n    };\n\n\n})();","// ax5.ui.grid.util\n(function () {\n\n    const GRID = ax5.ui.grid;\n\n    const U = ax5.util;\n\n    /**\n     * @method ax5grid.util.divideTableByFrozenColumnIndex\n     * @param _table\n     * @param _frozenColumnIndex\n     * @returns {{leftHeaderData: {rows: Array}, headerData: {rows: Array}}}\n     */\n    const divideTableByFrozenColumnIndex = function (_table, _frozenColumnIndex) {\n\n        let tempTable_l = {rows: []},\n            tempTable_r = {rows: []};\n\n        for (let r = 0, rl = _table.rows.length; r < rl; r++) {\n            let row = _table.rows[r];\n\n            tempTable_l.rows[r] = {cols: []};\n            tempTable_r.rows[r] = {cols: []};\n\n            for (let c = 0, cl = row.cols.length; c < cl; c++) {\n                let col = jQuery.extend({}, row.cols[c]),\n                    colStartIndex = col.colIndex,\n                    colEndIndex = col.colIndex + col.colspan;\n\n                if (colStartIndex < _frozenColumnIndex) {\n                    if (colEndIndex <= _frozenColumnIndex) {\n                        // 좌측편에 변형없이 추가\n                        tempTable_l.rows[r].cols.push(col);\n                    } else {\n                        let leftCol = jQuery.extend({}, col),\n                            rightCol = jQuery.extend({}, leftCol);\n\n                        leftCol.colspan = _frozenColumnIndex - leftCol.colIndex;\n                        rightCol.colIndex = _frozenColumnIndex;\n                        rightCol.colspan = col.colspan - leftCol.colspan;\n\n                        tempTable_l.rows[r].cols.push(leftCol);\n                        if (rightCol.colspan) {\n                            tempTable_r.rows[r].cols.push(rightCol);\n                        }\n                    }\n                }\n                else {\n                    // 오른편\n                    tempTable_r.rows[r].cols.push(col);\n                }\n\n                col = null;\n                colStartIndex = null;\n                colEndIndex = null;\n            }\n\n            row = null;\n        }\n\n        return {\n            leftData: tempTable_l,\n            rightData: tempTable_r\n        }\n    };\n\n    const getTableByStartEndColumnIndex = function (_table, _startColumnIndex, _endColumnIndex) {\n\n        let tempTable = {rows: []};\n        for (let r = 0, rl = _table.rows.length; r < rl; r++) {\n            let row = _table.rows[r];\n\n            tempTable.rows[r] = {cols: []};\n            for (let c = 0, cl = row.cols.length; c < cl; c++) {\n                let col = jQuery.extend({}, row.cols[c]),\n                    colStartIndex = col.colIndex, colEndIndex = col.colIndex + col.colspan;\n\n                if (_startColumnIndex <= colStartIndex || colEndIndex <= _endColumnIndex) {\n                    if (_startColumnIndex <= colStartIndex && colEndIndex <= _endColumnIndex) {\n                        // 변형없이 추가\n                        tempTable.rows[r].cols.push(col);\n                    }\n                    else if (_startColumnIndex > colStartIndex && colEndIndex > _startColumnIndex) {\n                        // 앞에서 걸친경우\n                        col.colspan = colEndIndex - _startColumnIndex;\n                        tempTable.rows[r].cols.push(col);\n                    }\n                    else if (colEndIndex > _endColumnIndex && colStartIndex <= _endColumnIndex) {\n                        tempTable.rows[r].cols.push(col);\n                    }\n                }\n            }\n        }\n\n        return tempTable;\n    };\n\n    const getMousePosition = function (e) {\n        let mouseObj,\n            originalEvent = (e.originalEvent) ? e.originalEvent : e;\n\n        mouseObj = ('changedTouches' in originalEvent && originalEvent.changedTouches) ? originalEvent.changedTouches[0] : originalEvent;\n        // clientX, Y 쓰면 스크롤에서 문제 발생\n        return {\n            clientX: mouseObj.pageX,\n            clientY: mouseObj.pageY\n        }\n    };\n\n    const ENM = {\n        \"mousedown\": (ax5.info.supportTouch) ? \"touchstart\" : \"mousedown\",\n        \"mousemove\": (ax5.info.supportTouch) ? \"touchmove\" : \"mousemove\",\n        \"mouseup\": (ax5.info.supportTouch) ? \"touchend\" : \"mouseup\"\n    };\n\n    const makeHeaderTable = function (_columns) {\n        let columns = _columns,\n            cfg = this.config,\n            table = {\n                rows: []\n            },\n            colIndex = 0,\n            maekRows = function (_columns, depth, parentField) {\n                let row = {cols: []};\n                let i = 0, l = _columns.length;\n                let colspan = 1;\n                let subcolspan = 0;\n\n                for (; i < l; i++) {\n                    let field = jQuery.extend({}, _columns[i]);\n                    colspan = 1;\n\n                    if (!field.hidden) {\n                        field.colspan = 1;\n                        field.rowspan = 1;\n\n                        field.rowIndex = depth;\n                        field.colIndex = (function () {\n                            if (!parentField || i != 0) {\n                                return colIndex++;\n                            } else {\n                                colIndex = parentField.colIndex + i + 1;\n                                return parentField.colIndex + i;\n                            }\n                        })();\n\n                        row.cols.push(field); // 복제된 필드 삽입\n\n                        if ('columns' in field) {\n                            colspan = maekRows(field.columns, depth + 1, field);\n                        } else {\n                            field.width = ('width' in field) ? field.width : cfg.columnMinWidth;\n                        }\n                        field.colspan = colspan;\n                        subcolspan += colspan;\n                    } else {\n\n\n                    }\n                }\n\n                if (row.cols.length > 0) {\n                    if (!table.rows[depth]) {\n                        table.rows[depth] = {cols: []};\n                    }\n                    table.rows[depth].cols = table.rows[depth].cols.concat(row.cols);\n                    return subcolspan;\n                } else {\n                    return colspan;\n                }\n\n            };\n\n        maekRows(columns, 0);\n\n        // set rowspan\n        for (let r = 0, rl = table.rows.length; r < rl; r++) {\n            for (let c = 0, cl = table.rows[r].cols.length; c < cl; c++) {\n                if (!('columns' in table.rows[r].cols[c])) {\n                    table.rows[r].cols[c].rowspan = rl - r;\n                }\n            }\n        }\n\n        return table;\n    };\n\n    const makeBodyRowTable = function (_columns) {\n        let columns = _columns,\n            table = {\n                rows: []\n            },\n            colIndex = 0,\n            maekRows = function (_columns, depth, parentField) {\n                let row = {cols: []},\n                    i = 0,\n                    l = _columns.length,\n                    colspan = 1;\n\n                let selfMakeRow = function (__columns) {\n                    let i = 0, l = __columns.length;\n                    for (; i < l; i++) {\n                        let field = jQuery.extend({}, __columns[i]),\n                            colspan = 1;\n\n                        if (!field.hidden) {\n\n                            if ('key' in field) {\n                                field.colspan = 1;\n                                field.rowspan = 1;\n\n                                field.rowIndex = depth;\n                                field.colIndex = (function () {\n                                    if (!parentField) {\n                                        return colIndex++;\n                                    } else {\n                                        colIndex = parentField.colIndex + i + 1;\n                                        return parentField.colIndex + i;\n                                    }\n                                })();\n\n                                row.cols.push(field);\n                                if ('columns' in field) {\n                                    colspan = maekRows(field.columns, depth + 1, field);\n                                }\n                                field.colspan = colspan;\n                            }\n                            else {\n                                if ('columns' in field) {\n                                    selfMakeRow(field.columns, depth);\n                                }\n                            }\n                        }\n                        else {\n\n                        }\n                    }\n                };\n\n                for (; i < l; i++) {\n                    let field = jQuery.extend({}, _columns[i]);\n                    colspan = 1;\n\n                    if (!field.hidden) {\n\n                        if ('key' in field) {\n                            field.colspan = 1;\n                            field.rowspan = 1;\n\n                            field.rowIndex = depth;\n                            field.colIndex = (function () {\n                                if (!parentField) {\n                                    return colIndex++;\n                                } else {\n                                    colIndex = parentField.colIndex + i + 1;\n                                    return parentField.colIndex + i;\n                                }\n                            })();\n\n                            row.cols.push(field);\n                            if ('columns' in field) {\n                                colspan = maekRows(field.columns, depth + 1, field);\n                            }\n                            field.colspan = colspan;\n                        }\n                        else {\n                            if ('columns' in field) {\n                                selfMakeRow(field.columns, depth);\n                            }\n                        }\n                    }\n                    else {\n\n                    }\n\n                    field = null;\n                }\n\n                if (row.cols.length > 0) {\n                    if (!table.rows[depth]) {\n                        table.rows[depth] = {cols: []};\n                    }\n                    table.rows[depth].cols = table.rows[depth].cols.concat(row.cols);\n                    return (row.cols.length - 1) + colspan;\n                }\n                else {\n                    return colspan;\n                }\n            };\n\n        maekRows(columns, 0);\n\n        (function (table) {\n            // set rowspan\n            for (let r = 0, rl = table.rows.length; r < rl; r++) {\n                let row = table.rows[r];\n                for (let c = 0, cl = row.cols.length; c < cl; c++) {\n                    let col = row.cols[c];\n                    if (!('columns' in col)) {\n                        col.rowspan = rl - r;\n                    }\n                    col = null;\n                }\n                row = null;\n            }\n        })(table);\n\n        return table;\n    };\n\n    const makeBodyRowMap = function (_table) {\n        let map = {};\n        _table.rows.forEach(function (row) {\n            row.cols.forEach(function (col) {\n                map[col.rowIndex + \"_\" + col.colIndex] = jQuery.extend({}, col);\n            });\n        });\n        return map;\n    };\n\n    const makeFootSumTable = function (_footSumColumns) {\n        let table = {\n            rows: []\n        };\n\n        for (let r = 0, rl = _footSumColumns.length; r < rl; r++) {\n            let footSumRow = _footSumColumns[r],\n                addC = 0;\n\n            table.rows[r] = {cols: []};\n\n            for (let c = 0, cl = footSumRow.length; c < cl; c++) {\n                if (addC > this.colGroup.length) break;\n                let colspan = footSumRow[c].colspan || 1;\n                if (footSumRow[c].label || footSumRow[c].key) {\n                    table.rows[r].cols.push({\n                        colspan: colspan,\n                        rowspan: 1,\n                        colIndex: addC,\n                        columnAttr: \"sum\",\n                        align: footSumRow[c].align,\n                        label: footSumRow[c].label,\n                        key: footSumRow[c].key,\n                        collector: footSumRow[c].collector,\n                        formatter: footSumRow[c].formatter\n                    });\n                } else {\n                    table.rows[r].cols.push({\n                        colIndex: addC,\n                        colspan: colspan,\n                        rowspan: 1,\n                        label: \"&nbsp;\",\n                    });\n                }\n                addC += colspan;\n                colspan = null;\n            }\n\n            if (addC < this.colGroup.length) {\n                for (let c = addC; c < this.colGroup.length; c++) {\n                    table.rows[r].cols.push({\n                        colIndex: (c),\n                        colspan: 1,\n                        rowspan: 1,\n                        label: \"&nbsp;\",\n                    });\n                }\n            }\n            footSumRow = null;\n            addC = null;\n        }\n\n        return table;\n    };\n\n    const makeBodyGroupingTable = function (_bodyGroupingColumns) {\n        let table = {\n                rows: []\n            },\n            r = 0,\n            addC = 0;\n\n        table.rows[r] = {cols: []};\n        for (let c = 0, cl = _bodyGroupingColumns.length; c < cl; c++) {\n            if (addC > this.colGroup.length) break;\n            \n            let colspan = _bodyGroupingColumns[c].colspan || 1;\n            if (_bodyGroupingColumns[c].label || _bodyGroupingColumns[c].key) {\n                table.rows[r].cols.push({\n                    colspan: colspan,\n                    rowspan: 1,\n                    rowIndex: 0,\n                    colIndex: addC,\n                    columnAttr: \"default\",\n                    align: _bodyGroupingColumns[c].align,\n                    label: _bodyGroupingColumns[c].label,\n                    key: _bodyGroupingColumns[c].key,\n                    collector: _bodyGroupingColumns[c].collector,\n                    formatter: _bodyGroupingColumns[c].formatter\n                });\n            } else {\n                table.rows[r].cols.push({\n                    rowIndex: 0,\n                    colIndex: addC,\n                    colspan: colspan,\n                    rowspan: 1,\n                    label: \"&nbsp;\"\n                });\n            }\n            addC += colspan;\n        }\n\n        if (addC < this.colGroup.length) {\n            for (var c = addC; c < this.colGroup.length; c++) {\n                table.rows[r].cols.push({\n                    rowIndex: 0,\n                    colIndex: (c),\n                    colspan: 1,\n                    rowspan: 1,\n                    label: \"&nbsp;\",\n                });\n            }\n        }\n\n        return table;\n    };\n\n    const findPanelByColumnIndex = function (_dindex, _colIndex, _rowIndex) {\n        let _containerPanelName,\n            _isScrollPanel = false,\n            _panels = [];\n\n        if (this.xvar.frozenRowIndex > _dindex) _panels.push(\"top\");\n        if (this.xvar.frozenColumnIndex > _colIndex) _panels.push(\"left\");\n        _panels.push(\"body\");\n\n        if (this.xvar.frozenColumnIndex <= _colIndex || this.xvar.frozenRowIndex <= _dindex) {\n            _containerPanelName = _panels.join(\"-\");\n            _panels.push(\"scroll\");\n            _isScrollPanel = true;\n        }\n\n        return {\n            panelName: _panels.join(\"-\"),\n            containerPanelName: _containerPanelName,\n            isScrollPanel: _isScrollPanel\n        }\n    };\n\n    const getRealPathForDataItem = function (_dataPath) {\n        let path = [],\n            _path = [].concat(_dataPath.split(/[\\.\\[\\]]/g));\n\n        _path.forEach(function (n) {\n            if (n !== \"\") path.push(\"[\\\"\" + n.replace(/['\\\"]/g, \"\") + \"\\\"]\");\n        });\n        _path = null;\n        return path.join(\"\");\n    };\n\n\n    GRID.util = {\n        divideTableByFrozenColumnIndex: divideTableByFrozenColumnIndex,\n        getTableByStartEndColumnIndex: getTableByStartEndColumnIndex,\n        getMousePosition: getMousePosition,\n        ENM: ENM,\n        makeHeaderTable: makeHeaderTable,\n        makeBodyRowTable: makeBodyRowTable,\n        makeBodyRowMap: makeBodyRowMap,\n        makeFootSumTable: makeFootSumTable,\n        makeBodyGroupingTable: makeBodyGroupingTable,\n        findPanelByColumnIndex: findPanelByColumnIndex,\n        getRealPathForDataItem: getRealPathForDataItem,\n    };\n\n})();","// ax5.ui.mediaViewer\n(function () {\n\n    var UI = ax5.ui;\n    var U = ax5.util;\n    var MEDIAVIEWER;\n\n    UI.addClass({\n        className: \"mediaViewer\"\n    }, (function () {\n        /**\n         * @class ax5mediaViewer\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var myViewer = new ax5.ui.mediaViewer({\n         *     theme: \"danger\",\n         *     target: $(\"#media-viewer-target-0\"),\n         *     loading: {\n         *         icon: '<i class=\"fa fa-spinner fa-pulse fa-2x fa-fw margin-bottom\" aria-hidden=\"true\"></i>',\n         *         text: '<div>Now Loading</div>'\n         *     },\n         *     media: {\n         *         width: '11%', height: '11%',\n         *         prevHandle: '<i class=\"fa fa-chevron-left\"></i>',\n         *         nextHandle: '<i class=\"fa fa-chevron-right\"></i>',\n         *         poster: '<i class=\"fa fa-youtube-play\" style=\"font-size: 20px;\"></i>',\n         *         list: [\n         *             {\n         *                 video: {\n         *                     html: '<iframe src=\"https://player.vimeo.com/video/121840700?color=fcfcfc&badge=0\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>',\n         *                     poster: ''\n         *                 }\n         *             },\n         *             {\n         *                 video: {\n         *                     html: '<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/w9Uh2oP88JI\" frameborder=\"0\" allowfullscreen></iframe>',\n         *                     poster: ''\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg',\n         *                     poster: 'http://www.improgrammer.net/wp-content/uploads/2015/11/top-20-node-js-Frameworks-1.jpg'\n         *                 }\n         *             },\n         *             {\n         *                 image: {\n         *                     src: 'https://www.twilio.com/blog/wp-content/uploads/2013/11/Screen-Shot-2013-11-06-at-12.05.36-PM.png',\n         *                     poster: 'https://www.twilio.com/blog/wp-content/uploads/2013/11/Screen-Shot-2013-11-06-at-12.05.36-PM.png'\n         *                 }\n         *             }\n         *         ]\n         *     },\n         *     onClick: function () {\n         *         console.log(this);\n         *     }\n         * });\n         * ```\n         */\n        var ax5mediaViewer = function () {\n            var self = this,\n                cfg,\n                ENM = {\n                    \"mousedown\": (ax5.info.supportTouch) ? \"touchstart\" : \"mousedown\",\n                    \"mousemove\": (ax5.info.supportTouch) ? \"touchmove\" : \"mousemove\",\n                    \"mouseup\": (ax5.info.supportTouch) ? \"touchend\" : \"mouseup\"\n                },\n                getMousePosition = function (e) {\n                    var mouseObj = ('changedTouches' in e.originalEvent && e.changedTouches) ? e.originalEvent.changedTouches[0] : e;\n\n                    return {\n                        clientX: mouseObj.clientX,\n                        clientY: mouseObj.clientY,\n                        time: (new Date()).getTime()\n                    }\n                };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n                theme: 'default',\n                animateTime: 500,\n\n                columnKeys: {\n                    src: 'src',\n                    poster: 'poster',\n                    html: 'html'\n                },\n                loading: {\n                    icon: '',\n                    text: 'Now Loading'\n                },\n                viewer: {\n                    prevHandle: false,\n                    nextHandle: false,\n                    ratio: 16 / 9\n                },\n                hideMediaList: false,\n                media: {\n                    prevHandle: '<',\n                    nextHandle: '>',\n                    width: 36, height: 36,\n                    list: []\n                }\n            };\n            this.queue = [];\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.selectedIndex = 0;\n            this.mousePosition = {};\n\n            cfg = this.config;\n\n            var\n                onStateChanged = function (opts, that) {\n                    if (opts && opts.onStateChanged) {\n                        opts.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n                    return true;\n                },\n                getFrame = function () {\n                    var\n                        data = jQuery.extend(true, {id: this.id}, cfg);\n\n                    try {\n                        return MEDIAVIEWER.tmpl.get.call(this, \"frame\", data, cfg.columnKeys);\n                    }\n                    finally {\n                        data = null;\n                    }\n                },\n                onClick = function (e, target) {\n                    var\n                        result,\n                        elementType = \"\",\n                        processor = {\n                            'thumbnail': function (target) {\n                                this.select(target.getAttribute(\"data-media-thumbnail\"));\n                            },\n                            'prev': function (target) {\n                                if (this.selectedIndex > 0) {\n                                    this.select(this.selectedIndex - 1);\n                                } else {\n                                    this.select(cfg.media.list.length - 1);\n                                }\n                            },\n                            'next': function (target) {\n                                if (this.selectedIndex < cfg.media.list.length - 1) {\n                                    this.select(this.selectedIndex + 1);\n                                } else {\n                                    this.select(0);\n                                }\n                            },\n                            'viewer': function (target) {\n                                if (self.onClick) {\n                                    self.onClick.call({\n                                        media: cfg.media.list[this.selectedIndex]\n                                    });\n                                }\n                            }\n                        };\n\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-media-thumbnail\")) {\n                            elementType = \"thumbnail\";\n                            return true;\n                        }\n                        else if (target.getAttribute(\"data-media-viewer-els\") == \"media-list-prev-handle\") {\n                            elementType = \"prev\";\n                            return true;\n                        }\n                        else if (target.getAttribute(\"data-media-viewer-els\") == \"media-list-next-handle\") {\n                            elementType = \"next\";\n                            return true;\n                        }\n                        else if (target.getAttribute(\"data-media-viewer-els\") == \"viewer\") {\n                            elementType = \"viewer\";\n                            return true;\n                        }\n                        else if (self.target.get(0) == target) {\n                            return true;\n                        }\n                    });\n\n                    if (target) {\n                        for (var key in processor) {\n                            if (key == elementType) {\n                                result = processor[key].call(this, target);\n                                break;\n                            }\n                        }\n                        return this;\n                    }\n                    return this;\n                },\n                getSelectedIndex = function () {\n                    if (cfg.media && cfg.media.list && cfg.media.list.length > 0) {\n                        var i = cfg.media.list.length, selecteIndex = 0;\n                        while (i--) {\n                            if (cfg.media.list[i].selected) {\n                                selecteIndex = i;\n                                break;\n                            }\n                        }\n\n                        if (selecteIndex == 0) {\n                            cfg.media.list[0].selected = true;\n                        }\n                        try {\n                            return selecteIndex;\n                        } finally {\n                            i = null;\n                            selecteIndex = null;\n                        }\n                    }\n                    else {\n                        return;\n                    }\n                },\n                alignMediaList = function () {\n                    var thumbnail = this.$[\"list\"].find('[data-media-thumbnail=' + this.selectedIndex + ']'),\n                        pos = thumbnail.position(), thumbnailWidth = thumbnail.outerWidth(),\n                        containerWidth = this.$[\"list\"].outerWidth(),\n                        parentLeft = this.$[\"list-table\"].position().left,\n                        parentWidth = this.$[\"list-table\"].outerWidth(),\n                        newLeft = 0;\n\n                    if (pos.left + thumbnailWidth + parentLeft > containerWidth) {\n                        newLeft = containerWidth - (pos.left + thumbnailWidth);\n                        if (parentLeft != newLeft) this.$[\"list-table\"].css({left: parentLeft = newLeft});\n                    }\n                    else if (pos.left + parentLeft < 0) {\n                        newLeft = pos.left;\n                        if (newLeft > 0) newLeft = 0;\n                        if (parentLeft != newLeft) this.$[\"list-table\"].css({left: parentLeft = newLeft});\n                    }\n\n                    if (parentLeft != newLeft) {\n                        if (parentLeft + parentWidth < containerWidth) {\n                            newLeft = containerWidth - parentWidth;\n                            if (newLeft > 0) newLeft = 0;\n                            this.$[\"list-table\"].css({left: newLeft});\n                        }\n                    }\n\n                    thumbnail = null;\n                    pos = null;\n                    thumbnailWidth = null;\n                    containerWidth = null;\n                    parentLeft = null;\n                    newLeft = null;\n                },\n                swipeMedia = {\n                    \"on\": function (mousePosition) {\n                        // console.log(mousePosition);\n                        var getSwipePosition = function (e) {\n                            var mouseObj = e;\n                            if ('changedTouches' in e.originalEvent && e.changedTouches) {\n                                mouseObj = e.originalEvent.changedTouches[0];\n                            }\n\n                            mousePosition.__dx = mouseObj.clientX - mousePosition.clientX;\n                            mousePosition.__dy = mouseObj.clientY - mousePosition.clientY;\n                            mousePosition.__time = (new Date()).getTime();\n\n                            if (Math.abs(mousePosition.__dx) > Math.abs(mousePosition.__dy)) {\n                                return {left: mousePosition.__dx};\n                            } else {\n                                return {top: mousePosition.__dy};\n                            }\n                        };\n                        var viewerWidth = this.$[\"viewer\"].width();\n\n                        jQuery(document.body)\n                            .bind(ENM[\"mousemove\"] + \".ax5media-viewer-\" + this.instanceId, function (e) {\n                                var position = getSwipePosition(e);\n\n                                if ('left' in position) {\n                                    self.$[\"viewer-holder\"].css(position);\n                                    if (Math.abs(self.mousePosition.__dx) > viewerWidth / 3) {\n                                        //console.log(self.mousePosition);\n                                        // trigger nextMedia\n\n                                        var nextIndex = 0;\n\n                                        if (self.mousePosition.__dx > 0) {\n                                            if (self.selectedIndex > 0) {\n                                                nextIndex = self.selectedIndex - 1;\n                                            } else {\n                                                nextIndex = cfg.media.list.length - 1;\n                                            }\n                                        }\n                                        else {\n                                            if (self.selectedIndex < cfg.media.list.length - 1) {\n                                                nextIndex = self.selectedIndex + 1;\n                                            }\n                                        }\n\n                                        self.select(nextIndex);\n                                        swipeMedia.off.call(self);\n\n\n                                    }\n\n                                    U.stopEvent(e);\n                                }\n                            })\n                            .bind(ENM[\"mouseup\"] + \".ax5media-viewer-\" + this.instanceId, function (e) {\n                                swipeMedia.off.call(self);\n                            })\n                            .bind(\"mouseleave.ax5media-viewer-\" + this.instanceId, function (e) {\n                                swipeMedia.off.call(self);\n                            });\n\n                        jQuery(document.body)\n                            .attr('unselectable', 'on')\n                            .css('user-select', 'none')\n                            .on('selectstart', false);\n\n                    },\n                    \"off\": function () {\n                        self.$[\"viewer-holder\"].css({left: 0});\n                        jQuery(document.body)\n                            .unbind(ENM[\"mousemove\"] + \".ax5media-viewer-\" + this.instanceId)\n                            .unbind(ENM[\"mouseup\"] + \".ax5media-viewer-\" + this.instanceId)\n                            .unbind(\"mouseleave.ax5media-viewer-\" + this.instanceId);\n\n                        jQuery(document.body)\n                            .removeAttr('unselectable')\n                            .css('user-select', 'auto')\n                            .off('selectstart');\n\n                    }\n                };\n            /// private end\n\n            /**\n             * Preferences of mediaViewer UI\n             * @method ax5mediaViewer.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5mediaViewer}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.id = 'ax5-media-viewer-' + ax5.getGuid();\n                if (cfg.target && (cfg.media && cfg.media.list && cfg.media.list.length > 0)) {\n                    this.attach(cfg.target);\n                }\n            };\n\n            /**\n             * @method ax5mediaViewer.attach\n             * @param target\n             * @param options\n             * @returns {ax5mediaViewer}\n             */\n            this.attach = function (target, options) {\n                if (!target) {\n                    console.log(ax5.info.getError(\"ax5mediaViewer\", \"401\", \"setConfig\"));\n                }\n                if (typeof options != \"undefined\") {\n                    this.setConfig(options, false);\n                }\n                this.target = jQuery(target);\n                this.target.html(getFrame.call(this));\n\n                // 파트수집\n                this.$ = {\n                    \"root\": this.target.find('[data-ax5-ui-media-viewer]'),\n                    \"viewer-holder\": this.target.find('[data-media-viewer-els=\"viewer-holder\"]'),\n                    \"viewer\": this.target.find('[data-media-viewer-els=\"viewer\"]'),\n                    \"viewer-prev\": this.target.find('[data-media-viewer-els=\"viewer-prev\"]'),\n                    \"viewer-loading\": this.target.find('[data-media-viewer-els=\"viewer-loading\"]'),\n                    \"list-holder\": this.target.find('[data-media-viewer-els=\"media-list-holder\"]'),\n                    \"list-prev-handle\": this.target.find('[data-media-viewer-els=\"media-list-prev-handle\"]'),\n                    \"list\": this.target.find('[data-media-viewer-els=\"media-list\"]'),\n                    \"list-table\": this.target.find('[data-media-viewer-els=\"media-list-table\"]'),\n                    \"list-next-handle\": this.target.find('[data-media-viewer-els=\"media-list-next-handle\"]')\n                };\n\n                this.align();\n\n                jQuery(window).unbind(\"resize.ax5media-viewer-\" + this.id).bind(\"resize.ax5media-viewer-\" + this.id, (function () {\n                    this.align();\n                    alignMediaList.call(this);\n                }).bind(this));\n\n                this.target.unbind(\"click\").bind(\"click\", (function (e) {\n                    e = e || window.event;\n                    onClick.call(this, e);\n                    U.stopEvent(e);\n                }).bind(this));\n\n                this.$.viewer\n                    .unbind(ENM[\"mousedown\"])\n                    .bind(ENM[\"mousedown\"], (function (e) {\n                        this.mousePosition = getMousePosition(e);\n                        swipeMedia.on.call(this, this.mousePosition);\n                    }).bind(this))\n                    .unbind(\"dragstart\")\n                    .bind(\"dragstart\", function (e) {\n                        U.stopEvent(e);\n                        return false;\n                    });\n\n                this.select(getSelectedIndex.call(this));\n                return this;\n            };\n\n            /**\n             * @method ax5mediaViewer.align\n             * @returns {ax5mediaViewer}\n             */\n            this.align = function () {\n                // viewer width, height\n                this.$[\"viewer-holder\"].css({height: this.$[\"viewer\"].width() / cfg.viewer.ratio});\n                this.$[\"viewer\"].css({height: this.$[\"viewer\"].width() / cfg.viewer.ratio});\n\n                if (this.$[\"viewer\"].data(\"media-type\") == \"image\") {\n                    var $img = this.$[\"viewer\"].find(\"img\");\n                    $img.css({\n                        width: this.$[\"viewer\"].height() * this.$[\"viewer\"].data(\"img-ratio\"), height: this.$[\"viewer\"].height()\n                    });\n                    setTimeout((function (_img) {\n                        _img.css({left: (this.$[\"viewer\"].width() - _img.width()) / 2});\n                    }).bind(this, $img), 1);\n                }\n                else if (this.$[\"viewer\"].data(\"media-type\") == \"video\") {\n                    this.$[\"viewer\"].find(\"iframe\").css({width: this.$[\"viewer\"].height() * this.$[\"viewer\"].data(\"img-ratio\"), height: this.$[\"viewer\"].height()});\n                }\n                this.$[\"viewer-loading\"].css({height: this.$[\"viewer\"].height()});\n\n                var mediaThumbnailWidth = (U.right(cfg.media.width, 1) == '%') ? U.number(cfg.media.width) / 100 * this.$[\"viewer\"].width() : U.number(cfg.media.width),\n                    mediaThumbnailHeight = (U.right(cfg.media.height, 1) == '%') ? U.number(cfg.media.height) / 100 * this.$[\"viewer\"].width() : U.number(cfg.media.height);\n\n                mediaThumbnailWidth = Math.floor(mediaThumbnailWidth);\n                mediaThumbnailHeight = Math.floor(mediaThumbnailHeight);\n\n                this.$[\"list-prev-handle\"].css({width: mediaThumbnailWidth * 1.5});\n                this.$[\"list-next-handle\"].css({width: mediaThumbnailWidth * 1.5});\n                this.$[\"list\"].css({height: mediaThumbnailHeight});\n                this.$[\"list-table\"].find('[data-media-thumbnail]').css({width: mediaThumbnailWidth, height: mediaThumbnailHeight});\n                this.$[\"list-table\"].find('[data-media-thumbnail-video]').css({width: mediaThumbnailWidth, height: mediaThumbnailHeight});\n\n\n                return this;\n            };\n\n            /**\n             * @method ax5mediaViewer.select\n             * @param index\n             * @returns {ax5mediaViewer}\n             */\n            this.select = (function () {\n                var mediaView = {\n                    image: function (obj, callback) {\n\n                        if (cfg.loading) {\n\n                            self.$[\"viewer-loading\"].show();\n                            var dim = [this.$[\"viewer\"].width(), this.$[\"viewer\"].height()];\n                            var img = new Image();\n                            img.src = obj.image[cfg.columnKeys.src];\n                            img.onload = function () {\n                                self.$[\"viewer-loading\"].fadeOut();\n                                var h = dim[1];\n                                var w = h * img.width / img.height;\n                                callback(img, Math.floor(w), h);\n                            };\n                            return img;\n                        } else {\n                            var dim = [this.$[\"viewer\"].width(), this.$[\"viewer\"].height()];\n                            var img = new Image();\n                            img.src = obj.image[cfg.columnKeys.src];\n\n                            if(this.$[\"viewer\"].find(\"img\").get(0)){\n\n                                self.$[\"viewer-prev\"]\n                                    .html(this.$[\"viewer\"].html())\n                                    .addClass(\"slide-out\");\n\n                                img.onload = function () {\n\n                                    var h = dim[1];\n                                    var w = h * img.width / img.height;\n                                    callback(img, Math.floor(w), h);\n\n                                    setTimeout(function () {\n                                        self.$[\"viewer-prev\"].removeClass(\"slide-out\");\n                                    }, cfg.animateTime);\n\n                                };\n                                return img;\n\n\n                            }else{\n                                img.onload = function () {\n                                    var h = dim[1];\n                                    var w = h * img.width / img.height;\n                                    callback(img, Math.floor(w), h);\n                                };\n                                return img;\n                            }\n                        }\n\n                    },\n                    video: function (obj, callback) {\n                        self.$[\"viewer-loading\"].show();\n                        var dim = [this.$[\"viewer\"].width(), this.$[\"viewer\"].height()];\n                        var html = jQuery(obj.video[cfg.columnKeys.html]);\n                        callback(html, dim[0], dim[1]);\n                        self.$[\"viewer-loading\"].fadeOut();\n                    }\n                };\n                var onLoad = {\n                    image: function (img, w, h) {\n                        img.width = w;\n                        img.height = h;\n\n                        var $img = $(img);\n                        this.$[\"viewer\"].html($img);\n                        $img.css({left: (this.$[\"viewer\"].width() - w) / 2});\n\n                        this.$[\"viewer\"].data(\"media-type\", \"image\");\n                        this.$[\"viewer\"].data(\"img-ratio\", w / h);\n                    },\n                    video: function (html, w, h) {\n                        html.css({width: w, height: h});\n                        this.$[\"viewer\"].html(html);\n                        this.$[\"viewer\"].data(\"media-type\", \"video\");\n                        this.$[\"viewer\"].data(\"img-ratio\", w / h);\n                    }\n                };\n                var select = function (index) {\n                    this.$[\"list\"].find('[data-media-thumbnail]').removeClass(\"selected\");\n                    this.$[\"list\"].find('[data-media-thumbnail=' + index + ']').addClass(\"selected\");\n                    alignMediaList.call(this);\n                };\n\n                return function (index) {\n                    if (typeof index === \"undefined\") return this;\n                    this.selectedIndex = Number(index);\n                    var media = cfg.media.list[index];\n                    select.call(this, index);\n\n                    for (var key in mediaView) {\n                        if (media[key]) {\n                            mediaView[key].call(this, media, onLoad[key].bind(this));\n                            break;\n                        }\n                    }\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5mediaViewer.setMediaList\n             * @param list\n             * @returns {ax5mediaViewer}\n             */\n            this.setMediaList = function (list) {\n                cfg.media.list = [].concat(list);\n                this.attach(cfg.target);\n                return this;\n            };\n\n            this.move = function (direction) {\n                var processor = {\n                    'prev': function () {\n                        if (this.selectedIndex > 0) {\n                            this.select(this.selectedIndex - 1);\n                        } else {\n                            this.select(cfg.media.list.length - 1);\n                        }\n                    },\n                    'next': function () {\n                        if (this.selectedIndex < cfg.media.list.length - 1) {\n                            this.select(this.selectedIndex + 1);\n                        } else {\n                            this.select(0);\n                        }\n                    }\n                };\n\n                if (!direction) direction = \"next\";\n\n                if (direction in processor) {\n                    processor[direction].call(this);\n                }\n            };\n\n            this.play = function (_opt) {\n                var opt = jQuery.extend({\n                    interval: 5000\n                }, _opt);\n\n                if (this.playTimer) clearTimeout(this.playTimer);\n                this.playTimer = setTimeout(function () {\n                    self.move(\"next\");\n                    self.play(opt);\n                }, opt.interval);\n            };\n\n            this.stop = function () {\n                if (this.playTimer) clearTimeout(this.playTimer);\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n                UI.mediaViewer_instance = UI.mediaViewer_instance || [];\n                UI.mediaViewer_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n                else {\n                    this.init();\n                }\n            }).apply(this, arguments);\n        };\n        return ax5mediaViewer;\n    })());\n\n    MEDIAVIEWER = ax5.ui.mediaViewer;\n})();","// ax5.ui.mediaViewer.tmpl\n(function () {\n    var MEDIAVIEWER = ax5.ui.mediaViewer;\n\n    var frame = function (columnKeys) {\n        return `\n<div data-ax5-ui-media-viewer=\"{{id}}\" class=\"{{theme}}\">\n    <div data-media-viewer-els=\"viewer-holder\">\n        <div data-media-viewer-els=\"viewer\"></div>\n    </div>\n    {{#loading}}\n    <div data-media-viewer-els=\"viewer-loading\">\n        <div class=\"ax5-ui-media-viewer-loading-holder\">\n            <div class=\"ax5-ui-media-viewer-loading-cell\">\n            {{{loading.icon}}}\n            {{{loading.text}}}\n            </div>\n        </div>\n    </div>\n    {{/loading}}\n    {{^loading}}\n    <div data-media-viewer-els=\"viewer-prev\"></div>\n    {{/loading}}\n    \n    {{#media}}\n    <div data-media-viewer-els=\"media-list-holder\" {{#hideMediaList}}style=\"display:none;\"{{/hideMediaList}}>\n        <div data-media-viewer-els=\"media-list-prev-handle\">{{{prevHandle}}}</div>\n        <div data-media-viewer-els=\"media-list\">\n            <div data-media-viewer-els=\"media-list-table\">\n            {{#list}}\n                <div data-media-viewer-els=\"media-list-table-td\">\n                {{#image}}\n                <div data-media-thumbnail=\"{{@i}}\">\n                <img src=\"{{${columnKeys.poster}}}\" data-media-thumbnail-image=\"{{@i}}\" />\n                </div>\n                {{/image}}\n                {{#video}}\n                <div data-media-thumbnail=\"{{@i}}\">{{#${columnKeys.poster}}}<img src=\"{{.}}\" data-media-thumbnail-video=\"{{@i}}\" />>{{/${columnKeys.poster}}}{{^${columnKeys.poster}}}<a data-media-thumbnail-video=\"{{@i}}\">{{{media.${columnKeys.poster}}}}</a>{{/${columnKeys.poster}}}</div>\n                {{/video}}\n                </div>\n            {{/list}}\n            </div>\n        </div>\n        <div data-media-viewer-els=\"media-list-next-handle\">{{{nextHandle}}}</div>\n    </div>\n    {{/media}}\n    \n</div>`;\n    };\n\n    MEDIAVIEWER.tmpl = {\n        \"frame\": frame,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(MEDIAVIEWER.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","// ax5.ui.uploader\n(function () {\n\n    let UI = ax5.ui;\n    let U = ax5.util;\n    let UPLOADER;\n\n    UI.addClass({\n        className: \"uploader\"\n    }, (function () {\n\n        let ax5uploader = function () {\n            /**\n             * @class ax5uploader\n             * @classdesc\n             * @author tom@axisj.com\n             * @example\n             * ```js\n             *\n             * ```\n             */\n            let self = this, cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                clickEventName: \"click\", //(('ontouchstart' in document.documentElement) ? \"touchend\" : \"click\"),\n                theme: 'default', // theme of uploader\n                lang: { // 업로더 버튼 랭귀지 설정\n                    \"upload\": \"Upload\",\n                    \"abort\": \"Abort\"\n                },\n                uploadedBox: {\n                    columnKeys: {\n                        name: \"name\",\n                        type: \"type\",\n                        size: \"size\",\n                        uploadedName: \"uploadedName\",\n                        uploadedPath: \"uploadedPath\",\n                        downloadPath: \"downloadPath\",\n                        previewPath: \"previewPath\",\n                        thumbnail: \"thumbnail\"\n                    }\n                },\n                animateTime: 100,\n                accept: \"*/*\", // 업로드 선택 파일 타입 설정\n                multiple: false, // 다중 파일 업로드\n                manualUpload: false, // 업로딩 시작 수동처리 여부\n                progressBox: true // 업로드 프로그래스 박스 사용여부 false 이면 업로드 진행바를 표시 하지 않습니다. 개발자가 onprogress 함수를 이용하여 직접 구현 해야 합니다.\n            };\n            this.defaultBtns = {\n                \"upload\": {label: this.config.lang[\"upload\"], theme: \"btn-primary\"},\n                \"abort\": {label: this.config.lang[\"abort\"], theme: this.config.theme}\n            };\n\n            /// 업로드된 파일 큐\n            this.uploadedFiles = [];\n            /// 업로더 타겟\n            this.$target = null;\n            /// 업로드된 파일 정보들의 input 태그를 담아두는 컨테이너\n            this.$inputContainer = null;\n            /// input file 태그\n            this.$inputFile = null;\n            this.$inputFileForm = null;\n            /// 파일 선택버튼\n            this.$fileSelector = null;\n            /// 파일 드랍존\n            this.$dropZone = null;\n            /// 파일 목록 표시박스\n            this.$uploadedBox = null;\n\n            this.__uploading = false;\n            this.selectedFiles = [];\n            this.selectedFilesTotal = 0;\n            this.__loaded = 0;\n\n            cfg = this.config;\n\n            /**\n             * UI 상태변경 이벤트 처리자\n             * UI의 상태변경 : open, close, upload 등의 변경사항이 발생되면 onStateChanged 함수를 후출하여 이벤트를 처리\n             */\n            let bound_onStateChanged = (function (that) {\n\n                let state = {\n                    \"open\": function () {\n\n                    },\n                    \"close\": function () {\n\n                    },\n                    \"upload\": function () {\n\n                    }\n                };\n\n                if (cfg.onStateChanged) {\n                    cfg.onStateChanged.call(that, that);\n                }\n                else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                that = null;\n                return true;\n            }).bind(this);\n\n            let bound_onSelectFile = (function (_evt) {\n                let files;\n\n                if (!ax5.info.supportFileApi) {\n                    // file API 지원 안되는 브라우저.\n                    // input file에 multiple 지원 안됨 그러므로 단일 파일 처리만 하면 됨.\n                    files = {path: _evt.target.value};\n                }\n                else if ('dataTransfer' in _evt) {\n                    files = _evt.dataTransfer.files;\n                }\n                else if ('target' in _evt) {\n                    files = _evt.target.files;\n                }\n                else if (_evt) {\n                    files = _evt;\n                }\n\n                if (!files) return false;\n\n                /// selectedFiles에 현재 파일 정보 담아두기\n                if (length in files) {\n                    if(files.length == 1) {\n                        this.selectedFiles = [files[0]];\n                    }else{\n                        this.selectedFiles = U.toArray(files);\n                    }\n                } else {\n                    this.selectedFiles = [files];\n                }\n\n                if (cfg.progressBox) {\n                    bound_openProgressBox();\n                }\n                if (!cfg.manualUpload) {\n                    this.send();\n                }\n\n                if (!ax5.info.supportFileApi) {\n                    bound_alignLayout(false);\n                }\n            }).bind(this);\n\n            let bound_bindEvent = (function () {\n                this.$fileSelector\n                    .off(\"click.ax5uploader\")\n                    .on(\"click.ax5uploader\", (function () {\n                        this.$inputFile.trigger(\"click\");\n                    }).bind(this));\n\n                if (!ax5.info.supportFileApi) {\n                    this.$fileSelector\n                        .off(\"mouseover.ax5uploader\")\n                        .on(\"mouseover.ax5uploader\", (function () {\n                            bound_alignLayout(true);\n                        }).bind(this));\n\n                    this.$inputFile\n                        .off(\"mouseover.ax5uploader\")\n                        .on(\"mouseover.ax5uploader\", (function () {\n                            this.$fileSelector.addClass(\"active\");\n                        }).bind(this));\n\n                    this.$inputFile\n                        .off(\"mouseout.ax5uploader\")\n                        .on(\"mouseout.ax5uploader\", (function () {\n                            this.$fileSelector.removeClass(\"active\");\n\n                            bound_alignLayout(false);\n                        }).bind(this));\n                }\n\n                (function () {\n                    if (!this.$uploadedBox || !this.$uploadedBox.get(0)) return false;\n\n                    this.$uploadedBox.on(\"click\", \"[data-uploaded-item-cell]\", function () {\n                        let $this = jQuery(this),\n                            cellType = $this.attr(\"data-uploaded-item-cell\"),\n                            uploadedItemIndex = Number($this.parents('[data-ax5uploader-uploaded-item]').attr('data-ax5uploader-uploaded-item')),\n                            that = {};\n\n                        if (cfg.uploadedBox && cfg.uploadedBox.onclick) {\n                            that = {\n                                self: self,\n                                cellType: cellType,\n                                uploadedFiles: self.uploadedFiles,\n                                fileIndex: uploadedItemIndex\n                            };\n                            cfg.uploadedBox.onclick.call(that, that);\n                        }\n\n                        $this = null;\n                        cellType = null;\n                        uploadedItemIndex = null;\n                        that = null;\n                    });\n\n                    this.$uploadedBox\n                        .on(\"dragstart\", function (e) {\n                            U.stopEvent(e);\n                            return false;\n                        });\n\n\n                }).call(this);\n\n                (function () {\n                    // dropZone 설정 방식 변경\n                    if (!ax5.info.supportFileApi)  return false;\n                    if (!this.$dropZone || !this.$dropZone.get(0)) return false;\n\n                    let timer;\n\n                    this.$dropZone.parent()\n                        .on(\"click\", \"[data-ax5uploader-dropzone]\", function (e) {\n                            let $target = jQuery(e.target);\n                            if($target.parents('[data-ax5uploader-uploaded-item]').length == 0 && !$target.attr('data-ax5uploader-uploaded-item')) {\n                                if (this == e.target || $.contains(this, e.target)) {\n                                    if (U.isFunction(cfg.dropZone.onclick)) {\n                                        cfg.dropZone.onclick.call({\n                                            self: self\n                                        });\n                                    } else {\n                                        self.$inputFile.trigger(\"click\");\n                                    }\n                                }\n                            }\n                        });\n\n                    this.$dropZone.get(0).addEventListener('dragover', function (e) {\n                        U.stopEvent(e);\n                        \n                        if(U.isFunction(cfg.dropZone.ondragover)) {\n                            cfg.dropZone.ondragover.call({\n                                self: self\n                            });\n                        }else{\n                            self.$dropZone.addClass(\"dragover\");\n                        }\n\n                    }, false);\n\n                    this.$dropZone.get(0).addEventListener('dragleave', function (e) {\n                        U.stopEvent(e);\n\n                        if(U.isFunction(cfg.dropZone.ondragover)) {\n                            cfg.dropZone.ondragout.call({\n                                self: self\n                            });\n                        }else{\n                            self.$dropZone.removeClass(\"dragover\");\n                        }\n\n                    }, false);\n\n                    this.$dropZone.get(0).addEventListener('drop', function (e) {\n                        U.stopEvent(e);\n\n                        if(U.isFunction(cfg.dropZone.ondrop)) {\n                            cfg.dropZone.ondrop.call({\n                                self: self\n                            });\n                        }else{\n                            self.$dropZone.removeClass(\"dragover\");\n                        }\n\n                        bound_onSelectFile(e || window.event);\n                    }, false);\n\n                }).call(this);\n            }).bind(this);\n\n            let bound_alignLayout = (function (_TF) {\n                // 상황이 좋지 않은경우 (만약 버튼 클릭으로 input file click이 되지 않는 다면 z-index값을 높여서 버튼위를 덮는다.)\n                if (_TF) {\n                    if (!ax5.info.supportFileApi) {\n                        // ie9에서 inputFile을 직접 클릭하지 않으면 submit 오류발생함. submit access denied\n                        // 그래서 버튼위에 inputFile을 올려두어야 함. (position값을 이용하면 편하지만..)\n                        // 그런데 form을 안에두면 또 다른 이중폼 문제 발생소지 ㅜㅜ 불가피하게 버튼의 offset 값을 이용.\n                        let box = this.$fileSelector.offset();\n                        box.width = this.$fileSelector.outerWidth();\n                        box.height = this.$fileSelector.outerHeight();\n                        this.$inputFile.css(box);\n                    }\n                } else {\n                    this.$inputFile.css({\n                        left: -1000, top: -1000\n                    });\n                }\n            }).bind(this);\n\n            let bound_alignProgressBox = (function (append) {\n                let _alignProgressBox = function () {\n                    let $window = jQuery(window), $body = jQuery(document.body);\n                    let pos = {}, positionMargin = 6,\n                        dim = {}, pickerDim = {},\n                        pickerDirection;\n\n                    // cfg.viewport.selector\n\n                    pos = (this.$progressBox.parent().get(0) == this.$target.get(0)) ? this.$fileSelector.position() : this.$fileSelector.offset();\n                    dim = {\n                        width: this.$fileSelector.outerWidth(),\n                        height: this.$fileSelector.outerHeight()\n                    };\n                    pickerDim = {\n                        winWidth: Math.max($window.width(), $body.width()),\n                        winHeight: Math.max($window.height(), $body.height()),\n                        width: this.$progressBox.outerWidth(),\n                        height: this.$progressBox.outerHeight()\n                    };\n\n                    // picker css(width, left, top) & direction 결정\n                    if (!cfg.progressBoxDirection || cfg.progressBoxDirection === \"\" || cfg.progressBoxDirection === \"auto\") {\n                        // set direction\n                        pickerDirection = \"top\";\n                        if (pos.top - pickerDim.height - positionMargin < 0) {\n                            pickerDirection = \"top\";\n                        } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                            pickerDirection = \"bottom\";\n                        }\n                    } else {\n                        pickerDirection = cfg.progressBoxDirection;\n                    }\n\n                    if (append) {\n                        this.$progressBox\n                            .addClass(\"direction-\" + pickerDirection);\n                    }\n\n                    let positionCSS = (function () {\n                        let css = {left: 0, top: 0};\n                        switch (pickerDirection) {\n                            case \"top\":\n                                css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n                                css.top = pos.top + dim.height + positionMargin;\n                                break;\n                            case \"bottom\":\n                                css.left = pos.left + dim.width / 2 - pickerDim.width / 2;\n                                css.top = pos.top - pickerDim.height - positionMargin;\n                                break;\n                            case \"left\":\n                                css.left = pos.left + dim.width + positionMargin;\n                                css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n                                break;\n                            case \"right\":\n                                css.left = pos.left - pickerDim.width - positionMargin;\n                                css.top = pos.top - pickerDim.height / 2 + dim.height / 2;\n                                break;\n                        }\n                        return css;\n                    })();\n\n                    (function () {\n                        if (pickerDirection == \"top\" || pickerDirection == \"bottom\") {\n                            if (positionCSS.left < 0) {\n                                positionCSS.left = positionMargin;\n                                this.$progressBoxArrow.css({left: (pos.left + dim.width / 2) - positionCSS.left});\n                            } else if (positionCSS.left + pickerDim.width > pickerDim.winWidth) {\n                                positionCSS.left = pickerDim.winWidth - pickerDim.width - positionMargin;\n                                this.$progressBoxArrow.css({left: (pos.left + dim.width / 2) - positionCSS.left});\n                            }\n                        }\n                    }).call(this);\n\n                    this.$progressBox\n                        .css(positionCSS);\n                };\n\n                this.$progressBox.css({top: -999});\n                if (append) {\n                    // progressBox를 append 할 타겟 엘리먼트 펀단 후 결정.\n                    (function () {\n                        if (cfg.viewport) {\n                            return jQuery(cfg.viewport.selector);\n                        } else {\n                            return this.$target;\n                        }\n                    }).call(this).append(this.$progressBox);\n\n                    // progressBox 버튼에 이벤트 연결.\n                    this.$progressBox\n                        .off(\"click.ax5uploader\")\n                        .on(\"click.ax5uploader\", \"button\", (function (_evt) {\n                            let act = _evt.target.getAttribute(\"data-pregressbox-btn\");\n                            let processor = {\n                                \"upload\": function () {\n                                    this.send();\n                                },\n                                \"abort\": function () {\n                                    this.abort();\n                                }\n                            };\n                            if (processor[act]) processor[act].call(this);\n                        }).bind(this));\n                }\n\n                setTimeout((function () {\n                    _alignProgressBox.call(this);\n                }).bind(this));\n            }).bind(this);\n\n            let bound_openProgressBox = (function () {\n                this.$progressBox.removeClass(\"destroy\");\n                this.$progressUpload.removeAttr(\"disabled\");\n                this.$progressAbort.removeAttr(\"disabled\");\n\n                // apend & align progress box\n                bound_alignProgressBox(\"append\");\n\n                // state change\n                bound_onStateChanged({\n                    self: this,\n                    state: \"open\"\n                });\n            }).bind(this);\n\n            let bound_closeProgressBox = (function () {\n                this.$progressBox.addClass(\"destroy\");\n                setTimeout((function () {\n                    this.$progressBox\n                        .remove();\n                }).bind(this), cfg.animateTime);\n            }).bind(this);\n\n            let bound_startUpload = (function () {\n\n                let processor = {\n                    \"html5\": function () {\n\n                        let uploadFile = this.selectedFiles.shift();\n                        if (!uploadFile) {\n                            // 업로드 종료\n                            bound_uploadComplete();\n                            return this;\n                        }\n\n                        if(uploadFile[0]) uploadFile = uploadFile[0];\n\n                        let formData = new FormData();\n                        //서버로 전송해야 할 추가 파라미터 정보 설정\n\n                        this.$target.find(\"input\").each(function () {\n                            formData.append(this.name, this.value);\n                        });\n                        // 파일 아이템 추가\n                        formData.append(cfg.form.fileName, uploadFile);\n\n                        this.xhr = new XMLHttpRequest();\n                        this.xhr.open(\"post\", U.isString(cfg.form.action) ? cfg.form.action : cfg.form.action(), true);\n                        this.xhr.onload = function (e) {\n                            let res = e.target.response;\n                            try {\n                                if (typeof res === \"string\") res = U.parseJson(res);\n                            } catch (e) {\n                                return false;\n                            }\n                            if (cfg.debug) console.log(res);\n\n                            if (res.error) {\n                                if (cfg.debug) console.log(res.error);\n                                if (U.isFunction(cfg.onuploaderror)) {\n                                    cfg.onuploaderror.call({\n                                        self: this,\n                                        error: res.error\n                                    }, res);\n                                }\n                                self.send();\n                                return false;\n                            }\n\n                            bound_uploaded(res);\n                            self.send();\n                        };\n                        this.xhr.upload.onprogress = function (e) {\n                            // console.log(e.loaded, e.total);\n                            bound_updateProgressBar(e);\n                            if (U.isFunction(cfg.onprogress)) {\n                                cfg.onprogress.call({\n                                    loaded: e.loaded,\n                                    total: e.total\n                                }, e);\n                            }\n                        };\n\n                        this.xhr.send(formData);  // multipart/form-data\n\n                    },\n                    \"form\": function () {\n\n                        /// i'm busy\n                        this.__uploading = true;\n\n                        // 폼과 iframe을 만들어 페이지 아래에 삽입 후 업로드\n                        let $iframe = jQuery('<iframe src=\"javascript:false;\" name=\"ax5uploader-' + this.instanceId + '-iframe\" style=\"display:none;\"></iframe>');\n                        jQuery(document.body).append($iframe);\n\n                        // onload 이벤트 핸들러\n                        // action에서 파일을 받아 처리한 결과값을 텍스트로 출력한다고 가정하고 iframe의 내부 데이터를 결과값으로 callback 호출\n                        $iframe.load(function () {\n                            let doc = this.contentWindow ? this.contentWindow.document : (this.contentDocument ? this.contentDocument : this.document),\n                                root = doc.documentElement ? doc.documentElement : doc.body,\n                                result = root.textContent ? root.textContent : root.innerText,\n                                res;\n\n                            try {\n                                res = JSON.parse(result);\n                            } catch (e) {\n                                res = {\n                                    error: \"Syntax error\",\n                                    body: result\n                                };\n                            }\n\n                            if (cfg.debug) console.log(res);\n                            if (res.error) {\n                                console.log(res);\n                            }\n                            else {\n                                bound_uploaded(res);\n                                $iframe.remove();\n\n                                setTimeout(function () {\n                                    bound_uploadComplete();\n                                }, 300);\n                            }\n                        });\n\n                        this.$inputFileForm\n                            .attr(\"target\", 'ax5uploader-' + this.instanceId + '-iframe')\n                            .attr(\"action\", cfg.form.action)\n                            .submit();\n\n                        this.selectedFilesTotal = 1;\n                        bound_updateProgressBar({\n                            loaded: 1,\n                            total: 1\n                        });\n                    }\n                };\n\n                if (this.__uploading === false) {\n                    // 전체 파일 사이즈 구하기\n                    let filesTotal = 0;\n                    this.selectedFiles.forEach(function (n) {\n                        filesTotal += n.size;\n                    });\n                    this.selectedFilesTotal = filesTotal;\n                    this.__loaded = 0;\n\n                    this.__uploading = true; // 업로드 시작 상태 처리\n                    this.$progressUpload.attr(\"disabled\", \"disabled\");\n                    this.$progressAbort.removeAttr(\"disabled\");\n                }\n\n                processor[ax5.info.supportFileApi ? \"html5\" : \"form\"].call(this);\n\n            }).bind(this);\n\n            let bound_updateProgressBar = (function (e) {\n                this.__loaded += e.loaded;\n                this.$progressBar.css({width: U.number(this.__loaded / this.selectedFilesTotal * 100, {round: 2}) + '%'});\n                if (e.lengthComputable) {\n                    if (e.loaded >= e.total) {\n\n                    }\n                }\n            }).bind(this);\n\n            let bound_uploaded = (function (res) {\n                if (cfg.debug) console.log(res);\n                //this.uploadedFiles.push(res);\n                this.uploadedFiles = this.uploadedFiles.concat(res);\n                bound_repaintUploadedBox(); // 업로드된 파일 출력\n\n                if (U.isFunction(cfg.onuploaded)) {\n                    cfg.onuploaded.call({\n                        self: this\n                    }, res);\n                }\n            }).bind(this);\n\n            let bound_uploadComplete = (function () {\n                this.__uploading = false; // 업로드 완료 상태처리\n                this.$progressUpload.removeAttr(\"disabled\");\n                this.$progressAbort.attr(\"disabled\", \"disabled\");\n\n                if (cfg.progressBox) {\n                    bound_closeProgressBox();\n                }\n                if (U.isFunction(cfg.onuploadComplete)) {\n                    cfg.onuploadComplete.call({\n                        self: this\n                    });\n                }\n                // update uploadedFiles display\n\n                /// reset inputFile\n                bound_attachFileTag();\n            }).bind(this);\n\n            let bound_cancelUpload = (function () {\n\n                let processor = {\n                    \"html5\": function () {\n                        if (this.xhr) {\n                            this.xhr.abort();\n                        }\n                    },\n                    \"form\": function () {\n\n                    }\n                };\n\n                this.__uploading = false; // 업로드 완료 상태처리\n                this.$progressUpload.removeAttr(\"disabled\");\n                this.$progressAbort.attr(\"disabled\", \"disabled\");\n\n                processor[ax5.info.supportFileApi ? \"html5\" : \"form\"].call(this);\n\n                if (cfg.progressBox) {\n                    bound_closeProgressBox();\n                }\n\n                //this.$inputFile.val(\"\");\n                /// reset inputFile\n                bound_attachFileTag();\n\n                if (cfg.debug) console.log(\"cancelUpload\");\n                // update uploadedFiles display\n            }).bind(this);\n\n            let bound_repaintUploadedBox = (function () {\n                // uploadedBox 가 없다면 아무일도 하지 않음.\n                // onuploaded 함수 이벤트를 이용하여 개발자가 직접 업로드디 박스를 구현 한다고 이해 하자.\n                if (this.$uploadedBox === null) return this;\n\n                this.$uploadedBox.html(\n                    UPLOADER.tmpl.get(\"upoadedBox\", {\n                        uploadedFiles: this.uploadedFiles,\n                        icon: cfg.uploadedBox.icon,\n                        lang: cfg.uploadedBox.lang,\n                        supportFileApi: !!ax5.info.supportFileApi\n                    }, cfg.uploadedBox.columnKeys)\n                );\n                this.$uploadedBox.find(\"img\").on(\"error\", function () {\n                   //this.src = \"\";\n                   $(this).parent().addClass(\"no-image\");\n                });\n                \n            }).bind(this);\n\n            let bound_attachFileTag = (function () {\n                if (this.$inputFile && this.$inputFile.get(0)) {\n                    this.$inputFile.remove();\n                }\n                if (this.$inputFileForm && this.$inputFileForm.get(0)) {\n                    this.$inputFileForm.remove();\n                }\n\n                this.$inputFile = jQuery(UPLOADER.tmpl.get.call(this, \"inputFile\", {\n                    instanceId: this.instanceId,\n                    multiple: cfg.multiple,\n                    accept: cfg.accept,\n                    name: cfg.form.fileName\n                }));\n\n                if (ax5.info.supportFileApi) {\n                    jQuery(document.body).append(this.$inputFile);\n                } else {\n                    this.$fileSelector.attr(\"tabindex\", -1);\n                    this.$inputFileForm = jQuery(UPLOADER.tmpl.get.call(this, \"inputFileForm\", {\n                        instanceId: this.instanceId\n                    }));\n\n                    this.$inputFileForm.append(this.$inputFile);\n                    jQuery(document.body).append(this.$inputFileForm);\n                }\n\n                this.$inputFile\n                    .off(\"change.ax5uploader\")\n                    .on(\"change.ax5uploader\", (function (_evt) {\n                        bound_onSelectFile(_evt);\n                    }).bind(this));\n\n            }).bind(this);\n\n            /**\n             * Preferences of uploader UI\n             * @method ax5uploader.setConfig\n             * @param {Object} _config - 클래스 속성값\n             * @param {Element} _config.target\n             * @param {Object} _config.form\n             * @param {String} _config.form.action - upload URL\n             * @param {String} _config.form.fileName - The name key of the upload file\n             * @param {Boolean} [_config.multiple=false] - Whether multiple files. In a browser where fileApi is not supported (eg IE9), it only works with false.\n             * @param {String} [_config.accept=\"\"] - accept mimeType (http://www.w3schools.com/TAgs/att_input_accept.asp)\n             * @param {Boolean} [_config.manualUpload=false] - Whether to automatically upload when a file is selected.\n             * @param {Boolean} [_config.progressBox=true] - Whether to use progressBox\n             * @param {String} [_config.progressBoxDirection=auto] - ProgressBox display direction\n             * @param {Object} [_config.dropZone]\n             * @param {Element} [_config.dropZone.target]\n             * @param {Function} [_config.dropZone.onclick]\n             * @param {Function} [_config.dropZone.ondragover]\n             * @param {Function} [_config.dropZone.ondragout]\n             * @param {Function} [_config.dropZone.ondrop]\n             * @param {Object} [_config.uploadedBox]\n             * @param {Element} [_config.uploadedBox.target]\n             * @param {Element} [_config.uploadedBox.icon]\n             * @param {Object} [_config.uploadedBox.columnKeys]\n             * @param {String} [_config.uploadedBox.columnKeys.name]\n             * @param {String} [_config.uploadedBox.columnKeys.type]\n             * @param {String} [_config.uploadedBox.columnKeys.size]\n             * @param {String} [_config.uploadedBox.columnKeys.uploadedName]\n             * @param {String} [_config.uploadedBox.columnKeys.downloadPath]\n             * @param {Object} [_config.uploadedBox.lang]\n             * @param {String} [_config.uploadedBox.lang.supportedHTML5_emptyListMsg]\n             * @param {String} [_config.uploadedBox.lang.emptyListMsg]\n             * @param {Function} [_config.uploadedBox.onchange]\n             * @param {Function} [_config.uploadedBox.onclick]\n             * @param {Function} [_config.validateSelectedFiles]\n             * @param {Function} [_config.onprogress] - return loaded, total\n             * @param {Function} [_config.onuploaded] - return self\n             * @param {Function} [_config.onuploaderror] - return self, error\n             * @param {Function} [_config.onuploadComplete] - return self\n             * @returns {ax5uploader}\n             * @example\n             * ```js\n             *\n             * ```\n             */\n            this.init = function (_config) {\n                cfg = jQuery.extend(true, {}, cfg, _config);\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5uploader\", \"401\", \"init\"));\n                    return this;\n                }\n\n                this.$target = jQuery(cfg.target);\n\n                // 파일 드랍존은 옵션 사항.\n                if (cfg.dropZone && cfg.dropZone.target && ax5.info.supportFileApi) {\n                    this.$dropZone = jQuery(cfg.dropZone.target);\n                    this.$dropZone\n                        .attr(\"data-ax5uploader-dropzone\", this.instanceId);\n                }\n\n                // uploadedBox 옵션 사항\n                if (cfg.uploadedBox && cfg.uploadedBox.target) {\n                    this.$uploadedBox = jQuery(cfg.uploadedBox.target);\n                }\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        cfg = jQuery.extend(true, cfg, data);\n                    }\n                }).call(this, U.parseJson(this.$target.attr(\"data-ax5uploader-config\"), true));\n\n\n                // detect element\n                /// fileSelector 수집\n                this.$fileSelector = this.$target.find('[data-ax5uploader-button=\"selector\"]');\n\n                if (this.$fileSelector.length === 0) {\n                    console.log(ax5.info.getError(\"ax5uploader\", \"402\", \"can not find file selector\"));\n                    return this;\n                }\n\n                // input file 추가\n                bound_attachFileTag();\n\n                // btns 확인\n                cfg.btns = jQuery.extend({}, this.defaultBtns, cfg.btns);\n\n                this.$progressBox = jQuery(UPLOADER.tmpl.get.call(this, \"progressBox\", {\n                    instanceId: this.instanceId,\n                    btns: cfg.btns\n                }));\n                this.$progressBar = this.$progressBox.find('[role=\"progressbar\"]');\n                this.$progressBoxArrow = this.$progressBox.find(\".ax-progressbox-arrow\");\n                this.$progressUpload = this.$progressBox.find('[data-pregressbox-btn=\"upload\"]');\n                this.$progressAbort = this.$progressBox.find('[data-pregressbox-btn=\"abort\"]');\n\n                // file API가 지원되지 않는 브라우저는 중지 기능 제공 못함.\n                if (!ax5.info.supportFileApi) {\n                    this.$progressAbort.hide();\n                }\n                // 파일버튼 등에 이벤트 연결.\n                bound_bindEvent();\n\n                bound_repaintUploadedBox();\n                return this;\n            };\n\n            /**\n             * @method ax5uploader.send\n             * @returns {ax5uploader}\n             *\n             */\n            this.send = (function () {\n                return function () {\n                    // 업로드 시작\n                    if (this.selectedFiles.length && U.isFunction(cfg.validateSelectedFiles)) {\n                        let that = {\n                            self: this,\n                            uploadedFiles: this.uploadedFiles,\n                            selectedFiles: this.selectedFiles\n                        };\n                        if (!cfg.validateSelectedFiles.call(that, that)) {\n                            bound_cancelUpload();\n                            return false;\n                            // 전송처리 안함.\n                        }\n                    }\n\n                    bound_startUpload();\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5uploader.abort\n             * @returns {ax5uploader}\n             */\n            this.abort = (function () {\n                return function () {\n                    if (!ax5.info.supportFileApi) {\n                        alert(\"This browser not supported abort method\");\n                        return this;\n                    }\n                    bound_cancelUpload();\n                    return this;\n                };\n            })();\n\n            /**\n             * @method ax5uploader.setUploadedFiles\n             * @param {Array} _files - JSON formatting can all be overridden in columnKeys.\n             * @returns {ax5uploader}\n             * @example\n             * ```js\n             * var upload1 = new ax5.ui.uploader();\n             * upload1.setConfig({\n             *  ...\n             * });\n             *\n             *\n             * $.ajax({\n             *     url: \"api/fileListLoad.php\",\n             *     success: function (res) {\n             *         // res JSON format\n             *         // [{\n             *         // \"name\": \"barcode-scan-ani.gif\",\n             *         // \"saveName\": \"barcode-scan-ani.gif\",\n             *         // \"type\": \"file\",\n             *         // \"fileSize\": \"3891664\",\n             *         // \"uploadedPath\": \"/ax5ui-uploader/test/api/files\",\n             *         // \"thumbUrl\": \"\"\n             *         // }]\n             *         upload1.setUploadedFiles(res);\n             *     }\n             * });\n             * ```\n             */\n            this.setUploadedFiles = function (_files) {\n                if (U.isArray(_files)) {\n                    this.uploadedFiles = _files;\n                }\n                if (U.isString(_files)) {\n                    try {\n                        this.uploadedFiles = JSON.parse(_files);\n                    } catch (e) {\n\n                    }\n                }\n\n                bound_repaintUploadedBox();\n                return this;\n            };\n\n            /**\n             * clear uploadedFiles\n             * @method ax5uploader.clear\n             * @returns {ax5uploader}\n             */\n            this.clear = function () {\n                this.setUploadedFiles([]);\n                return this;\n            };\n\n            /**\n             * Removes the object corresponding to the index passed to the argument from uploadedFiles.\n             * @method ax5uploader.removeFile\n             * @param {Number} _index\n             * @returns {ax5uploader}\n             * @example\n             * ```js\n             * // The actual file is not deleted\n             * upload1.removeFile(fileIndex);\n             * ```\n             */\n            this.removeFile = function (_index) {\n                if (!isNaN(Number(_index))) {\n                    this.uploadedFiles.splice(_index, 1);\n                }\n                bound_repaintUploadedBox();\n                return this;\n            };\n\n            /**\n             * Empty uploadedFiles\n             * @method ax5uploader.removeFileAll\n             * @returns {ax5uploader}\n             * @example\n             * ```js\n             *\n             * ```\n             */\n            this.removeFileAll = function () {\n                this.uploadedFiles = [];\n                bound_repaintUploadedBox();\n                return this;\n            };\n\n            /**\n             * @method ax5uploader.selectFile\n             * @returns {Boolean}\n             */\n            this.selectFile = function () {\n                if (ax5.info.supportFileApi) {\n                    this.$inputFile.trigger(\"click\");\n                    return true;\n                }\n                return false;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n                UI.uploader_instance = UI.uploader_instance || [];\n                UI.uploader_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n                else {\n                    //this.init();\n                }\n            }).apply(this, arguments);\n        };\n        return ax5uploader;\n    })());\n\n    UPLOADER = ax5.ui.uploader;\n})();","// ax5.ui.uploader.tmpl\n(function () {\n\n    let UPLOADER = ax5.ui.uploader;\n\n    let uploadProgress = function (columnKeys) {\n        return `\n        `;\n    };\n\n    let inputFile = function (columnKeys) {\n        return `<input type=\"file\" data-ax5uploader-input=\"{{instanceId}}\" name=\"{{name}}\" {{#multiple}}multiple{{/multiple}} accept=\"{{accept}}\" />`;\n    };\n\n    let inputFileForm = function (columnKeys) {\n        return `<form data-ax5uploader-form=\"{{instanceId}}\" name=\"ax5uploader-{{instanceId}}-form\" method=\"post\" enctype=\"multipart/form-data\"></form>`;\n    };\n\n    let progressBox = function (columnKeys) {\n        return `\n<div data-ax5uploader-progressbox=\"{{instanceId}}\" class=\"{{theme}}\">\n    <div class=\"ax-progressbox-body\">\n        <div class=\"ax-pregressbox-content\">\n            <div class=\"progress\">\n              <div class=\"progress-bar progress-bar-striped active\" role=\"progressbar\" style=\"width: 0\">\n                <span class=\"sr-only\">0% Complete</span>\n              </div>\n            </div>\n        </div>\n        {{#btns}}\n            <div class=\"ax-progressbox-buttons\">\n            {{#btns}}\n                {{#@each}}\n                <button data-pregressbox-btn=\"{{@key}}\" class=\"btn btn-default {{@value.theme}}\">{{@value.label}}</button>\n                {{/@each}}\n            {{/btns}}\n            </div>\n        {{/btns}}\n    </div>\n    <div class=\"ax-progressbox-arrow\"></div>\n</div>\n`;\n    };\n\n    let upoadedBox = function (columnKeys) {\n        return `\n{{#uploadedFiles}}<div data-ax5uploader-uploaded-item=\"{{@i}}\">\n    <div class=\"uploaded-item-preview\">\n        {{#${columnKeys.thumbnail}}}<img src=\"${columnKeys.apiServerUrl}{{${columnKeys.thumbnail}}}\">{{/${columnKeys.thumbnail}}}\n    </div>\n    <div class=\"uploaded-item-holder\">\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"download\">{{{icon.download}}}</div>\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"filename\">{{${columnKeys.name}}}</div>\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"filesize\">({{#@fn_get_byte}}{{${columnKeys.size}}}{{/@fn_get_byte}})</div>\n        <div class=\"uploaded-item-cell\" data-uploaded-item-cell=\"delete\">{{{icon.delete}}}</div>\n    </div>\n</div>{{/uploadedFiles}}\n{{^uploadedFiles}}\n{{#supportFileApi}}{{{lang.supportedHTML5_emptyListMsg}}}{{/supportFileApi}}\n{{^supportFileApi}}{{{lang.emptyListMsg}}}{{/supportFileApi}}\n{{/uploadedFiles}}\n`;\n    };\n\n    UPLOADER.tmpl = {\n        \"uploadProgress\": uploadProgress,\n        \"inputFile\": inputFile,\n        \"inputFileForm\": inputFileForm,\n        \"progressBox\": progressBox,\n        \"upoadedBox\": upoadedBox,\n\n        get: function (tmplName, data, columnKeys) {\n            data[\"@fn_get_byte\"] = function() {\n                return function (text, render) {\n                    return ax5.util.number(render(text), {round: 2, byte: true});\n                }\n            };\n            return ax5.mustache.render(UPLOADER.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();","// ax5.ui.combobox\n(function() {\n  const UI = ax5.ui;\n  const U = ax5.util;\n  let COMBOBOX;\n\n  UI.addClass(\n    {\n      className: \"combobox\"\n    },\n    (function() {\n      /**\n       * @class ax5combobox\n       * @classdesc\n       * @author tom@axisj.com\n       * @example\n       * ```js\n       * var options = [];\n       * options.push({value: \"1\", text: \"string\"});\n       * options.push({value: \"2\", text: \"number\"});\n       * options.push({value: \"3\", text: \"substr\"});\n       * options.push({value: \"4\", text: \"substring\"});\n       * options.push({value: \"search\", text: \"search\"});\n       * options.push({value: \"parseInt\", text: \"parseInt\"});\n       * options.push({value: \"toFixed\", text: \"toFixed\"});\n       * options.push({value: \"min\", text: \"min\"});\n       * options.push({value: \"max\", text: \"max\"});\n       *\n       * var myCombo = new ax5.ui.combobox({\n       *     theme: \"danger\",\n       *     removeIcon: '<i class=\"fa fa-times\" aria-hidden=\"true\"></i>'\n       * });\n       * ```\n       */\n      return function() {\n        var self = this,\n          cfg;\n\n        this.instanceId = ax5.getGuid();\n        this.config = {\n          theme: \"default\",\n          animateTime: 250,\n          removeIcon: \"X\",\n          lang: {\n            noSelected: \"\",\n            noOptions: \"no options\",\n            loading: \"now loading..\"\n          },\n          columnKeys: {\n            optionValue: \"value\",\n            optionText: \"text\",\n            optionSelected: \"selected\"\n          }\n        };\n\n        this.queue = [];\n        this.activecomboboxOptionGroup = null;\n        this.activecomboboxQueueIndex = -1;\n        this.openTimer = null;\n        this.closeTimer = null;\n        this.waitOptionsCallback = null;\n        this.keyUpTimer = null;\n\n        cfg = this.config;\n\n        var $window = jQuery(window);\n        var ctrlKeys = {\n            \"18\": \"KEY_ALT\",\n            \"8\": \"KEY_BACKSPACE\",\n            \"17\": \"KEY_CONTROL\",\n            \"46\": \"KEY_DELETE\",\n            \"40\": \"KEY_DOWN\",\n            \"35\": \"KEY_END\",\n            \"187\": \"KEY_EQUAL\",\n            \"27\": \"KEY_ESC\",\n            \"36\": \"KEY_HOME\",\n            \"45\": \"KEY_INSERT\",\n            \"37\": \"KEY_LEFT\",\n            \"189\": \"KEY_MINUS\",\n            \"34\": \"KEY_PAGEDOWN\",\n            \"33\": \"KEY_PAGEUP\",\n            // \"190\": \"KEY_PERIOD\",\n            \"13\": \"KEY_RETURN\",\n            \"39\": \"KEY_RIGHT\",\n            \"16\": \"KEY_SHIFT\",\n            // \"32\": \"KEY_SPACE\",\n            \"9\": \"KEY_TAB\",\n            \"38\": \"KEY_UP\",\n            \"91\": \"KEY_WINDOW\"\n            //\"107\" : \"NUMPAD_ADD\",\n            //\"194\" : \"NUMPAD_COMMA\",\n            //\"110\" : \"NUMPAD_DECIMAL\",\n            //\"111\" : \"NUMPAD_DIVIDE\",\n            //\"12\" : \"NUMPAD_EQUAL\",\n            //\"106\" : \"NUMPAD_MULTIPLY\",\n            //\"109\" : \"NUMPAD_SUBTRACT\"\n          },\n          onStateChanged = function(item, that) {\n            if (item && item.onStateChanged) {\n              item.onStateChanged.call(that, that);\n            } else if (this.onStateChanged) {\n              this.onStateChanged.call(that, that);\n            }\n\n            if (that.state == \"changeValue\") {\n              if (item && item.onChange) {\n                item.onChange.call(that, that);\n              } else if (this.onChange) {\n                this.onChange.call(that, that);\n              }\n            }\n\n            item = null;\n            that = null;\n            return true;\n          },\n          alignComboboxDisplay = function() {\n            var i = this.queue.length,\n              w;\n\n            while (i--) {\n              var item = this.queue[i];\n              if (item.$display) {\n                w = Math.max(\n                  item.$select.outerWidth(),\n                  U.number(item.minWidth)\n                );\n                item.$display.css({\n                  \"min-width\": w\n                });\n                if (item.reset) {\n                  item.$display.find(\".addon-icon-reset\").css({\n                    \"line-height\": this.queue[i].$display.height() + \"px\"\n                  });\n                }\n\n                // 높이조절 처리\n                if (item.multiple) {\n                  var displayTableHeightAdjust = function() {\n                    return (\n                      U.number(item.$display.css(\"border-top-width\")) +\n                      U.number(item.$display.css(\"border-bottom-width\"))\n                    );\n                  }.call(this);\n                  item.$target.height(\"\");\n                  item.$display.height(\"\");\n\n                  var displayTableHeight = item.$displayTable.outerHeight();\n                  if (\n                    Math.abs(displayTableHeight - item.$target.height()) >\n                    displayTableHeightAdjust\n                  ) {\n                    item.$target.css({\n                      height: displayTableHeight + displayTableHeightAdjust + 4\n                    });\n                    item.$display.css({\n                      height: displayTableHeight + displayTableHeightAdjust + 4\n                    });\n                  }\n                }\n              }\n            }\n\n            i = null;\n            w = null;\n            return this;\n          },\n          alignComboboxOptionGroup = function(append) {\n            if (!this.activecomboboxOptionGroup) return this;\n\n            var item = this.queue[this.activecomboboxQueueIndex],\n              pos = {},\n              positionMargin = 0,\n              dim = {},\n              pickerDim = {},\n              pickerDirection;\n\n            if (append)\n              jQuery(document.body).append(this.activecomboboxOptionGroup);\n\n            pos = item.$target.offset();\n            dim = {\n              width: item.$target.outerWidth(),\n              height: item.$target.outerHeight()\n            };\n            pickerDim = {\n              winWidth: Math.max(\n                $window.width(),\n                jQuery(document.body).width()\n              ),\n              winHeight: Math.max(\n                $window.height(),\n                jQuery(document.body).height()\n              ),\n              width: this.activecomboboxOptionGroup.outerWidth(),\n              height: this.activecomboboxOptionGroup.outerHeight()\n            };\n\n            // picker css(width, left, top) & direction 결정\n            if (\n              !item.direction ||\n              item.direction === \"\" ||\n              item.direction === \"auto\"\n            ) {\n              // set direction\n              pickerDirection = \"top\";\n\n              if (pos.top - pickerDim.height - positionMargin < 0) {\n                pickerDirection = \"top\";\n              } else if (\n                pos.top + dim.height + pickerDim.height + positionMargin >\n                pickerDim.winHeight\n              ) {\n                pickerDirection = \"bottom\";\n              }\n            } else {\n              pickerDirection = item.direction;\n            }\n\n            if (append) {\n              this.activecomboboxOptionGroup.addClass(\n                \"direction-\" + pickerDirection\n              );\n            }\n            this.activecomboboxOptionGroup.css(\n              function() {\n                if (pickerDirection == \"top\") {\n                  if (\n                    pos.top + dim.height + pickerDim.height + positionMargin >\n                    pickerDim.winHeight\n                  ) {\n                    var newTop =\n                      pos.top + dim.height / 2 - pickerDim.height / 2;\n                    if (\n                      newTop + pickerDim.height + positionMargin >\n                      pickerDim.winHeight\n                    ) {\n                      newTop = 0;\n                    }\n                    if (newTop < 0) {\n                      newTop = 0;\n                    }\n\n                    return {\n                      left: pos.left,\n                      top: newTop,\n                      width: dim.width\n                    };\n                  }\n                  return {\n                    left: pos.left,\n                    top: pos.top + dim.height + 1,\n                    width: dim.width\n                  };\n                } else if (pickerDirection == \"bottom\") {\n                  return {\n                    left: pos.left,\n                    top: pos.top - pickerDim.height - 1,\n                    width: dim.width\n                  };\n                }\n              }.call(this)\n            );\n          },\n          onBodyClick = function(e, target) {\n            if (!this.activecomboboxOptionGroup) return this;\n\n            var item = this.queue[this.activecomboboxQueueIndex],\n              clickEl = \"display\";\n\n            target = U.findParentNode(e.target, function(target) {\n              if (target.getAttribute(\"data-option-value\")) {\n                clickEl = \"optionItem\";\n                return true;\n              } else if (item.$target.get(0) == target) {\n                clickEl = \"display\";\n                return true;\n              }\n            });\n\n            if (!target) {\n              this.close();\n              return this;\n            } else if (clickEl === \"optionItem\") {\n              setOptionSelect.call(\n                this,\n                item.id,\n                {\n                  index: {\n                    gindex: target.getAttribute(\"data-option-group-index\"),\n                    index: target.getAttribute(\"data-option-index\")\n                  }\n                },\n                undefined,\n                true\n              );\n\n              alignComboboxDisplay.call(this);\n              alignComboboxOptionGroup.call(this);\n\n              if (!item.multiple) {\n                this.close();\n              }\n            } else {\n            }\n\n            return this;\n          },\n          getLabel = function(queIdx) {\n            let item = this.queue[queIdx];\n\n            // 템플릿에 전달 해야할 데이터 선언\n            let data = {};\n            data.id = item.id;\n            data.theme = item.theme;\n            data.size = \"ax5combobox-option-group-\" + item.size;\n            data.multiple = item.multiple;\n            data.lang = item.lang;\n            data.options = item.options;\n            data.selected = item.selected;\n            data.hasSelected = data.selected && data.selected.length > 0;\n            data.removeIcon = item.removeIcon;\n\n            return COMBOBOX.tmpl.get.call(this, \"label\", data, item.columnKeys);\n          },\n          printLabel = function(queIdx) {\n            let item = this.queue[queIdx];\n\n            item.$displayLabel\n              .find(\"[data-ax5combobox-selected-label]\")\n              .remove();\n            item.$displayLabelInput.before(getLabel.call(this, queIdx));\n          },\n          focusLabel = function(queIdx) {\n            if (this.queue[queIdx].disabled) return this;\n\n            this.queue[queIdx].$displayLabel.trigger(\"focus\");\n            this.queue[queIdx].$displayLabelInput.focus();\n          },\n          clearLabel = function(queIdx) {\n            this.queue[queIdx].$displayLabelInput.val(\"\");\n          },\n          blurLabel = function(queIdx) {\n            this.queue[queIdx].$displayLabel.trigger(\"blur\");\n            this.queue[queIdx].$displayLabelInput.trigger(\"blur\");\n          },\n          onSearch = function(queIdx, searchWord) {\n            this.queue[queIdx].waitOptions = true;\n\n            this.activecomboboxOptionGroup\n              .find('[data-els=\"content\"]')\n              .html(\n                jQuery(\n                  COMBOBOX.tmpl.get.call(\n                    this,\n                    \"option\",\n                    this.queue[queIdx],\n                    this.queue[queIdx].columnKeys\n                  )\n                )\n              );\n\n            this.queue[queIdx].onSearch.call(\n              {\n                self: this,\n                item: this.queue[queIdx],\n                searchWord: searchWord\n              },\n              function(O) {\n                var data = {};\n                var item = this.queue[this.activecomboboxQueueIndex];\n                if (!item) return false;\n\n                /// 현재 selected 검증후 처리\n                (function(item, O) {\n                  var optionsMap = {};\n                  O.options.forEach(function(_O, _OIndex) {\n                    _O[\"@index\"] = _OIndex;\n                    optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                  });\n                  if (U.isArray(item.selected)) {\n                    item.selected.forEach(function(_O) {\n                      if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                        O.options[\n                          optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]\n                        ][item.columnKeys.optionSelected] = true;\n                      }\n                    });\n                  }\n                })(item, O);\n\n                item.options = syncComboboxOptions.call(\n                  this,\n                  this.activecomboboxQueueIndex,\n                  O.options\n                );\n\n                alignComboboxDisplay.call(this);\n\n                /// 템플릿에 전달할 오브젝트 선언\n                data.id = item.id;\n                data.theme = item.theme;\n                data.size = \"ax5combobox-option-group-\" + item.size;\n                data.multiple = item.multiple;\n                data.lang = item.lang;\n                data.options = item.options;\n\n                this.activecomboboxOptionGroup\n                  .find('[data-els=\"content\"]')\n                  .html(\n                    jQuery(\n                      COMBOBOX.tmpl.get.call(\n                        this,\n                        \"options\",\n                        data,\n                        item.columnKeys\n                      )\n                    )\n                  );\n              }.bind(this)\n            );\n          },\n          focusWord = function(queIdx, searchWord) {\n            //console.log(searchWord);\n\n            if (this.activecomboboxQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n            var options = [],\n              i = -1,\n              l = this.queue[queIdx].indexedOptions.length - 1,\n              n;\n\n            if (searchWord != \"\") {\n              var regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n              searchWord = searchWord.replace(regExp, \"\");\n              if (this.queue[queIdx].onSearch) {\n                onSearch.call(this, queIdx, searchWord);\n\n                try {\n                  return options;\n                } finally {\n                  options = null;\n                  i = null;\n                  l = null;\n                  n = null;\n                }\n                // if there is a \"onSearch\", to end this process\n              }\n\n              while (l - i++) {\n                n = this.queue[queIdx].indexedOptions[i];\n\n                if ((\"\" + n.text).toLowerCase() == searchWord.toLowerCase()) {\n                  options = [{ \"@findex\": n[\"@findex\"], optionsSort: 0 }];\n                  break;\n                } else {\n                  var sort = (\"\" + n.text)\n                    .toLowerCase()\n                    .search(searchWord.toLowerCase());\n                  if (sort > -1) {\n                    options.push({\n                      \"@findex\": n[\"@findex\"],\n                      optionsSort: sort\n                    });\n                    if (options.length > 2) break;\n                  }\n                  sort = null;\n                }\n              }\n              options.sort(function(a, b) {\n                return a.optionsSort - b.optionsSort;\n              });\n            }\n\n            if (options && options.length > 0) {\n              focusMove.call(this, queIdx, undefined, options[0][\"@findex\"]);\n            } else {\n              focusClear.call(this, queIdx);\n            }\n\n            try {\n              return options;\n            } finally {\n              options = null;\n              i = null;\n              l = null;\n              n = null;\n            }\n          },\n          focusClear = function(queIdx) {\n            if (this.activecomboboxOptionGroup) {\n              this.activecomboboxOptionGroup\n                .find(\"[data-option-focus-index]\")\n                .removeClass(\"hover\")\n                .removeAttr(\"data-option-selected\");\n            }\n\n            this.queue[queIdx].optionFocusIndex = -1;\n          },\n          focusMove = function(queIdx, direction, findex) {\n            var _focusIndex,\n              _prevFocusIndex,\n              focusOptionEl,\n              optionGroupScrollContainer;\n            var item = this.queue[queIdx];\n\n            if (\n              this.activecomboboxOptionGroup &&\n              item.options &&\n              item.options.length > 0\n            ) {\n              if (typeof findex !== \"undefined\") {\n                _focusIndex = findex;\n              } else {\n                _prevFocusIndex =\n                  item.optionFocusIndex == -1\n                    ? item.optionSelectedIndex || -1\n                    : item.optionFocusIndex;\n                if (_prevFocusIndex == -1) {\n                  _focusIndex = 0;\n                  //_focusIndex = (direction > 0) ? 0 : item.optionItemLength - 1; // 맨 끝으로 보낼것인가 말 것인가.\n                } else {\n                  _focusIndex = _prevFocusIndex + direction;\n                  if (_focusIndex < 0) _focusIndex = 0;\n                  else if (_focusIndex > item.optionItemLength - 1)\n                    _focusIndex = item.optionItemLength - 1;\n                }\n              }\n\n              item.optionFocusIndex = _focusIndex;\n\n              // 포커스 인덱스가 hide아이템을 만나면 hide 아이템이 안나올 때까지 루프를 순회 합니다.\n              // todo : editable 로 추가된 options가 제거 되지 않으므로. 인덱스 검색을 좀 더 보강 해야함.\n              if (item.options[_focusIndex] && item.options[_focusIndex].hide) {\n                // 옵션이 없는 값이 선택된 경우\n                if (typeof direction === \"undefined\") {\n                  return this;\n                } else {\n                  var isStrop = false;\n                  while (item.options[_focusIndex].hide) {\n                    _focusIndex = _focusIndex + direction;\n                    if (_focusIndex < 0) {\n                      _focusIndex = 0;\n                      break;\n                    } else if (_focusIndex > item.optionItemLength - 1) {\n                      _focusIndex = item.optionItemLength - 1;\n                      break;\n                    }\n                  }\n                }\n              }\n\n              if (typeof _focusIndex !== \"undefined\") {\n                this.activecomboboxOptionGroup\n                  .find(\"[data-option-focus-index]\")\n                  .removeClass(\"hover\");\n\n                focusOptionEl = this.activecomboboxOptionGroup\n                  .find('[data-option-focus-index=\"' + _focusIndex + '\"]')\n                  .addClass(\"hover\");\n\n                optionGroupScrollContainer = this.activecomboboxOptionGroup.find(\n                  '[data-els=\"content\"]'\n                );\n\n                if (focusOptionEl.get(0)) {\n                  let focusOptionElHeight = focusOptionEl.outerHeight(),\n                    optionGroupScrollContainerHeight = optionGroupScrollContainer.innerHeight(),\n                    optionGroupScrollContainerScrollTop = optionGroupScrollContainer.scrollTop(),\n                    focusOptionElTop =\n                      focusOptionEl.position().top +\n                      optionGroupScrollContainer.scrollTop();\n\n                  if (\n                    optionGroupScrollContainerHeight +\n                      optionGroupScrollContainerScrollTop <\n                    focusOptionElTop + focusOptionElHeight\n                  ) {\n                    optionGroupScrollContainer.scrollTop(\n                      focusOptionElTop +\n                        focusOptionElHeight -\n                        optionGroupScrollContainerHeight\n                    );\n                  } else if (\n                    optionGroupScrollContainerScrollTop > focusOptionElTop\n                  ) {\n                    optionGroupScrollContainer.scrollTop(focusOptionElTop);\n                  }\n                  // optionGroup scroll check\n\n                  if (typeof direction !== \"undefined\") {\n                    item.$displayLabelInput.val(item.options[_focusIndex].text);\n                  }\n                }\n              }\n            }\n          },\n          syncComboboxOptions = (function() {\n            var setSelected = function(queIdx, O) {\n              if (!O) {\n                this.queue[queIdx].selected = [];\n              } else {\n                this.queue[queIdx].selected.push(jQuery.extend({}, O));\n                /*\n                             콤보박스는 selected가 없을 때 options의 첫번째 아이템이 selected가 되지 않는다.\n                             if (this.queue[queIdx].multiple) this.queue[queIdx].selected.push(jQuery.extend({}, O));\n                             else this.queue[queIdx].selected[0] = jQuery.extend({}, O);\n                             */\n              }\n            };\n\n            return function(queIdx, options) {\n              var item = this.queue[queIdx];\n              var po,\n                elementOptions,\n                newOptions,\n                focusIndex = 0;\n              setSelected.call(this, queIdx, false); // item.selected 초기화\n\n              if (options) {\n                item.options = options;\n                item.indexedOptions = [];\n\n                // combobox options 태그 생성\n                po = [];\n                po.push('<option value=\"\"></option>');\n\n                item.options.forEach(function(O, OIndex) {\n                  /// @gindex : index of optionGroup\n                  /// @index : index of options (if you use optionGroup then the index is not unique)\n                  if (O.optgroup) {\n                    O[\"@gindex\"] = OIndex;\n                    O.options.forEach(function(OO, OOIndex) {\n                      OO[\"@index\"] = OOIndex;\n                      OO[\"@findex\"] = focusIndex;\n                      po.push(\n                        '<option value=\"' +\n                          OO[item.columnKeys.optionValue] +\n                          '\" ' +\n                          (OO[item.columnKeys.optionSelected]\n                            ? ' selected=\"selected\"'\n                            : \"\") +\n                          \">\" +\n                          OO[item.columnKeys.optionText] +\n                          \"</option>\"\n                      );\n                      if (OO[item.columnKeys.optionSelected]) {\n                        setSelected.call(self, queIdx, OO);\n                      }\n\n                      item.indexedOptions.push({\n                        \"@gindex\": OIndex,\n                        \"@index\": OOIndex,\n                        \"@findex\": focusIndex,\n                        value: OO[item.columnKeys.optionValue],\n                        text: OO[item.columnKeys.optionText]\n                      });\n                      focusIndex++;\n                    });\n                  } else {\n                    O[\"@index\"] = OIndex;\n                    O[\"@findex\"] = focusIndex;\n                    po.push(\n                      '<option value=\"' +\n                        O[item.columnKeys.optionValue] +\n                        '\" ' +\n                        (O[item.columnKeys.optionSelected]\n                          ? ' selected=\"selected\"'\n                          : \"\") +\n                        \">\" +\n                        O[item.columnKeys.optionText] +\n                        \"</option>\"\n                    );\n                    if (O[item.columnKeys.optionSelected]) {\n                      setSelected.call(self, queIdx, O);\n                    }\n\n                    item.indexedOptions.push({\n                      \"@index\": OIndex,\n                      \"@findex\": focusIndex,\n                      value: O[item.columnKeys.optionValue],\n                      text: O[item.columnKeys.optionText]\n                    });\n                    focusIndex++;\n                  }\n                });\n                item.optionItemLength = focusIndex;\n                item.$select.html(po.join(\"\"));\n              } else {\n                /// select > options 태그로 스크립트 options를 만들어주는 역할\n                if (\n                  item.$select.get(0).options &&\n                  item.$select.get(0).options.length\n                )\n                  item.$select.get(0).options[0].selected = false;\n                elementOptions = U.toArray(item.$select.get(0).options);\n\n                // select option 스크립트 생성\n                newOptions = [];\n                elementOptions.forEach(function(O, OIndex) {\n                  var option = {};\n                  option[item.columnKeys.optionValue] = O.value;\n                  option[item.columnKeys.optionText] = O.text;\n                  option[item.columnKeys.optionSelected] = O.selected;\n                  option[\"@index\"] = OIndex;\n                  option[\"@findex\"] = focusIndex;\n                  if (O.selected) setSelected.call(self, queIdx, option);\n                  newOptions.push(option);\n                  focusIndex++;\n\n                  option = null;\n                });\n                item.options = newOptions;\n                item.indexedOptions = newOptions;\n\n                item.$select.prepend('<option value=\"\"></option>');\n                item.$select.get(0).options[0].selected = true;\n              }\n\n              po = null;\n              elementOptions = null;\n              newOptions = null;\n              return item.options;\n            };\n          })(),\n          getQueIdx = function(boundID) {\n            if (boundID instanceof jQuery) {\n              boundID = boundID.data(\"data-ax5combobox-id\");\n            } else if (!U.isString(boundID)) {\n              boundID = jQuery(boundID).data(\"data-ax5combobox-id\");\n            }\n            if (!U.isString(boundID)) {\n              console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"getQueIdx\"));\n              return;\n            }\n            return U.search(this.queue, function() {\n              return this.id == boundID;\n            });\n          },\n          getSelected = function(_item, o, selected) {\n            if (typeof selected === \"undefined\") {\n              return _item.multiple ? !o : true;\n            } else {\n              return selected;\n            }\n          },\n          clearSelected = function(queIdx) {\n            this.queue[queIdx].options.forEach(function(n) {\n              if (n.optgroup) {\n                n.options.forEach(function(nn) {\n                  nn.selected = false;\n                });\n              } else {\n                n.selected = false;\n              }\n            });\n          },\n          setOptionSelect = (function() {\n            var processor = {\n              index: function(queIdx, value, selected, setValueType) {\n                // 클래스 내부에서 호출된 형태, 그런 이유로 옵션그룹에 대한 상태를 변경 하고 있다.\n                var item = this.queue[queIdx];\n\n                if (U.isString(value.index.gindex)) {\n                  if (typeof item.options[value.index.gindex] !== \"undefined\") {\n                    item.options[value.index.gindex].options[value.index.index][\n                      item.columnKeys.optionSelected\n                    ] = getSelected(\n                      item,\n                      item.options[value.index.gindex].options[\n                        value.index.index\n                      ][item.columnKeys.optionSelected],\n                      selected\n                    );\n\n                    if (self.activecomboboxOptionGroup) {\n                      self.activecomboboxOptionGroup\n                        .find(\n                          '[data-option-group-index=\"' +\n                            value.index.gindex +\n                            '\"][data-option-index=\"' +\n                            value.index.index +\n                            '\"]'\n                        )\n                        .attr(\n                          \"data-option-Selected\",\n                          item.options[value.index.gindex].options[\n                            value.index.index\n                          ][item.columnKeys.optionSelected].toString()\n                        );\n                    }\n                  }\n                } else {\n                  if (typeof item.options[value.index.index] !== \"undefined\") {\n                    item.options[value.index.index][\n                      item.columnKeys.optionSelected\n                    ] = getSelected(\n                      item,\n                      item.options[value.index.index][\n                        item.columnKeys.optionSelected\n                      ],\n                      selected\n                    );\n\n                    if (self.activecomboboxOptionGroup) {\n                      self.activecomboboxOptionGroup\n                        .find('[data-option-index=\"' + value.index.index + '\"]')\n                        .attr(\n                          \"data-option-Selected\",\n                          item.options[value.index.index][\n                            item.columnKeys.optionSelected\n                          ].toString()\n                        );\n                    }\n                  }\n                }\n\n                if (\n                  typeof setValueType === \"undefined\" ||\n                  setValueType !== \"justSetValue\"\n                ) {\n                  syncComboboxOptions.call(this, queIdx, item.options);\n                  alignComboboxOptionGroup.call(this);\n                }\n              },\n              arr: function(queIdx, values, selected, setValueType) {\n                values.forEach(function(value) {\n                  if (U.isString(value) || U.isNumber(value)) {\n                    processor.text.call(\n                      self,\n                      queIdx,\n                      value,\n                      selected,\n                      \"justSetValue\"\n                    );\n                  } else {\n                    for (var key in processor) {\n                      if (value[key]) {\n                        processor[key].call(\n                          self,\n                          queIdx,\n                          value,\n                          selected,\n                          \"justSetValue\"\n                        );\n                        break;\n                      }\n                    }\n                  }\n                });\n\n                syncComboboxOptions.call(\n                  this,\n                  queIdx,\n                  this.queue[queIdx].options\n                );\n                alignComboboxOptionGroup.call(this);\n              },\n              value: function(queIdx, value, selected, setValueType) {\n                var item = this.queue[queIdx];\n                var addOptions;\n                var optionIndex = U.search(item.options, function() {\n                  return (\n                    this[item.columnKeys.optionValue] ==\n                    value[item.columnKeys.optionValue]\n                  );\n                });\n\n                if (optionIndex > -1) {\n                  item.options[optionIndex][\n                    item.columnKeys.optionSelected\n                  ] = getSelected(\n                    item,\n                    item.options[optionIndex][item.columnKeys.optionSelected],\n                    selected\n                  );\n                } else {\n                  // 새로운 값 추가\n                  optionIndex = item.options.length;\n                  addOptions = {\n                    \"@index\": optionIndex,\n                    hide: true,\n                    addedOption: true\n                  };\n                  addOptions[item.columnKeys.optionValue] = value;\n                  addOptions[item.columnKeys.optionText] = value;\n                  item.options.push(addOptions);\n                  item.options[optionIndex][\n                    item.columnKeys.optionSelected\n                  ] = getSelected(\n                    item,\n                    item.options[optionIndex][item.columnKeys.optionSelected],\n                    selected\n                  );\n                }\n                if (\n                  typeof setValueType === \"undefined\" ||\n                  setValueType !== \"justSetValue\"\n                ) {\n                  syncComboboxOptions.call(\n                    this,\n                    queIdx,\n                    this.queue[queIdx].options\n                  );\n                  alignComboboxOptionGroup.call(this);\n                }\n              },\n              text: function(queIdx, value, selected, setValueType) {\n                var item = this.queue[queIdx];\n                var addOptions;\n                var optionIndex = U.search(item.options, function() {\n                  return this[item.columnKeys.optionText] == value;\n                });\n\n                if (optionIndex > -1) {\n                  item.options[optionIndex][\n                    item.columnKeys.optionSelected\n                  ] = getSelected(\n                    item,\n                    item.options[optionIndex][item.columnKeys.optionSelected],\n                    selected\n                  );\n                } else {\n                  // 새로운 값 추가\n                  optionIndex = item.options.length;\n                  addOptions = {\n                    \"@index\": optionIndex,\n                    hide: true,\n                    addedOption: true\n                  };\n                  addOptions[item.columnKeys.optionValue] = value;\n                  addOptions[item.columnKeys.optionText] = value;\n                  item.options.push(addOptions);\n                  item.options[optionIndex][\n                    item.columnKeys.optionSelected\n                  ] = getSelected(\n                    item,\n                    item.options[optionIndex][item.columnKeys.optionSelected],\n                    selected\n                  );\n                }\n                if (\n                  typeof setValueType === \"undefined\" ||\n                  setValueType !== \"justSetValue\"\n                ) {\n                  syncComboboxOptions.call(\n                    this,\n                    queIdx,\n                    this.queue[queIdx].options\n                  );\n                  alignComboboxOptionGroup.call(this);\n                }\n              },\n              clear: function(queIdx) {\n                clearSelected.call(this, queIdx);\n                syncComboboxOptions.call(\n                  this,\n                  queIdx,\n                  this.queue[queIdx].options\n                );\n                //focusLabel.call(this, queIdx);\n                focusClear.call(this, queIdx);\n\n                if (this.activecomboboxOptionGroup) {\n                  this.activecomboboxOptionGroup\n                    .find(\"[data-option-index]\")\n                    .attr(\"data-option-Selected\", \"false\");\n                }\n                this.queue[queIdx].optionSelectedIndex = -1;\n              }\n            };\n            return function(boundID, value, selected, _option) {\n              var queIdx = U.isNumber(boundID)\n                ? boundID\n                : getQueIdx.call(this, boundID);\n              if (queIdx === -1) {\n                console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n                return;\n              }\n\n              if (typeof value == \"undefined\") {\n                throw \"error not found value\";\n              } else if (U.isArray(value)) {\n                processor.clear.call(this, queIdx);\n                processor.arr.call(\n                  this,\n                  queIdx,\n                  this.queue[queIdx].multiple || value.length == 0\n                    ? value\n                    : [value[value.length - 1]],\n                  selected\n                );\n              } else if (U.isString(value) || U.isNumber(value)) {\n                if (\n                  typeof value !== \"undefined\" &&\n                  value !== null &&\n                  !this.queue[queIdx].multiple\n                ) {\n                  clearSelected.call(this, queIdx);\n                }\n                processor.text.call(\n                  this,\n                  queIdx,\n                  value,\n                  selected,\n                  \"justSetValue\"\n                );\n              } else {\n                if (value === null) {\n                  processor.clear.call(this, queIdx);\n                } else {\n                  if (!this.queue[queIdx].multiple) {\n                    clearSelected.call(this, queIdx);\n                  }\n                  for (var key in processor) {\n                    if (value[key]) {\n                      processor[key].call(\n                        this,\n                        queIdx,\n                        value,\n                        selected,\n                        \"justSetValue\"\n                      );\n                      break;\n                    }\n                  }\n                }\n              }\n\n              syncComboboxOptions.call(\n                this,\n                queIdx,\n                this.queue[queIdx].options\n              );\n              printLabel.call(this, queIdx);\n              // focusLabel.call(this, queIdx);\n\n              if (typeof value !== \"undefined\") {\n                if (_option && !_option.noStateChange) {\n                  onStateChanged.call(this, this.queue[queIdx], {\n                    self: this,\n                    item: this.queue[queIdx],\n                    state: \"changeValue\",\n                    value: this.queue[queIdx].selected\n                  });\n                }\n              }\n\n              boundID = null;\n              return this;\n            };\n          })();\n\n        /// private end\n\n        /**\n         * Preferences of combobox UI\n         * @method ax5combobox.setConfig\n         * @param {Object} config - 클래스 속성값\n         * @returns {ax5combobox}\n         * @example\n         * ```\n         * ```\n         */\n        this.init = function() {\n          this.onStateChanged = cfg.onStateChanged;\n          this.onChange = cfg.onChange;\n          jQuery(window).on(\n            \"resize.ax5combobox-display-\" + this.instanceId,\n            function() {\n              alignComboboxDisplay.call(this);\n            }.bind(this)\n          );\n        };\n\n        /**\n         * bind combobox\n         * @method ax5combobox.bind\n         * @param {Object} item\n         * @param {String} [item.id]\n         * @param {String} [item.theme]\n         * @param {Boolean} [item.multiple]\n         * @param {Element} item.target\n         * @param {Object[]} item.options\n         * @returns {ax5combobox}\n         */\n        this.bind = function(item) {\n          var bindComboboxTarget = (function() {\n            var debouncedFocusWord = U.debounce(function(queIdx) {\n              if (this.activecomboboxQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n              focusWord.call(\n                self,\n                queIdx,\n                this.queue[queIdx].$displayLabelInput.val()\n              );\n            }, 150);\n\n            var blurLabel = function(queIdx) {\n              clearLabel.call(this, queIdx);\n            };\n\n            var comboboxEvent = {\n              click: function(queIdx, e) {\n                var clickEl;\n                var target = U.findParentNode(e.target, function(target) {\n                  if (target.getAttribute(\"data-ax5combobox-remove\")) {\n                    clickEl = \"optionItemRemove\";\n                    return true;\n                  } else if (target.getAttribute(\"data-selected-clear\")) {\n                    clickEl = \"clear\";\n                    return true;\n                  }\n                });\n\n                if (target) {\n                  if (clickEl === \"optionItemRemove\") {\n                    var selectedIndex = target.getAttribute(\n                      \"data-ax5combobox-remove-index\"\n                    );\n                    var option = this.queue[queIdx].selected[selectedIndex];\n                    setOptionSelect.call(\n                      this,\n                      queIdx,\n                      {\n                        index: {\n                          gindex: option[\"@gindex\"],\n                          index: option[\"@index\"]\n                        }\n                      },\n                      false,\n                      true\n                    );\n                    alignComboboxDisplay.call(this);\n                    alignComboboxOptionGroup.call(this);\n                    focusLabel.call(this, queIdx);\n                    U.stopEvent(e);\n                    return this;\n                  } else if (clickEl === \"clear\") {\n                    setOptionSelect.call(this, queIdx, { clear: true });\n                    alignComboboxDisplay.call(this);\n                    alignComboboxOptionGroup.call(this);\n                    focusLabel.call(this, queIdx);\n                  }\n                } else {\n                  if (self.activecomboboxQueueIndex == queIdx) {\n                    if (this.queue[queIdx].optionFocusIndex == -1) {\n                      // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                      self.close();\n                    }\n                  } else {\n                    self.open(queIdx);\n                    focusLabel.call(this, queIdx);\n                  }\n                }\n              },\n              keyUp: function(queIdx, e) {\n                /// 약속된 키 이벤트가 발생하면 stopEvent를 통해 keyUp 이벤트가 발생되지 않도록 막아주는 센스\n                if (\n                  e.which == ax5.info.eventKeys.ESC &&\n                  self.activecomboboxQueueIndex === -1\n                ) {\n                  // ESC키를 누르고 옵션그룹이 열려있지 않은 경우\n                  U.stopEvent(e);\n                  return this;\n                }\n                if (self.activecomboboxQueueIndex != queIdx) {\n                  // 닫힌 상태 인경우\n                  self.open(queIdx);\n                  U.stopEvent(e);\n                }\n\n                var disableCtrlKeys = {\n                  \"40\": \"KEY_DOWN\",\n                  \"38\": \"KEY_UP\"\n                };\n                if (!disableCtrlKeys[e.which]) {\n                  // backspace 감지 하여 input 값이 없으면 스탑이벤트 처리 할 것\n                  if (\n                    e.which == ax5.info.eventKeys.BACKSPACE &&\n                    this.queue[queIdx].$displayLabelInput.val() == \"\"\n                  ) {\n                    // 마지막 아이템을 제거.\n                    if (this.queue[queIdx].selected.length > 0) {\n                      var option = this.queue[queIdx].selected[\n                        this.queue[queIdx].selected.length - 1\n                      ];\n                      setOptionSelect.call(\n                        this,\n                        queIdx,\n                        {\n                          index: {\n                            gindex: option[\"@gindex\"],\n                            index: option[\"@index\"]\n                          }\n                        },\n                        false,\n                        true\n                      );\n                    }\n                    alignComboboxDisplay.call(this);\n                    alignComboboxOptionGroup.call(this);\n                    U.stopEvent(e);\n                  } else {\n                    debouncedFocusWord.call(this, queIdx);\n                  }\n                }\n              },\n              keyDown: function(queIdx, e) {\n                if (e.which == ax5.info.eventKeys.ESC) {\n                  clearLabel.call(this, queIdx);\n                  this.close();\n                  U.stopEvent(e);\n                } else if (e.which == ax5.info.eventKeys.RETURN) {\n                  setOptionSelect.call(\n                    this,\n                    item.id,\n                    {\n                      index: {\n                        gindex:\n                          item.indexedOptions[item.optionFocusIndex][\"@gindex\"],\n                        index:\n                          item.indexedOptions[item.optionFocusIndex][\"@index\"]\n                      }\n                    },\n                    undefined,\n                    true\n                  );\n                  clearLabel.call(this, queIdx);\n                  alignComboboxDisplay.call(this);\n\n                  this.close();\n                  //alignComboboxOptionGroup.call(this);\n\n                  U.stopEvent(e);\n                } else if (e.which == ax5.info.eventKeys.DOWN) {\n                  focusMove.call(this, queIdx, 1);\n                  U.stopEvent(e);\n                } else if (e.which == ax5.info.eventKeys.UP) {\n                  focusMove.call(this, queIdx, -1);\n                  U.stopEvent(e);\n                }\n              },\n              focus: function(queIdx, e) {\n                //console.log(e);\n              },\n              blur: function(queIdx, e) {\n                blurLabel.call(this, queIdx);\n                U.stopEvent(e);\n              },\n              selectChange: function(queIdx, e) {\n                setOptionSelect.call(\n                  this,\n                  queIdx,\n                  { value: this.queue[queIdx].$select.val() },\n                  true\n                );\n              }\n            };\n\n            return function(queIdx) {\n              var item = this.queue[queIdx];\n              var data = {};\n              // 현재 선택된 값을 담아두는 저장소, syncComboboxOptions를 통해 options와 selected값을 동기화 처리 한다.\n              item.selected = [];\n\n              if (!item.$display) {\n                /// 템플릿에 전달할 오브젝트 선언\n                data.instanceId = this.instanceId;\n                data.id = item.id;\n                data.name = item.name;\n                data.theme = item.theme;\n                data.tabIndex = item.tabIndex;\n                data.multiple = item.multiple;\n                data.reset = item.reset;\n\n                data.label = getLabel.call(this, queIdx);\n                data.formSize = (function() {\n                  return item.size ? \"input-\" + item.size : \"\";\n                })();\n\n                //item.$display = jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"comboboxDisplay\"].call(this, queIdx), data));\n                item.$display = jQuery(\n                  COMBOBOX.tmpl.get.call(\n                    this,\n                    \"comboboxDisplay\",\n                    data,\n                    item.columnKeys\n                  )\n                );\n                item.$displayTable = item.$display.find(\n                  '[data-els=\"display-table\"]'\n                );\n                item.$displayLabel = item.$display.find(\n                  '[data-ax5combobox-display=\"label\"]'\n                );\n                item.$displayLabelInput = item.$display.find(\n                  '[data-ax5combobox-display=\"input\"]'\n                );\n\n                if (item.$target.find(\"select\").get(0)) {\n                  item.$select = item.$target.find(\"select\");\n                  item.$select\n                    .attr(\"tabindex\", \"-1\")\n                    .attr(\"class\", \"form-control \" + data.formSize);\n                  if (data.name) {\n                    item.$select.attr(\"name\", \"name\");\n                  }\n                  if (data.multiple) {\n                    item.$select.attr(\"multiple\", \"multiple\");\n                  }\n                } else {\n                  //item.$select = jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"formSelect\"].call(this, queIdx), data));\n                  item.$select = jQuery(\n                    COMBOBOX.tmpl.get.call(\n                      this,\n                      \"formSelect\",\n                      data,\n                      item.columnKeys\n                    )\n                  );\n                  item.$target.append(item.$select);\n                }\n\n                item.$target.append(item.$display);\n                // 라벨에 사용자 입력 필드가 있으므로 displayInput은 필요 없음.\n                // select.options로 item.options를 만들어내거나 item.options로 select.options를 만들어냄\n                item.options = syncComboboxOptions.call(\n                  this,\n                  queIdx,\n                  item.options\n                );\n              } else {\n                item.$displayLabel.html(getLabel.call(this, queIdx));\n                item.options = syncComboboxOptions.call(\n                  this,\n                  queIdx,\n                  item.options\n                );\n              }\n\n              alignComboboxDisplay.call(this);\n\n              item.$display\n                .off(\"click.ax5combobox\")\n                .on(\n                  \"click.ax5combobox\",\n                  comboboxEvent.click.bind(this, queIdx)\n                );\n\n              // combobox 태그에 대한 이벤트 감시\n\n              item.$displayLabelInput\n                .off(\"focus.ax5combobox\")\n                .on(\"focus.ax5combobox\", comboboxEvent.focus.bind(this, queIdx))\n                .off(\"blur.ax5combobox\")\n                .on(\"blur.ax5combobox\", comboboxEvent.blur.bind(this, queIdx))\n                .off(\"keyup.ax5combobox\")\n                .on(\"keyup.ax5combobox\", comboboxEvent.keyUp.bind(this, queIdx))\n                .off(\"keydown.ax5combobox\")\n                .on(\n                  \"keydown.ax5combobox\",\n                  comboboxEvent.keyDown.bind(this, queIdx)\n                );\n\n              // select 태그에 대한 change 이벤트 감시\n\n              item.$select\n                .off(\"change.ax5combobox\")\n                .on(\n                  \"change.ax5combobox\",\n                  comboboxEvent.selectChange.bind(this, queIdx)\n                );\n\n              data = null;\n              item = null;\n              queIdx = null;\n              return this;\n            };\n          })();\n\n          var comboboxConfig = {},\n            queIdx;\n\n          item = jQuery.extend(true, comboboxConfig, cfg, item);\n          if (!item.target) {\n            console.log(ax5.info.getError(\"ax5combobox\", \"401\", \"bind\"));\n            return this;\n          }\n\n          item.$target = jQuery(item.target);\n\n          if (!item.id) item.id = item.$target.data(\"data-ax5combobox-id\");\n          if (!item.id) {\n            item.id = \"ax5combobox-\" + ax5.getGuid();\n            item.$target.data(\"data-ax5combobox-id\", item.id);\n          }\n          item.name = item.$target.attr(\"data-ax5combobox\");\n          if (item.options) {\n            item.options = JSON.parse(JSON.stringify(item.options));\n          }\n\n          // target attribute data\n          (function(data) {\n            if (U.isObject(data) && !data.error) {\n              item = jQuery.extend(true, item, data);\n            }\n          })(U.parseJson(item.$target.attr(\"data-ax5combobox-config\"), true));\n\n          queIdx = U.search(this.queue, function() {\n            return this.id == item.id;\n          });\n\n          if (queIdx === -1) {\n            this.queue.push(item);\n            bindComboboxTarget.call(this, this.queue.length - 1);\n          } else {\n            this.queue[queIdx] = jQuery.extend(\n              true,\n              {},\n              this.queue[queIdx],\n              item\n            );\n            bindComboboxTarget.call(this, queIdx);\n          }\n\n          comboboxConfig = null;\n          queIdx = null;\n          return this;\n        };\n\n        /**\n         * open the optionBox of combobox\n         * @method ax5combobox.open\n         * @param {(String|Number|Element)} boundID\n         * @param {Number} [tryCount]\n         * @returns {ax5combobox}\n         */\n        this.open = (function() {\n          var onExpand = function(item) {\n            item.onExpand.call(\n              {\n                self: this,\n                item: item\n              },\n              function(O) {\n                if (this.waitOptionsCallback) {\n                  var data = {};\n                  var item = this.queue[this.activecomboboxQueueIndex];\n\n                  /// 현재 selected 검증후 처리\n                  (function(item, O) {\n                    var optionsMap = {};\n                    O.options.forEach(function(_O, _OIndex) {\n                      _O[\"@index\"] = _OIndex;\n                      optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                    });\n                    if (U.isArray(item.selected)) {\n                      item.selected.forEach(function(_O) {\n                        if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                          O.options[\n                            optionsMap[_O[item.columnKeys.optionValue]][\n                              \"@index\"\n                            ]\n                          ][item.columnKeys.optionSelected] = true;\n                        }\n                      });\n                    }\n                  })(item, O);\n\n                  item.options = syncComboboxOptions.call(\n                    this,\n                    this.activecomboboxQueueIndex,\n                    O.options\n                  );\n                  printLabel.call(this, this.activecomboboxQueueIndex);\n                  alignComboboxDisplay.call(this);\n\n                  /// 템플릿에 전달할 오브젝트 선언\n                  data.id = item.id;\n                  data.theme = item.theme;\n                  data.size = \"ax5combobox-option-group-\" + item.size;\n                  data.multiple = item.multiple;\n                  data.lang = item.lang;\n                  data.options = item.options;\n                  /*\n                             this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(\n                             ax5.mustache.render(COMBOBOX.tmpl[\"options\"].call(this, item.columnKeys), data)\n                             ));\n                             */\n                  this.activecomboboxOptionGroup\n                    .find('[data-els=\"content\"]')\n                    .html(\n                      jQuery(\n                        COMBOBOX.tmpl.get.call(\n                          this,\n                          \"options\",\n                          data,\n                          item.columnKeys\n                        )\n                      )\n                    );\n                }\n              }.bind(this)\n            );\n          };\n          return function(boundID, tryCount) {\n            this.waitOptionsCallback = null;\n\n            /**\n             * open combobox from the outside\n             */\n            var queIdx = U.isNumber(boundID)\n              ? boundID\n              : getQueIdx.call(this, boundID);\n            var item = this.queue[queIdx];\n            var data = {},\n              focusTop,\n              selectedOptionEl;\n\n            if (item.$display.attr(\"disabled\")) return this;\n\n            if (this.openTimer) clearTimeout(this.openTimer);\n            if (this.activecomboboxOptionGroup) {\n              if (this.activecomboboxQueueIndex == queIdx) {\n                return this;\n              }\n\n              if (tryCount > 2) return this;\n              this.close();\n              this.openTimer = setTimeout(\n                function() {\n                  this.open(queIdx, (tryCount || 0) + 1);\n                }.bind(this),\n                cfg.animateTime\n              );\n\n              return this;\n            }\n\n            item.optionFocusIndex = -1; // optionGroup이 열리면 포커스 인덱스 초기화 -1로\n            if (item.selected && item.selected.length > 0) {\n              item.optionSelectedIndex = item.selected[0][\"@findex\"];\n            }\n\n            /// 템플릿에 전달할 오브젝트 선언\n            data.id = item.id;\n            data.theme = item.theme;\n            data.size = \"ax5combobox-option-group-\" + item.size;\n            data.multiple = item.multiple;\n\n            data.lang = item.lang;\n            item.$display.attr(\"data-combobox-option-group-opened\", \"true\");\n\n            if (item.onExpand) {\n              // onExpand 인 경우 UI 대기모드 추가\n              data.waitOptions = true;\n            }\n            data.options = U.filter(item.options, function() {\n              return !this.hide;\n            });\n\n            //this.activecomboboxOptionGroup = jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"optionGroup\"].call(this, item.columnKeys), data));\n            this.activecomboboxOptionGroup = jQuery(\n              COMBOBOX.tmpl.get.call(this, \"optionGroup\", data, item.columnKeys)\n            );\n            //this.activecomboboxOptionGroup.find('[data-els=\"content\"]').html(jQuery(ax5.mustache.render(COMBOBOX.tmpl[\"options\"].call(this, item.columnKeys), data)));\n            this.activecomboboxOptionGroup\n              .find('[data-els=\"content\"]')\n              .html(\n                jQuery(\n                  COMBOBOX.tmpl.get.call(this, \"options\", data, item.columnKeys)\n                )\n              );\n            this.activecomboboxQueueIndex = queIdx;\n\n            alignComboboxOptionGroup.call(this, \"append\"); // alignComboboxOptionGroup 에서 body append\n            jQuery(window).on(\n              \"resize.ax5combobox-\" + this.instanceId,\n              function() {\n                alignComboboxOptionGroup.call(this);\n              }.bind(this)\n            );\n\n            if (item.selected && item.selected.length > 0) {\n              selectedOptionEl = this.activecomboboxOptionGroup.find(\n                '[data-option-index=\"' + item.selected[0][\"@index\"] + '\"]'\n              );\n              if (selectedOptionEl.get(0)) {\n                focusTop =\n                  selectedOptionEl.position().top -\n                  this.activecomboboxOptionGroup.height() / 3;\n                this.activecomboboxOptionGroup\n                  .find('[data-els=\"content\"]')\n                  .stop()\n                  .animate(\n                    { scrollTop: focusTop },\n                    item.animateTime,\n                    \"swing\",\n                    function() {}\n                  );\n              }\n            }\n\n            jQuery(window).on(\n              \"click.ax5combobox-\" + this.instanceId,\n              function(e) {\n                e = e || window.event;\n                onBodyClick.call(this, e);\n                U.stopEvent(e);\n              }.bind(this)\n            );\n\n            onStateChanged.call(this, item, {\n              self: this,\n              state: \"open\",\n              item: item\n            });\n\n            // waitOption timer\n            if (item.onExpand) {\n              this.waitOptionsCallback = true;\n              onExpand.call(this, item);\n            }\n\n            data = null;\n            focusTop = null;\n            selectedOptionEl = null;\n            return this;\n          };\n        })();\n\n        /**\n         * @method ax5combobox.update\n         * @param {(Object|String)} item\n         * @returns {ax5combobox}\n         */\n        this.update = function(_item) {\n          this.bind(_item);\n          return this;\n        };\n\n        /**\n         * @method ax5combobox.setValue\n         * @param {(jQueryObject|Element|Number)} _boundID\n         * @param {(String|Array)} _value\n         * @param {Boolean} [_selected]\n         * @return {ax5combobox}\n         * @example\n         * ```js\n         * myCombo.setValue($('[data-ax5combobox=\"combo1\"]'), \"1\");\n         * myCombo.setValue($('[data-ax5combobox=\"combo1\"]'), [\"1\", \"2\"]);\n         * ```\n         */\n        this.setValue = function(_boundID, _value, _selected) {\n          var queIdx = U.isNumber(_boundID)\n            ? _boundID\n            : getQueIdx.call(this, _boundID);\n          if (queIdx === -1) {\n            console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n            return;\n          }\n\n          clearSelected.call(this, queIdx);\n\n          if (U.isArray(_value)) {\n            var _values = U.map(_value, function() {\n              return { value: this };\n            });\n            setOptionSelect.call(this, queIdx, _values, _selected || true, {\n              noStateChange: true\n            });\n          } else if (U.isString(_value) || U.isNumber(_value)) {\n            setOptionSelect.call(\n              this,\n              queIdx,\n              { value: _value },\n              _selected || true,\n              { noStateChange: true }\n            );\n          } else {\n            printLabel.call(this, queIdx);\n          }\n\n          blurLabel.call(this, queIdx);\n          alignComboboxDisplay.call(this);\n\n          return this;\n        };\n\n        /**\n         * @method ax5combobox.setText\n         * @param {(jQueryObject|Element|Number)} _boundID\n         * @param {(String|Array)} _text\n         * @param {Boolean} [_selected]\n         * @returns {ax5combobox}\n         * @example\n         * ```js\n         * myCombo.setText($('[data-ax5combobox=\"combo1\"]'), \"string\");\n         * myCombo.setText($('[data-ax5combobox=\"combo1\"]'), [\"substring\", \"search\"]);\n         * ```\n         */\n        this.setText = function(_boundID, _text, _selected) {\n          var queIdx = U.isNumber(_boundID)\n            ? _boundID\n            : getQueIdx.call(this, _boundID);\n          if (queIdx === -1) {\n            console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n            return;\n          }\n          clearSelected.call(this, queIdx);\n          setOptionSelect.call(this, queIdx, _text, true, {\n            noStateChange: true\n          });\n          blurLabel.call(this, queIdx);\n          alignComboboxDisplay.call(this);\n\n          return this;\n        };\n\n        /**\n         * @method ax5combobox.getSelectedOption\n         * @param {(jQueryObject|Element|Number)} _boundID\n         * @returns {Array}\n         */\n        this.getSelectedOption = function(_boundID) {\n          var queIdx = U.isNumber(_boundID)\n            ? _boundID\n            : getQueIdx.call(this, _boundID);\n          if (queIdx === -1) {\n            console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n            return;\n          }\n          return U.deepCopy(this.queue[queIdx].selected);\n        };\n\n        /**\n         * @method ax5combobox.close\n         * @returns {ax5combobox}\n         */\n        this.close = function(item) {\n          if (this.closeTimer) clearTimeout(this.closeTimer);\n          if (!this.activecomboboxOptionGroup) return this;\n\n          item = this.queue[this.activecomboboxQueueIndex];\n          item.optionFocusIndex = -1;\n          item.$display\n            .removeAttr(\"data-combobox-option-group-opened\")\n            .trigger(\"focus\");\n          item.$displayLabel.attr(\"contentEditable\", \"false\");\n\n          this.activecomboboxOptionGroup.addClass(\"destroy\");\n\n          jQuery(window)\n            .off(\"resize.ax5combobox-\" + this.instanceId)\n            .off(\"click.ax5combobox-\" + this.instanceId)\n            .off(\"keyup.ax5combobox-\" + this.instanceId);\n\n          this.closeTimer = setTimeout(\n            function() {\n              if (this.activecomboboxOptionGroup)\n                this.activecomboboxOptionGroup.remove();\n              this.activecomboboxOptionGroup = null;\n              this.activecomboboxQueueIndex = -1;\n\n              onStateChanged.call(this, item, {\n                self: this,\n                state: \"close\"\n              });\n            }.bind(this),\n            cfg.animateTime\n          );\n          this.waitOptionsCallback = null;\n          return this;\n        };\n\n        /**\n         * @method ax5combobox.blur\n         * @param {(jQueryObject|Element|Number)} _boundID\n         * @returns {ax5combobox}\n         */\n        this.blur = function(_boundID) {\n          var queIdx = U.isNumber(_boundID)\n            ? _boundID\n            : getQueIdx.call(this, _boundID);\n          if (queIdx === -1) {\n            console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"val\"));\n            return;\n          }\n\n          blurLabel.call(this, queIdx);\n          return this;\n        };\n\n        /**\n         * @method ax5combobox.enable\n         * @param {(jQueryObject|Element|Number)} _boundID\n         * @returns {ax5combobox}\n         */\n        this.enable = function(_boundID) {\n          var queIdx = getQueIdx.call(this, _boundID);\n\n          if (typeof queIdx !== \"undefined\") {\n            this.queue[queIdx].disabled = false;\n            if (this.queue[queIdx].$display[0]) {\n              this.queue[queIdx].$display.removeAttr(\"disabled\");\n              this.queue[queIdx].$displayLabelInput.removeAttr(\"disabled\");\n            }\n            if (this.queue[queIdx].$select[0]) {\n              this.queue[queIdx].$select.removeAttr(\"disabled\");\n            }\n\n            onStateChanged.call(this, this.queue[queIdx], {\n              self: this,\n              state: \"enable\"\n            });\n          }\n\n          return this;\n        };\n\n        /**\n         * @method ax5combobox.disable\n         * @param {(jQueryObject|Element|Number)} _boundID\n         * @returns {ax5combobox}\n         */\n        this.disable = function(_boundID) {\n          var queIdx = getQueIdx.call(this, _boundID);\n\n          if (typeof queIdx !== \"undefined\") {\n            this.queue[queIdx].disabled = true;\n            if (this.queue[queIdx].$display[0]) {\n              this.queue[queIdx].$display.attr(\"disabled\", \"disabled\");\n              this.queue[queIdx].$displayLabelInput.attr(\n                \"disabled\",\n                \"disabled\"\n              );\n            }\n            if (this.queue[queIdx].$select[0]) {\n              this.queue[queIdx].$select.attr(\"disabled\", \"disabled\");\n            }\n\n            onStateChanged.call(this, this.queue[queIdx], {\n              self: this,\n              state: \"disable\"\n            });\n          }\n          return this;\n        };\n\n        /**\n         * @method ax5combobox.align\n         */\n        this.align = function() {\n          alignComboboxDisplay.call(this);\n          return this;\n        };\n\n        /**\n         * @method ax5combobox.clear\n         * @param {(jQueryObject|Element|Number)} _boundID\n         * @returns {ax5combobox}\n         */\n        this.clear = function(_boundID) {\n          var queIdx = U.isNumber(_boundID)\n            ? _boundID\n            : getQueIdx.call(this, _boundID);\n          if (queIdx === -1) {\n            console.log(ax5.info.getError(\"ax5combobox\", \"402\", \"clear\"));\n            return;\n          }\n\n          clearSelected.call(this, queIdx);\n          setOptionSelect.call(this, queIdx, [], false, {\n            noStateChange: false\n          });\n          printLabel.call(this, queIdx);\n          blurLabel.call(this, queIdx);\n          alignComboboxDisplay.call(this);\n\n          return this;\n        };\n\n        // 클래스 생성자\n        this.main = function() {\n          if (arguments && U.isObject(arguments[0])) {\n            this.setConfig(arguments[0]);\n          } else {\n            this.init();\n          }\n        }.apply(this, arguments);\n      };\n    })()\n  );\n\n  COMBOBOX = ax5.ui.combobox;\n})();\n","// ax5.ui.combobox.tmpl\n(function () {\n\n    var COMBOBOX = ax5.ui.combobox;\n    var U = ax5.util;\n\n    var optionGroup = function (columnKeys) {\n        return `\n            <div class=\"ax5combobox-option-group {{theme}} {{size}}\" data-ax5combobox-option-group=\"{{id}}\">\n                <div class=\"ax-combobox-body\">\n                    <div class=\"ax-combobox-option-group-content\" data-els=\"content\"></div>\n                </div>\n                <div class=\"ax-combobox-arrow\"></div> \n            </div>\n        `;\n    };\n\n    var comboboxDisplay = function (columnKeys) {\n        return `\n<div class=\"form-control {{formSize}} ax5combobox-display {{theme}}\" \ndata-ax5combobox-display=\"{{id}}\" data-ax5combobox-instance=\"{{instanceId}}\">\n    <div class=\"ax5combobox-display-table\" data-els=\"display-table\">\n        <div data-ax5combobox-display=\"label-holder\"> \n            <a {{^tabIndex}}{{/tabIndex}}{{#tabIndex}}tabindex=\"{{tabIndex}}\" {{/tabIndex}}\n            data-ax5combobox-display=\"label\"\n            spellcheck=\"false\"><input type=\"text\"data-ax5combobox-display=\"input\" style=\"border:0 none;\" /></a>\n        </div>\n        <div data-ax5combobox-display=\"addon\"> \n            {{#multiple}}{{#reset}}\n            <span class=\"addon-icon-reset\" data-selected-clear=\"true\">{{{.}}}</span>\n            {{/reset}}{{/multiple}}\n            {{#icons}}\n            <span class=\"addon-icon-closed\">{{clesed}}</span>\n            <span class=\"addon-icon-opened\">{{opened}}</span>\n            {{/icons}}\n            {{^icons}}\n            <span class=\"addon-icon-closed\"><span class=\"addon-icon-arrow\"></span></span>\n            <span class=\"addon-icon-opened\"><span class=\"addon-icon-arrow\"></span></span>\n            {{/icons}}\n        </div>\n    </div>\n</div>\n        `;\n    };\n\n    var formSelect = function (columnKeys) {\n        return `\n            <select tabindex=\"-1\" class=\"form-control {{formSize}}\" name=\"{{name}}\" {{#multiple}}multiple=\"multiple\"{{/multiple}}></select>\n        `;\n    };\n\n    var formSelectOptions = function (columnKeys) {\n        return `\n{{#selected}}\n<option value=\"{{${columnKeys.optionValue}}}\" selected=\"true\">{{${columnKeys.optionText}}}</option>\n{{/selected}}\n`;\n    };\n\n    var options = function (columnKeys) {\n        return `\n            {{#waitOptions}}\n                <div class=\"ax-combobox-option-item\">\n                        <div class=\"ax-combobox-option-item-holder\">\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">\n                                {{{lang.loading}}}\n                            </span>\n                        </div>\n                    </div>\n            {{/waitOptions}}\n            {{^waitOptions}}\n                {{#options}}\n                    {{#optgroup}}\n                        <div class=\"ax-combobox-option-group\">\n                            <div class=\"ax-combobox-option-item-holder\">\n                                <span class=\"ax-combobox-option-group-label\">\n                                    {{{.}}}\n                                </span>\n                            </div>\n                            {{#options}}\n                            {{^hide}}\n                            <div class=\"ax-combobox-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-group-index=\"{{@gindex}}\" data-option-index=\"{{@index}}\" \n                            data-option-value=\"{{${columnKeys.optionValue}}}\" \n                            {{#${columnKeys.optionSelected}}}data-option-selected=\"true\"{{/${columnKeys.optionSelected}}}>\n                                <div class=\"ax-combobox-option-item-holder\">\n                                    {{#multiple}}\n                                    <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-checkbox\">\n                                        <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\n                                    </span>\n                                    {{/multiple}}\n                                    <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">{{${columnKeys.optionText}}}</span>\n                                </div>\n                            </div>\n                            {{/hide}}\n                            {{/options}}\n                        </div>                            \n                    {{/optgroup}}\n                    {{^optgroup}}\n                    {{^hide}}\n                    <div class=\"ax-combobox-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-index=\"{{@index}}\" data-option-value=\"{{${columnKeys.optionValue}}}\" {{#${columnKeys.optionSelected}}}data-option-selected=\"true\"{{/${columnKeys.optionSelected}}}>\n                        <div class=\"ax-combobox-option-item-holder\">\n                            {{#multiple}}\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-checkbox\">\n                                <span class=\"item-checkbox-wrap useCheckBox\" data-option-checkbox-index=\"{{@i}}\"></span>\n                            </span>\n                            {{/multiple}}\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">{{${columnKeys.optionText}}}</span>\n                        </div>\n                    </div>\n                    {{/hide}}\n                    {{/optgroup}}\n                {{/options}}\n                {{^options}}\n                    <div class=\"ax-combobox-option-item\">\n                        <div class=\"ax-combobox-option-item-holder\">\n                            <span class=\"ax-combobox-option-item-cell ax-combobox-option-item-label\">\n                                {{{lang.noOptions}}}\n                            </span>\n                        </div>\n                    </div>\n                {{/options}}\n            {{/waitOptions}}\n        `;\n    };\n\n    var label = function (columnKeys) {\n        return `{{#selected}}<div tabindex=\"-1\" data-ax5combobox-selected-label=\"{{@i}}\" data-ax5combobox-selected-text=\"{{text}}\"><div data-ax5combobox-remove=\"true\" \ndata-ax5combobox-remove-index=\"{{@i}}\">{{{removeIcon}}}</div><span>{{${columnKeys.optionText}}}</span></div>{{/selected}}`;\n    };\n\n\n    COMBOBOX.tmpl = {\n        \"comboboxDisplay\": comboboxDisplay,\n        \"formSelect\": formSelect,\n        \"formSelectOptions\": formSelectOptions,\n        \"optionGroup\": optionGroup,\n        \"options\": options,\n        \"label\": label,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(COMBOBOX.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","/*\n * Copyright (c) 2016. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n// ax5.ui.combobox.util\n(function () {\n\n    var COMBOBOX = ax5.ui.combobox;\n    var U = ax5.util;\n\n    var nodeTypeProcessor = {\n        '1': function (queIdx, node, editable) {\n            var cfg = this.config;\n            var textNode = node;\n\n            if ($(node).find(\"span\").get(0)) {\n                textNode = $(node).find(\"span\").get(0);\n            }\n\n            var text = (textNode.textContent || textNode.innerText).replace(/^[\\s\\r\\n\\t]*|[\\s\\r\\n\\t]*$/g, '');\n            var item = this.queue[queIdx];\n\n            var selectedIndex, option;\n            if (item.selected && item.selected.length > 0 && node.getAttribute(\"data-ax5combobox-selected-text\") == text) {\n                selectedIndex = node.getAttribute(\"data-ax5combobox-selected-label\");\n                option = item.selected[selectedIndex];\n                return {\n                    index: {\n                        gindex: option[\"@gindex\"],\n                        index: option[\"@index\"],\n                        value: option[cfg.columnKeys.optionValue]\n                    }\n                };\n            }\n            else if (!node.getAttribute(\"data-ax5combobox-selected-text\")) {\n                if (text != \"\") {\n                    if (editable) {\n                        return text;\n                    } else {\n                        var $option;\n                        if (item.optionFocusIndex > -1) $option = this.activecomboboxOptionGroup.find('[data-option-focus-index=\"' + item.optionFocusIndex + '\"]');\n                        if (item.optionFocusIndex > -1 && $option.get(0) && $option.attr(\"data-option-value\")) {\n                            return {\n                                index: {\n                                    gindex: $option.attr(\"data-option-group-index\"),\n                                    index: $option.attr(\"data-option-index\")\n                                }\n                            }\n                        } else {\n                            return (item.editable) ? text : undefined;\n                        }\n                    }\n                } else {\n                    return undefined;\n                }\n            }\n            else {\n                return text;\n            }\n        },\n        '3': function (queIdx, node, editable) {\n            var cfg = this.config;\n            var text = (node.textContent || node.innerText).replace(/^[\\s\\r\\n\\t]*|[\\s\\r\\n\\t]*$/g, '');\n            var item = this.queue[queIdx];\n\n            if (text != \"\") {\n                if (editable) {\n                    return text;\n                } else {\n                    var $option;\n                    if (item.optionFocusIndex > -1) $option = this.activecomboboxOptionGroup.find('[data-option-focus-index=\"' + item.optionFocusIndex + '\"]');\n                    if (item.optionFocusIndex > -1 && $option.get(0) && $option.attr(\"data-option-value\")) {\n                        return {\n                            index: {\n                                gindex: $option.attr(\"data-option-group-index\"),\n                                index: $option.attr(\"data-option-index\")\n                            }\n                        }\n                    } else {\n                        return (item.editable) ? text : undefined;\n                    }\n                }\n            } else {\n                return undefined;\n            }\n        }\n    };\n\n    COMBOBOX.util = {\n        nodeTypeProcessor: nodeTypeProcessor\n    };\n})();","// ax5.ui.layout\n(function () {\n    var UI = ax5.ui;\n    var U = ax5.util;\n\n    UI.addClass({\n        className: \"layout\"\n    }, (function () {\n        /**\n         * @class ax5layout\n         * @alias ax5.ui.layout\n         * @author tom@axisj.com\n         */\n\n        var ax5layout = function () {\n            var self = this,\n                cfg,\n                ENM = {\n                    \"mousedown\": (ax5.info.supportTouch) ? \"touchstart\" : \"mousedown\",\n                    \"mousemove\": (ax5.info.supportTouch) ? \"touchmove\" : \"mousemove\",\n                    \"mouseup\": (ax5.info.supportTouch) ? \"touchend\" : \"mouseup\"\n                },\n                getMousePosition = function (e) {\n                    let mouseObj = ('changedTouches' in e.originalEvent && e.changedTouches) ? e.originalEvent.changedTouches[0] : e;\n                    return {\n                        clientX: mouseObj.clientX,\n                        clientY: mouseObj.clientY\n                    }\n                };\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                splitter: {\n                    size: 1\n                },\n                autoResize: true\n            };\n            this.queue = [];\n\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.resizer = null;\n\n            cfg = this.config;\n\n            var onStateChanged = function (opts, that) {\n                    if (opts && opts.onStateChanged) {\n                        opts.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n                    return true;\n                },\n                alignLayoutAll = function () {\n                    var i = this.queue.length;\n                    while (i--) {\n                        if (typeof this.queue[i].parentQueIdx === \"undefined\" && this.queue[i].autoResize) {\n                            alignLayout.call(this, i, null, \"windowResize\");\n                        }\n                    }\n                },\n                getDockPanelOuterSize = {\n                    \"width\": function (item, panel) {\n                        return (panel ? panel.__width + ((panel.split) ? item.splitter.size : 0) : 0);\n                    },\n                    \"height\": function (item, panel) {\n                        return (panel ? panel.__height + ((panel.split) ? item.splitter.size : 0) : 0);\n                    }\n                },\n                getPixel = function (size, parentSize) {\n                    if (size == \"*\") {\n                        return;\n                    }\n                    else if (U.right(size, 1) == \"%\") {\n                        return parentSize * U.number(size) / 100;\n                    }\n                    else {\n                        return Number(size);\n                    }\n                },\n                alignLayout = (function () {\n\n                    var beforeSetCSS = {\n                        \"split\": {\n                            \"horizontal\": function (item, panel, panelIndex) {\n                                if (panel.splitter) {\n                                    panel.__height = item.splitter.size;\n                                }\n                                else {\n                                    if (panelIndex == item.splitPanel.length - 1) {\n                                        if (item.splitPanel.asteriskLength == 0) {\n                                            panel.height = \"*\";\n                                            panel.__height = undefined;\n                                            item.splitPanel.asteriskLength++;\n                                        }\n                                        else {\n                                            if (panel.height == \"*\") {\n                                                item.splitPanel.asteriskLength++;\n                                            } else {\n                                                //panel.__height = getPixel(panel.height, item.targetDimension.height);\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (panel.height == \"*\") {\n                                            item.splitPanel.asteriskLength++;\n                                        } else {\n                                            //panel.__height = getPixel(panel.height, item.targetDimension.height);\n                                        }\n                                    }\n                                }\n                            },\n                            \"vertical\": function (item, panel, panelIndex) {\n                                if (panel.splitter) {\n                                    panel.__width = item.splitter.size;\n                                }\n                                else {\n                                    if (panelIndex == item.splitPanel.length - 1) {\n                                        if (item.splitPanel.asteriskLength == 0) {\n                                            panel.width = \"*\";\n                                            panel.__width = undefined;\n                                            item.splitPanel.asteriskLength++;\n                                        } else {\n                                            if (panel.width == \"*\") {\n                                                item.splitPanel.asteriskLength++;\n                                            }\n                                        }\n                                    }\n                                    else {\n                                        if (panel.width == \"*\") {\n                                            item.splitPanel.asteriskLength++;\n                                        } else {\n                                            //panel.__width = getPixel(panel.width, item.targetDimension.width);\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    };\n                    var setCSS = {\n                        \"top\": function (item, panel) {\n                            panel.$target.css({height: panel.__height || 0});\n                            if (panel.split) {\n                                panel.$splitter.css({height: item.splitter.size, top: (panel.__height || 0)});\n                            }\n                        },\n                        \"bottom\": function (item, panel) {\n                            panel.$target.css({height: panel.__height || 0});\n                            if (panel.split) {\n                                panel.$splitter.css({height: item.splitter.size, bottom: (panel.__height || 0)});\n                            }\n                        },\n                        \"left\": function (item, panel) {\n                            var css = {\n                                width: panel.__width || 0,\n                                height: item.targetDimension.height\n                            };\n\n                            if (item.dockPanel.top) {\n                                css.height -= item.dockPanel.top.__height;\n                                css.top = item.dockPanel.top.__height;\n                                if (item.dockPanel.top.split) {\n                                    css.height -= item.splitter.size;\n                                    css.top += item.splitter.size;\n                                }\n                            }\n                            if (item.dockPanel.bottom) {\n                                css.height -= item.dockPanel.bottom.__height;\n                                if (item.dockPanel.bottom.split) {\n                                    css.height -= item.splitter.size;\n                                }\n                            }\n\n                            panel.$target.css(css);\n\n                            if (panel.split) {\n                                panel.$splitter.css({width: item.splitter.size, height: css.height, top: css.top, left: css.width});\n                            }\n                        },\n                        \"right\": function (item, panel) {\n                            var css = {\n                                width: panel.__width || 0,\n                                height: item.targetDimension.height\n                            };\n\n                            if (item.dockPanel.top) {\n                                css.height -= item.dockPanel.top.__height;\n                                css.top = item.dockPanel.top.__height;\n                                if (item.dockPanel.top.split) {\n                                    css.height -= item.splitter.size;\n                                    css.top += item.splitter.size;\n                                }\n                            }\n                            if (item.dockPanel.bottom) {\n                                css.height -= item.dockPanel.bottom.__height;\n                                if (item.dockPanel.bottom.split) {\n                                    css.height -= item.splitter.size;\n                                }\n                            }\n\n                            panel.$target.css(css);\n\n                            if (panel.split) {\n                                panel.$splitter.css({width: item.splitter.size, height: css.height, top: css.top, right: css.width});\n                            }\n                        },\n                        \"center\": function (item, panel) {\n                            var css = {\n                                width: item.targetDimension.width,\n                                height: item.targetDimension.height\n                            };\n\n                            if (item.dockPanel.top) {\n                                css.height -= item.dockPanel.top.__height || 0;\n                                css.top = item.dockPanel.top.__height || 0;\n                                if (item.dockPanel.top.split) {\n                                    css.height -= item.splitter.size;\n                                    css.top += item.splitter.size;\n                                }\n                            }\n                            if (item.dockPanel.bottom) {\n                                css.height -= item.dockPanel.bottom.__height || 0;\n                                if (item.dockPanel.bottom.split) {\n                                    css.height -= item.splitter.size;\n                                }\n                            }\n                            if (item.dockPanel.left) {\n                                css.width -= item.dockPanel.left.__width || 0;\n                                css.left = item.dockPanel.left.__width || 0;\n                                if (item.dockPanel.left.split) {\n                                    css.width -= item.splitter.size;\n                                    css.left += item.splitter.size;\n                                }\n                            }\n                            if (item.dockPanel.right) {\n                                css.width -= item.dockPanel.right.__width || 0;\n                                if (item.dockPanel.right.split) {\n                                    css.width -= item.splitter.size;\n                                }\n                            }\n\n                            var minWidth = panel.minWidth || 0;\n                            var minHeight = panel.minHeight || 0;\n\n                            // 레이아웃의 최소 너비 높이를 주어 레이아웃 덕패널이 겹치는 일이 없게 합니다\n                            if (css.width < minWidth) {\n                                css.width = minWidth;\n                                item.$target.css({minWidth: minWidth + getDockPanelOuterSize[\"width\"](item.dockPanel.left, item.splitter.size) + getDockPanelOuterSize[\"width\"](item.dockPanel.right, item.splitter.size)});\n                            }\n                            if (css.height < minHeight) {\n                                css.height = minHeight;\n                                item.$target.css({minHeight: minHeight + getDockPanelOuterSize[\"height\"](item.dockPanel.top, item.splitter.size) + getDockPanelOuterSize[\"height\"](item.dockPanel.bottom, item.splitter.size)});\n                            }\n\n                            panel.$target.css(css);\n                        },\n                        \"split\": {\n                            \"horizontal\": function (item, panel, panelIndex, withoutAsteriskSize, windowResize) {\n                                var css = {\n                                    display: \"block\"\n                                };\n                                var prevPosition = (panelIndex) ? Number(item.splitPanel[panelIndex - 1].offsetEnd) : 0;\n                                if (panel.splitter) {\n                                    css.height = item.splitter.size;\n                                }\n                                else {\n                                    if (panel.height == \"*\" && (typeof panel.__height === \"undefined\" || windowResize)) {\n                                        // 남은 전체 공간을 사용\n                                        css.height = panel.__height = (item.targetDimension.height - withoutAsteriskSize) / item.splitPanel.asteriskLength;\n                                    }\n                                    else {\n                                        css.height = panel.__height || 0;\n                                    }\n                                }\n                                css.top = prevPosition;\n                                panel.offsetStart = prevPosition;\n                                panel.offsetEnd = Number(prevPosition) + Number(css.height);\n                                panel.$target.css(css);\n                            },\n                            \"vertical\": function (item, panel, panelIndex, withoutAsteriskSize, windowResize) {\n                                var css = {\n                                    display: \"block\"\n                                };\n                                var prevPosition = (panelIndex) ? Number(item.splitPanel[panelIndex - 1].offsetEnd) : 0;\n\n                                if (panel.splitter) {\n                                    css.width = item.splitter.size;\n                                }\n                                else {\n                                    if (panel.width == \"*\" && (typeof panel.__width === \"undefined\" || windowResize)) {\n                                        // 남은 전체 공간을 사용\n                                        css.width = panel.__width = (item.targetDimension.width - withoutAsteriskSize) / item.splitPanel.asteriskLength;\n                                    }\n                                    else {\n                                        css.width = panel.__width || 0;\n                                    }\n                                }\n                                css.left = prevPosition;\n                                panel.offsetStart = prevPosition;\n                                panel.offsetEnd = Number(prevPosition) + Number(css.width);\n\n                                panel.$target.css(css);\n                            }\n                        }\n                    };\n                    var layoutProcessor = {\n                        \"dock-panel\": function (item) {\n                            for (var panel in item.dockPanel) {\n                                if (item.dockPanel[panel].$target && item.dockPanel[panel].$target.get(0)) {\n                                    if (panel in setCSS) {\n                                        setCSS[panel].call(this, item, item.dockPanel[panel]);\n                                    }\n                                }\n                            }\n                        },\n                        \"split-panel\": function (item, windowResize) {\n                            //console.log(item.splitPanel);\n                            var withoutAsteriskSize;\n                            item.splitPanel.asteriskLength = 0;\n                            item.splitPanel.forEach(function (panel, panelIndex) {\n                                beforeSetCSS[\"split\"][item.orientation].call(this, item, panel, panelIndex);\n                            });\n\n                            if (item.orientation == \"horizontal\") {\n                                withoutAsteriskSize = U.sum(item.splitPanel, function (n) {\n                                    if (n.height != \"*\") return U.number(n.__height);\n                                });\n                            }\n                            else {\n                                withoutAsteriskSize = U.sum(item.splitPanel, function (n) {\n                                    if (n.width != \"*\") return U.number(n.__width);\n                                });\n                            }\n\n                            item.splitPanel.forEach(function (panel, panelIndex) {\n                                setCSS[\"split\"][item.orientation].call(this, item, panel, panelIndex, withoutAsteriskSize, windowResize);\n                            });\n                        }\n                    };\n                    var childResize = function (item, callback, windowResize) {\n                        var i = item.childQueIdxs.length;\n                        while (i--) {\n                            alignLayout.call(this, item.childQueIdxs[i], callback, windowResize);\n                        }\n                    };\n\n                    return function (queIdx, callback, windowResize) {\n                        var item = this.queue[queIdx];\n\n                        // 레이아웃 타겟의 CSS속성을 미리 저장해 둡니다. 왜? 패널별로 크기 계산 할 때 쓰려고\n                        item.targetDimension = {\n                            height: item.$target.innerHeight(),\n                            width: item.$target.innerWidth()\n                        };\n\n                        if (item.layout in layoutProcessor) {\n                            layoutProcessor[item.layout].call(this, item, windowResize);\n                        }\n\n                        if (item.childQueIdxs) childResize.call(this, item, callback, windowResize);\n                        if (item.onResize) {\n                            setTimeout((function () {\n                                this.onResize.call(this, this);\n                            }).bind(item), 1)\n\n                        }\n                        if (callback) {\n                            callback.call(item, item);\n                        }\n                    }\n                })(),\n                resizeSplitter = {\n                    \"on\": function (queIdx, panel, $splitter) {\n                        var item = this.queue[queIdx];\n                        var splitterOffset = $splitter.position();\n                        var splitterBox = {\n                            width: $splitter.width(), height: $splitter.height()\n                        };\n                        var getResizerPosition = {\n                            \"left\": function (e) {\n                                var mouseObj = ('changedTouches' in e.originalEvent && e.changedTouches) ? e.originalEvent.changedTouches[0] : e;\n\n                                panel.__da = mouseObj.clientX - panel.mousePosition.clientX;\n                                var minWidth = panel.minWidth || 0;\n                                var maxWidth = panel.maxWidth || (item.targetDimension.width - getDockPanelOuterSize[\"width\"](item, item.dockPanel.left) - getDockPanelOuterSize[\"width\"](item, item.dockPanel.right));\n\n                                if (panel.__width + panel.__da < minWidth) {\n                                    panel.__da = -panel.__width + minWidth;\n                                }\n                                else if (maxWidth < panel.__width + panel.__da) {\n                                    panel.__da = maxWidth - panel.__width;\n                                }\n                                return {left: panel.$splitter.position().left + panel.__da};\n                            },\n                            \"right\": function (e) {\n                                var mouseObj = ('changedTouches' in e.originalEvent && e.changedTouches) ? e.originalEvent.changedTouches[0] : e;\n\n                                panel.__da = mouseObj.clientX - panel.mousePosition.clientX;\n                                var minWidth = panel.minWidth || 0;\n                                var maxWidth = panel.maxWidth || (item.targetDimension.width - getDockPanelOuterSize[\"width\"](item, item.dockPanel.left) - getDockPanelOuterSize[\"width\"](item, item.dockPanel.right));\n\n                                if (panel.__width - panel.__da < minWidth) {\n                                    panel.__da = panel.__width - minWidth;\n                                }\n                                else if (maxWidth < panel.__width - panel.__da) {\n                                    panel.__da = -maxWidth + panel.__width;\n                                }\n                                return {left: panel.$splitter.position().left + panel.__da};\n                            },\n                            \"top\": function (e) {\n                                var mouseObj = ('changedTouches' in e.originalEvent && e.changedTouches) ? e.originalEvent.changedTouches[0] : e;\n\n                                panel.__da = mouseObj.clientY - panel.mousePosition.clientY;\n                                var minHeight = panel.minHeight || 0;\n                                var maxHeight = panel.maxHeight || (item.targetDimension.height - getDockPanelOuterSize[\"height\"](item, item.dockPanel.top) - getDockPanelOuterSize[\"height\"](item, item.dockPanel.bottom));\n\n                                if (panel.__height + panel.__da < minHeight) {\n                                    panel.__da = -panel.__height + minHeight;\n                                }\n                                else if (maxHeight < panel.__height + panel.__da) {\n                                    panel.__da = maxHeight - panel.__height;\n                                }\n                                return {top: panel.$splitter.position().top + panel.__da};\n                            },\n                            \"bottom\": function (e) {\n                                var mouseObj = ('changedTouches' in e.originalEvent && e.changedTouches) ? e.originalEvent.changedTouches[0] : e;\n\n                                panel.__da = mouseObj.clientY - panel.mousePosition.clientY;\n                                var minHeight = panel.minHeight || 0;\n                                var maxHeight = panel.maxHeight || (item.targetDimension.height - getDockPanelOuterSize[\"height\"](item, item.dockPanel.top) - getDockPanelOuterSize[\"height\"](item, item.dockPanel.bottom));\n\n                                if (panel.__height - panel.__da < minHeight) {\n                                    panel.__da = panel.__height - minHeight;\n                                }\n                                else if (maxHeight < panel.__height - panel.__da) {\n                                    panel.__da = -maxHeight + panel.__height;\n                                }\n                                return {top: panel.$splitter.position().top + panel.__da};\n                            },\n                            \"split\": function (e) {\n                                var mouseObj = ('changedTouches' in e.originalEvent && e.changedTouches) ? e.originalEvent.changedTouches[0] : e;\n\n\n                                if (item.orientation == \"horizontal\") {\n                                    panel.__da = mouseObj.clientY - panel.mousePosition.clientY;\n\n                                    var prevPanel = item.splitPanel[panel.panelIndex - 1];\n                                    var nextPanel = item.splitPanel[panel.panelIndex + 1];\n\n                                    var prePanelMinHeight = prevPanel.minHeight || 0;\n                                    var nextPanelMinHeight = nextPanel.minHeight || 0;\n\n                                    if (panel.offsetStart + panel.__da < prevPanel.offsetStart + prePanelMinHeight) {\n                                        panel.__da = prevPanel.offsetStart - panel.offsetStart + prePanelMinHeight;\n                                    }\n                                    else if (panel.offsetStart + panel.__da > nextPanel.offsetEnd - nextPanelMinHeight) {\n                                        panel.__da = nextPanel.offsetEnd - panel.offsetEnd - nextPanelMinHeight;\n                                    }\n\n                                    return {top: panel.$target.position().top + panel.__da};\n                                }\n                                else {\n                                    /// todo : min & max 범위 정하기\n                                    panel.__da = mouseObj.clientX - panel.mousePosition.clientX;\n\n                                    var prevPanel = item.splitPanel[panel.panelIndex - 1];\n                                    var nextPanel = item.splitPanel[panel.panelIndex + 1];\n                                    var prePanelMinWidth = prevPanel.minWidth || 0;\n                                    var nextPanelMinWidth = nextPanel.minWidth || 0;\n\n                                    if (panel.offsetStart + panel.__da < prevPanel.offsetStart + prePanelMinWidth) {\n                                        panel.__da = prevPanel.offsetStart - panel.offsetStart + prePanelMinWidth;\n                                    }\n                                    else if (panel.offsetStart + panel.__da > nextPanel.offsetEnd - nextPanelMinWidth) {\n                                        panel.__da = nextPanel.offsetEnd - panel.offsetEnd - nextPanelMinWidth;\n                                    }\n                                    return {left: Number(panel.$target.position().left) + Number(panel.__da)};\n                                }\n                            }\n                        };\n                        panel.__da = 0; // 패널의 변화량\n\n                        jQuery(document.body)\n                            .bind(ENM[\"mousemove\"] + \".ax5layout-\" + this.instanceId, function (e) {\n                                if (!self.resizer) {\n\n                                    self.resizer = jQuery('<div class=\"ax5layout-resizer panel-' + (panel.resizerType) + '\" ondragstart=\"return false;\"></div>');\n                                    self.resizer.css({\n                                        left: splitterOffset.left,\n                                        top: splitterOffset.top,\n                                        width: splitterBox.width,\n                                        height: splitterBox.height\n                                    });\n                                    item.$target.append(self.resizer);\n                                }\n                                self.resizer.css(getResizerPosition[panel.resizerType](e));\n                            })\n                            .bind(ENM[\"mouseup\"] + \".ax5layout-\" + this.instanceId, function (e) {\n                                resizeSplitter.off.call(self, queIdx, panel, $splitter);\n                            })\n                            .bind(\"mouseleave.ax5layout-\" + this.instanceId, function (e) {\n                                resizeSplitter.off.call(self, queIdx, panel, $splitter);\n                            });\n\n                        jQuery(document.body)\n                            .attr('unselectable', 'on')\n                            .css('user-select', 'none')\n                            .on('selectstart', false);\n\n                    },\n                    \"off\": function (queIdx, panel, $splitter) {\n                        var item = this.queue[queIdx];\n                        var setPanelSize = {\n                            \"dock-panel\": {\n                                \"left\": function (queIdx, panel) {\n                                    panel.__width += panel.__da;\n                                },\n                                \"right\": function () {\n                                    panel.__width -= panel.__da;\n                                },\n                                \"top\": function () {\n                                    panel.__height += panel.__da;\n                                },\n                                \"bottom\": function () {\n                                    panel.__height -= panel.__da;\n                                }\n                            },\n                            \"split-panel\": {\n                                \"split\": function () {\n                                    if (item.orientation == \"horizontal\") {\n                                        // 앞과 뒤의 높이 조절\n                                        item.splitPanel[panel.panelIndex - 1].__height += panel.__da;\n                                        item.splitPanel[panel.panelIndex + 1].__height -= panel.__da;\n                                    }\n                                    else {\n                                        // 앞과 뒤의 높이 조절\n\n                                        item.splitPanel[panel.panelIndex - 1].__width += panel.__da;\n                                        item.splitPanel[panel.panelIndex + 1].__width -= panel.__da;\n                                    }\n                                }\n                            },\n                            \"tab-panel\": {}\n                        };\n\n                        if (self.resizer) {\n                            self.resizer.remove();\n                            self.resizer = null;\n                            setPanelSize[this.queue[queIdx].layout][panel.resizerType].call(this, queIdx, panel);\n                            alignLayout.call(this, queIdx);\n                        }\n\n                        jQuery(document.body)\n                            .unbind(ENM[\"mousemove\"] + \".ax5layout-\" + this.instanceId)\n                            .unbind(ENM[\"mouseup\"] + \".ax5layout-\" + this.instanceId)\n                            .unbind(\"mouseleave.ax5layout-\" + this.instanceId);\n\n                        jQuery(document.body)\n                            .removeAttr('unselectable')\n                            .css('user-select', 'auto')\n                            .off('selectstart');\n\n                    }\n                },\n                tabControl = {\n                    \"open\": function (queIdx, layout, panelIndex) {\n                        if (layout.activePanelIndex != panelIndex) {\n                            layout.tabPanel[panelIndex].active = true;\n                            layout.tabPanel[layout.activePanelIndex].active = false;\n                            layout.$target.find('[data-tab-panel-label=\"' + panelIndex + '\"]').attr(\"data-tab-active\", \"true\");\n                            layout.$target.find('[data-tab-panel-label=\"' + layout.activePanelIndex + '\"]').removeAttr(\"data-tab-active\");\n                            layout.tabPanel[panelIndex].$target.attr(\"data-tab-active\", \"true\");\n                            layout.tabPanel[layout.activePanelIndex].$target.removeAttr(\"data-tab-active\");\n                            layout.activePanelIndex = panelIndex;\n\n                            if (layout.onOpenTab) {\n                                var that = {\n                                    '$target': layout.$target,\n                                    name: layout.name,\n                                    id: layout.id,\n                                    layout: layout.layout,\n                                    activePanelIndex: layout.activePanelIndex,\n                                    activePanel: layout.tabPanel[layout.activePanelIndex],\n                                    tabPanel: layout.tabPanel\n                                };\n                                layout.onOpenTab.call(that);\n                            }\n                        }\n                    }\n                },\n                getTabLabesTmpl = function () {\n                    return `\n<div data-tab-panel-label-holder=\"{{id}}\">\n    <div data-tab-panel-label-border=\"{{id}}\"></div>\n    <div data-tab-panel-label-table=\"{{id}}\">\n        <div data-tab-panel-aside=\"left\"></div>\n    {{#tabPanel}}\n        <div data-tab-panel-label=\"{{panelIndex}}\" data-tab-active=\"{{active}}\">\n            <div data-tab-label=\"{{panelIndex}}\">{{{label}}}</div>\n        </div>\n    {{/tabPanel}}\n        <div data-tab-panel-aside=\"right\"></div>\n    </div>\n</div>\n`;\n                },\n                bindLayoutTarget = (function () {\n\n                    var applyLayout = {\n                        \"dock-panel\": function (queIdx) {\n                            var item = this.queue[queIdx];\n                            item.dockPanel = {};\n                            item.$target.find('>[data-dock-panel]').each(function () {\n\n                                var panelInfo = {};\n                                (function (data) {\n                                    if (U.isObject(data) && !data.error) {\n                                        panelInfo = jQuery.extend(true, panelInfo, data);\n                                    }\n                                })(U.parseJson(this.getAttribute(\"data-dock-panel\"), true));\n\n                                if ('dock' in panelInfo) {\n                                    panelInfo.$target = jQuery(this);\n                                    panelInfo.$target.addClass(\"dock-panel-\" + panelInfo.dock);\n\n                                    if (panelInfo.split = (panelInfo.split && panelInfo.split.toString() == \"true\")) {\n                                        panelInfo.$splitter = jQuery('<div data-splitter=\"\" class=\"dock-panel-' + panelInfo.dock + '\"></div>');\n                                        panelInfo.$splitter\n                                            .bind(ENM[\"mousedown\"], function (e) {\n                                                panelInfo.mousePosition = getMousePosition(e);\n                                                resizeSplitter.on.call(self, queIdx, panelInfo, panelInfo.$splitter);\n                                            })\n                                            .bind(\"dragstart\", function (e) {\n                                                U.stopEvent(e);\n                                                return false;\n                                            });\n                                        item.$target.append(panelInfo.$splitter);\n                                    }\n\n                                    if (panelInfo.dock == \"top\" || panelInfo.dock == \"bottom\") {\n                                        panelInfo.__height = getPixel(panelInfo.height, item.targetDimension.height);\n                                    }\n                                    else {\n                                        panelInfo.__width = getPixel(panelInfo.width, item.targetDimension.width);\n                                    }\n                                    panelInfo.resizerType = panelInfo.dock;\n                                    item.dockPanel[panelInfo.dock] = panelInfo;\n                                }\n                            });\n\n                        },\n                        \"split-panel\": function (queIdx) {\n                            var item = this.queue[queIdx];\n                            item.splitPanel = [];\n                            item.$target.find('>[data-split-panel], >[data-splitter]').each(function (ELIndex) {\n\n                                var panelInfo = {};\n                                (function (data) {\n                                    if (U.isObject(data) && !data.error) {\n                                        panelInfo = jQuery.extend(true, panelInfo, data);\n                                    }\n                                })(U.parseJson(this.getAttribute(\"data-split-panel\") || this.getAttribute(\"data-splitter\"), true));\n\n                                panelInfo.$target = jQuery(this);\n                                panelInfo.$target\n                                    .addClass(\"split-panel-\" + item.orientation);\n                                panelInfo.panelIndex = ELIndex;\n\n                                if (this.getAttribute(\"data-splitter\")) {\n\n                                    panelInfo.splitter = true;\n                                    panelInfo.$target\n                                        .bind(ENM[\"mousedown\"], function (e) {\n                                            if (panelInfo.panelIndex > 0 && panelInfo.panelIndex < item.splitPanel.length - 1) {\n                                                panelInfo.mousePosition = getMousePosition(e);\n                                                resizeSplitter.on.call(self, queIdx, panelInfo, panelInfo.$target);\n                                            }\n                                        })\n                                        .bind(\"dragstart\", function (e) {\n                                            U.stopEvent(e);\n                                            return false;\n                                        });\n                                    panelInfo.resizerType = \"split\";\n\n                                } else {\n\n                                    if (item.orientation == \"horizontal\") {\n                                        panelInfo.__height = getPixel(panelInfo.height, item.targetDimension.height);\n                                    }\n                                    else {\n                                        item.orientation = \"vertical\";\n                                        panelInfo.__width = getPixel(panelInfo.width, item.targetDimension.width);\n                                    }\n\n                                }\n\n                                item.splitPanel.push(panelInfo);\n                            });\n                        },\n                        \"tab-panel\": function (queIdx) {\n                            var item = this.queue[queIdx];\n\n                            var hasActivePanel = false;\n                            var activePanelIndex = -1;\n                            item.tabPanel = [];\n                            item.$target.find('>[data-tab-panel]').each(function (ELIndex) {\n                                var panelInfo = {};\n                                (function (data) {\n                                    if (U.isObject(data) && !data.error) {\n                                        panelInfo = jQuery.extend(true, panelInfo, data);\n                                    }\n                                })(U.parseJson(this.getAttribute(\"data-tab-panel\"), true));\n\n                                if (hasActivePanel) {\n                                    panelInfo.active = false;\n                                }\n\n                                panelInfo.$target = jQuery(this);\n\n                                if (panelInfo.active && panelInfo.active != \"false\") {\n                                    hasActivePanel = true;\n                                    item.activePanelIndex = ELIndex;\n                                    panelInfo.$target.attr(\"data-tab-active\", \"true\");\n                                }\n\n                                panelInfo.panelIndex = ELIndex;\n                                item.tabPanel.push(panelInfo);\n                            });\n\n                            if (!hasActivePanel) {\n                                item.tabPanel[0].active = true;\n                                item.tabPanel[0].$target.attr(\"data-tab-active\", \"true\");\n                                item.activePanelIndex = 0;\n                            }\n\n                            // make tabLabel\n                            item.$target.append(jQuery(ax5.mustache.render(getTabLabesTmpl.call(this, queIdx), item)));\n                            item.$target.on(\"click\", '[data-tab-panel-label]', function (e) {\n                                var index = this.getAttribute(\"data-tab-panel-label\");\n                                tabControl.open.call(self, queIdx, item, index);\n                            });\n                        }\n                    };\n\n                    return function (queIdx) {\n                        var item = this.queue[queIdx];\n                        var data = {};\n\n                        // 레이아웃 타겟의 CSS속성을 미리 저장해 둡니다. 왜? 패널별로 크기 계산 할 때 쓰려고\n                        item.targetDimension = {\n                            height: item.$target.innerHeight(),\n                            width: item.$target.innerWidth()\n                        };\n\n                        // 부모 컨테이너가 ax5layout인지 판단 필요.\n                        if (item.$target.parents(\"[data-ax5layout]\").get(0)) {\n                            hooksResizeLayout.call(\n                                this,\n                                item.$target.parents(\"[data-ax5layout]\").get(0),\n                                queIdx\n                            );\n                        }\n\n                        if (item.layout in applyLayout) {\n                            applyLayout[item.layout].call(this, queIdx);\n                        }\n                        alignLayout.call(this, queIdx);\n                    }\n                })(),\n                getQueIdx = function (boundID) {\n                    if (!U.isString(boundID)) {\n                        boundID = jQuery(boundID).data(\"data-ax5layout-id\");\n                    }\n                    if (!U.isString(boundID)) {\n                        //console.log(ax5.info.getError(\"ax5layout\", \"402\", \"getQueIdx\"));\n                        return -1;\n                    }\n                    return U.search(this.queue, function () {\n                        return this.id == boundID;\n                    });\n                },\n                hooksResizeLayout = function (boundID, childQueIdx) {\n                    var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    if (!this.queue[queIdx].childQueIdxs) this.queue[queIdx].childQueIdxs = [];\n                    this.queue[queIdx].childQueIdxs.push(childQueIdx);\n                    this.queue[childQueIdx].parentQueIdx = queIdx;\n                };\n\n            /**\n             * Preferences of layout UI\n             * @method ax5layout.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @param {Number} [config.animateTime=250]\n             * @param {Object} [config.splitter]\n             * @param {Number} [config.splitter.size=4]\n             * @param {Boolean} [config.autoResize=true]\n             * @returns {ax5layout}\n             * @example\n             * ```js\n             * jQuery('[data-ax5layout=\"ax1\"]').ax5layout({\n             *     onResize: function () {\n             *     }\n             * });\n             *\n             * jQuery('[data-ax5layout=\"ax1\"]').ax5layout(\"resize\", {\n             *     top: {height: 100},\n             *     bottom: 100,\n             *     left: 100,\n             *     right: 100\n             * });\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                jQuery(window).bind(\"resize.ax5layout-\" + this.instanceId, (function () {\n                    alignLayoutAll.call(this);\n                }).bind(this));\n            };\n\n            /**\n             * @method ax5layout.bind\n             * @param {Object} item\n             * @param {String} [item.layout]\n             * @param {String} [item.theme]\n             * @param {Element} item.target\n             * @param {Object[]} item.options\n             * @param {Object} [item.splitter]\n             * @param {Number} [item.splitter.size=4]\n             * @param {Boolean} [item.autoResize=true]\n             * @returns {ax5layout}\n             */\n            this.bind = function (item) {\n                var\n                    UIConfig = {},\n                    queIdx;\n\n                item = jQuery.extend(true, UIConfig, cfg, item);\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5layout\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                item.$target = jQuery(item.target);\n\n                if (!item.id) item.id = item.$target.data(\"data-ax5layout-id\");\n                if (!item.id) {\n                    item.id = 'ax5layout-' + ax5.getGuid();\n                    item.$target.data(\"data-ax5layout-id\", item.id);\n                }\n                item.name = item.$target.attr(\"data-ax5layout\");\n                if (item.options) {\n                    item.options = JSON.parse(JSON.stringify(item.options));\n                }\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        item = jQuery.extend(true, item, data);\n                    }\n                })(U.parseJson(item.$target.attr(\"data-config\"), true));\n\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindLayoutTarget.call(this, this.queue.length - 1);\n                }\n                else {\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindLayoutTarget.call(this, queIdx);\n                }\n\n                UIConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * @method ax5layout.align\n             * @param boundID\n             * @param {Function} [callback]\n             * @param {String} [windowResize]\n             * @returns {ax5layout}\n             */\n            this.align = function (boundID, windowResize) {\n                var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n\n                if (queIdx === -1) {\n                    \n                    \n                    \n                    var i = this.queue.length;\n                    while (i--) {\n                        alignLayout.call(this, i, null, windowResize);\n                    }\n                } else {\n                    alignLayout.call(this, queIdx, null, windowResize);\n                }\n                return this;\n            };\n\n            /**\n             * @method ax5layout.onResize\n             * @param boundID\n             * @param fn\n             * @returns {ax5layout}\n             */\n            this.onResize = function (boundID, fn) {\n                var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5layout\", \"402\", \"onResize\"));\n                    return;\n                }\n                this.queue[queIdx].onResize = fn;\n                return this;\n            };\n\n            /**\n             * @method ax5layout.resize\n             * @param boundID\n             * @param {Object} resizeOption\n             * @param {Function} [callback]\n             * @returns {ax5layout}\n             */\n            this.resize = (function () {\n\n                var resizeLayoutPanel = {\n                    \"dock-panel\": function (item, resizeOption) {\n                        [\"top\", \"bottom\", \"left\", \"right\"].forEach(function (dock) {\n                            if (resizeOption[dock] && item.dockPanel[dock]) {\n                                if (dock == \"top\" || dock == \"bottom\") {\n                                    item.dockPanel[dock].__height = (U.isObject(resizeOption[dock])) ? resizeOption[dock].height : resizeOption[dock];\n                                }\n                                else if (dock == \"left\" || dock == \"right\") {\n                                    item.dockPanel[dock].__width = (U.isObject(resizeOption[dock])) ? resizeOption[dock].width : resizeOption[dock];\n                                }\n                            }\n                        });\n                    },\n                    \"split-panel\": function () {\n\n                    },\n                    \"tab-panel\": function () {\n\n                    }\n                };\n\n                return function (boundID, resizeOption, callback) {\n                    var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {\n                        var i = this.queue.length;\n                        while (i--) {\n                            resizeLayoutPanel[this.queue[i].layout].call(this, this.queue[i], resizeOption);\n                            alignLayout.call(this, i, callback);\n                        }\n                    } else {\n                        if (this.queue[queIdx]) {\n                            resizeLayoutPanel[this.queue[queIdx].layout].call(this, this.queue[queIdx], resizeOption);\n                            alignLayout.call(this, queIdx, callback);\n                        }\n                    }\n\n                    return this;\n                };\n\n            })();\n\n            this.reset = (function () {\n\n                var resetLayoutPanel = {\n                    \"dock-panel\": function (item) {\n                        [\"top\", \"bottom\", \"left\", \"right\"].forEach(function (dock) {\n                            if (item.dockPanel[dock]) {\n                                if (dock == \"top\" || dock == \"bottom\") {\n                                    item.dockPanel[dock].__height = item.dockPanel[dock].height;\n                                }\n                                else if (dock == \"left\" || dock == \"right\") {\n                                    item.dockPanel[dock].__width = item.dockPanel[dock].width;\n                                }\n                            }\n                        });\n                    },\n                    \"split-panel\": function (item) {\n                        item.splitPanel.forEach(function (panel) {\n                            if (item.orientation == \"vertical\") {\n                                panel.__width = getPixel(panel.width, item.targetDimension.width);\n                            } else if (item.orientation == \"horizontal\") {\n                                panel.__height = getPixel(panel.height, item.targetDimension.height);\n                            }\n                        });\n                    },\n                    \"tab-panel\": function () {\n\n                    }\n                };\n\n                return function (boundID, callback) {\n                    var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {\n\n                    } else {\n                        resetLayoutPanel[this.queue[queIdx].layout].call(this, this.queue[queIdx]);\n                        alignLayout.call(this, queIdx, callback);\n                    }\n\n                    return this;\n                };\n\n            })();\n\n            this.hide = function () {\n\n            };\n\n            /**\n             * @method ax5layout.tabOpen\n             * @param boundID\n             * @param tabIndex\n             * @returns {ax5.ui.ax5layout}\n             */\n            this.tabOpen = (function () {\n                return function (boundID, tabIndex) {\n                    var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    if (queIdx === -1) {\n                        console.log(ax5.info.getError(\"ax5layout\", \"402\", \"tabOpen\"));\n                        return;\n                    }\n\n                    tabControl.open.call(this, queIdx, this.queue[queIdx], tabIndex);\n                    return this;\n                }\n            })();\n\n            this.getActiveTab = function (boundID) {\n                var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5layout\", \"402\", \"tabOpen\"));\n                    return;\n                }\n\n                if (typeof this.queue[queIdx].activePanelIndex != \"undefined\") {\n                    return this.queue[queIdx].tabPanel[this.queue[queIdx].activePanelIndex];\n                }\n            };\n\n            /// 클래스 생성자\n            this.main = (function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n                else {\n                    this.init();\n                }\n            }).apply(this, arguments);\n        };\n        return ax5layout;\n    })());\n})();","// ax5.ui.binder\n(function () {\n\n    const UI = ax5.ui;\n    const U = ax5.util;\n\n    UI.addClass({\n        className: \"binder\"\n    }, (function () {\n\n        /**\n         * @class ax5binder\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var obj = {\n         *     name: \"Thomas Jang\",\n         *     alias: \"tom\",\n         *     tel: \"010-8881-9137\",\n         *     email: \"tom@axisj.com\",\n         *     sex: \"M\",\n         *     hobby: [\"sport\"],\n         *     useYn: \"N\",\n         *     description: \"http://www.axisj.com\",\n         *     list: [\n         *         {\n         *             name: \"thomas\",\n         *             tel: \"010-8881-9000\",\n         *             email: \"tom@axisj.com\",\n         *             sex: \"M\",\n         *             description: \"\",\n         *             child: [{name:\"값1\"},{name:\"값2\"}],\n         *             qty: 10,\n         *             cost: 100\n         *         },\n         *         {\n         *             name: \"thomas\",\n         *             tel: \"010-8881-9000\",\n         *             email: \"tom@axisj.com\",\n         *             sex: \"M\",\n         *             description: \"\",\n         *             child: [{name:\"값1\"},{name:\"값2\"}],\n         *             qty: 20,\n         *             cost: 100\n         *         }\n         * ]\n         * };\n         *\n         * var myBinder = new ax5.ui.binder();\n         * myBinder.setModel(obj, $('#form-target'));\n         * ```\n         */\n        return function() {\n\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {};\n            cfg = this.config;\n\n            this.model = {};\n            this.tmpl = {};\n            this.view_target = null;\n            this.change_trigger = {};\n            this.click_trigger = {};\n            this.update_trigger = {};\n            this.onerror = null;\n\n            var\n                _toString = Object.prototype.toString,\n                get_type = function (O) {\n                    var typeName;\n                    if (O != null && O == O.window) {\n                        typeName = \"window\";\n                    }\n                    else if (!!(O && O.nodeType == 1)) {\n                        typeName = \"element\";\n                    }\n                    else if (!!(O && O.nodeType == 11)) {\n                        typeName = \"fragment\";\n                    }\n                    else if (typeof O === \"undefined\") {\n                        typeName = \"undefined\";\n                    }\n                    else if (_toString.call(O) == \"[object Object]\") {\n                        typeName = \"object\";\n                    }\n                    else if (_toString.call(O) == \"[object Array]\") {\n                        typeName = \"array\";\n                    }\n                    else if (_toString.call(O) == \"[object String]\") {\n                        typeName = \"string\";\n                    }\n                    else if (_toString.call(O) == \"[object Number]\") {\n                        typeName = \"number\";\n                    }\n                    else if (_toString.call(O) == \"[object NodeList]\") {\n                        typeName = \"nodelist\";\n                    }\n                    else if (typeof O === \"function\") {\n                        typeName = \"function\";\n                    }\n                    return typeName;\n                },\n                get_mix_path = function (dataPath, index, item_path) {\n                    return dataPath + \"[\" + index + \"]\" + ((item_path == \".\") ? \"\" : \".\" + item_path);\n                },\n                get_real_path = function (_dataPath) {\n                    var path = [];\n                    var _path = [].concat(_dataPath.split(/[\\.\\[\\]]/g));\n                    _path.forEach(function (n) {\n                        if (n !== \"\") path.push(\"[\\\"\" + n.replace(/['\\\"]/g, \"\") + \"\\\"]\");\n                    });\n                    _path = null;\n                    return path.join(\"\");\n                    /*\n                    var path = [];\n                    var _path = [].concat(dataPath.split(/[\\.\\[\\]]/g));\n\n                    _path.forEach(function (n) {\n                        if (n !== \"\") path.push(n);\n                    });\n                    _path = null;\n                    return \"'\" + path.join(\"']['\") + \"'\";\n                    */\n                };\n\n            /**\n             * 바인딩할 자바스크립트 오브젝트로 제이쿼리로 검색된 HTML dom 엘리먼트 에 바인딩합니다. 바인딩된 모델을 반환합니다.\n             * @method ax5binder.setModel\n             * @param {Object} model\n             * @param {jQueryObject} [view_target]\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * var myModel = new ax5.ui.binder();\n             * myModel.setModel({}, $(\"#...\"));\n             * ```\n             */\n            this.setModel = function (model, view_target) {\n                this.model = model;\n                if (!this.view_target && view_target) {\n                    this.view_target = view_target;\n                    this._binding();\n                }\n                else {\n                    this._binding(\"update\");\n                }\n                return this;\n            };\n\n            /**\n             * data_path에 값을 변경한다. value의 타입은 (String, Number, Array, Object)를 지원.\n             * @method ax5binder.set\n             * @param {String} dataPath\n             * @param {Object} value\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.set(\"name\", \"Seowoo\");\n             * myModel.set(\"obj.path\", {a:1});\n             * ```\n             */\n            this.set = function (dataPath, value) {\n                var _this = this, obj_type, i, this_type;\n\n                (Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\")).call(this.model, value);\n                obj_type = get_type(value);\n\n                if (obj_type == \"object\") {\n                    for (var k in value) {\n                        this.set(dataPath + \".\" + k, value[k]);\n                    }\n                }\n                else if (obj_type == \"array\") {\n                    this.view_target.find('[data-ax-path=\"' + (dataPath) + '\"]').each(function () {\n                        this_type = (this.type || \"\").toLowerCase();\n                        if (this_type == \"checkbox\" || this_type == \"radio\")\n                            _this.set_els_value(this, this.tagName.toLowerCase(), this_type, value, dataPath, \"change\");\n                    });\n                    i = value.length;\n                    while (i--) {\n                        this.set(dataPath + \"[\" + i + \"]\", value[i]);\n                    }\n                }\n                else {\n                    // apply data value to els\n                    this.view_target.find('[data-ax-path=\"' + (dataPath) + '\"]').each(function () {\n                        _this.set_els_value(this, this.tagName.toLowerCase(), (this.type || \"\").toLowerCase(), value, dataPath, \"change\");\n                    });\n                }\n                return this;\n            };\n\n            /**\n             * data_path에 값을 반환한다. data_path 가 없으면 전체 Object를 반환한다.\n             * @method ax5binder.get\n             * @param dataPath\n             * @returns {*}\n             */\n            this.get = function (dataPath) {\n                if (typeof dataPath == \"undefined\") {\n                    return this.model;\n                }\n                else {\n                    return (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                }\n            };\n\n\n            /**\n             * data_path에 값이 변경되는 이벤트 발생하면 callback을 실행합니다.\n             * @method ax5binder.onChange\n             * @param dataPath\n             * @param callback\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.onChange(\"name\", function () {\n             *       console.log(this);\n             *       // el: domElement - 변경이 발생한 엘리먼트, 엘리먼트로 부터 다양한 속성을 추출할 수 있다.\n             *       // jquery : jQueryObject\n             *       // tagname: \"input\"\n             *       // value: \"changed value\"\n             *       console.log(this.el.id);\n             *   });\n             *   myModel.onChange(\"*\", function (n) {\n             *       console.log(n);\n             *       // console.log(this); 와 동일\n             *   });\n             * ```\n             */\n            this.onChange = function (dataPath, callback) {\n                this.change_trigger[dataPath || \"*\"] = callback;\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 속성이 부여된 엘리먼트 하위에 태그중에 data-ax-repeat-click 속성을 가진 아이템에 대해 클릭 이벤트 발생하면 callback을 실행합니다.\n             * @method ax5binder.onClick\n             * @param dataPath\n             * @param callback\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.onclick(\"list\", function () {\n             *       console.log(this);\n             *       // el: domElement\n             *       // jquery: jQueryObject\n             *       // item: Object - repeat item\n             *       // item_index: \"0\" - index of item\n             *       // item_path: \"list[0]\" - repeat data_path\n             *       // repeat_path: \"list\"\n             *       // tagname: \"button\"\n             *       // value: \"add\"\n             *   });\n             * ```\n             */\n            this.onClick = function (dataPath, callback) {\n                this.click_trigger[dataPath] = callback;\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 하위아이템을 추가합니다.\n             * @method ax5binder.add\n             * @param dataPath\n             * @param item\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.add(\"list\", {a:1});\n             * ```\n             */\n            this.add = function (dataPath, item) {\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var tmpl = this.tmpl[dataPath];\n                item['@i'] = list.length;\n                item['@r'] = list.length;\n                item.__ADDED__ = true;\n                (Function(\"val\", \"this\" + get_real_path(dataPath) + \".push(val);\")).call(this.model, item);\n\n                // 다중 템플릿 처리\n                for (var t in tmpl) {\n                    var fragdom = $(ax5.mustache.render(tmpl[t].content, item));\n                    fragdom.attr(\"data-ax-repeat-path\", dataPath);\n                    fragdom.attr(\"data-ax-repeat-i\", item['@i']);\n                    this.bind_event_tmpl(fragdom, dataPath);\n                    tmpl[t].container.append(fragdom);\n                }\n\n                this.change(\"*\");\n\n                var callback = this.update_trigger[dataPath];\n                if (callback) {\n                    var that = {\n                        repeat_path: dataPath,\n                        tmpl       : tmpl,\n                        list       : list\n                    };\n                    callback.call(that, that);\n                }\n\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 하위 아이템을 제거합니다. 단! 이 때 ADDED 값을 가진 아이템은 제거하고 그렇지 않은 아이템은 DELETED 값을 아이템에 추가합니다.\n             * @method ax5binder.remove\n             * @param dataPath\n             * @param index\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.remove(\"list\", 0);\n             * ```\n             */\n            this.remove = function (dataPath, index) {\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var tmpl = this.tmpl[dataPath];\n                if (typeof index == \"undefined\") index = list.length - 1;\n                var remove_item = list[index];\n                if (remove_item.__ADDED__) {\n                    list.splice(index, 1);\n                }\n                else {\n                    list[index].__DELETED__ = true;\n                }\n\n                for (var t in tmpl) {\n                    tmpl[t].container.empty();\n                    this.print_tmpl(dataPath, tmpl[t]);\n                }\n\n                this.change(\"*\");\n\n                var callback = this.update_trigger[dataPath];\n                if (callback) {\n                    var that = {\n                        repeat_path: dataPath,\n                        tmpl       : tmpl,\n                        list       : list\n                    };\n                    callback.call(that, that);\n                }\n\n                return this;\n            };\n\n            /**\n             * data-ax-repeat=\"list\" 하위 아이템을 교체합니다.\n             * @method ax5binder.update\n             * @param dataPath\n             * @param index\n             * @param item\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             * myModel.update(\"list\", 0, {a:1});\n             * ```\n             */\n            this.update = function (dataPath, index, item) {\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var tmpl = this.tmpl[dataPath];\n                if (typeof index != \"undefined\" && item) list.splice(index, 1, item);\n\n                for (var t in tmpl) {\n                    tmpl[t].container.empty();\n                    this.print_tmpl(dataPath, tmpl[t]);\n                }\n\n                this.change(\"*\");\n\n                var callback = this.update_trigger[dataPath];\n                if (callback) {\n                    var that = {\n                        repeat_path: dataPath,\n                        tmpl       : tmpl,\n                        list       : list\n                    };\n                    callback.call(that, that);\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5binder.childAdd\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param child_item\n             */\n            this.childAdd = function (dataPath, index, child_path, child_item) {\n                var _list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \";\")).call(this.model);\n                child_item.__ADDED__ = true;\n                list.push(child_item);\n                this.update(dataPath, index, _list[index]);\n            };\n\n            /**\n             * ax5binder.childRemove\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param child_index\n             */\n            this.childRemove = function (dataPath, index, child_path, child_index) {\n                var _list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \";\")).call(this.model);\n                var remove_item = list[child_index];\n                if (remove_item.__ADDED__) {\n                    list.splice(child_index, 1);\n                }\n                else {\n                    list[child_index].__DELETED__ = true;\n                }\n                this.update(dataPath, index, _list[index]);\n            };\n\n            /**\n             * @method ax5binder.childUpdate\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param child_index\n             * @param child_item\n             */\n            this.childUpdate = function (dataPath, index, child_path, child_index, child_item) {\n                var _list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \";\")).call(this.model);\n                list[child_index] = child_item;\n                this.update(dataPath, index, _list[index]);\n            };\n\n            /**\n             * @method ax5binder.childSet\n             * @param dataPath\n             * @param index\n             * @param child_path\n             * @param value\n             * @returns {ax5binder}\n             */\n            this.childSet = function (dataPath, index, child_path, value) {\n                var _this = this, i;\n                (Function(\"val\", \"this\" + get_real_path(dataPath) + \"[\" + index + \"].\" + child_path + \" = val;\")).call(this.model, value);\n\n                // apply data value to els\n                this.view_target.find('[data-ax-repeat=\"' + (dataPath) + '\"]').find('[data-ax-repeat-i=\"' + index + '\"]').find('[data-ax-item-path=\"' + child_path + '\"]').each(function () {\n                    _this.set_els_value(this, this.tagName.toLowerCase(), (this.type || \"\").toLowerCase(), value, dataPath + \"[\" + index + \"].\" + child_path);\n                });\n                return this;\n            };\n\n            /**\n             * @method ax5binder.onUpdate\n             * @param dataPath\n             * @param callback\n             * @returns {ax5binder}\n             * @example\n             * ```js\n             *  this.model.onupdate(\"moderator\", function () {\n             *      $('#moderator-add').val('');\n             *      $moderator.find('[data-role-user-btn]')\n             *          .unbind(\"click\")\n             *          .bind(\"click\", role_user_btn_onclick);\n             *  });\n             * ```\n             */\n            this.onUpdate = function (dataPath, callback) {\n                this.update_trigger[dataPath] = callback;\n                return this;\n            };\n\n\n            this._binding = function (isupdate) {\n                var _this = this;\n\n                // apply data value to els\n                this.view_target.find('[data-ax-path]').each(function () {\n                    var dom = $(this), dataPath = dom.attr(\"data-ax-path\"), this_type = (this.type || \"\").toLowerCase();\n\n                    var val;\n                    try {\n                        val = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(_this.model);\n                    } catch (e) {\n                        /**\n                         * onerror를 선언 한 경우에만 에러 출력\n                         * */\n                        if (_this.onerror) _this.onerror(\"not found target [model.\" + get_real_path(dataPath) + \"]\");\n                    }\n\n                    _this.set_els_value(this, this.tagName.toLowerCase(), this_type, val || \"\", dataPath);\n                });\n\n                if (typeof isupdate == \"undefined\") {\n                    // collect tmpl\n                    this.view_target.find('[data-ax-repeat]').each(function () {\n                        var dom = $(this), dataPath = dom.attr(\"data-ax-repeat\"), repeat_idx = dom.attr(\"data-ax-repeat-idx\");\n\n                        if (typeof _this.tmpl[dataPath] == \"undefined\") _this.tmpl[dataPath] = {};\n                        if (typeof repeat_idx != \"undefined\") {\n                            _this.tmpl[dataPath][repeat_idx] = {\n                                container: dom, content: dom.find(\"script\").html()\n                            };\n                        }\n                        else {\n                            _this.tmpl[dataPath][\"0\"] = {\n                                container: dom, content: dom.find(\"script\").html()\n                            };\n                        }\n                        //dom.empty().show();\n                        dom.empty();\n                    });\n                }\n                else {\n                    this.view_target.find('[data-ax-repeat]').each(function () {\n                        var dom = $(this);\n                        dom.empty().show();\n                    });\n                }\n\n                // binding event to els\n                this.view_target.find('[data-ax-path]').off(\"change.axbinder\").on(\"change.axbinder\", function (e) {\n\n                    var\n                        i,\n                        hasItem = false,\n                        checked,\n                        new_value = [],\n                        dom = $(e.target),\n                        dataPath = dom.attr(\"data-ax-path\"),\n                        origin_value = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(_this.model),\n                        this_type = (this.type || \"\").toLowerCase(),\n                        value_type = get_type(origin_value),\n                        setAllow = true\n                        ;\n\n\n                    if (value_type == \"object\" || value_type == \"array\") {\n                        setAllow = false;\n                    }\n\n                    if (this_type == \"checkbox\") {\n                        // 동일한 체크박스가 여러개 인지 판단합니다.\n                        if (_this.view_target.find('[data-ax-path=\"' + (dataPath) + '\"]').length > 1) {\n\n                            if (get_type(origin_value) != \"array\") {\n                                if (typeof origin_value === \"undefined\" || origin_value == \"\") origin_value = [];\n                                else origin_value = [].concat(origin_value);\n                            }\n                            i = origin_value.length, hasItem = false, checked = this.checked;\n                            while (i--) {\n                                if (origin_value[i] == this.value) {\n                                    hasItem = true;\n                                }\n                            }\n\n                            if (checked) {\n                                if (!hasItem) origin_value.push(this.value);\n                            }\n                            else {\n                                i = origin_value.length;\n                                while (i--) {\n                                    if (origin_value[i] == this.value) {\n                                        //hasItemIndex = i;\n                                    }\n                                    else {\n                                        new_value.push(origin_value[i]);\n                                    }\n                                }\n                                origin_value = new_value;\n                            }\n                        }\n                        else {\n                            origin_value = (this.checked) ? this.value : \"\";\n                        }\n\n                        (Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\")).call(_this.model, origin_value);\n                        _this.change(dataPath, {\n                            el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: origin_value\n                        });\n                    }\n                    else {\n                        if (setAllow) {\n                            (Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\")).call(_this.model, this.value);\n                            _this.change(dataPath, {\n                                el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: this.value\n                            });\n                        }\n                    }\n\n                    dom.data(\"changedTime\", (new Date()).getTime());\n                });\n                /*\n                 this.view_target.find('[data-ax-path]').unbind(\"blur.axbinder\").bind(\"blur.axbinder\", function (e) {\n                 var dom = $(e.target);\n                 if (typeof dom.data(\"changedTime\") == \"undefined\" || dom.data(\"changedTime\") < (new Date()).getTime() - 10) dom.trigger(\"change\");\n                 });\n                 */\n\n                //_this.tmpl\n                var callback;\n                for (var tk in _this.tmpl) {\n                    for (var ix in _this.tmpl[tk]) {\n                        // console.log(_this.tmpl[tk][ix].content);\n                        this.print_tmpl(tk, _this.tmpl[tk][ix], \"isInit\");\n                    }\n\n                    if (callback = this.update_trigger[tk]) {\n                        var that = {\n                            repeat_path: tk,\n                            tmpl       : _this.tmpl[tk],\n                            list       : (Function(\"\", \"return this.\" + tk + \";\")).call(this.model)\n                        };\n                        callback.call(that, that);\n                    }\n                }\n            };\n\n            this.set_els_value = function (el, tagname, type, value, dataPath, callChange) {\n                if (typeof value === \"undefined\") value = [];\n                else value = [].concat(value);\n                var options, i;\n\n                if (tagname == \"input\") {\n                    if (type == \"checkbox\" || type == \"radio\") {\n                        i = value.length;\n                        var checked = false;\n                        try {\n                            if (i > 0) {\n                                while (i--) {\n                                    if (typeof value[i] !== \"undefined\" && el.value === value[i].toString()) {\n                                        checked = true;\n                                    }\n                                }\n                            }\n                        } catch (e) {\n                            console.log(e);\n                        }\n\n                        el.checked = checked;\n                    }\n                    else {\n                        el.value = value.join('');\n                    }\n                }\n                else if (tagname == \"select\") {\n                    options = el.options, i = options.length;\n                    var vi, option_matched = false;\n\n                    while (i--) {\n                        vi = value.length;\n                        while (vi--) {\n                            if (typeof value[vi] !== \"undefined\" && options[i].value === value[vi].toString()) {\n                                options[i].selected = true;\n                                option_matched = true;\n                                break;\n                            }\n                        }\n                        if (option_matched) break;\n                    }\n                    if (!option_matched) {\n                        if (options[0]) {\n                            options[0].selected = true;\n                            (Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\")).call(this.model, options[0].value);\n                        }\n                        else {\n                            (Function(\"val\", \"this\" + get_real_path(dataPath) + \" = val;\")).call(this.model, \"\");\n                        }\n                    }\n\n                    if (window.AXSelect) { // AXISJ 사용가능\n                        $(typeof value !== \"undefined\" && el).bindSelectSetValue(value[value.length - 1]);\n                    }\n                }\n                else if (tagname == \"textarea\") {\n                    el.value = value.join('') || \"\";\n                }\n                else {\n                    if (el.innerText) {\n                        el.innerText = value.join(\"\");\n                    }\n                    else {\n                        el.innerHTML = value.join(\"\");\n                    }\n                }\n\n                if (callChange) {\n                    this.change(dataPath, {el: el, tagname: tagname, value: value});\n                }\n                return this;\n            };\n\n            this.change = function (dataPath, that) {\n                var callback = this.change_trigger[dataPath];\n                if (callback) {\n                    callback.call(that, that);\n                }\n                if (dataPath != \"*\" && this.change_trigger[\"*\"]) {\n                    this.change_trigger[\"*\"].call(that, that);\n                }\n            };\n\n            this.click = function (dataPath, that) {\n                var callback = this.click_trigger[dataPath];\n                if (callback) {\n                    callback.call(that, that);\n                }\n            };\n\n            this.sync_model = function () {\n\n            };\n\n            this.print_tmpl = function (dataPath, tmpl, isInit) {\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n                if (list && get_type(list) == \"array\") {\n                    for (var i = 0, l = list.length; i < l; i++) {\n                        var item = list[i];\n                        if (jQuery.isPlainObject(item)) {\n                            item['@i'] = i;\n                            item['@r'] = i;\n                            if (i === 0) item['@first'] = true;\n                        }\n                        else {\n                            item = {\n                                \"@i\"    : i,\n                                \"@value\": item\n                            };\n                            if (i === 0) item['@first'] = true;\n                            console.log(item);\n                        }\n\n                        if (!item.__DELETED__) {\n                            var fragdom = $(ax5.mustache.render(tmpl.content, item));\n                            fragdom.attr(\"data-ax-repeat-path\", dataPath);\n                            fragdom.attr(\"data-ax-repeat-i\", item['@i']);\n                            this.bind_event_tmpl(fragdom, dataPath);\n                            tmpl.container.append(fragdom);\n                        }\n                    }\n                }\n            };\n\n            this.bind_event_tmpl = function (target, dataPath) {\n                var _this = this, index = target.attr(\"data-ax-repeat-i\");\n                var list = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(this.model);\n\n                target.find('[data-ax-repeat-click]')\n                    .off(\"click.axbinder\")\n                    .on(\"click.axbinder\", function (e) {\n                        var target = ax5.util.findParentNode(e.target, function (el) {\n                            return el.getAttribute(\"data-ax-repeat-click\");\n                        });\n                        if (target) {\n                            var dom = $(target), value = dom.attr(\"data-ax-repeat-click\"), repeat_path = dom.attr(\"data-ax-repeat-path\");\n                            var that = {\n                                el         : target,\n                                jquery     : dom,\n                                tagname    : target.tagName.toLowerCase(),\n                                value      : value,\n                                repeat_path: dataPath,\n                                item       : list[index],\n                                item_index : index,\n                                item_path  : dataPath + \"[\" + index + \"]\"\n                            };\n                            _this.click(dataPath, that);\n                        }\n                    });\n\n                // apply data value to els\n                target.find('[data-ax-item-path]').each(function () {\n                    var dom = $(this),\n                        item_path = dom.attr(\"data-ax-item-path\"),\n                        mix_path = get_mix_path(dataPath, index, item_path),\n                        val,\n                        this_type = (this.type || \"\").toLowerCase();\n\n                    try {\n                        val = (Function(\"\", \"return this.\" + mix_path + \";\")).call(_this.model);\n                    } catch (e) {\n                        /**\n                         * onerror를 선언 한 경우에만 에러 출력\n                         * */\n                        if (_this.onerror) _this.onerror(\"not found target [model.\" + mix_path + \"]\");\n                    }\n                    //if (typeof val !== \"undefined\") _this.set_els_value(this, this.tagName.toLowerCase(), this_type, val, mix_path);\n                    _this.set_els_value(this, this.tagName.toLowerCase(), this_type, val || \"\", mix_path);\n                });\n\n                // binding event to els\n                target.find('[data-ax-item-path]')\n                    .off(\"change.axbinder\")\n                    .on(\"change.axbinder\", function (e) {\n                        var i,\n                            hasItem = false,\n                            checked,\n                            new_value = [],\n                            this_type = (this.type || \"\").toLowerCase(),\n                            dom = $(e.target),\n                            item_path = dom.attr(\"data-ax-item-path\"),\n                            mix_path = get_mix_path(dataPath, index, item_path),\n                            origin_value = (Function(\"\", \"return this.\" + mix_path + \";\")).call(_this.model),\n                            value_type = get_type(origin_value),\n                            setAllow = true\n                            ;\n\n                        if (value_type == \"object\" || value_type == \"array\") {\n                            setAllow = false;\n                        }\n\n                        if (this_type == \"checkbox\") {\n                            if (target.find('[data-ax-item-path=\"' + item_path + '\"]').length > 1) {\n                                if (get_type(origin_value) != \"array\") {\n                                    if (typeof origin_value === \"undefined\" || origin_value == \"\") origin_value = [];\n                                    else origin_value = [].concat(origin_value);\n                                }\n                                i = origin_value.length, hasItem = false, checked = this.checked;\n                                while (i--) {\n                                    if (origin_value[i] == this.value) {\n                                        hasItem = true;\n                                    }\n                                }\n\n                                if (checked) {\n                                    if (!hasItem) origin_value.push(this.value);\n                                }\n                                else {\n                                    i = origin_value.length;\n                                    while (i--) {\n                                        if (origin_value[i] == this.value) {\n                                            //hasItemIndex = i;\n                                        }\n                                        else {\n                                            new_value.push(origin_value[i]);\n                                        }\n                                    }\n                                    origin_value = new_value;\n                                }\n                            }\n                            else {\n                                origin_value = (this.checked) ? this.value : \"\";\n                            }\n\n                            (Function(\"val\", \"this.\" + mix_path + \" = val;\")).call(_this.model, origin_value);\n                            _this.change(mix_path, {\n                                el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: origin_value\n                            });\n                        }\n                        else {\n                            if (setAllow) {\n                                (Function(\"val\", \"this.\" + mix_path + \" = val;\")).call(_this.model, this.value);\n                                _this.change(mix_path, {\n                                    el: this, jquery: dom, tagname: this.tagName.toLowerCase(), value: this.value\n                                });\n                            }\n                        }\n\n                        dom.data(\"changedTime\", (new Date()).getTime());\n                    });\n\n                target.find('[data-ax-item-path]')\n                    .off(\"blur.axbinder\")\n                    .on(\"blur.axbinder\", function (e) {\n                        var dom = $(e.target);\n                        if (typeof dom.data(\"changedTime\") == \"undefined\" || dom.data(\"changedTime\") < (new Date()).getTime() - 10) dom.trigger(\"change\");\n                    });\n            };\n\n            /**\n             * @method ax5binder.focus\n             * @param dataPath\n             * @returns {ax5binder}\n             */\n            this.focus = function (dataPath) {\n                this.view_target.find('[data-ax-path=\"' + (dataPath) + '\"]').focus();\n                //this.view_target.find('[data-ax-item-path=\"' + get_real_path(dataPath) + '\"]').focus();\n                return this;\n            };\n\n            /**\n             * @method ax5binder.validate\n             * @returns {*}\n             * @example\n             * ```html\n             * <input type=\"text\" data-ax-path=\"q\" data-ax-validate=\"required\" title=\"이름\" maxlength=\"8\" value=\"\"/>\n             * ```\n             * ```js\n             * var rs = myModel.validate(), _s;\n             * console.log(rs); // 결과를 체크 해보세요\n             * if(rs.error) {\n             *      _s = rs.error[0].jquery.attr(\"title\");\n             *      alert(\"\" + _s + \"(은)는 필수 입력사항입니다.\" + _s + \"(을)를 입력하세요\");\n             *      rs.error[0].el.focus();\n             *      return;\n             *  }\n             * ```\n             */\n            this.validate = function () {\n                var _this = this;\n                var errors = [];\n                this.view_target.find('[data-ax-path]').each(function () {\n                    var dom = $(this), \n                        dataPath = dom.attr(\"data-ax-path\"), \n                        is_validate = dom.attr(\"data-ax-validate\"),\n                        pattern = dom.attr(\"pattern\");\n                    \n                    if (is_validate) {\n                        var val, _val, is_error;\n\n                        val = (Function(\"\", \"return this\" + get_real_path(dataPath) + \";\")).call(_this.model);\n                        if (typeof val === \"undefined\" || val === null) val = \"\";\n                        _val = val.toString();\n                        is_error = false;\n\n                        if (is_validate == \"required\" && _val.trim() == \"\") {\n                            is_error = true;\n                        }\n                        else if(is_validate == \"pattern\"){\n                            is_error = !(new RegExp(pattern)).test(_val);\n                        }\n                        else if(is_validate == \"email\"){\n                            is_error = !(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/).test(_val);\n                        }\n                        else if (!(/\\D.?/g).test(is_validate) && _val.trim().length < is_validate.number()) {\n                            is_error = true;\n                        }\n\n                        if (is_error) {\n                            errors.push({\n                                type    : is_validate,\n                                dataPath: dataPath,\n                                el      : this,\n                                jquery  : dom,\n                                value   : val\n                            });\n                        }\n                    }\n                });\n                this.view_target.find('[data-ax-repeat-path]').each(function () {\n\n                    var dom = $(this),\n                        dataPath = dom.attr(\"data-ax-repeat-path\"),\n                        repeat_idx = dom.attr(\"data-ax-repeat-i\");\n\n                    dom.find('[data-ax-validate]').each(function () {\n                        var dom = $(this), is_validate = dom.attr(\"data-ax-validate\"), item_path = dom.attr(\"data-ax-item-path\");\n                        var val = (Function(\"\", \"return this\" + get_real_path(dataPath) + \"[\" + repeat_idx + \"].\" + item_path + \";\")).call(_this.model);\n                        if (typeof val === \"undefined\") val = \"\";\n                        var _val = val.toString();\n\n                        if (is_validate) {\n                            var is_error = false;\n                            if (is_validate == \"required\" && _val.trim() == \"\") {\n                                is_error = true;\n                            }\n                            else if(is_validate == \"pattern\"){\n                                is_error = !(new RegExp(pattern)).test(_val);\n                            }\n                            else if(is_validate == \"email\"){\n                                is_error = !(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/).test(_val);\n                            }\n                            else if (!(/\\D.?/g).test(is_validate) && _val.trim().length < is_validate.number()) {\n                                is_error = true;\n                            }\n\n                            if (is_error) {\n                                errors.push({\n                                    type    : is_validate,\n                                    dataPath: dataPath,\n                                    el      : this,\n                                    jquery  : dom,\n                                    value   : val\n                                });\n                            }\n                        }\n                    });\n                });\n\n                if (errors.length > 0) {\n                    return {\n                        error: errors\n                    }\n                }\n                else {\n                    return {};\n                }\n\n            };\n\n\n            // 클래스 생성자\n            this.main = (function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n\n        };\n    })());\n\n})();","// ax5.ui.autocomplete\n(function () {\n\n    const UI = ax5.ui;\n    const U = ax5.util;\n    let AUTOCOMPLETE;\n\n    UI.addClass({\n        className: \"autocomplete\"\n    }, (function () {\n        /**\n         * @class ax5autocomplete\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * var options = [];\n         * options.push({value: \"1\", text: \"string\"});\n         * options.push({value: \"2\", text: \"number\"});\n         * options.push({value: \"3\", text: \"substr\"});\n         * options.push({value: \"4\", text: \"substring\"});\n         * options.push({value: \"5\", text: \"search\"});\n         * options.push({value: \"6\", text: \"parseInt\"});\n         * options.push({value: \"7\", text: \"toFixed\"});\n         * options.push({value: \"8\", text: \"min\"});\n         * options.push({value: \"9\", text: \"max\"});\n         * options.push({value: \"10\", text: \"장기영\"});\n         * options.push({value: \"11\", text: \"장서우\"});\n         * options.push({value: \"12\", text: \"이영희\"});\n         * options.push({value: \"13\", text: \"황인서\"});\n         * options.push({value: \"14\", text: \"황세진\"});\n         * options.push({value: \"15\", text: \"이서연\"});\n         * options.push({value: \"16\", text: \"액시스제이\"});\n         * options.push({value: \"17\", text: \"ax5\"});\n         * options.push({value: \"18\", text: \"ax5grid\"});\n         * options.push({value: \"19\", text: \"ax5combobox\"});\n         * options.push({value: \"20\", text: \"ax5autocomplete\"});\n         * options.push({value: \"21\", text: \"ax5binder\"});\n         * options.push({value: \"22\", text: \"ax5select\"});\n         * options.push({value: \"23\", text: \"ax5mask\"});\n         * options.push({value: \"24\", text: \"ax5toast\"});\n         * options.push({value: \"25\", text: \"ax5dialog\"});\n         * options.push({value: \"26\", text: \"ax5modal\"});\n\n         * var myUI = new ax5.ui.autocomplete({\n         *      theme: \"danger\",\n         *      removeIcon: '<i class=\"fa fa-times\" aria-hidden=\"true\"></i>'\n         * });\n         * ```\n         */\n        return function () {\n            var self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                removeIcon: 'X',\n                lang: {\n                    noSelected: '',\n                    noOptions: 'no options',\n                    loading: 'Now Processing'\n                },\n                columnKeys: {\n                    optionValue: 'value',\n                    optionText: 'text',\n                    optionSelected: 'selected'\n                }\n            };\n\n            this.queue = [];\n            this.activeautocompleteOptionGroup = null;\n            this.activeautocompleteQueueIndex = -1;\n            this.openTimer = null;\n            this.closeTimer = null;\n            this.waitOptionsCallback = null;\n            this.keyUpTimer = null;\n\n            cfg = this.config;\n\n            var $window = jQuery(window);\n            var\n                ctrlKeys = {\n                    \"18\": \"KEY_ALT\",\n                    //\"8\": \"KEY_BACKSPACE\",\n                    \"17\": \"KEY_CONTROL\",\n                    \"46\": \"KEY_DELETE\",\n                    \"40\": \"KEY_DOWN\",\n                    \"35\": \"KEY_END\",\n                    \"187\": \"KEY_EQUAL\",\n                    //\"27\": \"KEY_ESC\",\n                    \"36\": \"KEY_HOME\",\n                    \"45\": \"KEY_INSERT\",\n                    \"37\": \"KEY_LEFT\",\n                    \"189\": \"KEY_MINUS\",\n                    \"34\": \"KEY_PAGEDOWN\",\n                    \"33\": \"KEY_PAGEUP\",\n                    // \"190\": \"KEY_PERIOD\",\n                    //\"13\": \"KEY_RETURN\",\n                    \"39\": \"KEY_RIGHT\",\n                    \"16\": \"KEY_SHIFT\",\n                    // \"32\": \"KEY_SPACE\",\n                    \"9\": \"KEY_TAB\",\n                    \"38\": \"KEY_UP\",\n                    \"91\": \"KEY_WINDOW\"\n                    //\"107\" : \"NUMPAD_ADD\",\n                    //\"194\" : \"NUMPAD_COMMA\",\n                    //\"110\" : \"NUMPAD_DECIMAL\",\n                    //\"111\" : \"NUMPAD_DIVIDE\",\n                    //\"12\" : \"NUMPAD_EQUAL\",\n                    //\"106\" : \"NUMPAD_MULTIPLY\",\n                    //\"109\" : \"NUMPAD_SUBTRACT\"\n                },\n                onStateChanged = function (item, that) {\n                    if (item && item.onStateChanged) {\n                        item.onStateChanged.call(that, that);\n                    }\n                    else if (this.onStateChanged) {\n                        this.onStateChanged.call(that, that);\n                    }\n\n                    if (that.state == \"changeValue\") {\n                        if (item && item.onChange) {\n                            item.onChange.call(that, that);\n                        }\n                        else if (this.onChange) {\n                            this.onChange.call(that, that);\n                        }\n                    }\n\n                    item = null;\n                    that = null;\n                    return true;\n                },\n                alignAutocompleteDisplay = function () {\n                    var i = this.queue.length, w;\n\n                    while (i--) {\n                        var item = this.queue[i];\n                        if (item.$display) {\n                            w = Math.max(item.$select.outerWidth(), U.number(item.minWidth));\n                            item.$display.css({\n                                \"min-width\": w\n                            });\n                            if (item.reset) {\n                                item.$display.find(\".addon-icon-reset\").css({\n                                    \"line-height\": this.queue[i].$display.height() + \"px\"\n                                });\n                            }\n\n                            // 높이조절 처리\n                            if (item.multiple) {\n                                var displayTableHeightAdjust = (function () {\n                                    return U.number(item.$display.css(\"border-top-width\")) + U.number(item.$display.css(\"border-bottom-width\"));\n                                }).call(this);\n                                item.$target.height('');\n                                item.$display.height('');\n\n                                var displayTableHeight = item.$displayTable.outerHeight();\n                                //debugger;\n                                if (Math.abs(displayTableHeight - item.$target.height()) >= displayTableHeightAdjust) {\n                                    item.$target.css({height: displayTableHeight + displayTableHeightAdjust + 4});\n                                    item.$display.css({height: displayTableHeight + displayTableHeightAdjust + 4});\n                                }\n                            }\n                        }\n                    }\n\n                    i = null;\n                    w = null;\n                    return this;\n                },\n                alignAutocompleteOptionGroup = function (append) {\n                    if (append && !this.activeautocompleteOptionGroup) return this;\n\n                    var item = this.queue[this.activeautocompleteQueueIndex],\n                        pos = {}, positionMargin = 0,\n                        dim = {}, pickerDim = {},\n                        pickerDirection;\n\n                    if (!item) return this;\n                    if (append) jQuery(document.body).append(this.activeautocompleteOptionGroup);\n\n                    pos = item.$target.offset();\n                    dim = {\n                        width: item.$target.outerWidth(),\n                        height: item.$target.outerHeight()\n                    };\n                    pickerDim = {\n                        winWidth: Math.max($window.width(), jQuery(document.body).width()),\n                        winHeight: Math.max($window.height(), jQuery(document.body).height()),\n                        width: this.activeautocompleteOptionGroup.outerWidth(),\n                        height: this.activeautocompleteOptionGroup.outerHeight()\n                    };\n\n                    // picker css(width, left, top) & direction 결정\n                    if (!item.direction || item.direction === \"\" || item.direction === \"auto\") {\n                        // set direction\n                        pickerDirection = \"top\";\n\n                        if (pos.top - pickerDim.height - positionMargin < 0) {\n                            pickerDirection = \"top\";\n                        } else if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                            pickerDirection = \"bottom\";\n                        }\n                    } else {\n                        pickerDirection = item.direction;\n                    }\n\n                    if (append) {\n                        this.activeautocompleteOptionGroup\n                            .addClass(\"direction-\" + pickerDirection);\n                    }\n                    this.activeautocompleteOptionGroup\n                        .css((function () {\n                            if (pickerDirection == \"top\") {\n                                if (pos.top + dim.height + pickerDim.height + positionMargin > pickerDim.winHeight) {\n\n                                    var newTop = pos.top + pickerDim.height;\n                                    if (newTop + pickerDim.height + positionMargin > pickerDim.winHeight) {\n                                        newTop = 0;\n                                    }\n                                    if (newTop < 0) {\n                                        newTop = 0;\n                                    }\n\n                                    return {\n                                        left: pos.left,\n                                        top: newTop,\n                                        width: dim.width\n                                    }\n                                }\n                                return {\n                                    left: pos.left,\n                                    top: pos.top + dim.height + 1,\n                                    width: dim.width\n                                }\n                            }\n                            else if (pickerDirection == \"bottom\") {\n                                return {\n                                    left: pos.left,\n                                    top: pos.top - pickerDim.height - 1,\n                                    width: dim.width\n                                }\n                            }\n                        }).call(this));\n                },\n                onBodyClick = function (e, target) {\n                    if (!this.activeautocompleteOptionGroup) return this;\n\n                    var\n                        item = this.queue[this.activeautocompleteQueueIndex],\n                        clickEl = \"display\"\n                        ;\n\n                    target = U.findParentNode(e.target, function (target) {\n                        if (target.getAttribute(\"data-option-value\")) {\n                            clickEl = \"optionItem\";\n                            return true;\n                        }\n                        else if (item.$target.get(0) == target) {\n                            clickEl = \"display\";\n                            return true;\n                        }\n                    });\n\n                    if (!target) {\n                        this.close();\n                        return this;\n                    }\n                    else if (clickEl === \"optionItem\") {\n                        setSelected.call(this, item.id, {\n                            optionIndex: {\n                                index: target.getAttribute(\"data-option-index\")\n                            }\n                        }, undefined, \"optionItemClick\");\n                        alignAutocompleteDisplay.call(this);\n                        alignAutocompleteOptionGroup.call(this);\n                        if (!item.multiple) {\n                            this.close();\n                        }\n                    }\n                    else {\n\n                    }\n\n                    return this;\n                },\n\n                getLabel = function (queIdx) {\n                    var item = this.queue[queIdx];\n\n                    // 템플릿에 전달 해야할 데이터 선언\n                    var data = {};\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5autocomplete-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n                    data.lang = item.lang;\n                    data.options = item.options;\n                    data.selected = item.selected;\n                    data.hasSelected = (data.selected && data.selected.length > 0);\n                    data.removeIcon = item.removeIcon;\n\n                    return AUTOCOMPLETE.tmpl.get.call(this, \"label\", data, item.columnKeys);\n                },\n                syncLabel = function (queIdx) {\n                    var item = this.queue[queIdx];\n\n                    if (!item.multiple && item.selected && item.selected.length > 0) {\n                        item.selected = [].concat(item.selected[item.selected.length - 1]);\n                    }\n\n                    item.selected.forEach(function (n, nindex) {\n                        n[\"@index\"] = nindex;\n                    });\n\n                    item.$select.html(AUTOCOMPLETE.tmpl.get.call(this, \"formSelectOptions\", {\n                        selected: item.selected\n                    }, item.columnKeys));\n                },\n                printLabel = function (queIdx) {\n                    var item = this.queue[queIdx];\n\n                    item.$displayLabel.find('[data-ax5autocomplete-selected-label]').remove();\n                    item.$displayLabelInput.before(getLabel.call(this, queIdx));\n                },\n                focusLabel = function (queIdx) {\n                    if (this.queue[queIdx].disabled) return this;\n\n                    this.queue[queIdx].$displayLabel.trigger(\"focus\");\n                    this.queue[queIdx].$displayLabelInput.focus();\n                },\n                clearLabel = function (queIdx) {\n                    this.queue[queIdx].$displayLabelInput.val('');\n                },\n                blurLabel = function (queIdx) {\n                    this.queue[queIdx].$displayLabel.trigger(\"blur\");\n                },\n                onSearch = function (queIdx, searchWord) {\n                    if (this.activeautocompleteQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                    var regExp = /[\\{\\}\\[\\]\\/?.,;:|\\)*~`!^\\-_+<>@\\#$%&\\\\\\=\\(\\'\\\"]/gi;\n                    searchWord = searchWord.replace(regExp, \"\");\n\n                    this.queue[queIdx].waitOptions = true;\n                    this.queue[queIdx].onSearch.call({\n                        self: this,\n                        item: this.queue[queIdx],\n                        searchWord: searchWord\n                    }, (function (O) {\n\n                        var data = {};\n                        var item = this.queue[this.activeautocompleteQueueIndex];\n                        if (!item) return false;\n\n                        /// 현재 selected 검증후 처리\n                        (function (item, O) {\n                            var optionsMap = {};\n                            O.options.forEach(function (_O, _OIndex) {\n                                _O[\"@index\"] = _OIndex;\n                                _O[\"@findex\"] = _OIndex;\n                                optionsMap[_O[item.columnKeys.optionValue]] = _O;\n                            });\n                            if (U.isArray(item.selected)) {\n                                item.selected.forEach(function (_O) {\n                                    if (optionsMap[_O[item.columnKeys.optionValue]]) {\n                                        O.options[optionsMap[_O[item.columnKeys.optionValue]][\"@index\"]][item.columnKeys.optionSelected] = true;\n                                    }\n                                });\n                            }\n                        })(item, O);\n\n                        item.options = O.options;\n\n                        alignAutocompleteDisplay.call(this);\n\n                        /// 템플릿에 전달할 오브젝트 선언\n                        data.id = item.id;\n                        data.theme = item.theme;\n                        data.size = \"ax5autocomplete-option-group-\" + item.size;\n                        data.multiple = item.multiple;\n                        data.lang = item.lang;\n                        data.options = item.options;\n                        this.activeautocompleteOptionGroup.find('[data-els=\"content\"]').html(AUTOCOMPLETE.tmpl.get.call(this, \"options\", data, item.columnKeys));\n\n                        focusWord.call(this, this.activeautocompleteQueueIndex, searchWord);\n                        alignAutocompleteOptionGroup.call(this);\n\n                        setTimeout((function () {\n                            alignAutocompleteOptionGroup.call(this);\n                        }).bind(this));\n\n\n                    }).bind(this));\n                },\n                focusWord = function (queIdx, searchWord) {\n                    if (this.activeautocompleteQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                    var collect_options = [], i = -1, l = this.queue[queIdx].options.length - 1, n;\n                    if (searchWord != \"\") {\n                        while (l - i++) {\n                            n = this.queue[queIdx].options[i];\n\n                            if (('' + n.text).toLowerCase() == searchWord.toLowerCase()) {\n                                collect_options = [{'@findex': n['@findex'], optionsSort: 0}];\n                                break;\n                            } else {\n                                var sort = ('' + n.text).toLowerCase().search(searchWord.toLowerCase());\n                                if (sort > -1) {\n                                    collect_options.push({'@findex': n['@findex'], optionsSort: sort});\n                                    if (collect_options.length > 2) break;\n                                }\n                                sort = null;\n                            }\n                        }\n                        collect_options.sort(function (a, b) {\n                            return a.optionsSort - b.optionsSort;\n                        });\n                    }\n\n                    if (collect_options && collect_options.length > 0) {\n                        focusMove.call(this, queIdx, undefined, collect_options[0]['@findex']);\n                    } else {\n                        focusClear.call(this, queIdx);\n                    }\n                },\n                focusClear = function (queIdx) {\n                    if (this.activeautocompleteOptionGroup) {\n                        this.activeautocompleteOptionGroup\n                            .find('[data-option-focus-index]')\n                            .removeClass(\"hover\")\n                            .removeAttr(\"data-option-selected\");\n                    }\n\n                    this.queue[queIdx].optionFocusIndex = -1;\n                },\n                focusMove = function (queIdx, direction, findex) {\n                    var _focusIndex,\n                        _prevFocusIndex,\n                        focusOptionEl,\n                        optionGroupScrollContainer;\n                    var item = this.queue[queIdx];\n\n                    if (this.activeautocompleteOptionGroup && item.options && item.options.length > 0) {\n\n                        if (typeof findex !== \"undefined\") {\n                            _focusIndex = findex\n                        }\n                        else {\n                            _prevFocusIndex = (item.optionFocusIndex == -1) ? item.optionSelectedIndex || -1 : item.optionFocusIndex;\n                            if (_prevFocusIndex == -1) {\n                                _focusIndex = 0;\n                                //_focusIndex = (direction > 0) ? 0 : item.optionItemLength - 1; // 맨 끝으로 보낼것인가 말 것인가.\n                            }\n                            else {\n                                _focusIndex = _prevFocusIndex + direction;\n                                if (_focusIndex < 0) _focusIndex = 0;\n                                else if (_focusIndex > item.optionItemLength - 1) _focusIndex = item.optionItemLength - 1;\n                            }\n                        }\n\n                        item.optionFocusIndex = _focusIndex;\n\n                        // 포커스 인덱스가 hide아이템을 만나면 hide 아이템이 안나올 때까지 루프를 순회 합니다.\n                        if (item.options[_focusIndex] && item.options[_focusIndex].hide) { // 옵션이 없는 값이 선택된 경우\n                            if (typeof direction === \"undefined\") {\n                                return this;\n                            }\n                            else {\n                                var isStrop = false;\n                                while (item.options[_focusIndex].hide) {\n                                    _focusIndex = _focusIndex + direction;\n                                    if (_focusIndex < 0) {\n                                        _focusIndex = 0;\n                                        break;\n                                    }\n                                    else if (_focusIndex > item.optionItemLength - 1) {\n                                        _focusIndex = item.optionItemLength - 1;\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n\n                        if (typeof _focusIndex !== \"undefined\") {\n                            this.activeautocompleteOptionGroup\n                                .find('[data-option-focus-index]')\n                                .removeClass(\"hover\");\n\n                            focusOptionEl = this.activeautocompleteOptionGroup\n                                .find('[data-option-focus-index=\"' + _focusIndex + '\"]')\n                                .addClass(\"hover\");\n\n                            optionGroupScrollContainer = this.activeautocompleteOptionGroup.find('[data-els=\"content\"]');\n\n                            if (focusOptionEl.get(0)) {\n                                let focusOptionElHeight = focusOptionEl.outerHeight(),\n                                    optionGroupScrollContainerHeight = optionGroupScrollContainer.innerHeight(),\n                                    optionGroupScrollContainerScrollTop = optionGroupScrollContainer.scrollTop(),\n                                    focusOptionElTop = focusOptionEl.position().top + optionGroupScrollContainer.scrollTop();\n\n                                if (optionGroupScrollContainerHeight + optionGroupScrollContainerScrollTop < focusOptionElTop + focusOptionElHeight) {\n                                    optionGroupScrollContainer.scrollTop(focusOptionElTop + focusOptionElHeight - optionGroupScrollContainerHeight);\n                                }\n                                else if (optionGroupScrollContainerScrollTop > focusOptionElTop) {\n                                    optionGroupScrollContainer.scrollTop(focusOptionElTop);\n                                }\n                                // optionGroup scroll check\n\n                                if (typeof direction !== \"undefined\") {\n                                    item.$displayLabelInput.val(item.options[_focusIndex].text);\n                                }\n                            }\n                        }\n                    }\n                },\n                getQueIdx = function (boundID) {\n                    if (boundID instanceof jQuery) {\n                        boundID = boundID.data(\"data-ax5autocomplete-id\");\n                    } else if (!U.isString(boundID)) {\n                        boundID = jQuery(boundID).data(\"data-ax5autocomplete-id\");\n                    }\n                    if (!U.isString(boundID)) {\n                        console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"getQueIdx\"));\n                        return;\n                    }\n                    return U.search(this.queue, function () {\n                        return this.id == boundID;\n                    });\n                },\n                getSelected = function (_item, o, selected) {\n                    if (typeof selected === \"undefined\") {\n                        return (_item.multiple) ? !o : true;\n                    } else {\n                        return selected;\n                    }\n                },\n                clearSelected = function (queIdx) {\n                    this.queue[queIdx].options.forEach(function (n) {\n                        if (n.optgroup) {\n                            n.options.forEach(function (nn) {\n                                nn.selected = false;\n                            });\n                        }\n                        else {\n                            n.selected = false;\n                        }\n                    });\n\n                    this.queue[queIdx].selected = [];\n                    this.queue[queIdx].$select.html(AUTOCOMPLETE.tmpl.get.call(this, \"formSelectOptions\", {\n                        selected: this.queue[queIdx].selected\n                    }, this.queue[queIdx].columnKeys));\n                },\n                setSelected = (function () {\n                    var processor = {\n                        'selectedIndex': function (queIdx, value, selected, setValueType) {\n\n                        },\n                        'removeSelectedIndex': function (queIdx, value, selected, setValueType) {\n                            var item = this.queue[queIdx], addOptions = {};\n                            var newSelectedArray = [], optionIndex = 0;\n                            for (var i = 0; i < item.selected.length; i++) {\n                                if (item.selected[i]['@index'] != value.removeSelectedIndex.index) {\n                                    addOptions = {'@index': optionIndex, '@findex': optionIndex};\n                                    addOptions[item.columnKeys.optionValue] = item.selected[i][item.columnKeys.optionValue];\n                                    addOptions[item.columnKeys.optionText] = item.selected[i][item.columnKeys.optionText];\n                                    newSelectedArray.push(addOptions);\n                                    optionIndex++;\n                                }\n                            }\n                            item.selected = newSelectedArray;\n                        },\n                        'optionIndex': function (queIdx, value, selected, setValueType) {\n                            var item = this.queue[queIdx], addOptions = {};\n                            var optionIndex = item.selected.length;\n                            var pushOk = true;\n\n                            addOptions = {\n                                '@index': optionIndex, '@findex': optionIndex\n                            };\n                            addOptions[item.columnKeys.optionValue] = item.options[value.optionIndex.index][item.columnKeys.optionValue];\n                            addOptions[item.columnKeys.optionText] = item.options[value.optionIndex.index][item.columnKeys.optionText];\n\n                            for (var i = 0; i < item.selected.length; i++) {\n                                if (item.selected[i][item.columnKeys.optionValue] == addOptions[item.columnKeys.optionValue]) {\n                                    pushOk = false;\n                                }\n                            }\n                            if (pushOk) item.selected.push(addOptions);\n                        },\n                        'arr': function (queIdx, values, selected, setValueType) {\n                            values.forEach(function (value) {\n                                if (U.isString(value) || U.isNumber(value)) {\n                                    processor.text.call(self, queIdx, value, selected, \"justSetValue\");\n                                }\n                                else {\n                                    for (var key in processor) {\n                                        if (value[key]) {\n                                            processor[key].call(self, queIdx, value, selected, \"justSetValue\");\n                                            break;\n                                        }\n                                    }\n                                }\n                            });\n                        },\n                        'value': function (queIdx, value, selected, setValueType) {\n                            var item = this.queue[queIdx];\n                            var addOptions;\n                            var optionIndex = U.search(item.options, function () {\n                                return this[item.columnKeys.optionValue] == value.value[item.columnKeys.optionValue];\n                            });\n\n                            if (optionIndex > -1) {\n                                item.options[optionIndex][item.columnKeys.optionSelected]\n                                    = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n\n                                if (item.options[optionIndex][item.columnKeys.optionSelected]) {\n                                    var appendOk = true;\n                                    for (var i = 0; i < item.selected.length; i++) {\n                                        if (item.selected[i][cfg.columnKeys.optionValue] == item.options[optionIndex][cfg.columnKeys.optionValue]) {\n                                            appendOk = false;\n                                            break;\n                                        }\n                                    }\n                                    if (appendOk) {\n                                        addOptions = {};\n                                        addOptions[item.columnKeys.optionValue] = item.options[optionIndex][item.columnKeys.optionValue];\n                                        addOptions[item.columnKeys.optionText] = item.options[optionIndex][item.columnKeys.optionText];\n                                        item.selected.push(addOptions);\n                                    }\n                                }\n                                else {\n                                    var newSelectedArray = [];\n                                    for (var i = 0; i < item.selected.length; i++) {\n                                        if (item.selected[i][cfg.columnKeys.optionValue] == item.options[optionIndex][cfg.columnKeys.optionValue]) {\n\n                                        }\n                                        else {\n                                            addOptions = {};\n                                            addOptions[item.columnKeys.optionValue] = item.selected[i][item.columnKeys.optionValue];\n                                            addOptions[item.columnKeys.optionText] = item.selected[i][item.columnKeys.optionText];\n                                            newSelectedArray.push(addOptions);\n                                        }\n                                    }\n                                    item.selected = newSelectedArray;\n                                }\n\n                            }\n                            else {\n                                // 새로운 값 추가\n                                var appendOk = true;\n                                for (var i = 0; i < item.selected.length; i++) {\n                                    if (item.selected[i][cfg.columnKeys.optionValue] == value.value[cfg.columnKeys.optionValue]) {\n                                        appendOk = false;\n                                        break;\n                                    }\n                                }\n\n                                if (appendOk) {\n                                    addOptions = {};\n                                    addOptions[item.columnKeys.optionValue] = value.value[cfg.columnKeys.optionValue];\n                                    addOptions[item.columnKeys.optionText] = value.value[cfg.columnKeys.optionText];\n                                    item.selected.push(addOptions);\n                                }\n                            }\n                        },\n                        'text': function (queIdx, value, selected, setValueType) {\n                            var item = this.queue[queIdx];\n                            var addOptions;\n                            var optionIndex = U.search(item.options, function () {\n                                return this[item.columnKeys.optionText] == value;\n                            });\n\n                            if (optionIndex > -1) {\n                                item.options[optionIndex][item.columnKeys.optionSelected]\n                                    = getSelected(item, item.options[optionIndex][item.columnKeys.optionSelected], selected);\n\n                                if (item.options[optionIndex][item.columnKeys.optionSelected]) {\n                                    var appendOk = true;\n                                    for (var i = 0; i < item.selected.length; i++) {\n                                        if (item.selected[i][cfg.columnKeys.optionText] == item.options[optionIndex][cfg.columnKeys.optionText]) {\n                                            appendOk = false;\n                                            break;\n                                        }\n                                    }\n                                    if (appendOk) {\n                                        addOptions = {};\n                                        addOptions[item.columnKeys.optionValue] = item.options[optionIndex][item.columnKeys.optionValue];\n                                        addOptions[item.columnKeys.optionText] = item.options[optionIndex][item.columnKeys.optionText];\n                                        item.selected.push(addOptions);\n                                    }\n                                }\n                                else {\n                                    var newSelectedArray = [];\n                                    for (var i = 0; i < item.selected.length; i++) {\n                                        if (item.selected[i][cfg.columnKeys.optionText] == item.options[optionIndex][cfg.columnKeys.optionText]) {\n\n                                        }\n                                        else {\n                                            addOptions = {};\n                                            addOptions[item.columnKeys.optionValue] = item.selected[i][item.columnKeys.optionValue];\n                                            addOptions[item.columnKeys.optionText] = item.selected[i][item.columnKeys.optionText];\n                                            newSelectedArray.push(addOptions);\n                                        }\n                                    }\n                                    item.selected = newSelectedArray;\n                                }\n                            }\n                            else {\n                                // 새로운 값 추가\n                                var appendOk = true;\n                                for (var i = 0; i < item.selected.length; i++) {\n                                    if (item.selected[i][cfg.columnKeys.optionText] == value) {\n                                        appendOk = false;\n                                        break;\n                                    }\n                                }\n\n                                if (appendOk) {\n                                    addOptions = {};\n                                    addOptions[item.columnKeys.optionValue] = value;\n                                    addOptions[item.columnKeys.optionText] = value;\n                                    item.selected.push(addOptions);\n                                }\n                            }\n                        },\n                        'clear': function (queIdx) {\n                            clearSelected.call(this, queIdx);\n                            focusClear.call(this, queIdx);\n\n                            if (this.activeautocompleteOptionGroup) {\n                                this.activeautocompleteOptionGroup\n                                    .find('[data-option-index]')\n                                    .attr(\"data-option-Selected\", \"false\");\n                            }\n                            this.queue[queIdx].optionSelectedIndex = -1;\n                        }\n                    };\n                    return function (boundID, value, selected, _option) {\n\n                        var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                        if (queIdx === -1) {\n                            console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                            return;\n                        }\n\n                        if (typeof value == \"undefined\") {\n                            throw \"error not found value\";\n                        }\n                        else if (U.isArray(value)) {\n                            processor.clear.call(this, queIdx);\n                            processor.arr.call(this, queIdx, (this.queue[queIdx].multiple || value.length == 0) ? value : [value[value.length - 1]], selected);\n                        }\n                        else if (U.isString(value) || U.isNumber(value)) {\n                            if (typeof value !== \"undefined\" && value !== null && !this.queue[queIdx].multiple) {\n                                clearSelected.call(this, queIdx);\n                            }\n                            processor.text.call(this, queIdx, value, selected);\n                        }\n                        else {\n                            if (value === null) {\n                                processor.clear.call(this, queIdx);\n                            }\n                            else {\n                                if (!this.queue[queIdx].multiple) {\n                                    clearSelected.call(this, queIdx);\n                                }\n                                for (var key in processor) {\n                                    if (value[key]) {\n                                        processor[key].call(this, queIdx, value, selected);\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n\n                        syncLabel.call(this, queIdx);\n                        printLabel.call(this, queIdx);\n                        focusLabel.call(this, queIdx);\n                        alignAutocompleteOptionGroup.call(this);\n\n                        if (typeof value !== \"undefined\") {\n                            if (_option && !_option.noStateChange) {\n                                onStateChanged.call(this, this.queue[queIdx], {\n                                    self: this,\n                                    item: this.queue[queIdx],\n                                    state: \"changeValue\",\n                                    value: this.queue[queIdx].selected\n                                });\n                            }\n                        }\n\n                        boundID = null;\n                        return this;\n                    };\n                })();\n\n            /// private end\n\n            /**\n             * Preferences of autocomplete UI\n             * @method ax5autocomplete.setConfig\n             * @param {Object} config - 클래스 속성값\n             * @returns {ax5autocomplete}\n             * @example\n             * ```\n             * ```\n             */\n            this.init = function () {\n                this.onStateChanged = cfg.onStateChanged;\n                this.onChange = cfg.onChange;\n                jQuery(window).on(\"resize.ax5autocomplete-display-\" + this.instanceId, (function () {\n                    alignAutocompleteDisplay.call(this);\n                }).bind(this));\n            };\n\n            /**\n             * bind autocomplete\n             * @method ax5autocomplete.bind\n             * @param {Object} item\n             * @param {String} [item.id]\n             * @param {String} [item.theme]\n             * @param {Boolean} [item.multiple]\n             * @param {Element} item.target\n             * @returns {ax5autocomplete}\n             */\n            this.bind = function (item) {\n                var bindAutocompleteTarget = (function () {\n                    var debouncedFocusWord = U.debounce(function (queIdx) {\n                        if (this.activeautocompleteQueueIndex == -1) return this; // 옵션박스가 닫힌상태이면 진행안함.\n                        onSearch.call(self, queIdx, this.queue[queIdx].$displayLabelInput.val());\n                    }, 150);\n\n                    var blurLabel = function (queIdx) {\n                        clearLabel.call(this, queIdx);\n                    };\n\n                    var autocompleteEvent = {\n                        'click': function (queIdx, e) {\n                            var clickEl;\n                            var target = U.findParentNode(e.target, function (target) {\n                                if (target.getAttribute(\"data-ax5autocomplete-remove\")) {\n                                    clickEl = \"optionItemRemove\";\n                                    return true;\n                                }\n                                else if (target.getAttribute(\"data-selected-clear\")) {\n                                    clickEl = \"clear\";\n                                    return true;\n                                }\n                            });\n\n                            if (target) {\n                                if (clickEl === \"optionItemRemove\") {\n                                    var removeIndex = target.getAttribute(\"data-ax5autocomplete-remove-index\");\n                                    this.queue[queIdx].selected.splice(removeIndex, 1);\n                                    syncLabel.call(this, queIdx);\n                                    printLabel.call(this, queIdx);\n                                    focusLabel.call(this, queIdx);\n                                    alignAutocompleteDisplay.call(this);\n                                    alignAutocompleteOptionGroup.call(this);\n                                    U.stopEvent(e);\n                                    return this;\n                                } else if (clickEl === \"clear\") {\n                                    setSelected.call(this, queIdx, {clear: true});\n                                    alignAutocompleteDisplay.call(this);\n                                    alignAutocompleteOptionGroup.call(this);\n                                }\n                            }\n                            else {\n                                if (self.activeautocompleteQueueIndex == queIdx) {\n                                    if (this.queue[queIdx].optionFocusIndex == -1) { // 아이템에 포커스가 활성화 된 후, 마우스 이벤트 이면 무시\n                                        self.close();\n                                    }\n                                }\n                                else {\n                                    focusLabel.call(this, queIdx);\n                                }\n                            }\n                        },\n                        'keyUp': function (queIdx, e) {\n                            /// 약속된 키 이벤트가 발생하면 stopEvent를 통해 keyUp 이벤트가 발생되지 않도록 막아주는 센스\n                            if (e.which == ax5.info.eventKeys.ESC && this.activeautocompleteQueueIndex === -1) { // ESC키를 누르고 옵션그룹이 열려있지 않은 경우\n                                U.stopEvent(e);\n                                return this;\n                            }\n                            if (e.which == ax5.info.eventKeys.TAB) {\n                                // nothing\n\n                                this.close();\n                                return this;\n                            }\n                            if (this.activeautocompleteQueueIndex != queIdx) { // 닫힌 상태 인경우\n                                this.open(queIdx); // open and align\n                            }\n                            if (ctrlKeys[e.which]) {\n                                U.stopEvent(e);\n                            }\n                            else {\n                                // backspace 감지 하여 input 값이 없으면 스탑이벤트 처리 할 것\n                                if (e.which == ax5.info.eventKeys.BACKSPACE && this.queue[queIdx].$displayLabelInput.val() == \"\") {\n                                    // 마지막 아이템을 제거.\n                                    this.queue[queIdx].selected.pop();\n                                    syncLabel.call(this, queIdx);\n                                    printLabel.call(this, queIdx);\n                                    focusLabel.call(this, queIdx);\n                                    alignAutocompleteDisplay.call(this);\n                                    alignAutocompleteOptionGroup.call(this);\n                                    U.stopEvent(e);\n                                } else {\n                                    debouncedFocusWord.call(this, queIdx);\n                                }\n                            }\n                        },\n                        'keyDown': function (queIdx, e) {\n                            if (e.which == ax5.info.eventKeys.ESC) {\n                                clearLabel.call(this, queIdx);\n                                this.close();\n                                U.stopEvent(e);\n                            }\n                            else if (e.which == ax5.info.eventKeys.RETURN) {\n                                var inputValue = this.queue[queIdx].$displayLabelInput.val();\n                                if(item.optionFocusIndex > -1) {\n                                    setSelected.call(this, item.id, {\n                                        optionIndex: {\n                                            index: item.optionFocusIndex\n                                        }\n                                    }, undefined, \"optionItemClick\");\n                                }else if(inputValue != \"\"){\n                                    setSelected.call(this, queIdx, inputValue, true);\n                                }\n                                clearLabel.call(this, queIdx);\n                                alignAutocompleteDisplay.call(this);\n                                this.close();\n\n                                U.stopEvent(e);\n                            }\n                            else if (e.which == ax5.info.eventKeys.DOWN) {\n                                focusMove.call(this, queIdx, 1);\n                                U.stopEvent(e);\n                            }\n                            else if (e.which == ax5.info.eventKeys.UP) {\n                                focusMove.call(this, queIdx, -1);\n                                U.stopEvent(e);\n                            }\n                        },\n                        'focus': function (queIdx, e) {\n                            // console.log(e);\n\n                        },\n                        'blur': function (queIdx, e) {\n                            blurLabel.call(this, queIdx);\n                            U.stopEvent(e);\n                        },\n                        'selectChange': function (queIdx, e) {\n                            setSelected.call(this, queIdx, {value: this.queue[queIdx].$select.val()}, true);\n                        }\n                    };\n\n                    return function (queIdx) {\n                        var item = this.queue[queIdx];\n                        var data = {};\n\n                        if (!item.$display) {\n                            /// 템플릿에 전달할 오브젝트 선언\n                            data.instanceId = this.instanceId;\n                            data.id = item.id;\n                            data.name = item.name;\n                            data.theme = item.theme;\n                            data.tabIndex = item.tabIndex;\n                            data.multiple = item.multiple;\n                            data.reset = item.reset;\n\n                            data.label = getLabel.call(this, queIdx);\n                            data.formSize = (function () {\n                                return (item.size) ? \"input-\" + item.size : \"\";\n                            })();\n\n                            item.$display = jQuery(AUTOCOMPLETE.tmpl.get.call(this, \"autocompleteDisplay\", data, item.columnKeys));\n                            item.$displayTable = item.$display.find('[data-els=\"display-table\"]');\n                            item.$displayLabel = item.$display.find('[data-ax5autocomplete-display=\"label\"]');\n                            item.$displayLabelInput = item.$display.find('[data-ax5autocomplete-display=\"input\"]');\n\n                            if (item.$target.find(\"select\").get(0)) {\n                                item.$select = item.$target.find(\"select\");\n                                item.$select\n                                    .attr(\"tabindex\", \"-1\")\n                                    .attr(\"class\", \"form-control \" + data.formSize);\n\n                                if (data.name) {\n                                    item.$select.attr(\"name\", \"name\");\n                                }\n                                item.$select.attr(\"multiple\", \"multiple\");\n                            }\n                            else {\n                                item.$select = jQuery(AUTOCOMPLETE.tmpl.get.call(this, \"formSelect\", data, item.columnKeys));\n                                item.$target.append(item.$select);\n                            }\n\n                            item.$target.append(item.$display);\n                        }\n                        else {\n                            printLabel.call(this, queIdx);\n                        }\n\n                        alignAutocompleteDisplay.call(this);\n\n                        item.$display\n                            .off('click.ax5autocomplete')\n                            .on('click.ax5autocomplete', autocompleteEvent.click.bind(this, queIdx));\n\n                        // autocomplete 태그에 대한 이벤트 감시\n                        item.$displayLabelInput\n                            .off(\"focus.ax5autocomplete\")\n                            .on(\"focus.ax5autocomplete\", autocompleteEvent.focus.bind(this, queIdx))\n                            .off(\"blur.ax5autocomplete\")\n                            .on(\"blur.ax5autocomplete\", autocompleteEvent.blur.bind(this, queIdx))\n                            .off(\"keydown.ax5autocomplete\")\n                            .on(\"keydown.ax5autocomplete\", autocompleteEvent.keyDown.bind(this, queIdx))\n                            .off(\"keyup.ax5autocomplete\")\n                            .on(\"keyup.ax5autocomplete\", autocompleteEvent.keyUp.bind(this, queIdx));\n\n                        // select 태그에 대한 change 이벤트 감시\n\n                        item.$select\n                            .off('change.ax5autocomplete')\n                            .on('change.ax5autocomplete', autocompleteEvent.selectChange.bind(this, queIdx));\n\n                        data = null;\n                        item = null;\n                        queIdx = null;\n                        return this;\n                    };\n                })();\n\n                var\n                    autocompleteConfig = {},\n                    queIdx;\n\n                item = jQuery.extend(true, autocompleteConfig, cfg, item);\n                if (!item.target) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"401\", \"bind\"));\n                    return this;\n                }\n\n                item.$target = jQuery(item.target);\n\n                if (!item.id) item.id = item.$target.data(\"data-ax5autocomplete-id\");\n                if (!item.id) {\n                    item.id = 'ax5autocomplete-' + ax5.getGuid();\n                    item.$target.data(\"data-ax5autocomplete-id\", item.id);\n                }\n                item.name = item.$target.attr(\"data-ax5autocomplete\");\n\n                item.options = [];\n                item.selected = [];\n\n                // target attribute data\n                (function (data) {\n                    if (U.isObject(data) && !data.error) {\n                        item = jQuery.extend(true, item, data);\n                    }\n                })(U.parseJson(item.$target.attr(\"data-ax5autocomplete-config\"), true));\n\n                queIdx = U.search(this.queue, function () {\n                    return this.id == item.id;\n                });\n\n                if (queIdx === -1) {\n                    this.queue.push(item);\n                    bindAutocompleteTarget.call(this, this.queue.length - 1);\n                }\n                else {\n                    this.queue[queIdx] = jQuery.extend(true, {}, this.queue[queIdx], item);\n                    bindAutocompleteTarget.call(this, queIdx);\n                }\n\n                autocompleteConfig = null;\n                queIdx = null;\n                return this;\n            };\n\n            /**\n             * open the optionBox of autocomplete\n             * @method ax5autocomplete.open\n             * @param {(String|Number|Element)} boundID\n             * @param {Number} [tryCount]\n             * @returns {ax5autocomplete}\n             */\n            this.open = (function () {\n\n                return function (boundID, tryCount) {\n                    this.waitOptionsCallback = null;\n\n                    /**\n                     * open autocomplete from the outside\n                     */\n                    var queIdx = (U.isNumber(boundID)) ? boundID : getQueIdx.call(this, boundID);\n                    var item = this.queue[queIdx];\n                    var data = {}, focusTop, selectedOptionEl;\n\n                    if (item.$display.attr(\"disabled\")) return this;\n\n                    if (this.openTimer) clearTimeout(this.openTimer);\n                    if (this.activeautocompleteOptionGroup) {\n                        if (this.activeautocompleteQueueIndex == queIdx) {\n                            return this;\n                        }\n\n                        if (tryCount > 2) return this;\n                        this.close();\n                        this.openTimer = setTimeout((function () {\n                            this.open(queIdx, (tryCount || 0) + 1);\n                        }).bind(this), cfg.animateTime);\n\n                        return this;\n                    }\n\n                    item.optionFocusIndex = -1; // optionGroup이 열리면 포커스 인덱스 초기화 -1로\n                    if (item.selected && item.selected.length > 0) {\n                        item.optionSelectedIndex = item.selected[0][\"@findex\"];\n                    }\n\n                    /// 템플릿에 전달할 오브젝트 선언\n                    data.id = item.id;\n                    data.theme = item.theme;\n                    data.size = \"ax5autocomplete-option-group-\" + item.size;\n                    data.multiple = item.multiple;\n\n                    data.lang = item.lang;\n                    item.$display.attr(\"data-autocomplete-option-group-opened\", \"true\");\n\n                    data.waitOptions = true;\n                    data.options = [];\n\n                    this.activeautocompleteOptionGroup = jQuery(AUTOCOMPLETE.tmpl.get.call(this, \"optionGroup\", data, item.columnKeys));\n                    this.activeautocompleteOptionGroup.find('[data-els=\"content\"]').html(AUTOCOMPLETE.tmpl.get.call(this, \"options\", data, item.columnKeys));\n                    this.activeautocompleteQueueIndex = queIdx;\n\n                    alignAutocompleteOptionGroup.call(this, \"append\"); // alignAutocompleteOptionGroup 에서 body append\n                    jQuery(window).on(\"resize.ax5autocomplete-\" + this.instanceId, (function () {\n                        alignAutocompleteOptionGroup.call(this);\n                    }).bind(this));\n\n\n                    if (item.selected && item.selected.length > 0) {\n                        selectedOptionEl = this.activeautocompleteOptionGroup.find('[data-option-index=\"' + item.selected[0][\"@index\"] + '\"]');\n                        if (selectedOptionEl.get(0)) {\n                            focusTop = selectedOptionEl.position().top - this.activeautocompleteOptionGroup.height() / 3;\n                            this.activeautocompleteOptionGroup.find('[data-els=\"content\"]')\n                                .stop().animate({scrollTop: focusTop}, item.animateTime, 'swing', function () {\n                            });\n                        }\n                    }\n\n                    jQuery(window).on(\"click.ax5autocomplete-\" + this.instanceId, (function (e) {\n                        e = e || window.event;\n                        onBodyClick.call(this, e);\n                        U.stopEvent(e);\n                    }).bind(this));\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"open\",\n                        item: item\n                    });\n\n                    data = null;\n                    focusTop = null;\n                    selectedOptionEl = null;\n                    return this;\n                }\n            })();\n\n            /**\n             * @method ax5autocomplete.setValue\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @param {(String|Array)} _value\n             * @return {ax5autocomplete}\n             * @example\n             * ```js\n             * myAutocomplete.setValue($('[data-ax5autocomplete=\"autocomplete1\"]'), {value:\"test\", text:\"test\"});\n             * myAutocomplete.setValue($('[data-ax5autocomplete=\"autocomplete1\"]'), [{value:\"test1\", text:\"test1\"}, {value:\"test2\", text:\"test2\"}]);\n             * myAutocomplete.setValue($('[data-ax5autocomplete=\"autocomplete1\"]'), null);\n             * ```\n             */\n            this.setValue = function (_boundID, _value) {\n                var queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                    return;\n                }\n\n                clearSelected.call(this, queIdx);\n\n                if (U.isArray(_value)) {\n                    var _values = U.map(_value, function () {\n                        return {value: this};\n                    });\n                    setSelected.call(this, queIdx, _values, true, {noStateChange: true});\n                }\n                else if (U.isObject(_value)) {\n                    setSelected.call(this, queIdx, {value: _value}, true, {noStateChange: true});\n                } else {\n                    printLabel.call(this, queIdx);\n                }\n\n                blurLabel.call(this, queIdx);\n                alignAutocompleteDisplay.call(this);\n\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.setText\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @param {(String|Array)} _text\n             * @returns {ax5autocomplete}\n             * @example\n             * ```js\n             * myAutocomplete.setText($('[data-ax5autocomplete=\"autocomplete1\"]'), \"string\");\n             * myAutocomplete.setText($('[data-ax5autocomplete=\"autocomplete1\"]'), [\"substring\", \"search\"]);\n             * ```\n             */\n            this.setText = function (_boundID, _text) {\n                var queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                    return;\n                }\n                this.queue[queIdx].selected = [];\n                clearSelected.call(this, queIdx);\n                setSelected.call(this, queIdx, _text, true, {noStateChange: true});\n                blurLabel.call(this, queIdx);\n                alignAutocompleteDisplay.call(this);\n\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.getSelectedOption\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {Array}\n             */\n            this.getSelectedOption = function (_boundID) {\n                var queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                    return;\n                }\n                return U.deepCopy(this.queue[queIdx].selected);\n            };\n\n            /**\n             * @method ax5autocomplete.close\n             * @returns {ax5autocomplete}\n             */\n            this.close = function (item) {\n                if (this.closeTimer) clearTimeout(this.closeTimer);\n                if (!this.activeautocompleteOptionGroup) return this;\n\n                item = this.queue[this.activeautocompleteQueueIndex];\n                item.optionFocusIndex = -1;\n                item.$display.removeAttr(\"data-autocomplete-option-group-opened\").trigger(\"focus\");\n\n                this.activeautocompleteOptionGroup.addClass(\"destroy\");\n\n                jQuery(window)\n                    .off(\"resize.ax5autocomplete-\" + this.instanceId)\n                    .off(\"click.ax5autocomplete-\" + this.instanceId)\n                    .off(\"keyup.ax5autocomplete-\" + this.instanceId);\n\n                this.closeTimer = setTimeout((function () {\n                    if (this.activeautocompleteOptionGroup) this.activeautocompleteOptionGroup.remove();\n                    this.activeautocompleteOptionGroup = null;\n                    this.activeautocompleteQueueIndex = -1;\n\n                    onStateChanged.call(this, item, {\n                        self: this,\n                        state: \"close\"\n                    });\n\n                }).bind(this), cfg.animateTime);\n                this.waitOptionsCallback = null;\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.blur\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5autocomplete}\n             */\n            this.blur = function (_boundID) {\n                var queIdx = (U.isNumber(_boundID)) ? _boundID : getQueIdx.call(this, _boundID);\n                if (queIdx === -1) {\n                    console.log(ax5.info.getError(\"ax5autocomplete\", \"402\", \"val\"));\n                    return;\n                }\n\n                blurLabel.call(this, queIdx);\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.enable\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5autocomplete}\n             */\n            this.enable = function (_boundID) {\n                var queIdx = getQueIdx.call(this, _boundID);\n\n                if (typeof queIdx !== \"undefined\") {\n                    this.queue[queIdx].disable = false;\n                    if (this.queue[queIdx].$display[0]) {\n                        this.queue[queIdx].$display.removeAttr(\"disabled\");\n                        this.queue[queIdx].$displayLabelInput.removeAttr(\"disabled\");\n                    }\n                    if (this.queue[queIdx].$select[0]) {\n                        this.queue[queIdx].$select.removeAttr(\"disabled\");\n\n                    }\n\n                    onStateChanged.call(this, this.queue[queIdx], {\n                        self: this,\n                        state: \"enable\"\n                    });\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.disable\n             * @param {(jQueryObject|Element|Number)} _boundID\n             * @returns {ax5autocomplete}\n             */\n            this.disable = function (_boundID) {\n                var queIdx = getQueIdx.call(this, _boundID);\n\n                if (typeof queIdx !== \"undefined\") {\n                    this.queue[queIdx].disable = true;\n                    if (this.queue[queIdx].$display[0]) {\n                        this.queue[queIdx].$display.attr(\"disabled\", \"disabled\");\n                        this.queue[queIdx].$displayLabelInput.attr(\"disabled\", \"disabled\");\n                    }\n                    if (this.queue[queIdx].$select[0]) {\n                        this.queue[queIdx].$select.attr(\"disabled\", \"disabled\");\n                    }\n\n                    onStateChanged.call(this, this.queue[queIdx], {\n                        self: this,\n                        state: \"disable\"\n                    });\n                }\n\n                return this;\n            };\n\n            /**\n             * @method ax5autocomplete.align\n             */\n            this.align = function () {\n                alignAutocompleteDisplay.call(this);\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n                else {\n                    this.init();\n                }\n            }).apply(this, arguments);\n        };\n    })());\n\n    AUTOCOMPLETE = ax5.ui.autocomplete;\n})();\n\n// todo : editable 지원.\n// 아이템 박스 안에서 제거 할때 디스플레이 정렬\n","// ax5.ui.autocomplete.tmpl\n(function () {\n    var AUTOCOMPLETE = ax5.ui.autocomplete;\n    var U = ax5.util;\n\n    var optionGroup = function (columnKeys) {\n        return `\n<div class=\"ax5autocomplete-option-group {{theme}} {{size}}\" data-ax5autocomplete-option-group=\"{{id}}\">\n    <div class=\"ax-autocomplete-body\">\n        <div class=\"ax-autocomplete-option-group-content\" data-els=\"content\"></div>\n    </div>\n    <div class=\"ax-autocomplete-arrow\"></div> \n</div>\n`;\n    };\n\n    var autocompleteDisplay = function (columnKeys) {\n        return ` \n<input tabindex=\"-1\" type=\"text\" data-input-dummy=\"\" style=\"display: none;\" />\n<div class=\"form-control {{formSize}} ax5autocomplete-display {{theme}}\" \ndata-ax5autocomplete-display=\"{{id}}\" data-ax5autocomplete-instance=\"{{instanceId}}\">\n    <div class=\"ax5autocomplete-display-table\" data-els=\"display-table\">\n        <div data-ax5autocomplete-display=\"label-holder\"> \n        <a {{^tabIndex}}{{/tabIndex}}{{#tabIndex}}tabindex=\"{{tabIndex}}\" {{/tabIndex}}\n        data-ax5autocomplete-display=\"label\"\n        spellcheck=\"false\"><input type=\"text\"data-ax5autocomplete-display=\"input\" style=\"border:0px none;\" /></a>\n        </div>\n        <div data-ax5autocomplete-display=\"addon\"> \n            {{#multiple}}{{#reset}}\n            <span class=\"addon-icon-reset\" data-selected-clear=\"true\">{{{.}}}</span>\n            {{/reset}}{{/multiple}}\n        </div>\n    </div>\n</a>\n`;\n    };\n\n    var formSelect = function (columnKeys) {\n        return `\n<select tabindex=\"-1\" class=\"form-control {{formSize}}\" name=\"{{name}}\" multiple=\"multiple\"></select>\n`;\n    };\n\n    var formSelectOptions = function (columnKeys) {\n        return `\n{{#selected}}\n<option value=\"{{${columnKeys.optionValue}}}\" selected=\"true\">{{${columnKeys.optionText}}}</option>\n{{/selected}}\n`;\n    };\n\n\n    var options = function (columnKeys) {\n        return `\n{{#waitOptions}}\n    <div class=\"ax-autocomplete-option-item\">\n            <div class=\"ax-autocomplete-option-item-holder\">\n                <span class=\"ax-autocomplete-option-item-cell ax-autocomplete-option-item-label\">\n                    {{{lang.loading}}}\n                </span>\n            </div>\n        </div>\n{{/waitOptions}}\n{{^waitOptions}}\n    {{#options}}\n        {{^hide}}\n        <div class=\"ax-autocomplete-option-item\" data-option-focus-index=\"{{@findex}}\" data-option-index=\"{{@index}}\" data-option-value=\"{{${columnKeys.optionValue}}}\" {{#${columnKeys.optionSelected}}}data-option-selected=\"true\"{{/${columnKeys.optionSelected}}}>\n            <div class=\"ax-autocomplete-option-item-holder\">\n                <span class=\"ax-autocomplete-option-item-cell ax-autocomplete-option-item-label\">{{${columnKeys.optionText}}}</span>\n            </div>\n        </div>\n        {{/hide}}\n    {{/options}}\n    {{^options}}\n        <div class=\"ax-autocomplete-option-item\">\n            <div class=\"ax-autocomplete-option-item-holder\">\n                <span class=\"ax-autocomplete-option-item-cell ax-autocomplete-option-item-label\">\n                    {{{lang.noOptions}}}\n                </span>\n            </div>\n        </div>\n    {{/options}}\n{{/waitOptions}}\n`;\n    };\n\n    var label = function (columnKeys) {\n        return `{{#selected}}\n<div tabindex=\"-1\" data-ax5autocomplete-selected-label=\"{{@i}}\" data-ax5autocomplete-selected-text=\"{{text}}\">\n<div data-ax5autocomplete-remove=\"true\" data-ax5autocomplete-remove-index=\"{{@i}}\">{{{removeIcon}}}</div>\n<span>{{${columnKeys.optionText}}}</span>\n</div>{{/selected}}`;\n    };\n\n    AUTOCOMPLETE.tmpl = {\n        \"autocompleteDisplay\": autocompleteDisplay,\n        \"formSelect\": formSelect,\n        \"formSelectOptions\": formSelectOptions,\n        \"optionGroup\": optionGroup,\n        \"options\": options,\n        \"label\": label,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(AUTOCOMPLETE.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","/*\n * Copyright (c) 2017. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n(function () {\n\n\n    const UI = ax5.ui;\n    const U = ax5.util;\n\n    let DOCKER;\n\n    UI.addClass({\n            className: \"docker\"\n        }, (function () {\n\n            /**\n             * @class ax5docker\n             * @classdesc\n             * @author tom@axisj.com\n             * @example\n             * ```\n             * var ax5docker = new ax5.ui.ax5docker();\n             * ```\n             */\n            return function () {\n\n                let self = this,\n                    cfg;\n\n                this.instanceId = ax5.getGuid();\n\n                /**\n                 * @member {Object} ax5docker.config\n                 */\n                this.config = {\n                    theme: 'default',\n                    animateTime: 250,\n                    columnKeys: {},\n                    control: {},\n                    icons: {\n                        close: 'X',\n                        more: '...'\n                    },\n                    labelDirection: 'top',\n                    disableClosePanel: false,\n                    disableDragPanel: false,\n                    resizeDebounceTime: 100,\n                    panelDebounceTime: 300,\n                };\n\n                /**\n                 * @member {Object} ax5docker.xvar\n                 */\n                this.xvar = {};\n                /**\n                 * @member {Object} ax5docker.menu\n                 */\n                this.menu = null;\n\n                this.onResize = null;\n\n                // 패널 정보\n                /**\n                 * @member {Array} ax5docker.panels\n                 */\n                this.panels = [];\n                /**\n                 * @member {Number} ax5docker.panelId\n                 */\n                this.panelId = 0;\n\n                // 패널의 컨텐츠 모듈\n                /**\n                 * @member {Object} ax5docker.modules\n                 */\n                this.modules = {};\n\n                cfg = this.config;\n\n                /**\n                 * @private {Object} ax5docker.debouncer\n                 */\n                const debouncer = {\n                    resizeDebounceFn: ax5.util.debounce(function (fn) {\n                        fn();\n                    }, cfg.resizeDebounceTime),\n                    panelDebounceFn: ax5.util.debounce(function (fn) {\n                        fn();\n                    }, cfg.panelDebounceTime)\n                };\n\n                /**\n                 * @private {Function} fireEvent\n                 * @param event\n                 * @returns {ax5docker}\n                 */\n                const fireEvent = (event) => {\n                    const eventProcessor = {\n                        \"resize\"(e){\n                            if (this.onResize) {\n\n\n                                debouncer.resizeDebounceFn((function () {\n                                    let that = {\n                                        self: this,\n                                        resizer: e.target,\n                                        resizedDom: [e.target.prev(), e.target.next()]\n                                    };\n                                    this.onResize.call(that, that);\n                                }).bind(this));\n                            }\n                        }\n                    };\n\n                    if (event.eventName in eventProcessor) {\n                        eventProcessor[event.eventName].call(this, event);\n                    }\n\n                    return this;\n                };\n\n                const getPanelId = () => {\n                    return this.panelId++;\n                };\n\n                /**\n                 * defaultModule은 패널의 모듈이 정의되지 않은 경우를 위해 준비된 오브젝트\n                 */\n                const defaultModule = {\n                    init(container, state){\n                        container[\"$element\"].html(state.name);\n                    },\n                    active(container, state){\n\n                    },\n                    deactive(container, state){\n\n                    },\n                    destroy(container, state){\n\n                    }\n                };\n\n                /**\n                 * 부모패널과 패널인덱스 값으로 패널 패스를 구합니다.\n                 * @param parent\n                 * @param pIndex\n                 * @returns {string}\n                 */\n                const getPanelPath = (parent, pIndex) => {\n                    let paths = [];\n                    if (parent && typeof parent.panelPath !== \"undefined\") {\n                        paths.push(parent.panelPath);\n                    }\n\n                    paths.push('panels[' + (pIndex || 0) + ']');\n                    return paths.join(\".\");\n                };\n\n                /**\n                 * 패널패스를 이용하여 패널을 가져옵니다\n                 * @param _panelPath\n                 * @returns {*}\n                 */\n                const getPanel = (_panelPath) => {\n                    let path = [],\n                        _path = (U.isArray(_panelPath)) ? [].concat(_panelPath) : [].concat(_panelPath.split(/[\\.\\[\\]]/g));\n\n                    _path.forEach(function (n) {\n                        if (n !== \"\") path.push(\"[\\\"\" + n.replace(/['\\\"]/g, \"\") + \"\\\"]\");\n                    });\n\n                    try {\n                        return (Function(\"\", \"return this\" + path.join('') + \";\")).call(this);\n                    } catch (e) {\n                        return;\n                    }\n                };\n\n                /**\n                 * 패널을 이용하여 패널의 부모 패널을 가져옵니다\n                 * @param _panel\n                 */\n                const getPanelParent = (_panel) => {\n                    try {\n                        let _path = _panel.panelPath.substr(0, _panel.panelPath.lastIndexOf(\".\"));\n                        return (Function(\"\", \"return this.\" + _path + \";\")).call(this);\n                    } catch (e) {\n                        return;\n                    }\n                };\n\n                /**\n                 * 패널패스를 이용하여 패널오브젝트에 값을 부여합니다.\n                 * @param _panelPath\n                 * @param _value\n                 * @returns {*}\n                 */\n                const setPanel = (_panelPath, _value) => {\n                    let path = [],\n                        _path = (U.isArray(_panelPath)) ? [].concat(_panelPath) : [].concat(_panelPath.split(/[\\.\\[\\]]/g));\n\n                    _path.forEach(function (n) {\n                        if (n !== \"\") path.push(\"[\\\"\" + n.replace(/['\\\"]/g, \"\") + \"\\\"]\");\n                    });\n\n                    return (Function(\"val\", \"return this\" + path.join('') + \" = val;\")).call(this, _value);\n                };\n\n                /**\n                 * get mouse position\n                 * @param e\n                 * @returns {{clientX, clientY}}\n                 */\n                const getMousePosition = (e) => {\n                    let mouseObj, originalEvent = (e.originalEvent) ? e.originalEvent : e;\n                    mouseObj = ('changedTouches' in originalEvent && originalEvent.changedTouches) ? originalEvent.changedTouches[0] : originalEvent;\n                    // clientX, Y 쓰면 스크롤에서 문제 발생\n                    return {\n                        clientX: mouseObj.pageX,\n                        clientY: mouseObj.pageY\n                    }\n                };\n\n                /**\n                 * 패널의 모듈이 초기화, 활성화, 비활성, 제거 되는 일들을 제어하는 함수.\n                 * 모든 컨트롤은 실행되기전에 사용자가 정의한 control.before 함수의 결과에 따라 실행 여부를 결정합니다. 사용자가 control.before를 정의하지 않으면 무조건 실행합니다.\n                 * @param {Object} _panel\n                 * @param {String} _control - \"init\",\"active\",\"deactive\",\"destroy\"\n                 */\n                const controlPanel = (_panel, _control, _callback) => {\n                    let moduleState = jQuery.extend(_panel.moduleState, {\n                            name: _panel.name\n                        }),\n                        moduleContainer = {\n                            '$element': _panel.$item\n                        },\n                        module;\n\n                    let processor = {\n                        init: () => {\n                            _panel.builded = true;\n                            module = (_panel.moduleName in this.modules && 'init' in this.modules[_panel.moduleName]) ? this.modules[_panel.moduleName] : defaultModule;\n                            module.init(moduleContainer, moduleState);\n                        },\n                        active: () => {\n                            _panel.active = true;\n                            _panel.$label.addClass(\"active\");\n                            _panel.$item.addClass(\"active\");\n\n                            let $pane = _panel.$label.parent();\n                            if ($pane.get(0) && $pane.get(0).clientWidth !== $pane.get(0).scrollWidth) {\n                                $pane.animate({scrollLeft: _panel.$label.position().left}, 300);\n                            }\n\n                            module = (_panel.moduleName in this.modules && 'active' in this.modules[_panel.moduleName]) ? this.modules[_panel.moduleName] : defaultModule;\n                            module.active(moduleContainer, moduleState);\n                            $pane = null;\n                        },\n                        deactive: () => {\n                            _panel.active = false;\n                            _panel.$label.removeClass(\"active\");\n                            _panel.$item.removeClass(\"active\");\n                            module = (_panel.moduleName in this.modules && 'deactive' in this.modules[_panel.moduleName]) ? this.modules[_panel.moduleName] : defaultModule;\n                            module.deactive(moduleContainer, moduleState);\n                        },\n                        destroy: () => {\n                            module = (_panel.moduleName in this.modules && 'destroy' in this.modules[_panel.moduleName]) ? this.modules[_panel.moduleName] : defaultModule;\n                            module.destroy(moduleContainer, moduleState);\n\n                            // 패널 데이터 제거.\n                            setPanel(_panel.panelPath, null);\n                            // 현재 패널 정보를 검사하여 패널 정보를 재 구성합니다.\n                            arrangePanel();\n                        },\n                        remove: () => {\n                            module = (_panel.moduleName in this.modules && 'destroy' in this.modules[_panel.moduleName]) ? this.modules[_panel.moduleName] : defaultModule;\n                            module.destroy(moduleContainer, moduleState);\n\n                            // 패널 데이터 제거.\n                            setPanel(_panel.panelPath, null);\n                            // 현재 패널 정보를 검사하여 패널 정보를 재 구성합니다.\n                            arrangePanel();\n                        },\n                    };\n\n                    // 사용자정의 함수 control.before, control.after에 전달할 인자 = that\n                    let that = {\n                        panel: _panel,\n                        controlType: _control\n                    };\n\n                    // 비동기 처리 상황에 대응하기 위해 runProcessor를 별도 처리\n                    let runProcessor = () => {\n                        processor[_control]();\n                        module = null;\n\n                        if (U.isFunction(cfg.control.after)) {\n                            cfg.control.after.call(that, that);\n                        }\n                    };\n\n                    if (processor[_control]) {\n                        if (U.isFunction(cfg.control.before)) {\n                            cfg.control.before.call(that, that, function (result) {\n                                if (typeof result === \"undefined\") result = true;\n                                if (result) runProcessor();\n\n                                if (U.isFunction(_callback)) {\n                                    _callback(result);\n                                }\n\n                            });\n                        }\n                        else {\n                            runProcessor();\n                        }\n                    }\n                };\n\n                /**\n                 * 패널들의 패널 데이터 구조에 맞게 다시 그리기\n                 */\n                const repaintPanels = () => {\n                    const appendProcessor = {\n                        stack($parent, parent, myself, pIndex){\n\n                            let $dom, activeIndex = -1;\n                            myself.panelPath = getPanelPath(parent, pIndex);\n\n                            $dom = jQuery(DOCKER.tmpl.get.call(this, \"stack-panel\", {\n                                id: self.instanceId,\n                                name: myself.name,\n                                hasLabelColor: !U.isNothing(myself.color),\n                                color: myself.color,\n                                borderColor: myself.borderColor,\n                                panelPath: myself.panelPath,\n                                icons: cfg.icons,\n                                labelDirection: myself.labelDirection || cfg.labelDirection,\n                                disableClosePanel: cfg.disableClosePanel,\n                                disableDragPanel: cfg.disableDragPanel,\n                            }, {}));\n                            $parent.append($dom);\n\n                            if (U.isArray(myself.panels)) {\n                                myself.panels.forEach(function (P, pIndex) {\n                                    if (P.active) activeIndex = pIndex;\n                                });\n                                if (activeIndex === -1) activeIndex = 0;\n                                myself.panels[activeIndex].active = true;\n\n                                myself.panels.forEach(function (P, _pIndex) {\n                                    P.panelIndex = _pIndex;\n                                    appendProcessor[P.type]($dom, myself, P, _pIndex);\n                                });\n                            }\n\n                            $dom = null;\n                            activeIndex = null;\n                        },\n                        panel($parent, parent, myself, pIndex){\n                            let $dom;\n                            myself.panelPath = getPanelPath(parent, pIndex);\n                            myself.$label = jQuery(DOCKER.tmpl.get.call(this, \"panel-label\", {\n                                id: self.instanceId,\n                                pIndex: pIndex,\n                                name: myself.name,\n                                hasLabelColor: !U.isNothing(myself.color),\n                                color: myself.color,\n                                borderColor: myself.borderColor,\n                                panelPath: myself.panelPath,\n                                icons: cfg.icons,\n                                disableClosePanel: cfg.disableClosePanel,\n                                disableDragPanel: cfg.disableDragPanel,\n                            }, {}));\n\n                            if (!myself.$item) {\n                                myself.$item = jQuery('<div data-ax5docker-pane-item=\"' + pIndex + '\" data-ax5docker-id=\"' + self.instanceId + '\" data-ax5docker-pane-id=\"' + getPanelId() + '\" data-ax5docker-path=\"' + myself.panelPath + '\"></div>');\n                            } else {\n                                myself.$item.attr(\"data-ax5docker-path\", myself.panelPath);\n                                myself.$item.attr(\"data-ax5docker-pane-item\", pIndex);\n                            }\n\n                            if (parent && parent.type == \"stack\") {\n                                if (myself.active) {\n                                    if (!myself.builded) controlPanel(myself, \"init\");\n                                    controlPanel(myself, \"active\");\n                                }\n                                $parent.find('[data-ax5docker-pane-tabs=\"' + self.instanceId + '\"]').append(myself.$label);\n                                $parent.find('[data-ax5docker-pane-item-views=\"' + self.instanceId + '\"]').append(myself.$item);\n                            } else {\n                                $dom = jQuery(DOCKER.tmpl.get.call(this, \"stack-panel\", {\n                                    id: self.instanceId,\n                                    name: myself.name,\n                                    hasLabelColor: !U.isNothing(myself.color),\n                                    color: myself.color,\n                                    borderColor: myself.borderColor,\n                                    panelPath: myself.panelPath,\n                                    flexGrow: myself.flexGrow,\n                                    icons: cfg.icons,\n                                    labelDirection: myself.labelDirection || cfg.labelDirection,\n                                    disableClosePanel: cfg.disableClosePanel,\n                                    disableDragPanel: cfg.disableDragPanel,\n                                }, {}));\n\n                                if (!myself.builded) controlPanel(myself, \"init\");\n                                controlPanel(myself, \"active\");\n\n                                $dom.find('[data-ax5docker-pane-tabs=\"' + self.instanceId + '\"]').append(myself.$label);\n                                $dom.find('[data-ax5docker-pane-item-views=\"' + self.instanceId + '\"]').append(myself.$item);\n\n                                $parent.append($dom);\n                            }\n\n                            $dom = null;\n                        },\n                        resizeHandle($parent, parent, myself, pIndex){\n                            let $dom = jQuery('<div data-ax5docker-id=\"' + self.instanceId + '\" data-ax5docker-resize-handle=\"' + parent.type + \"/\" + parent.panelPath + \"/\" + pIndex + '\"></div>');\n                            $parent.append($dom);\n                            $dom = null;\n                        },\n                        row($parent, parent, myself, pIndex){\n                            let $dom;\n                            myself.panelPath = getPanelPath(parent, pIndex);\n                            if (parent && parent.type == \"stack\") {\n                                throw \"The 'stack' type child nodes are allowed only for the 'panel' type.\";\n                            }\n                            $dom = jQuery('<div data-ax5docker-pane-axis=\"row\" data-ax5docker-id=\"' + self.instanceId + '\" data-ax5docker-path=\"' + myself.panelPath + '\" style=\"flex-grow: ' + (myself.flexGrow || 1) + ';\"></div>');\n                            $parent.append($dom);\n\n                            if (U.isArray(myself.panels)) {\n                                myself.panels.forEach(function (P, _pIndex) {\n                                    if (_pIndex > 0) appendProcessor[\"resizeHandle\"]($dom, myself, P, _pIndex);\n                                    P.panelIndex = _pIndex;\n                                    appendProcessor[P.type]($dom, myself, P, _pIndex);\n                                });\n                            }\n\n                            $dom = null;\n                        },\n                        column($parent, parent, myself, pIndex){\n                            let $dom;\n                            myself.panelPath = getPanelPath(parent, pIndex);\n                            if (parent && parent.type == \"stack\") {\n                                throw \"The 'stack' type child nodes are allowed only for the 'panel' type.\";\n                            }\n                            $dom = jQuery('<div data-ax5docker-pane-axis=\"column\" data-ax5docker-id=\"' + self.instanceId + '\" data-ax5docker-path=\"' + myself.panelPath + '\" style=\"flex-grow: ' + (myself.flexGrow || 1) + ';\"></div>');\n                            $parent.append($dom);\n\n                            if (U.isArray(myself.panels)) {\n                                myself.panels.forEach(function (P, _pIndex) {\n                                    if (_pIndex > 0) appendProcessor[\"resizeHandle\"]($dom, myself, P, _pIndex);\n                                    P.panelIndex = _pIndex;\n                                    appendProcessor[P.type]($dom, myself, P, _pIndex);\n                                });\n                            }\n\n                            $dom = null;\n                        }\n                    };\n\n                    let $root = jQuery('<div data-ax5docker-panes=\"' + this.instanceId + '\"></div>');\n                    if (this.panels[0]) appendProcessor[this.panels[0].type]($root, null, this.panels[0], 0);\n                    this.$target.html($root);\n\n                    this.$target\n                        .off(\"click.ax5docker-pane\")\n                        .on(\"click.ax5docker-pane\", '[data-ax5docker-id=\"' + self.instanceId + '\"][data-ax5docker-pane-tab] .close-icon', function (e) {\n                            self.removePanel($(this).parents('[data-ax5docker-pane-tab]').attr(\"data-ax5docker-path\"));\n                            U.stopEvent(e);\n                        })\n                        .on(\"click.ax5docker-pane\", '[data-ax5docker-id=\"' + self.instanceId + '\"][data-ax5docker-pane-tab]', function (e) {\n                            // pane, panelIndex 인자 변경.\n                            let $clickedLabel = jQuery(this);\n                            let pane = getPanel($clickedLabel.parents('[data-ax5docker-pane]').attr(\"data-ax5docker-path\"));\n                            let panelIndex = $clickedLabel.attr(\"data-ax5docker-pane-tab\");\n\n                            if (!$clickedLabel.hasClass(\"active\")) {\n                                changeActiveStackPanel(pane, panelIndex);\n                            }\n\n                            $clickedLabel = null;\n                            pane = null;\n                            panelIndex = null;\n                            U.stopEvent(e);\n                        })\n                        .on(\"click.ax5docker-pane\", '[data-ax5docker-pane-tabs-more=\"' + this.instanceId + '\"]', function (e) {\n                            openStackPanelMore($(this).parents('[data-ax5docker-pane]'), e);\n                            U.stopEvent(e);\n                        });\n\n                    this.$target\n                        .off(\"mousedown.ax5docker-pane-resize\")\n                        .off(\"dragstart.ax5docker-pane-resize\")\n                        .on(\"dragstart.ax5docker-pane-resize\", '[data-ax5docker-id=\"' + self.instanceId + '\"][data-ax5docker-pane-tab]', function (e) {\n                            if (!cfg.disableDragPanel) {\n                                panelTabDragEvent.on(this);\n                            }\n                        })\n                        .on(\"mousedown.ax5docker-pane-resize\", '[data-ax5docker-id=\"' + self.instanceId + '\"][data-ax5docker-resize-handle]', function (e) {\n                            let datas = this.getAttribute(\"data-ax5docker-resize-handle\").split(/\\//g);\n\n                            // panelResizerEvent.init\n                            self.xvar.mousePosition = getMousePosition(e);\n                            self.xvar.resizerType = datas[0];\n                            self.xvar.resizerPath = datas[1];\n                            self.xvar.resizerIndex = datas[2];\n                            // 주변 패널들\n                            self.xvar.resizer$dom = $(this);\n                            self.xvar.resizerParent$dom = self.xvar.resizer$dom.parent();\n                            self.xvar.resizerPrevGrow = U.number(self.xvar.resizer$dom.prev().css(\"flex-grow\"));\n                            self.xvar.resizerNextGrow = U.number(self.xvar.resizer$dom.next().css(\"flex-grow\"));\n\n                            if (self.xvar.resizerType == \"row\") {\n                                //self.xvar.resizerCanvasWidth = self.xvar.resizerParent$dom.innerWidth();\n                                self.xvar.resizerCanvasWidth = self.xvar.resizer$dom.prev().innerWidth() + self.xvar.resizer$dom.next().innerWidth() + self.xvar.resizer$dom.width();\n                            } else {\n                                //self.xvar.resizerCanvasHeight = self.xvar.resizerParent$dom.innerHeight();\n                                self.xvar.resizerCanvasHeight = self.xvar.resizer$dom.prev().innerHeight() + self.xvar.resizer$dom.next().innerHeight() + self.xvar.resizer$dom.height();\n                            }\n\n                            panelResizerEvent.on(this);\n                            U.stopEvent(e);\n                        })\n                        .on(\"dragstart.ax5docker-pane-resize\", '[data-ax5docker-id=\"' + self.instanceId + '\"][data-ax5docker-resize-handle]', function (e) {\n                            U.stopEvent(e);\n                            return false;\n                        });\n\n                    // stackPane tabs 스크롤처리\n                    alignStackPane();\n                    $root = null;\n                };\n\n                /**\n                 * repaintPanels이 작동할 때. 패널탭에 dragStart 이벤트를 연결합니다.\n                 * 발생된 이벤트가 panelTabDragEvent.on를 작동.\n                 */\n                const panelTabDragEvent = {\n                    \"on\": (dragPanel) => {\n                        if (this.panels[0] && this.panels[0].panels && this.panels[0].panels.length) {\n\n                            this.xvar.dragger = {\n                                dragPanel: dragPanel,\n                                target: null,\n                                dragOverVertical: null,\n                                dragOverHorizontal: null,\n                            };\n\n                            this.$target\n                                .on(\"dragover.ax5docker-\" + this.instanceId, '[data-ax5docker-id=\"' + this.instanceId + '\"][data-ax5docker-path]', function (e) {\n                                    // todo : dragover 구현\n                                    // console.log(\"dargover\", getMousePosition(e));\n                                    // console.log(e.target);\n                                    panelTabDragEvent.dragover(this, e);\n                                    U.stopEvent(e);\n                                })\n                                .on(\"drop.ax5docker-\" + this.instanceId, function (e) {\n                                    panelTabDragEvent.off(\"drop\");\n                                    U.stopEvent(e);\n                                })\n                                .on(\"dragend.ax5docker-\" + this.instanceId, function (e) {\n                                    panelTabDragEvent.off();\n                                    U.stopEvent(e);\n                                });\n                        }\n                    },\n                    \"dragover\": (dragoverDom, e) => {\n\n                        let $dragoverDom = jQuery(dragoverDom),\n                            box = {},\n                            mouse = getMousePosition(e),\n                            dragOverVertical,\n                            dragOverHorizontal;\n\n                        if (this.xvar.dragger.target == null || this.xvar.dragger.target.get(0) != $dragoverDom.get(0)) {\n                            if (this.xvar.dragger.target) this.xvar.dragger.target.removeAttr(\"data-dropper\");\n\n                            this.xvar.dragger.target = $dragoverDom;\n                            this.xvar.dragger.dragOverVertical = null;\n                            this.xvar.dragger.dragOverHorizontal = null;\n                        }\n\n                        box = $dragoverDom.offset();\n                        box.width = $dragoverDom.width();\n                        box.height = $dragoverDom.height();\n\n                        if ($dragoverDom.attr(\"data-ax5docker-pane-tab\")) {\n                            let halfWidth = box.width / 2;\n                            if (box.left <= mouse.clientX && (box.left + halfWidth) >= mouse.clientX) {\n                                dragOverHorizontal = \"left\";\n                            }\n                            else if ((box.left + halfWidth) <= mouse.clientX && (box.left + halfWidth * 2) >= mouse.clientX) {\n                                dragOverHorizontal = \"right\";\n                            }\n                            if (this.xvar.dragger.dragOverHorizontal != dragOverHorizontal && typeof dragOverHorizontal != \"undefined\") {\n                                this.xvar.dragger.dragOverHorizontal = dragOverHorizontal;\n                                const draggerProcessor = {\n                                    \"left\"($target){\n                                        $target.attr(\"data-dropper\", \"left\");\n                                    },\n                                    \"right\"($target){\n                                        $target.attr(\"data-dropper\", \"right\");\n                                    },\n                                };\n                                if (this.xvar.dragger.dragOverHorizontal in draggerProcessor) {\n                                    draggerProcessor[this.xvar.dragger.dragOverHorizontal](this.xvar.dragger.target);\n                                }\n                            }\n                            halfWidth = null;\n                        }\n                        else if ($dragoverDom.attr(\"data-ax5docker-pane-tabs\")) {\n                            //this.xvar.dragger.dragOverVertical = \"center\";\n                            this.xvar.dragger.dragOverHorizontal = \"last-child\";\n                            this.xvar.dragger.target.attr(\"data-dropper\", \"true\");\n                        }\n                        else if ($dragoverDom.attr(\"data-ax5docker-pane-item\")) {\n                            // panel dragover 포지션 구하기\n                            let threeQuarterHeight = box.height / 3;\n                            let threeQuarterWidth = box.width / 3;\n\n                            if (box.top <= mouse.clientY && (box.top + threeQuarterHeight) >= mouse.clientY) {\n                                dragOverVertical = \"top\";\n                            }\n                            else if ((box.top + threeQuarterHeight) <= mouse.clientY && (box.top + threeQuarterHeight * 2) >= mouse.clientY) {\n                                dragOverVertical = \"middle\";\n                            }\n                            else if ((box.top + threeQuarterHeight * 2) <= mouse.clientY && (box.top + threeQuarterHeight * 3) >= mouse.clientY) {\n                                dragOverVertical = \"bottom\";\n                            }\n\n                            if (box.left <= mouse.clientX && (box.left + threeQuarterWidth) >= mouse.clientX) {\n                                dragOverHorizontal = \"left\";\n                            }\n                            else if ((box.left + threeQuarterWidth) <= mouse.clientX && (box.left + threeQuarterWidth * 2) >= mouse.clientX) {\n                                dragOverHorizontal = \"center\";\n                            }\n                            else if ((box.left + threeQuarterWidth * 2) <= mouse.clientX && (box.left + threeQuarterWidth * 3) >= mouse.clientX) {\n                                dragOverHorizontal = \"right\";\n                            }\n\n                            if (this.xvar.dragger.dragOverVertical != dragOverVertical || this.xvar.dragger.dragOverHorizontal != dragOverHorizontal) {\n                                this.xvar.dragger.dragOverVertical = dragOverVertical;\n                                this.xvar.dragger.dragOverHorizontal = dragOverHorizontal;\n\n                                var draggerProcessor = {\n                                    \"left-top\"($target){\n                                        $target.attr(\"data-dropper\", \"left\");\n                                    },\n                                    \"right-top\"($target){\n                                        $target.attr(\"data-dropper\", \"right\");\n                                    },\n                                    \"center-top\"($target){\n                                        $target.attr(\"data-dropper\", \"top\");\n                                    },\n                                    \"left-middle\"($target){\n                                        $target.attr(\"data-dropper\", \"left\");\n                                    },\n                                    \"right-middle\"($target){\n                                        $target.attr(\"data-dropper\", \"right\");\n                                    },\n                                    \"center-middle\"($target){\n                                        $target.attr(\"data-dropper\", \"center\");\n                                    },\n                                    \"left-bottom\"($target){\n                                        $target.attr(\"data-dropper\", \"left\");\n                                    },\n                                    \"right-bottom\"($target){\n                                        $target.attr(\"data-dropper\", \"right\");\n                                    },\n                                    \"center-bottom\"($target){\n                                        $target.attr(\"data-dropper\", \"bottom\");\n                                    },\n                                };\n                                if (this.xvar.dragger.dragOverHorizontal + \"-\" + this.xvar.dragger.dragOverVertical in draggerProcessor) {\n                                    draggerProcessor[this.xvar.dragger.dragOverHorizontal + \"-\" + this.xvar.dragger.dragOverVertical](this.xvar.dragger.target);\n                                }\n                            }\n\n                            threeQuarterHeight = null;\n                            threeQuarterWidth = null;\n                        }\n\n\n                    },\n                    \"off\": (isDrop) => {\n                        if (isDrop) {\n                            let dragPanel = getPanel(this.xvar.dragger.dragPanel.getAttribute(\"data-ax5docker-path\")),\n                                appendType = [];\n\n                            if (this.xvar.dragger.dragOverHorizontal) appendType.push(this.xvar.dragger.dragOverHorizontal);\n                            if (this.xvar.dragger.dragOverVertical) appendType.push(this.xvar.dragger.dragOverVertical);\n\n                            this.appendPanel(dragPanel, this.xvar.dragger.target.attr(\"data-ax5docker-path\"), appendType);\n\n                            dragPanel = null;\n                            appendType = null;\n                        }\n\n                        alignStackPane();\n\n                        this.$target\n                            .off(\"dragover.ax5docker-\" + this.instanceId)\n                            .off(\"drop.ax5docker-\" + this.instanceId)\n                            .off(\"dragend.ax5docker-\" + this.instanceId);\n\n                        this.xvar.dragger.target.removeAttr(\"data-dropper\");\n                    }\n                };\n\n                /**\n                 * repaintPanels이 작동할 때. 리사이저에 mousedown 이벤트를 연결합니다.\n                 * 발생된 이벤트가 panelResizerEvent.on 을 작동시켜 리사이저를 움직이게 합니다\n                 */\n                const panelResizerEvent = {\n                    \"on\": (_resizer) => {\n\n                        jQuery(document.body)\n                            .on(\"mousemove.ax5docker-\" + this.instanceId, function (e) {\n                                let mouseObj = getMousePosition(e),\n                                    da_grow;\n\n                                if (self.xvar.resizerLived) {\n                                    if (self.xvar.resizerType == \"row\") {\n                                        self.xvar.__da = mouseObj.clientX - self.xvar.mousePosition.clientX;\n                                        da_grow = U.number(self.xvar.__da * 2 / self.xvar.resizerCanvasWidth, {round: 6});\n\n                                        self.xvar.resizer$dom.prev().css({\"flex-grow\": self.xvar.resizerPrevGrow + da_grow});\n                                        self.xvar.resizer$dom.next().css({\"flex-grow\": self.xvar.resizerNextGrow - da_grow});\n                                    } else {\n                                        self.xvar.__da = mouseObj.clientY - self.xvar.mousePosition.clientY;\n                                        da_grow = U.number(self.xvar.__da * 2 / self.xvar.resizerCanvasHeight, {round: 6});\n\n                                        self.xvar.resizer$dom.prev().css({\"flex-grow\": self.xvar.resizerPrevGrow + da_grow});\n                                        self.xvar.resizer$dom.next().css({\"flex-grow\": self.xvar.resizerNextGrow - da_grow});\n                                    }\n\n                                    fireEvent({\n                                        eventName: \"resize\",\n                                        target: self.xvar.resizer$dom\n                                    });\n                                } else {\n                                    self.xvar.resizerLived = true;\n                                }\n\n                                mouseObj = null;\n                                da_grow = null;\n                            })\n                            .on(\"mouseup.ax5docker-\" + this.instanceId, function (e) {\n                                panelResizerEvent.off();\n                                U.stopEvent(e);\n                            })\n                            .on(\"mouseleave.ax5docker-\" + this.instanceId, function (e) {\n                                panelResizerEvent.off();\n                                U.stopEvent(e);\n                            });\n\n                        jQuery(document.body)\n                            .attr('unselectable', 'on')\n                            .css('user-select', 'none')\n                            .on('selectstart', false);\n                    },\n                    \"off\": () => {\n                        self.xvar.resizerLived = false;\n\n                        if (typeof this.xvar.__da === \"undefined\") {\n\n                        }\n                        else {\n                            let $prevPanel = self.xvar.resizer$dom.prev(),\n                                $nextPanel = self.xvar.resizer$dom.next(),\n                                prevPane = getPanel($prevPanel.attr(\"data-ax5docker-path\")),\n                                nextPane = getPanel($nextPanel.attr(\"data-ax5docker-path\"));\n\n                            prevPane.flexGrow = U.number($prevPanel.css(\"flex-grow\"));\n                            nextPane.flexGrow = U.number($nextPanel.css(\"flex-grow\"));\n\n                            $prevPanel = null;\n                            $nextPanel = null;\n                            prevPane = null;\n                            nextPane = null;\n                        }\n\n                        alignStackPane();\n\n                        jQuery(document.body)\n                            .off(\"mousemove.ax5docker-\" + this.instanceId)\n                            .off(\"mouseup.ax5docker-\" + this.instanceId)\n                            .off(\"mouseleave.ax5docker-\" + this.instanceId);\n\n                        jQuery(document.body)\n                            .removeAttr('unselectable')\n                            .css('user-select', 'auto')\n                            .off('selectstart');\n                    }\n                };\n\n                /**\n                 * 액티브 패널 변경(stack인 상황에서)\n                 * @param pane\n                 * @param panelIndex\n                 * @returns {boolean}\n                 */\n                const changeActiveStackPanel = (pane, panelIndex) => {\n                    let panel = pane.panels[panelIndex];\n\n                    for (let p = 0, pl = pane.panels.length; p < pl; p++) {\n                        if (pane.panels[p].active) {\n                            controlPanel(pane.panels[p], \"deactive\");\n                        }\n                    }\n\n                    if (!panel.builded) controlPanel(panel, \"init\");\n                    controlPanel(panel, \"active\");\n\n                    pane = null;\n                    panelIndex = null;\n                    panel = null;\n                    return this;\n                };\n\n                /**\n                 * stackTab의 더보기 아이콘이 클릭되면~~~\n                 * @param stackPane\n                 * @param e\n                 * @returns {ax5docker}\n                 */\n                const openStackPanelMore = (stackPane, e) => {\n                    let $stackPane = jQuery(stackPane),\n                        panePath = $stackPane.attr(\"data-ax5docker-path\"),\n                        pane = getPanel(panePath);\n\n                    if (this.menu) {\n                        let menuItems = U.map(pane.panels, function (index) {\n                            return {\n                                label: this.name,\n                                index: index,\n                                panePath: panePath\n                            }\n                        });\n\n                        this.menu.setConfig({\n                            items: menuItems,\n                            onClick: function () {\n                                //console.log(pane);\n                                changeActiveStackPanel(getPanel(this.panePath), this.index);\n                            }\n                        });\n\n                        this.menu.popup(e);\n                    } else {\n                        console.log(pane.panels);\n                        throw \"'ax5ui-menu' is required to implement the function.\";\n                    }\n\n                    $stackPane = null;\n                    panePath = null;\n                    pane = null;\n                    return this;\n                };\n\n                /**\n                 * stackPane이 리사이즈 되면 탭을 스크롤여부를 판단해야 합니다.\n                 */\n                const alignStackPane = () => {\n                    debouncer.panelDebounceFn((function () {\n                        this.$target.find('[data-ax5docker-pane-tabs=\"' + this.instanceId + '\"]').each(function () {\n                            let $this = jQuery(this).parent();\n                            if (this.scrollWidth > this.clientWidth) {\n                                $this.addClass(\"tabs-scrolled\");\n                            } else {\n                                $this.removeClass(\"tabs-scrolled\");\n                            }\n                            $this = null;\n                        });\n                    }).bind(this));\n                };\n\n                const panelsDeactive = (panels) => {\n                    if (U.isArray(panels)) {\n                        panels.forEach(function (p) {\n                            //p.active = false;\n                            //p.$item.removeClass(\"active\");\n                            controlPanel(p, \"deactive\");\n                        });\n                    } else {\n                        //panels.active = false;\n                        //panels.$item.removeClass(\"active\");\n                        controlPanel(panels, \"deactive\");\n                    }\n                };\n\n                /**\n                 * 패널중에 null이 된 요소를 찾아 panels를 정리 합니다.\n                 * @returns {*}\n                 */\n                const arrangePanel = () => {\n                    const processor = {\n                        stack(myself){\n                            if (!U.isArray(myself.panels)) return false;\n\n                            let newObj = {\n                                type: \"stack\",\n                                panels: []\n                            };\n\n                            myself.panels.forEach(function (P, _pIndex) {\n                                if (P) {\n                                    let _p = processor[P.type](P);\n                                    if (_p) newObj.panels.push(_p);\n                                    _p = null;\n                                }\n                            });\n\n                            if (newObj.panels.length == 0) {\n                                return null;\n                            } else if (newObj.panels.length < 2) {\n                                newObj = newObj.panels[0];\n                            }\n\n                            return newObj;\n                        },\n                        panel(myself){\n                            //console.log(myself);\n                            return myself;\n                        },\n                        row(myself){\n\n                            if (!U.isArray(myself.panels)) return false;\n\n                            let newObj = {\n                                type: \"row\",\n                                panels: []\n                            };\n\n                            myself.panels.forEach(function (P, _pIndex) {\n                                if (P) {\n                                    let _p = processor[P.type](P);\n                                    if (_p) newObj.panels.push(_p);\n                                    _p = null;\n                                }\n                            });\n\n                            if (newObj.panels.length == 0) {\n                                return null;\n                            } else if (newObj.panels.length < 2) {\n                                newObj = newObj.panels[0];\n                            }\n\n                            return newObj;\n                        },\n                        column(myself){\n                            if (!U.isArray(myself.panels)) return false;\n\n                            let newObj = {\n                                type: \"column\",\n                                panels: []\n                            };\n\n                            myself.panels.forEach(function (P, _pIndex) {\n                                if (P) {\n                                    let _p = processor[P.type](P);\n                                    if (_p) newObj.panels.push(_p);\n                                    _p = null;\n                                }\n                            });\n\n                            if (newObj.panels.length == 0) {\n                                return null;\n                            } else if (newObj.panels.length < 2) {\n                                newObj = newObj.panels[0];\n                            }\n\n                            return newObj;\n                        },\n                    };\n\n                    if (this.panels[0]) {\n                        this.panels[0] = processor[this.panels[0].type](this.panels[0]);\n                        if (this.panels[0] && this.panels[0].type === \"panel\") {\n                            this.panels[0] = {\n                                type: \"stack\",\n                                panels: [this.panels[0]]\n                            };\n                        }\n                    } else {\n                        this.panels = [];\n                    }\n\n                    repaintPanels();\n                };\n\n                /**\n                 * @method ax5docker.setConfig\n                 * @param {Object} config\n                 * @param {Element} config.target\n                 * @param {Object[]} config.panels\n                 * @param {String} config.panels[].type - panel, stack, row, column\n                 * @param {String} config.panels[].name\n                 * @param {String} [config.panels[].color]\n                 * @param {String} [config.panels[].borderColor]\n                 * @param {String} config.panels[].moduleName\n                 * @param {Object} config.panels[].moduleState\n                 * @param {Object[]} config.panels[].panels\n                 * @param {Object} [config.icons]\n                 * @param {String} [config.icons.close]\n                 * @param {String} [config.icons.more]\n                 * @param {Boolean} [config.disableClosePanel=false]\n                 * @param {Boolean} [config.disableDragPanel=false]\n                 * @param {Object} [config.control]\n                 * @param {Function} [config.control.before]\n                 * @param {Function} [config.control.after]\n                 * @param {Object} [config.menu]\n                 * @param {String} [config.menu.theme=\"default\"]\n                 * @param {String} [config.menu.position=\"absolute\"]\n                 * @param {Object} [config.menu.icons]\n                 * @param {String} [config.menu.icons.arrow]\n                 * @param {Number} [config.resizeDebounceTime=100]\n                 * @param {Number} [config.panelDebounceTime=300]\n                 * @example\n                 * ```js\n                 * var myDocker = new ax5.ui.docker();\n                 * myDocker.setConfig({\n                 *      target: $('[data-ax5docker=\"docker1\"]'),\n                 *      panels: [\n                 *          {\n                 *              type: \"panel\",\n                 *              name: \"panel name\",\n                 *              color: \"#ff3300\",\n                 *              borderColor: \"#000000\",\n                 *              moduleName: \"content\",\n                 *              moduleState:{\n                 *                  data: \"data1\"\n                 *              }\n                 *          }\n                 *      ]\n                 * });\n                 * ```\n                 */\n                this.init = function (_config) {\n                    cfg = jQuery.extend(true, {}, cfg, _config);\n                    if (!cfg.target) {\n                        console.log(ax5.info.getError(\"ax5docker\", \"401\", \"init\"));\n                        return this;\n                    }\n\n                    // 이벤트 정의 영역\n                    this.onResize = cfg.onResize;\n\n                    // memory target\n                    this.$target = jQuery(cfg.target);\n                    // set panels\n                    this.panels = cfg.panels || [];\n                    // event Functions\n                    this.onStateChanged = cfg.onStateChanged;\n                    this.onClick = cfg.onClick;\n                    this.onLoad = cfg.onLoad;\n                    this.onDataChanged = cfg.onDataChanged;\n\n                    if (ax5.ui.menu) {\n                        this.menu = new ax5.ui.menu({\n                            theme: 'default',\n                            position: \"absolute\",\n                            icons: {\n                                'arrow': '▸'\n                            }\n                        });\n                    }\n\n                    jQuery(window).bind(\"resize.ax5docker-\" + this.id, function () {\n                        // stackPane tabs 스크롤처리\n                        alignStackPane();\n                    });\n                };\n\n                /**\n                 * @method ax5docker.setPanels\n                 * @returns {ax5docker}\n                 */\n                this.setPanels = function (_panels) {\n                    // set panels\n                    this.panels = _panels || [];\n\n                    // 패널 다시 그리기\n                    repaintPanels();\n                    return this;\n                };\n\n                /**\n                 * @method ax5docker.addModule\n                 * @param modules\n                 * @returns {ax5docker}\n                 */\n                this.addModule = function (modules) {\n                    if (U.isObject(modules)) {\n                        jQuery.extend(true, this.modules, modules);\n                    }\n                    return this;\n                };\n\n                /**\n                 * repaint panels of docker\n                 * @method ax5docker.repaint\n                 * @returns {ax5docker}\n                 */\n                this.repaint = function () {\n                    // 패널 다시 그리기\n                    repaintPanels();\n                    return this;\n                };\n\n                /**\n                 * @method ax5docker.addPanel\n                 * @param {String} _addPath - Position path to add panel\n                 * @param _addType\n                 * @param _panel\n                 * @param _panelIndex\n                 * @returns {ax5docker}\n                 * @example\n                 * ```js\n                 * myDocker.addPanel('0.1', 'stack', {type:'panel', name:'addPanel', moduleName: 'content'});\n                 *\n                 * ```\n                 */\n                this.addPanel = function (_addPath, _addType, _panel, _panelIndex) {\n                    console.log(_addPath, _addType);\n                    let addPath = \"\";\n                    let pane;\n                    let parent;\n\n                    if (this.panels.length === 0 || !this.panels[0]) {\n                        return this.setPanels([{type: \"stack\", panels: [_panel]}]);\n                    } else {\n                        if (_addPath == \"undefined\") {\n                            addPath = \"0\";\n                        } else {\n                            addPath = _addPath\n                                .replace(/[a-zA-Z\\[\\]]+/g, \"\")\n                                .replace(/(\\d+)/g, function (a, b) {\n                                    return \"panels[\" + a + \"]\";\n                                });\n                        }\n                        pane = getPanel(addPath);\n                        parent = getPanelParent(pane);\n                    }\n\n                    if (parent && parent.type == \"stack\") {\n                        // 부모패널로 ~\n                        //console.log(addPath, _addPath);\n                        pane = parent;\n                        addPath = pane.panelPath;\n                    }\n\n\n                    console.log(pane);\n                    console.log(parent);\n                    console.log(addPath);\n\n                    let panelProcessor = {\n                        \"stack\"(_pane, _addType, _panel, _panelIndex){\n                            let copyPanel = jQuery.extend({}, _pane),\n                                addProcessor = {\n                                    \"stack\"(_pane, _panel){\n                                        if (_panel.active) {\n                                            panelsDeactive(_pane.panels);\n                                        }\n                                        _pane.panels.push(_panel);\n                                        arrangePanel();\n                                    },\n                                    \"stack-left\"(_pane, _panel){\n                                        if (_panel.active) {\n                                            panelsDeactive(_pane.panels);\n                                        }\n                                        _pane.panels.splice(_panelIndex, 0, _panel);\n                                        arrangePanel();\n                                    },\n                                    \"stack-right\"(_pane, _panel){\n                                        if (_panel.active) {\n                                            panelsDeactive(_pane.panels);\n                                        }\n                                        _pane.panels.splice(Number(_panelIndex) + 1, 0, _panel);\n                                        arrangePanel();\n                                    },\n                                    \"row-left\"(_pane, _panel){\n                                        let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                        let parentPane = getPanel(parentPath);\n                                        if (parentPane && parentPane.type == \"row\") {\n                                            this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                        } else {\n                                            _pane = setPanel(addPath, {\n                                                type: \"row\",\n                                                panels: []\n                                            });\n                                            _pane.panels.push(_panel);\n                                            _pane.panels.push(copyPanel);\n                                            arrangePanel();\n                                        }\n                                    },\n                                    \"row-right\"(_pane, _panel){\n                                        let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                        let parentPane = getPanel(parentPath);\n                                        if (parentPane && parentPane.type == \"row\") {\n                                            this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                        } else {\n                                            _pane = setPanel(addPath, {\n                                                type: \"row\",\n                                                panels: []\n                                            });\n                                            _pane.panels.push(copyPanel);\n                                            _pane.panels.push(_panel);\n                                            arrangePanel();\n                                        }\n                                    },\n                                    \"column-top\"(_pane, _panel){\n                                        let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                        let parentPane = getPanel(parentPath);\n                                        if (parentPane && parentPane.type == \"column\") {\n                                            this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                        } else {\n                                            _pane = setPanel(addPath, {\n                                                type: \"column\",\n                                                panels: []\n                                            });\n                                            _pane.panels.push(_panel);\n                                            _pane.panels.push(copyPanel);\n                                            arrangePanel();\n                                        }\n                                    },\n                                    \"column-bottom\"(_pane, _panel){\n                                        let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                        let parentPane = getPanel(parentPath);\n                                        if (parentPane && parentPane.type == \"column\") {\n                                            this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                        } else {\n                                            _pane = setPanel(addPath, {\n                                                type: \"column\",\n                                                panels: []\n                                            });\n                                            _pane.panels.push(copyPanel);\n                                            _pane.panels.push(_panel);\n                                            arrangePanel();\n                                        }\n                                    }\n                                };\n                            if (_addType in addProcessor) {\n                                addProcessor[_addType].call(this, _pane, _panel);\n                            }\n\n                            copyPanel = null;\n                            addProcessor = null;\n                        },\n                        \"row\"(_pane, _addType, _panel, _panelIndex){\n                            let copyPanel = jQuery.extend({}, _pane),\n                                addProcessor = {\n                                    \"stack\"(_pane, _panel){\n                                        // 처리 할 수 없는 상황 첫번째 자식을 찾아 재 요청\n                                        if (_pane.panels[0] && _pane.panels[0].panelPath) {\n                                            this.addPanel(_pane.panels[0].panelPath, _addType, _panel);\n                                        }\n                                    },\n                                    \"row-left\"(_pane, _panel, _panelIndex){\n                                        _pane.panels.splice(_panelIndex, 0, _panel);\n                                        arrangePanel();\n                                    },\n                                    \"row-right\"(_pane, _panel, _panelIndex){\n                                        _pane.panels.splice(_panelIndex + 1, 0, _panel);\n                                        arrangePanel();\n                                    },\n                                    \"column-top\"(_pane, _panel, _panelIndex){\n                                        let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                        let parentPane = getPanel(parentPath);\n                                        if (parentPane && parentPane.type == \"column\") {\n                                            this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                        } else {\n                                            _pane = setPanel(addPath, {\n                                                type: \"column\",\n                                                panels: []\n                                            });\n                                            _pane.panels.push(_panel);\n                                            _pane.panels.push(copyPanel);\n                                            arrangePanel();\n                                        }\n                                    },\n                                    \"column-bottom\"(_pane, _panel, _panelIndex){\n                                        let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                        let parentPane = getPanel(parentPath);\n                                        if (parentPane && parentPane.type == \"column\") {\n                                            this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                        } else {\n                                            _pane = setPanel(addPath, {\n                                                type: \"column\",\n                                                panels: []\n                                            });\n                                            _pane.panels.push(copyPanel);\n                                            _pane.panels.push(_panel);\n                                            arrangePanel();\n                                        }\n                                    }\n                                };\n                            if (_addType in addProcessor) {\n                                addProcessor[_addType].call(this, _pane, _panel, _panelIndex);\n                            }\n\n                            addProcessor = null;\n                            copyPanel = null;\n                        },\n                        \"column\"(_pane, _addType, _panel, _panelIndex){\n                            let copyPanel = jQuery.extend({}, _pane),\n                                addProcessor = {\n                                    \"stack\"(_pane, _panel){\n                                        if (_pane.panels[0] && _pane.panels[0].panelPath) {\n                                            this.addPanel(_pane.panels[0].panelPath, _addType, _panel);\n                                        }\n                                    },\n                                    \"row-left\"(_pane, _panel){\n                                        let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                        let parentPane = getPanel(parentPath);\n                                        if (parentPane && parentPane.type == \"row\") {\n                                            this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                        } else {\n                                            _pane = setPanel(addPath, {\n                                                type: \"row\",\n                                                panels: []\n                                            });\n                                            _pane.panels.push(_panel);\n                                            _pane.panels.push(copyPanel);\n                                            arrangePanel();\n                                        }\n                                    },\n                                    \"row-right\"(_pane, _panel){\n                                        let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                        let parentPane = getPanel(parentPath);\n                                        if (parentPane && parentPane.type == \"row\") {\n                                            this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                        } else {\n                                            _pane = setPanel(addPath, {\n                                                type: \"row\",\n                                                panels: []\n                                            });\n                                            _pane.panels.push(copyPanel);\n                                            _pane.panels.push(_panel);\n                                            arrangePanel();\n                                        }\n                                    },\n                                    \"column-top\"(_pane, _panel){\n                                        _pane.panels.splice(_panelIndex, 0, _panel);\n                                        arrangePanel();\n                                    },\n                                    \"column-bottom\"(_pane, _panel){\n                                        _pane.panels.splice(_panelIndex + 1, 0, _panel);\n                                        arrangePanel();\n                                    }\n                                };\n                            if (_addType in addProcessor) {\n                                addProcessor[_addType].call(this, _pane, _panel);\n                            }\n\n                            addProcessor = null;\n                            copyPanel = null;\n                        },\n                        \"panel\"(_pane, _addType, _panel){\n                            let copyPanel = jQuery.extend({}, _pane),\n                                addProcessor = {\n                                    \"stack\"(_pane, _panel){\n                                        // _pane stack으로 재구성\n                                        _pane = setPanel(addPath, {\n                                            type: \"stack\",\n                                            panels: []\n                                        });\n\n                                        if (_panel.active) {\n                                            panelsDeactive(copyPanel);\n                                        }\n\n                                        _pane.panels.push(copyPanel);\n                                        _pane.panels.push(_panel);\n                                        arrangePanel();\n                                    },\n                                    \"stack-left\"(_pane, _panel){\n                                        // _pane stack으로 재구성\n                                        _pane = setPanel(addPath, {\n                                            type: \"stack\",\n                                            panels: []\n                                        });\n\n                                        if (_panel.active) {\n                                            panelsDeactive(copyPanel);\n                                        }\n                                        _pane.panels.push(_panel);\n                                        _pane.panels.push(copyPanel);\n                                        arrangePanel();\n                                    },\n                                    \"stack-right\"(_pane, _panel){\n                                        // _pane stack으로 재구성\n                                        _pane = setPanel(addPath, {\n                                            type: \"stack\",\n                                            panels: []\n                                        });\n\n                                        if (_panel.active) {\n                                            panelsDeactive(copyPanel);\n                                        }\n                                        _pane.panels.push(copyPanel);\n                                        _pane.panels.push(_panel);\n                                        arrangePanel();\n                                    },\n                                    \"row-left\"(_pane, _panel){\n                                        let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                        let parentPane = getPanel(parentPath);\n                                        if (parentPane && parentPane.type == \"row\" || parentPane.type == \"column\") {\n                                            this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                        } else {\n                                            _pane = setPanel(addPath, {\n                                                type: \"row\",\n                                                panels: []\n                                            });\n                                            _pane.panels.push(_panel);\n                                            _pane.panels.push(copyPanel);\n                                            arrangePanel();\n                                        }\n                                    },\n                                    \"row-right\"(_pane, _panel){\n                                        let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                        let parentPane = getPanel(parentPath);\n                                        if (parentPane && parentPane.type == \"row\" || parentPane.type == \"column\") {\n                                            this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                        } else {\n                                            _pane = setPanel(addPath, {\n                                                type: \"row\",\n                                                panels: []\n                                            });\n                                            _pane.panels.push(copyPanel);\n                                            _pane.panels.push(_panel);\n                                            arrangePanel();\n                                        }\n                                    },\n                                    \"column-top\"(_pane, _panel){\n                                        let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                        let parentPane = getPanel(parentPath);\n                                        if (parentPane && parentPane.type == \"column\" || parentPane.type == \"row\") {\n                                            this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                        } else {\n                                            _pane = setPanel(addPath, {\n                                                type: \"column\",\n                                                panels: []\n                                            });\n                                            _pane.panels.push(_panel);\n                                            _pane.panels.push(copyPanel);\n                                            arrangePanel();\n                                        }\n                                    },\n                                    \"column-bottom\"(_pane, _panel){\n                                        let parentPath = addPath.substr(0, addPath.lastIndexOf(\".\"));\n                                        let parentPane = getPanel(parentPath);\n\n                                        if (parentPane && parentPane.type == \"column\" || parentPane.type == \"row\") {\n                                            this.addPanel(parentPane.panelPath, _addType, _panel, _pane.panelIndex);\n                                        } else {\n                                            _pane = setPanel(addPath, {\n                                                type: \"column\",\n                                                panels: []\n                                            });\n                                            _pane.panels.push(copyPanel);\n                                            _pane.panels.push(_panel);\n                                            arrangePanel();\n                                        }\n                                    }\n                                };\n\n                            if (_addType in addProcessor) {\n                                addProcessor[_addType].call(this, _pane, _panel);\n                            }\n\n                            copyPanel = null;\n                            addProcessor = null;\n                        }\n                    };\n\n                    if ((pane) ? pane.type : \"stack\" in panelProcessor) {\n                        panelProcessor[(pane) ? pane.type : \"stack\"].call(this, pane, _addType, _panel, _panelIndex);\n                    }\n\n                    return this;\n                };\n\n                /**\n                 * 패널 삭제하기\n                 * @method ax5docker.removePanel\n                 * @param {String} panelPath\n                 * @param {Function} callback\n                 * @returns {ax5docker}\n                 * @example\n                 * ```js\n                 * function removePanel() {\n                 *      var p = myDocker.searchPanel(function (panel) {\n                 *          return (panel.key == \"A\");\n                 *      });\n                 *\n                 *      if (p) {\n                 *          myDocker.removePanel(p.panelPath, function () {\n                 *              removePanel();\n                 *          });\n                 *      }\n                 * }\n                 * removePanel();\n                 * ```\n                 */\n                this.removePanel = function (panelPath, callback) {\n                    let panel = getPanel(panelPath);\n\n                    controlPanel(panel, \"destroy\", callback);\n\n                    panel = null;\n                    return this;\n                };\n\n                /**\n                 * @method ax5docker.appendPanel\n                 * @param _panel\n                 * @param _appendPath\n                 * @param _appendType\n                 * @returns {ax5docker}\n                 */\n                this.appendPanel = function (_panel, _appendPath, _appendType) {\n                    console.log(_panel);\n                    let copiedPanel = $.extend({}, _panel, {panelPath: \"\"}),\n                        addType;\n\n                    let removePanelPath = _panel.panelPath;\n                    let appendPanelIndex = U.right(_appendPath, \".\").replace(/\\D/g, \"\");\n\n                    if (_appendType.length == 0) {\n                        return this;\n                    }\n\n                    if (_panel.panelPath === _appendPath) {\n                        let parentPath = _appendPath.substr(0, _appendPath.lastIndexOf(\".\"));\n                        let parentPane = getPanel(parentPath);\n                        if (parentPane.type != \"stack\") {\n                            return this;\n                        }\n                    }\n\n                    if (_appendType.length == 1) { // stack\n                        addType = (_appendType[0] == \"last-child\") ? \"stack\" : \"stack-\" + _appendType[0];\n                        copiedPanel.active = false;\n                        copiedPanel.$item.removeClass(\"active\");\n                        controlPanel(copiedPanel, \"deactive\");\n\n                    } else {\n                        switch (_appendType[0] + \"-\" + _appendType[1]) {\n                            case \"left-top\":\n                                addType = \"row-left\";\n                                break;\n                            case \"left-middle\":\n                                addType = \"row-left\";\n                                break;\n                            case \"left-bottom\":\n                                addType = \"row-left\";\n                                break;\n                            case \"center-top\":\n                                addType = \"column-top\";\n                                break;\n                            case \"center-middle\":\n                                addType = \"stack\";\n                                copiedPanel.active = false;\n                                copiedPanel.$item.removeClass(\"active\");\n                                appendPanelIndex = undefined;\n                                controlPanel(copiedPanel, \"deactive\");\n                                break;\n                            case \"center-bottom\":\n                                addType = \"column-bottom\";\n                                break;\n                            case \"right-top\":\n                                addType = \"row-right\";\n                                break;\n                            case \"right-middle\":\n                                addType = \"row-right\";\n                                break;\n                            case \"right-bottom\":\n                                addType = \"row-right\";\n                                break;\n                        }\n                    }\n\n                    if (_panel.panelPath === _appendPath) {\n                        // 부모레벨로 이동\n                        _appendPath = U.left(_appendPath, \".\");\n                    }\n                    // todo : deactive call\n\n                    setPanel(removePanelPath, null);\n                    \n                    console.log(_appendPath, addType, copiedPanel, appendPanelIndex);\n                    this.addPanel(_appendPath, addType, copiedPanel, appendPanelIndex);\n\n                    copiedPanel = null;\n                    return this;\n                };\n\n                /**\n                 * @method ax5docker.align\n                 * @returns {ax5docker}\n                 */\n                this.align = function () {\n                    alignStackPane();\n                    return this;\n                };\n\n                /**\n                 * @method ax5docker.searchPanel\n                 * @param _condition\n                 * @returns {*}\n                 * @example\n                 * ```js\n                 * var p = myDocker.searchPanel(function (panel) {\n                 *  return (panel.id == \"A\");\n                 * });\n                 * ```\n                 */\n                this.searchPanel = function (_condition) {\n                    if (U.isFunction(_condition)) {\n\n                        const findPanel = function (_panels) {\n                            let i = 0, l = _panels.length, findResult;\n                            for (; i < l; i++) {\n                                if(_panels[i]) {\n                                    if (_panels[i].type === \"panel\") {\n                                        if (_condition.call({\n                                                config: self.config,\n                                                panel: _panels[i]\n                                            }, _panels[i])) {\n                                            return _panels[i];\n                                        }\n                                    } else {\n                                        if (findResult = findPanel(_panels[i].panels)) {\n                                            return findResult;\n                                        }\n                                    }\n                                }\n                            }\n                        };\n\n                        return findPanel(this.panels);\n\n                    } else if (U.isString(_condition)) {\n\n                        return getPanel(_condition);\n\n                    }\n                };\n\n                /**\n                 * @method ax5docker.activePanel\n                 * @param {String} _panelPath\n                 * @param {Function} callback\n                 * @returns {ax5docker}\n                 * @example\n                 * ```js\n                 * myDocker.activePanel(\"0.1\");\n                 * myDocker.activePanel(\"0.0.1\");\n                 * ```\n                 */\n                this.activePanel = function (_panelPath, callback) {\n                    let activePanelPath = \"\";\n                    let pane;\n                    let parent;\n\n                    if (this.panels.length === 0 || !this.panels[0]) {\n                        // 액티브 대상 없음.\n                        return this;\n                    } else {\n                        if (typeof _panelPath == \"undefined\") {\n                            activePanelPath = \"0\";\n                        } else {\n                            activePanelPath = _panelPath\n                                .replace(/[a-zA-Z\\[\\]]+/g, \"\")\n                                .replace(/(\\d+)/g, function (a, b) {\n                                    return \"panels[\" + a + \"]\";\n                                });\n                        }\n                        pane = getPanel(activePanelPath);\n                        parent = getPanelParent(pane);\n                    }\n\n                    changeActiveStackPanel(parent, pane.panelIndex);\n                    return this;\n                };\n\n                // 클래스 생성자\n                this.main = (function () {\n                    UI.docker_instance = UI.docker_instance || [];\n                    UI.docker_instance.push(this);\n\n                    if (arguments && U.isObject(arguments[0])) {\n                        this.setConfig(arguments[0]);\n                    }\n                }).apply(this, arguments);\n\n            };\n        })()\n    );\n\n    DOCKER = ax5.ui.docker;\n})();","// ax5.ui.docker.tmpl\n(function () {\n\n    let DOCKER = ax5.ui.docker;\n\n    let stack_panel = function (columnKeys, data) {\n        if(data.labelDirection === \"bottom\"){\n            return `<div data-ax5docker-pane=\"{{id}}\" data-ax5docker-label-direction=\"{{labelDirection}}\" data-ax5docker-path=\"{{panelPath}}\" style=\"flex-grow: {{#flexGrow}}{{.}}{{/flexGrow}}{{^flexGrow}}1{{/flexGrow}};\">\n    <div data-ax5docker-pane-item-views=\"{{id}}\"></div>\n    <ul data-ax5docker-pane-tabs=\"{{id}}\" data-ax5docker-id=\"{{id}}\" data-ax5docker-path=\"{{panelPath}}\"></ul>\n    <div data-ax5docker-pane-tabs-more=\"{{id}}\">{{{icons.more}}}</div>\n</div>`;\n        }else{\n            return `<div data-ax5docker-pane=\"{{id}}\" data-ax5docker-label-direction=\"{{labelDirection}}\" data-ax5docker-path=\"{{panelPath}}\" style=\"flex-grow: {{#flexGrow}}{{.}}{{/flexGrow}}{{^flexGrow}}1{{/flexGrow}};\">\n    <ul data-ax5docker-pane-tabs=\"{{id}}\" data-ax5docker-id=\"{{id}}\" data-ax5docker-path=\"{{panelPath}}\"></ul>\n    <div data-ax5docker-pane-tabs-more=\"{{id}}\">{{{icons.more}}}</div>\n    <div data-ax5docker-pane-item-views=\"{{id}}\"></div>\n</div>`;\n        }\n    };\n\n    let panel_label = function () {\n        return `<li data-ax5docker-pane-tab=\"{{pIndex}}\" data-ax5docker-id=\"{{id}}\" data-ax5docker-path=\"{{panelPath}}\" class=\"{{#hasLabelColor}}hasLabelColor{{/hasLabelColor}}\">\n    <div class=\"label-icon\" style=\"{{#color}}background: {{color}};{{/color}}{{#borderColor}}border-color: {{borderColor}};{{/borderColor}}\"></div>\n    <div class=\"title\">{{{name}}}</div>\n    {{^disableClosePanel}}<div class=\"close-icon\">{{{icons.close}}}</div>{{/disableClosePanel}}\n</li><li class=\"pane-tab-margin\"></li>`;\n    };\n\n    DOCKER.tmpl = {\n        \"stack-panel\": stack_panel,\n        \"panel-label\": panel_label,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(DOCKER.tmpl[tmplName].call(this, columnKeys, data), data);\n        }\n    };\n\n})();","// ax5.ui.palette\n(function () {\n\n    const UI = ax5.ui;\n    const U = ax5.util;\n    let PALETTE;\n\n    UI.addClass({\n        className: \"palette\"\n    }, (function () {\n\n        /**\n         * @class ax5palette\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```js\n         * ```\n         */\n        return function () {\n            let self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.target = null;\n            this.config = {\n                clickEventName: \"click\",\n                theme: 'default',\n                animateTime: 100,\n                colors: {\n                    preview: {\n                        width: 24,\n                        height: 24,\n                        cellWidth: 30\n                    },\n                    label: {\n                       width: 80\n                    },\n                    slider: {\n                        trackHeight: 8,\n                        amount: 32,\n                        handleWidth: 18,\n                        handleHeight: 18,\n                    },\n                    list: [\n                        {label: \"red\", value: \"#ff0000\"},\n                        {label: \"orange\", value: \"#ff9802\"},\n                        {label: \"yellow\", value: \"#ffff00\"},\n                        {label: \"green\", value: \"#00ff36\"},\n                        {label: \"blue\", value: \"#0000ff\"},\n                        {label: \"purple\", value: \"#ba00ff\"},\n                        //{label: \"skyblue\", value: \"#84e4ff\"},\n                        //{label: \"pink\", value: \"#ff77c4\"},\n                        {label: \"black\", value: \"#000000\"},\n                        {label: \"white\", value: \"#ffffff\"},\n                    ],\n                },\n                controls: {\n                    height: 0,\n                },\n                columnKeys: {}\n            };\n            this.xvar = {};\n            this.colors = [];\n\n            cfg = this.config;\n\n            const ENM = {\n                \"mousedown\": (ax5.info.supportTouch) ? \"touchstart\" : \"mousedown\",\n                \"mousemove\": (ax5.info.supportTouch) ? \"touchmove\" : \"mousemove\",\n                \"mouseup\": (ax5.info.supportTouch) ? \"touchend\" : \"mouseup\"\n            };\n\n            const onStateChanged = (opts, that) => {\n                if (opts && opts.onStateChanged) {\n                    opts.onStateChanged.call(that, that);\n                }\n                else if (this.onStateChanged) {\n                    this.onStateChanged.call(that, that);\n                }\n\n                that = null;\n            };\n\n            /**\n             * get mouse position\n             * @param e\n             * @returns {{clientX, clientY}}\n             */\n            const getMousePosition = (e) => {\n                let mouseObj, originalEvent = (e.originalEvent) ? e.originalEvent : e;\n                mouseObj = ('changedTouches' in originalEvent && originalEvent.changedTouches) ? originalEvent.changedTouches[0] : originalEvent;\n                // clientX, Y 쓰면 스크롤에서 문제 발생\n                return {\n                    clientX: mouseObj.pageX,\n                    clientY: mouseObj.pageY\n                }\n            };\n\n            const bindHandle = (item) => {\n                item.originalTrackWidth = item.$track.width();\n                item.trackWidth = item.originalTrackWidth - (cfg.colors.slider.handleWidth / 5);\n                let handleLeft = amountToHandleLeft(item, item._amount);\n\n                // handleLeft 가 범위를 벗어나면?\n                if (handleLeft < 0 || handleLeft > item.trackWidth) {\n                    let amount;\n                    handleLeft = handleLeft < 0 ? 0 : handleLeft > item.trackWidth ? item.trackWidth : handleLeft;\n                    amount = handleLeftToAmount(item, handleLeft);\n                    updatePreviewColor(item, amountToColor(item, amount));\n                }\n\n                item.$handle.css({left: handleLeft});\n                item.$item\n                    .off(ENM[\"mousedown\"])\n                    .on(ENM[\"mousedown\"], '[data-panel=\"color-handle\"]', function (e) {\n                        let mouseObj = getMousePosition(e);\n                        item._originalHandleClientX = mouseObj.clientX;\n                        item._originalHandleLeft = item.$handle.position().left;\n                        handleMoveEvent.on(item);\n                        U.stopEvent(e.originalEvent);\n                    })\n                    .off(\"click\")\n                    .on(\"click\", '[data-panel=\"color-label\"], [data-panel=\"color-preview\"]', function (e) {\n                        if(self.onClick){\n                            self.onClick.call(item, '#' + item._selectedColor.toUpperCase(), e);\n                        }\n                    })\n                    .on(\"click\", '[data-panel=\"color-track\"]', function (e) {\n                        if(e.target.getAttribute(\"data-panel\") == \"color-track\") {\n                            let mouseObj = getMousePosition(e),\n                                newHandleLeft = mouseObj.clientX - item.$track.offset().left,\n                                amount = handleLeftToAmount(item, newHandleLeft);\n\n                            item.$handle.css({left: newHandleLeft});\n                            updatePreviewColor(item, amountToColor(item, amount), e);\n\n                            mouseObj = null;\n                            newHandleLeft = null;\n                            amount = null;\n                        }\n                    });\n            };\n\n            const updatePreviewColor = (item, color, event) => {\n                item.$preview\n                    .css({\"background-color\": '#' + color});\n                item.$label.html('#' + color.toUpperCase());\n                item._selectedColor = color;\n\n                if(event && self.onUpdateColor){\n                    self.onUpdateColor.call(item, '#' + item._selectedColor.toUpperCase());\n                }\n            };\n\n            const amountToColor = (item, amount) => {\n                let processor = {\n                    \"black\"(_color, _amount){\n                        return _color.lighten(cfg.colors.slider.amount / 2).darken(_amount).getHexValue();\n                    },\n                    \"white\"(_color, _amount){\n                        return _color.darken(cfg.colors.slider.amount / 2).darken(_amount).getHexValue();\n                    },\n                    \"normal\"(_color, _amount){\n                        return _color.darken(_amount).getHexValue();\n                    }\n                };\n\n                if (item._uniqColor in processor) {\n                    return processor[item._uniqColor](item._color, amount);\n                } else {\n                    return processor[\"normal\"](item._color, amount);\n                }\n            };\n\n            const colorToAmount = (item, color) => {\n                /// todo : 색상에 가까운 색 표현.\n                let processor = {\n                    \"black\"(_color, _diffColor){\n                        let color1 = _color.lighten(cfg.colors.slider.amount / 2);\n                        return (color1.getHsl().l - _diffColor.getHsl().l) * 100;\n                    },\n                    \"white\"(_color, _diffColor){\n                        let color1 = _color.darken(cfg.colors.slider.amount / 2);\n                        return (color1.getHsl().l - _diffColor.getHsl().l) * 100;\n                    },\n                    \"normal\"(_color, _diffColor){\n                        return (_color.getHsl().l - _diffColor.getHsl().l) * 100;\n                    }\n                };\n\n                if (item._uniqColor in processor) {\n                    return processor[item._uniqColor](item._color, color);\n                } else {\n                    return processor[\"normal\"](item._color, color);\n                }\n            };\n\n            const handleLeftToAmount = (item, handleLeft) => {\n                return cfg.colors.slider.amount * (handleLeft - (item.trackWidth / 2)) / (item.originalTrackWidth / 2)\n            };\n\n            const amountToHandleLeft = (item, amount) => {\n                return (amount * (item.originalTrackWidth / 2) / cfg.colors.slider.amount) + (item.trackWidth / 2)\n            };\n\n            const handleMoveEvent = {\n                \"on\": (item) => {\n                    jQuery(document.body)\n                        .on(ENM[\"mousemove\"] + \".ax5palette-\" + this.instanceId, function (e) {\n                            let mouseObj = getMousePosition(e),\n                                da = mouseObj.clientX - item._originalHandleClientX,\n                                newHandleLeft = item._originalHandleLeft + da,\n                                amount;\n\n                            newHandleLeft = newHandleLeft < 0 ? 0 : newHandleLeft > item.trackWidth ? item.trackWidth : newHandleLeft;\n                            item.$handle.css({left: newHandleLeft});\n                            amount = handleLeftToAmount(item, newHandleLeft);\n\n                            updatePreviewColor(item, amountToColor(item, amount), e);\n                            \n                            mouseObj = null;\n                            da = null;\n                        })\n                        .on(ENM[\"mouseup\"] + \".ax5palette-\" + this.instanceId, function (e) {\n                            handleMoveEvent.off();\n                            U.stopEvent(e);\n                        })\n                        .on(\"mouseleave.ax5palette-\" + this.instanceId, function (e) {\n                            handleMoveEvent.off();\n                            U.stopEvent(e);\n                        });\n\n                    jQuery(document.body)\n                        .attr('unselectable', 'on')\n                        .css('user-select', 'none')\n                        .on('selectstart', false);\n                },\n                \"off\": () => {\n                    self.xvar.resizerLived = false;\n\n                    jQuery(document.body)\n                        .off(ENM[\"mousemove\"] + \".ax5palette-\" + this.instanceId)\n                        .off(ENM[\"mouseup\"] + \".ax5palette-\" + this.instanceId)\n                        .off(\"mouseleave.ax5palette-\" + this.instanceId);\n\n                    jQuery(document.body)\n                        .removeAttr('unselectable')\n                        .css('user-select', 'auto')\n                        .off('selectstart');\n                }\n            };\n\n            const repaint = (selectedColor) => {\n                let box = {\n                    width: this.$target.innerWidth(),\n                    height: this.$target.innerHeight(),\n                };\n\n                // 패널 프레임 초기화\n                this.$target.html(PALETTE.tmpl.get(\"frame\", {}, cfg.columnKeys));\n\n                // 각 패널들을 캐싱~\n                this.$ = {\n                    \"root\": this.$target.find('[data-ax5palette-container=\"root\"]'),\n                    \"colors\": this.$target.find('[data-ax5palette-container=\"colors\"]'),\n                    \"controls\": this.$target.find('[data-ax5palette-container=\"controls\"]'),\n                };\n\n                // todo : controls 나중에 고민하여 구현\n                // this.$[\"controls\"].css({height: cfg.controls.height});\n\n                /// colors.list 색상 범위 결정 / 초기화\n                cfg.colors.list.forEach(function (c) {\n                    c._color = U.color(c.value);\n                    c._selectedColor = c._color.getHexValue();\n                    if (c._color.r == 0 && c._color.g == 0 && c._color.b == 0) {\n                        c._amount = cfg.colors.slider.amount;\n                        c._uniqColor = \"black\";\n                        c._color0value = \"#\" + c._color.lighten(cfg.colors.slider.amount).getHexValue();\n                        c._color1value = \"#\" + c._color.lighten(cfg.colors.slider.amount / 2).getHexValue();\n                        c._color2value = \"#\" + c._color.getHexValue();\n                    } else if (c._color.r == 255 && c._color.g == 255 && c._color.b == 255) {\n                        c._amount = -cfg.colors.slider.amount;\n                        c._uniqColor = \"white\";\n                        c._color0value = \"#\" + c._color.getHexValue();\n                        c._color1value = \"#\" + c._color.darken(cfg.colors.slider.amount / 2).getHexValue();\n                        c._color2value = \"#\" + c._color.darken(cfg.colors.slider.amount).getHexValue();\n                    } else {\n                        c._amount = 0;\n                        c._color0value = \"#\" + c._color.lighten(cfg.colors.slider.amount).getHexValue();\n                        c._color1value = \"#\" + c._color.getHexValue();\n                        c._color2value = \"#\" + c._color.darken(cfg.colors.slider.amount).getHexValue();\n                    }\n                });\n\n                // 색생조절 핸들의 위치 조정cfg.colors.list[minDiffColorIndex]\n                cfg.colors.slider.handleLeft = -cfg.colors.slider.handleWidth / 2;\n                cfg.colors.slider.handleTop = -cfg.colors.slider.handleHeight / 2;\n\n                // 팔렛트 컬러 패널 초기화\n                this.$[\"colors\"].html(PALETTE.tmpl.get(\"colors\", cfg, cfg.columnKeys));\n\n                this.$[\"colors\"].find('[data-ax5palette-color-index]').each(function () {\n                    let idx = this.getAttribute(\"data-ax5palette-color-index\");\n                    let color = cfg.colors.list[idx];\n                    let item = jQuery.extend({}, color);\n                    item._index = idx;\n                    item.$item = jQuery(this);\n                    item.$preview = item.$item.find('[data-panel=\"color\"]');\n                    item.$label = item.$item.find('[data-panel=\"color-label\"]');\n                    item.$track = item.$item.find('[data-panel=\"color-track\"]');\n                    item.$handle = item.$item.find('[data-panel=\"color-handle\"]');\n                    bindHandle(item);\n                    /////\n                    self.colors.push(item);\n                });\n\n                if(selectedColor){\n                    this.setSelectedColor(selectedColor);\n                }\n            };\n\n            /**\n             * Preferences of palette UI\n             * @method ax5palette.setConfig\n             * @param {Object} config\n             * @param {Element} config.target\n             * @param {String} [config.selectedColor]\n             * @param {Object} [config.colors]\n             * @param {Object} [config.colors.preview]\n             * @param {Number} [config.colors.preview.width=24]\n             * @param {Number} [config.colors.preview.height=24]\n             * @param {Number} [config.colors.preview.cellWidth=30]\n             * @param {Object} [config.colors.label]\n             * @param {Number} [config.colors.label.width=80]\n             * @param {Object} [config.colors.slider]\n             * @param {Number} [config.colors.slider.trackHeight=8]\n             * @param {Number} [config.colors.slider.amount=32]\n             * @param {Number} [config.colors.slider.handleWidth=18]\n             * @param {Number} [config.colors.slider.handleHeight=18]\n             * @param {Object[]} [config.colors.list=[red,orange,yellow,green,blue,purple,black,white]]\n             * @param {String} config.colors.list[].label\n             * @param {String} config.colors.list[].value\n             * @param {Object} [config.controls]\n             * @param {Number} [config.controls.height=0]\n             * @returns {ax5palette}\n             * @example\n             * ```js\n             * myPalette = new ax5.ui.palette({\n             *  target: $('[data-ax5palette=\"01\"]'),\n             *  onClick: function (hexColor) {\n             *      alert(hexColor);\n             *  }\n             * });\n             *\n             * myPalette = new ax5.ui.palette({\n             *  target: $('[data-ax5palette=\"01\"]'),\n             *  colors: {\n             *      list: [\n             *          {label: \"red\", value: \"#ff0000\"},\n             *          {label: \"orange\", value: \"#ff9802\"},\n             *          {label: \"yellow\", value: \"#ffff00\"},\n             *          {label: \"skyblue\", value: \"#84e4ff\"},\n             *          {label: \"white\", value: \"#ffffff\"}\n             *      ]\n             *  }\n             *  onClick: function (hexColor) {\n             *  }\n             * });\n             * ```\n             */\n            this.init = function () {\n                // after setConfig();\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.onUpdateColor = cfg.onUpdateColor;\n\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5palette\", \"401\", \"setConfig\"));\n                }\n                this.$target = jQuery(cfg.target);\n\n                setTimeout(function () {\n                    repaint((cfg.selectedColor||\"\").trim()); // 팔렛트 그리기.\n                });\n            };\n\n            /**\n             * @method ax5palette.repaint\n             * @returns {ax5palette}\n             */\n            this.repaint = function () {\n                repaint();\n                return this;\n            };\n\n            /**\n             * @method ax5palette.setSelectedColor\n             * @param selectedColor\n             * @returns {ax5palette}\n             */\n            this.setSelectedColor = function (selectedColor) {\n\n                let sColor = U.color(selectedColor.trim());\n                // 지정된 색이 가장 가까운 파렛 검색\n                let minDiffColor = 255 * 3, minDiffColorIndex = -1;\n\n                self.colors.forEach(function (c, cidx) {\n                    let c1hsl = c._color.getHsl(), c2hsl =  sColor.getHsl();\n                    let diffColor = Math.abs(c1hsl.h - c2hsl.h) + Math.abs(c1hsl.s - c2hsl.s) + Math.abs(c1hsl.l - c2hsl.l);\n                    if (diffColor < minDiffColor) {\n                        minDiffColor = diffColor;\n                        minDiffColorIndex = cidx;\n                    }\n                });\n\n                if (minDiffColorIndex > -1) {\n                    let amount, handleLeft,\n                        item = self.colors[minDiffColorIndex];\n\n                    item._amount = colorToAmount(item, sColor);\n                    handleLeft = amountToHandleLeft(item, item._amount);\n                    //handleLeft = handleLeft < 0 ? 0 : handleLeft > item.trackWidth ? item.trackWidth : handleLeft;\n                    item.$handle.css({left: handleLeft});\n\n                    amount = handleLeftToAmount(item, handleLeft);\n                    updatePreviewColor(item, amountToColor(item, amount));\n                }\n\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n\n                UI.palette_instance = UI.palette_instance || [];\n                UI.palette_instance.push(this);\n\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n        };\n    })());\n\n    PALETTE = ax5.ui.palette;\n})();","// ax5.ui.calendar.tmpl\n(function () {\n\n    const PALETTE = ax5.ui.palette;\n\n    const tmpl_frame = function (columnKeys) {\n        return `\n<div data-ax5palette-container=\"root\">\n    <div data-ax5palette-container=\"colors\"></div>\n    <div data-ax5palette-container=\"controls\"></div>\n</div>\n`;\n    };\n\n    const tmpl_colors = function (columnKeys) {\n        return `\n{{#colors}}\n{{#list}}\n<div data-ax5palette-color=\"{{label}}\" data-ax5palette-color-index=\"{{@i}}\">\n    <div data-panel=\"color-preview\" style=\"padding:{{preview.cellPadding}}px;width:{{preview.cellWidth}}px;\">\n        <div data-panel=\"color-box\" style=\"width:{{preview.width}}px;height:{{preview.height}}px;\"><div data-panel=\"color\" style=\"background-color:{{value}};\"></div></div>\n    </div>\n    <div data-panel=\"color-label\" style=\"width:{{label.width}}px;\">{{label}}</div>\n    <div data-panel=\"color-slider\">\n        <div data-panel=\"color-track\" style=\"height:{{slider.trackHeight}}px;background: linear-gradient(90deg, {{_color0value}}, {{_color1value}}, {{_color2value}}); \">\n            <div data-panel=\"color-handle\">\n                <div data-panel=\"color-handle-after\" style=\"width:{{slider.handleWidth}}px;height:{{slider.handleWidth}}px;left:{{slider.handleLeft}}px;top:{{slider.handleLeft}}px;\"></div>\n            </div>\n        </div>\n    </div>\n</div>\n{{/list}}\n{{/colors}}\n`;\n    };\n\n\n    PALETTE.tmpl = {\n        \"frame\": tmpl_frame,\n        \"colors\": tmpl_colors,\n\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(PALETTE.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();"]}